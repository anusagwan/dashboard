{"ast":null,"code":"import _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Configuration/StoreConfigContainers/CreateStoreGroup.jsx\";\nimport React, { Component } from 'react';\nimport { InputGroup, FormControl } from 'react-bootstrap';\nimport '../StoreConfigContainers/StoreConfig';\nimport DataTable from '../../../services/reactTable';\nimport '../../Configuration/StoreConfigContainers/StoreConfig.css';\nimport StoreConfigRowData from '../StoreConfigContainers/StoreConfigRowData';\nimport { cloneDeep, differenceBy } from 'lodash';\nimport excelIcon from \"../../../images/leftPanel/status.svg\";\nexport var CreateStoreGroup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateStoreGroup, _Component);\n\n  function CreateStoreGroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateStoreGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateStoreGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      storeGroupName: '',\n      allStores: StoreConfigRowData,\n      editAllstoreData: [],\n      currentStores: [],\n      selectedAllStores: [],\n      selectedCurrentStores: [],\n      storeTableEditData: []\n    };\n\n    _this.setTableData = function () {// let editAllstoreData = cloneDeep(this.state.editAllstoreData);\n      // let storeTableEditData = this.props.storeTableEditData;\n      // const newAllStores = differenceBy(editAllstoreData, storeTableEditData, 'store_number');\n      // this.setState({\n      //   storeTableEditData: storeTableEditData,\n      //   editAllstoreData: newAllStores,\n      // });\n    };\n\n    _this.setGroupName = function () {\n      var id = _this.props.match.params.id; // let storeName =\n      //   this.props && this.props.storeName && this.props.storeName.filter((el) => el.value == id);\n      // let name = storeName[0].label;\n\n      _this.setState({\n        storeGroupName: name\n      });\n    };\n\n    _this.onStoreGroupNameChangeHandler = function (e) {\n      _this.setState({\n        storeGroupName: e.target.value\n      });\n    };\n\n    _this.header = [{\n      Header: 'Store Number',\n      accessor: 'store_number'\n    }, {\n      Header: 'Store Name',\n      accessor: 'store_name'\n    }, {\n      Header: 'Chain Description',\n      accessor: 'chain_description'\n    }, {\n      Header: 'Region Description',\n      accessor: 'region_description'\n    }];\n\n    _this.onCurrentStoresSelectionChangeHandler = function (rowInfo) {\n      console.log(rowInfo, 'rowinfooo');\n      console.log(rowInfo.original, 'original');\n\n      _this.setState({\n        selectedCurrentStores: [rowInfo.original]\n      });\n\n      console.log(_this.state.selectedCurrentStores, 'selectedCurrentStores');\n    };\n\n    _this.onAddClickHandler = function () {\n      console.log(_this.props.isEditStoreGroup);\n      var allStores = cloneDeep(_this.state.allStores);\n      var currentStores = cloneDeep(_this.state.currentStores);\n      currentStores.push.apply(currentStores, _toConsumableArray(_this.state.selectedAllStores));\n      var newAllStores = differenceBy(allStores, _this.state.selectedAllStores, 'store_number');\n      console.log('asfasdf', _this.state.selectedAllStores);\n      console.log('newAllStores', newAllStores);\n\n      _this.setState({\n        allStores: newAllStores,\n        currentStores: currentStores,\n        selectedAllStores: []\n      });\n    };\n\n    _this.onAllStoresSelectionChangeHandler = function (rowInfo) {\n      console.log(rowInfo, 'rowinfooo');\n      console.log(rowInfo.original, 'original');\n\n      _this.setState({\n        selectedAllStores: [rowInfo.original]\n      });\n\n      console.log(_this.state.selectedAllStores, 'selectedAllStores');\n    };\n\n    _this.onCreateStoreGroup = function () {\n      var storeCodes = _this.state.currentStores.map(function (ele) {\n        return ele.store_number;\n      });\n\n      var storeGroupName = _this.state.storeGroupName;\n      console.log(storeCodes, 'name');\n      console.log(_this.state.currentStores, 'storeCodes');\n    };\n\n    _this.onRemoveClickHandler = function () {\n      var currentStores = cloneDeep(_this.state.currentStores);\n      var allStores = cloneDeep(_this.state.allStores);\n      var newCurrentStStores = differenceBy(currentStores, _this.state.selectedCurrentStores, 'store_number');\n      allStores.push.apply(allStores, _toConsumableArray(_this.state.selectedCurrentStores));\n\n      _this.setState({\n        allStores: allStores,\n        currentStores: newCurrentStStores,\n        selectedCurrentStores: []\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateStoreGroup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var id = this.props.match.params.id; // this.props.fetchStoreConfigStoreTableData(); allstoresdata api\n      // this.props.fetchStoreConfigStoreTableEditData({ Stores_groups_Id: [id] }); edit storedata api\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {// if (prevProps.storeTableData !== this.props.storeTableData) {\n      //   this.setState(\n      //     {\n      //       allStores: this.props.storeTableData,\n      //     },\n      //     () => this.setTableData()\n      //   );\n      // }\n      // if (prevProps.storeName !== this.props.storeName) {\n      //   this.setGroupName();\n      // }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          currentStores = _this$state.currentStores,\n          allStores = _this$state.allStores;\n      console.log(this.state.currentStores, 'curr');\n      return React.createElement(\"div\", {\n        className: \"card p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"font-size-14  pad-10 markdown-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Store Configuration/\", React.createElement(\"span\", {\n        className: \"font-bold color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Create Store Group\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.props.onCancelButtonHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Back\"))), React.createElement(\"hr\", {\n        className: \"mb-3\",\n        style: {\n          marginTop: '-4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"mr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"*\"), \"Store group name:\"), React.createElement(\"input\", {\n        className: \"inputText\",\n        type: \"text\",\n        onChange: this.onStoreGroupNameChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"col-md-5 btn btn-primary\",\n        onClick: function onClick() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Upload \\xA0\\xA0\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"img-icons-create-promo\",\n        src: excelIcon,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          justifyContent: 'space-around'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"All Stores\"), React.createElement(\"div\", {\n        style: {\n          height: '370px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        visibleColumns: \"onlyRowSelection\",\n        getRowProps: function getRowProps(rowInfo) {\n          return {\n            onClick: function onClick() {\n              return _this2.onAllStoresSelectionChangeHandler(rowInfo);\n            }\n          };\n        },\n        columns: this.header,\n        data: allStores,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btnStyle btn btn-primary\",\n        onClick: this.onAddClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Add\"))), React.createElement(\"div\", {\n        className: \"col-md-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Current Stores : \", currentStores && currentStores.length)), React.createElement(\"div\", {\n        style: {\n          height: '370px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        visibleColumns: \"onlyRowSelection\",\n        getRowProps: function getRowProps(rowInfo) {\n          return {\n            onClick: function onClick() {\n              return _this2.onCurrentStoresSelectionChangeHandler(rowInfo);\n            }\n          };\n        },\n        columns: this.header,\n        data: currentStores,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btnStyle btn btn-primary\",\n        onClick: this.onRemoveClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Remove\")))), React.createElement(\"div\", {\n        className: \"mb-3 mt-4\",\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          width: '7%'\n        },\n        className: \" btn btn-primary\",\n        onClick: this.onCreateStoreGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Create\"), React.createElement(\"button\", {\n        className: \" btn ml-1 cancel-button\",\n        style: {\n          width: '7%'\n        },\n        onClick: this.props.onCancelButtonHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return CreateStoreGroup;\n}(Component);\nexport default CreateStoreGroup;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Configuration/StoreConfigContainers/CreateStoreGroup.jsx"],"names":["React","Component","InputGroup","FormControl","DataTable","StoreConfigRowData","cloneDeep","differenceBy","CreateStoreGroup","state","storeGroupName","allStores","editAllstoreData","currentStores","selectedAllStores","selectedCurrentStores","storeTableEditData","setTableData","setGroupName","id","props","match","params","setState","name","onStoreGroupNameChangeHandler","e","target","value","header","Header","accessor","onCurrentStoresSelectionChangeHandler","rowInfo","console","log","original","onAddClickHandler","isEditStoreGroup","push","newAllStores","onAllStoresSelectionChangeHandler","onCreateStoreGroup","storeCodes","map","ele","store_number","onRemoveClickHandler","newCurrentStStores","prevProps","prevState","display","justifyContent","onCancelButtonHandler","marginTop","color","excelIcon","height","onClick","length","textAlign","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { InputGroup, FormControl } from 'react-bootstrap';\nimport '../StoreConfigContainers/StoreConfig';\nimport DataTable from '../../../services/reactTable';\nimport '../../Configuration/StoreConfigContainers/StoreConfig.css';\nimport StoreConfigRowData from '../StoreConfigContainers/StoreConfigRowData';\nimport { cloneDeep, differenceBy } from 'lodash';\nimport excelIcon from '../../../images/leftPanel/status.svg';\n\nexport class CreateStoreGroup extends Component {\n  state = {\n    storeGroupName: '',\n    allStores: StoreConfigRowData,\n    editAllstoreData: [],\n    currentStores: [],\n    selectedAllStores: [],\n    selectedCurrentStores: [],\n    storeTableEditData: [],\n  };\n  componentDidMount() {\n    let { id } = this.props.match.params;\n    // this.props.fetchStoreConfigStoreTableData(); allstoresdata api\n    // this.props.fetchStoreConfigStoreTableEditData({ Stores_groups_Id: [id] }); edit storedata api\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // if (prevProps.storeTableData !== this.props.storeTableData) {\n    //   this.setState(\n    //     {\n    //       allStores: this.props.storeTableData,\n    //     },\n    //     () => this.setTableData()\n    //   );\n    // }\n    // if (prevProps.storeName !== this.props.storeName) {\n    //   this.setGroupName();\n    // }\n  }\n\n  setTableData = () => {\n    // let editAllstoreData = cloneDeep(this.state.editAllstoreData);\n    // let storeTableEditData = this.props.storeTableEditData;\n    // const newAllStores = differenceBy(editAllstoreData, storeTableEditData, 'store_number');\n    // this.setState({\n    //   storeTableEditData: storeTableEditData,\n    //   editAllstoreData: newAllStores,\n    // });\n  };\n  setGroupName = () => {\n    let { id } = this.props.match.params;\n    // let storeName =\n    //   this.props && this.props.storeName && this.props.storeName.filter((el) => el.value == id);\n    // let name = storeName[0].label;\n    this.setState({\n      storeGroupName: name,\n    });\n  };\n  onStoreGroupNameChangeHandler = (e) => {\n    this.setState({\n      storeGroupName: e.target.value,\n    });\n  };\n\n  header = [\n    {\n      Header: 'Store Number',\n      accessor: 'store_number',\n    },\n    {\n      Header: 'Store Name',\n      accessor: 'store_name',\n    },\n    {\n      Header: 'Chain Description',\n      accessor: 'chain_description',\n    },\n    {\n      Header: 'Region Description',\n      accessor: 'region_description',\n    },\n  ];\n\n  onCurrentStoresSelectionChangeHandler = (rowInfo) => {\n    console.log(rowInfo, 'rowinfooo');\n    console.log(rowInfo.original, 'original');\n    this.setState({\n      selectedCurrentStores: [rowInfo.original],\n    });\n    console.log(this.state.selectedCurrentStores, 'selectedCurrentStores');\n  };\n\n  onAddClickHandler = () => {\n    console.log(this.props.isEditStoreGroup);\n    const allStores = cloneDeep(this.state.allStores);\n    const currentStores = cloneDeep(this.state.currentStores);\n    currentStores.push(...this.state.selectedAllStores);\n    const newAllStores = differenceBy(allStores, this.state.selectedAllStores, 'store_number');\n    console.log('asfasdf', this.state.selectedAllStores);\n    console.log('newAllStores', newAllStores);\n    this.setState({\n      allStores: newAllStores,\n      currentStores,\n      selectedAllStores: [],\n    });\n  };\n  onAllStoresSelectionChangeHandler = (rowInfo) => {\n    console.log(rowInfo, 'rowinfooo');\n    console.log(rowInfo.original, 'original');\n    this.setState({\n      selectedAllStores: [rowInfo.original],\n    });\n    console.log(this.state.selectedAllStores, 'selectedAllStores');\n  };\n  onCreateStoreGroup = () => {\n    let storeCodes = this.state.currentStores.map((ele) => ele.store_number);\n    let { storeGroupName } = this.state;\n    console.log(storeCodes, 'name');\n    console.log(this.state.currentStores, 'storeCodes');\n  };\n  onRemoveClickHandler = () => {\n    const currentStores = cloneDeep(this.state.currentStores);\n    const allStores = cloneDeep(this.state.allStores);\n    const newCurrentStStores = differenceBy(\n      currentStores,\n      this.state.selectedCurrentStores,\n      'store_number'\n    );\n    allStores.push(...this.state.selectedCurrentStores);\n    this.setState({\n      allStores,\n      currentStores: newCurrentStStores,\n      selectedCurrentStores: [],\n    });\n  };\n\n  render() {\n    let { currentStores, allStores } = this.state;\n    console.log(this.state.currentStores, 'curr');\n    return (\n      <div className=\"card p-2\">\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <h4 className=\"font-size-14  pad-10 markdown-heading\">\n            Store Configuration/\n            <span className=\"font-bold color-blue\">Create Store Group</span>\n          </h4>\n          <div>\n            <button className=\"btn btn-primary\" onClick={this.props.onCancelButtonHandler}>\n              Back\n            </button>\n          </div>\n        </div>\n        <hr\n          className=\"mb-3\"\n          style={{\n            marginTop: '-4px',\n          }}\n        />\n        <div className=\"row justify-content-between\">\n          <div className=\"col-md-6\">\n            <label className=\"mr-1\">\n              <span style={{ color: 'red' }}>*</span>Store group name:\n            </label>\n            <input\n              className=\"inputText\"\n              type=\"text\"\n              onChange={this.onStoreGroupNameChangeHandler}\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <button className=\"col-md-5 btn btn-primary\" onClick={() => {}}>\n              Upload &nbsp;&nbsp;\n              <span>\n                <img className=\"img-icons-create-promo\" src={excelIcon} alt=\"\" />\n              </span>\n            </button>\n          </div>\n        </div>\n        <hr />\n        <div className=\"row\" style={{ justifyContent: 'space-around' }}>\n          <div className=\"col-md-5\">\n            <div>All Stores</div>\n            <div style={{ height: '370px' }}>\n              <DataTable\n                visibleColumns=\"onlyRowSelection\"\n                getRowProps={(rowInfo) => ({\n                  onClick: () => this.onAllStoresSelectionChangeHandler(rowInfo),\n                })}\n                columns={this.header}\n                data={allStores}\n              />\n            </div>\n            <div>\n              <button className=\"btnStyle btn btn-primary\" onClick={this.onAddClickHandler}>\n                Add\n              </button>\n            </div>\n          </div>\n          <div className=\"col-md-5\">\n            <div>\n              <span className=\"mr-2\">Current Stores : {currentStores && currentStores.length}</span>\n            </div>\n            <div style={{ height: '370px' }}>\n              <DataTable\n                visibleColumns=\"onlyRowSelection\"\n                getRowProps={(rowInfo) => ({\n                  onClick: () => this.onCurrentStoresSelectionChangeHandler(rowInfo),\n                })}\n                columns={this.header}\n                data={currentStores}\n              />\n            </div>\n            <div>\n              <button className=\"btnStyle btn btn-primary\" onClick={this.onRemoveClickHandler}>\n                Remove\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"mb-3 mt-4\" style={{ textAlign: 'center' }}>\n          <button\n            style={{ width: '7%' }}\n            className=\" btn btn-primary\"\n            onClick={this.onCreateStoreGroup}>\n            Create\n          </button>\n          <button\n            className=\" btn ml-1 cancel-button\"\n            style={{ width: '7%' }}\n            onClick={this.props.onCancelButtonHandler}>\n            Cancel\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CreateStoreGroup;\n"]},"metadata":{},"sourceType":"module"}