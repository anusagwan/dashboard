{"ast":null,"code":"import axios from 'axios';\nimport { config } from '../utils/config';\nimport { GET_ERRORS, SET_CURRENT_USER, GET_CHART_DATA, GET_CHART_DATA_FILTERS, DATA_LOADING, CLEAR_CHART_DATA, CLEAR_ERRORS, CLEAR_FILTERS_DATA } from './types';\nexport var setLoading = function setLoading() {\n  return {\n    type: DATA_LOADING\n  };\n}; // Get chartData from the Api\n\nexport var getChartData = function getChartData(reqObject) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: localStorage.getItem('token')\n    });\n    dispatch({\n      type: CLEAR_CHART_DATA\n    });\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    dispatch(setLoading());\n    axios.post(\"\".concat(config.nlpBaseUrl), reqObject).then(function (res) {\n      if (res.data.Error != undefined && res.data.Error != '') {\n        // console.log('error bheja', res.data.error)\n        dispatch({\n          type: CLEAR_CHART_DATA\n        });\n        dispatch({\n          type: GET_ERRORS,\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          type: CLEAR_ERRORS\n        });\n        dispatch({\n          type: GET_CHART_DATA,\n          payload: res.data\n        });\n      }\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n  };\n}; // Get chart's filters from the Api\n\nexport var getChartDataFilters = function getChartDataFilters(reqObject) {\n  return function (dispatch) {\n    // dispatch(setLoading());\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: localStorage.getItem('token')\n    });\n    axios.post(\"\".concat(config.nlpBaseUrl, \"/filters\"), reqObject).then(function (res) {\n      // dispatch({\n      //     type: CLEAR_FILTERS_DATA,\n      // });\n      // console.log('chart filters data fetched', res);\n      dispatch({\n        type: CLEAR_ERRORS\n      });\n      dispatch({\n        type: GET_CHART_DATA_FILTERS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      // console.log('errorrrrrrrrrrrrrrrrrrrr',  err)\n      dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n  };\n};\nexport var clearCurrentChartdata = function clearCurrentChartdata() {\n  return {\n    type: CLEAR_CHART_DATA\n  };\n}; // export const clearCurrentFilterdata = () => {\n//     return {\n//         type: CLEAR_FILTERS_DATA\n//     }\n// }","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/chart.js"],"names":["axios","config","GET_ERRORS","SET_CURRENT_USER","GET_CHART_DATA","GET_CHART_DATA_FILTERS","DATA_LOADING","CLEAR_CHART_DATA","CLEAR_ERRORS","CLEAR_FILTERS_DATA","setLoading","type","getChartData","reqObject","dispatch","payload","localStorage","getItem","post","nlpBaseUrl","then","res","data","Error","undefined","catch","err","getChartDataFilters","clearCurrentChartdata"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { config } from '../utils/config';\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  GET_CHART_DATA,\n  GET_CHART_DATA_FILTERS,\n  DATA_LOADING,\n  CLEAR_CHART_DATA,\n  CLEAR_ERRORS,\n  CLEAR_FILTERS_DATA,\n} from './types';\n\nexport const setLoading = () => {\n  return {\n    type: DATA_LOADING,\n  };\n};\n\n// Get chartData from the Api\nexport const getChartData = (reqObject) => (dispatch) => {\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: localStorage.getItem('token'),\n  });\n  dispatch({\n    type: CLEAR_CHART_DATA,\n  });\n  dispatch({\n    type: CLEAR_ERRORS,\n  });\n  dispatch(setLoading());\n\n  axios\n    .post(`${config.nlpBaseUrl}`, reqObject)\n    .then((res) => {\n      if (res.data.Error != undefined && res.data.Error != '') {\n        // console.log('error bheja', res.data.error)\n        dispatch({\n          type: CLEAR_CHART_DATA,\n        });\n        dispatch({\n          type: GET_ERRORS,\n          payload: res.data,\n        });\n      } else {\n        dispatch({\n          type: CLEAR_ERRORS,\n        });\n        dispatch({\n          type: GET_CHART_DATA,\n          payload: res.data,\n        });\n      }\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err,\n      });\n    });\n};\n\n// Get chart's filters from the Api\nexport const getChartDataFilters = (reqObject) => (dispatch) => {\n  // dispatch(setLoading());\n\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: localStorage.getItem('token'),\n  });\n\n  axios\n    .post(`${config.nlpBaseUrl}/filters`, reqObject)\n    .then((res) => {\n      // dispatch({\n      //     type: CLEAR_FILTERS_DATA,\n      // });\n      // console.log('chart filters data fetched', res);\n      dispatch({\n        type: CLEAR_ERRORS,\n      });\n      dispatch({\n        type: GET_CHART_DATA_FILTERS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      // console.log('errorrrrrrrrrrrrrrrrrrrr',  err)\n      dispatch({\n        type: GET_ERRORS,\n        payload: err,\n      });\n    });\n};\n\nexport const clearCurrentChartdata = () => {\n  return {\n    type: CLEAR_CHART_DATA,\n  };\n};\n\n// export const clearCurrentFilterdata = () => {\n//     return {\n//         type: CLEAR_FILTERS_DATA\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}