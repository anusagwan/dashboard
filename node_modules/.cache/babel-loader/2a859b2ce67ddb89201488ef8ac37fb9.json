{"ast":null,"code":"import _regeneratorRuntime from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from '../utils/axios';\nimport { config } from '../utils/config';\nimport { toast } from 'react-toastify';\nvar storeConfigActions = {\n  fetchStoreGroups: function fetchStoreGroups() {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        url: \"\".concat(config.createMarkdownURL, \"/get-storesgroups/\"),\n        method: 'GET'\n      }).then(function (resp) {\n        dispatch({\n          type: 'SET_STORE_GROUPS',\n          payload: resp.data.data\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  getStoreGroupTableData: function getStoreGroupTableData(reqObj) {\n    return (\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(dispatch) {\n          var res;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  dispatch({\n                    type: 'LOADER_STATE',\n                    payload: {\n                      status: true\n                    }\n                  });\n                  _context.next = 3;\n                  return axios({\n                    url: \"\".concat(config.createMarkdownURL, \"/getStores/\"),\n                    method: 'POST',\n                    data: reqObj\n                  }).then(function (resp) {\n                    if (reqObj) {\n                      dispatch({\n                        type: 'CURRENT_STORE_GROUP_TABLE_DATA',\n                        payload: resp.data.data\n                      });\n                    } else {\n                      dispatch({\n                        type: 'SET_STORE_GROUP_TABLE_DATA',\n                        payload: resp.data.data\n                      });\n                    }\n\n                    dispatch({\n                      type: 'LOADER_STATE',\n                      payload: {\n                        status: false\n                      }\n                    });\n                    return resp && resp.data && resp.data.data ? resp.data.data : [];\n                  }).catch(function (err) {\n                    dispatch({\n                      type: 'LOADER_STATE',\n                      payload: {\n                        status: false\n                      }\n                    });\n                    return [];\n                  });\n\n                case 3:\n                  res = _context.sent;\n                  return _context.abrupt(\"return\", res);\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    );\n  },\n  createStoreGroup: function createStoreGroup(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/get-stores-create/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n\n        if (!resp.data.status) {\n          toast.error('Something went wrong! Please try again.', {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n          return false;\n        } else {\n          toast.success('Store Group Created Successfully', {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n          return true;\n        }\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return false;\n      });\n    };\n  },\n  editStoreGroup: function editStoreGroup(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        url: \"\".concat(config.createMarkdownURL, \"/get-stores-edit/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n\n        if (!resp.data.status) {\n          toast.error('Something went wrong! Please try again.', {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n        } else {\n          toast.success('Store Group Updated Successfully', {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n        }\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  }\n};\nexport default storeConfigActions;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/storeConfigActions.js"],"names":["axios","config","toast","storeConfigActions","fetchStoreGroups","dispatch","type","payload","status","url","createMarkdownURL","method","then","resp","data","catch","err","getStoreGroupTableData","reqObj","res","createStoreGroup","error","autoClose","hideProgressBar","success","editStoreGroup"],"mappings":"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","sourcesContent":["import axios from '../utils/axios';\nimport { config } from '../utils/config';\nimport { toast } from 'react-toastify';\n\nconst storeConfigActions = {\n  fetchStoreGroups: () => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        url: `${config.createMarkdownURL}/get-storesgroups/`,\n        method: 'GET',\n      })\n        .then((resp) => {\n          dispatch({\n            type: 'SET_STORE_GROUPS',\n            payload: resp.data.data,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n  getStoreGroupTableData: (reqObj) => {\n    return async (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      let res = await axios({\n        url: `${config.createMarkdownURL}/getStores/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          if (reqObj) {\n            dispatch({\n              type: 'CURRENT_STORE_GROUP_TABLE_DATA',\n              payload: resp.data.data,\n            });\n          } else {\n            dispatch({\n              type: 'SET_STORE_GROUP_TABLE_DATA',\n              payload: resp.data.data,\n            });\n          }\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return resp && resp.data && resp.data.data ? resp.data.data : [];\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return [];\n        });\n      return res;\n    };\n  },\n  createStoreGroup: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/get-stores-create/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          if (!resp.data.status) {\n            toast.error('Something went wrong! Please try again.', {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n            return false;\n          } else {\n            toast.success('Store Group Created Successfully', {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n            return true;\n          }\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return false;\n        });\n    };\n  },\n  editStoreGroup: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        url: `${config.createMarkdownURL}/get-stores-edit/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          if (!resp.data.status) {\n            toast.error('Something went wrong! Please try again.', {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n          } else {\n            toast.success('Store Group Updated Successfully', {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n          }\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n};\n\nexport default storeConfigActions;\n"]},"metadata":{},"sourceType":"module"}