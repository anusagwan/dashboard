{"ast":null,"code":"import _slicedToArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/InputWithPercentageTag.js\";\nimport React, { useState, useEffect } from 'react';\n\nvar InputWithPercentageTag = function InputWithPercentageTag(rowObj) {\n  var _useState = useState({\n    col: rowObj.col,\n    value: rowObj.value\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1]; // useEffect(() => {\n  //   rowObj.changedRow(state);\n  // });\n\n\n  var handleChange = function handleChange(event) {\n    console.log('state:', state);\n    var obj = {\n      // ...state,\n      // row:\n      // {\n      // ...state,\n      col: event.target.name,\n      value: event.target.value // },\n\n    };\n    setState(obj); // debugger;\n    // let row = {\n    //   ...state,\n    //   [event.target.name]: event.target.value,\n    // };\n    // let data = rowObj.data;\n    // data.splice(rowObj.rowNumber, 1, row);\n    // console.log('obbbbj::::', data);\n\n    obj.rowNumber = rowObj.rowNumber;\n    rowObj.changedRow(obj);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"col\",\n    key: rowObj.rowNumber + 1,\n    style: {\n      width: '140px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group\",\n    style: {\n      width: '90%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    name: state.col // onChange={(e) => this.onComparisonInputChange(e, col, row, rowNumber, index, i)}\n    ,\n    className: \"form-control border-style\",\n    value: state.value,\n    disabled: rowObj.row.scenarios == 'Optimal' ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-side-percent\",\n    type: \"button\",\n    style: {\n      zIndex: 'unset'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-percent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })))));\n};\n\nexport default InputWithPercentageTag;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/InputWithPercentageTag.js"],"names":["React","useState","useEffect","InputWithPercentageTag","rowObj","col","value","state","setState","handleChange","event","console","log","obj","target","name","rowNumber","changedRow","width","e","row","scenarios","zIndex"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,MAAD,EAAY;AAAA,kBACfH,QAAQ,CAAC;AACjCI,IAAAA,GAAG,EAAED,MAAM,CAACC,GADqB;AAEjCC,IAAAA,KAAK,EAAEF,MAAM,CAACE;AAFmB,GAAD,CADO;AAAA;AAAA,MAClCC,KADkC;AAAA,MAC3BC,QAD2B,kBAKzC;AACA;AACA;;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,KAAtB;AACA,QAAIM,GAAG,GAAG;AACR;AACA;AACA;AACA;AACAR,MAAAA,GAAG,EAAEK,KAAK,CAACI,MAAN,CAAaC,IALV;AAMRT,MAAAA,KAAK,EAAEI,KAAK,CAACI,MAAN,CAAaR,KANZ,CAOR;;AAPQ,KAAV;AASAE,IAAAA,QAAQ,CAACK,GAAD,CAAR,CAX8B,CAY9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,IAAAA,GAAG,CAACG,SAAJ,GAAgBZ,MAAM,CAACY,SAAvB;AACAZ,IAAAA,MAAM,CAACa,UAAP,CAAkBJ,GAAlB;AACD,GAtBD;;AAuBA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,GAAG,EAAET,MAAM,CAACY,SAAP,GAAmB,CAA7C;AAAgD,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,aAAOV,YAAY,CAACU,CAAD,CAAnB;AAAA,KAFZ;AAGE,IAAA,IAAI,EAAEZ,KAAK,CAACF,GAHd,CAIE;AAJF;AAKE,IAAA,SAAS,EAAC,2BALZ;AAME,IAAA,KAAK,EAAEE,KAAK,CAACD,KANf;AAOE,IAAA,QAAQ,EAAEF,MAAM,CAACgB,GAAP,CAAWC,SAAX,IAAwB,SAAxB,GAAoC,IAApC,GAA2C,KAPvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,sBAAlB;AAAyC,IAAA,IAAI,EAAC,QAA9C;AAAuD,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAVF,CADF,CADF;AAoBD,CApDD;;AAsDA,eAAenB,sBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst InputWithPercentageTag = (rowObj) => {\n  const [state, setState] = useState({\n    col: rowObj.col,\n    value: rowObj.value,\n  });\n  // useEffect(() => {\n  //   rowObj.changedRow(state);\n  // });\n\n  const handleChange = (event) => {\n    console.log('state:', state);\n    let obj = {\n      // ...state,\n      // row:\n      // {\n      // ...state,\n      col: event.target.name,\n      value: event.target.value,\n      // },\n    };\n    setState(obj);\n    // debugger;\n    // let row = {\n    //   ...state,\n    //   [event.target.name]: event.target.value,\n    // };\n    // let data = rowObj.data;\n    // data.splice(rowObj.rowNumber, 1, row);\n    // console.log('obbbbj::::', data);\n    obj.rowNumber = rowObj.rowNumber;\n    rowObj.changedRow(obj);\n  };\n  return (\n    <div className=\"col\" key={rowObj.rowNumber + 1} style={{ width: '140px' }}>\n      <div className=\"input-group\" style={{ width: '90%' }}>\n        <input\n          type=\"number\"\n          onChange={(e) => handleChange(e)}\n          name={state.col}\n          // onChange={(e) => this.onComparisonInputChange(e, col, row, rowNumber, index, i)}\n          className=\"form-control border-style\"\n          value={state.value}\n          disabled={rowObj.row.scenarios == 'Optimal' ? true : false}\n        />\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-side-percent\" type=\"button\" style={{ zIndex: 'unset' }}>\n            <i className=\"fa fa-percent\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InputWithPercentageTag;\n"]},"metadata":{},"sourceType":"module"}