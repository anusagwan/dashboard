{"ast":null,"code":"import _ from 'lodash';\nimport { screenNames } from '../services/filters/config';\nexport var getFiltersOptions = function getFiltersOptions(name, data) {\n  return data[name] && data[name]['options'] ? data[name]['options'] : [];\n};\nexport var getSelectedItems = function getSelectedItems(name, data) {\n  return data[name] && data[name]['selectedItems'] ? data[name]['selectedItems'] : [];\n};\nexport var getSelectedItemsArray = function getSelectedItemsArray(name, data) {\n  return data[name] && data[name]['selectedItemsArray'] ? data[name]['selectedItemsArray'] : [];\n};\nexport var getAllFiltersData = function getAllFiltersData(data, list, from) {\n  var newData = {};\n  var dateRange = {};\n\n  _.map(list, function (item) {\n    newData[item.type] = !_.isEmpty(data[item.type]) ? data[item.type].selectedItemsArray : [];\n  });\n\n  dateRange = data['dateRange'];\n  return {\n    filters: newData,\n    dateRange: dateRange\n  };\n};\nexport var getFirstFilterName = function getFirstFilterName(data) {\n  var array = Object.keys(data);\n  return !_.isEmpty(array) ? array[0] : '';\n};\nexport var resetFilterData = function resetFilterData(data) {\n  var newData = _.cloneDeep(data);\n\n  _.map(Object.keys(newData), function (key, i) {\n    if (i === 0) {\n      newData[key].selectedItems = [];\n      newData[key].selectedItemsArray = [];\n    } else {\n      newData[key] = {\n        options: [],\n        selectedItems: [],\n        selectedItemsArray: []\n      };\n    }\n  });\n\n  return newData;\n};\nexport var getFilterList = function getFilterList(data, from) {\n  var screenName = screenNames[from];\n\n  var filtersList = _.cloneDeep(data);\n\n  return filtersList && filtersList[screenName] ? filtersList[screenName] : [];\n};\nexport var getUpdatedFilters = function getUpdatedFilters(data, filtersList, customStyleGroupName) {\n  var filtersData = _.cloneDeep(data);\n\n  var filters = _.cloneDeep(filtersList);\n\n  _.map(Object.keys(filters), function (key, index) {\n    var selectedItemsArray = filters[key];\n\n    var options = _.map(filters[key], function (o, i) {\n      if (key === 'customStyleGroup') {\n        return {\n          value: o,\n          label: customStyleGroupName[i]\n        };\n      }\n\n      return {\n        value: o,\n        label: o\n      };\n    });\n\n    var filtersDataKeys = Object.keys(filtersData);\n\n    if (filtersDataKeys.includes(key)) {\n      filtersData[key].selectedItemsArray = selectedItemsArray;\n      filtersData[key].selectedItems = options;\n      if (key !== 'hierarchy1') filtersData[key].options = options;\n    } // filtersData[key].selectedItemsArray = selectedItemsArray;\n    // filtersData[key].selectedItems = options;\n    // if (key !== 'hierarchy1') filtersData[key].options = options;\n\n  });\n\n  return filtersData;\n};","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/helper/filterHelperFuncs.js"],"names":["_","screenNames","getFiltersOptions","name","data","getSelectedItems","getSelectedItemsArray","getAllFiltersData","list","from","newData","dateRange","map","item","type","isEmpty","selectedItemsArray","filters","getFirstFilterName","array","Object","keys","resetFilterData","cloneDeep","key","i","selectedItems","options","getFilterList","screenName","filtersList","getUpdatedFilters","customStyleGroupName","filtersData","index","o","value","label","filtersDataKeys","includes"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport { screenNames } from '../services/filters/config';\n\nexport const getFiltersOptions = (name, data) => {\n  return data[name] && data[name]['options'] ? data[name]['options'] : [];\n};\n\nexport const getSelectedItems = (name, data) => {\n  return data[name] && data[name]['selectedItems'] ? data[name]['selectedItems'] : [];\n};\nexport const getSelectedItemsArray = (name, data) => {\n  return data[name] && data[name]['selectedItemsArray'] ? data[name]['selectedItemsArray'] : [];\n};\n\nexport const getAllFiltersData = (data, list, from) => {\n  let newData = {};\n  let dateRange = {};\n\n  _.map(list, (item) => {\n    newData[item.type] = !_.isEmpty(data[item.type]) ? data[item.type].selectedItemsArray : [];\n  });\n  dateRange = data['dateRange'];\n  return { filters: newData, dateRange };\n};\n\nexport const getFirstFilterName = (data) => {\n  let array = Object.keys(data);\n  return !_.isEmpty(array) ? array[0] : '';\n};\n\nexport const resetFilterData = (data) => {\n  let newData = _.cloneDeep(data);\n  _.map(Object.keys(newData), (key, i) => {\n    if (i === 0) {\n      newData[key].selectedItems = [];\n      newData[key].selectedItemsArray = [];\n    } else {\n      newData[key] = {\n        options: [],\n        selectedItems: [],\n        selectedItemsArray: [],\n      };\n    }\n  });\n  return newData;\n};\n\nexport const getFilterList = (data, from) => {\n  let screenName = screenNames[from];\n  let filtersList = _.cloneDeep(data);\n  return filtersList && filtersList[screenName] ? filtersList[screenName] : [];\n};\n\nexport const getUpdatedFilters = (data, filtersList, customStyleGroupName) => {\n  let filtersData = _.cloneDeep(data);\n  let filters = _.cloneDeep(filtersList);\n\n  _.map(Object.keys(filters), (key, index) => {\n    let selectedItemsArray = filters[key];\n    let options = _.map(filters[key], (o, i) => {\n      if (key === 'customStyleGroup') {\n        return { value: o, label: customStyleGroupName[i] };\n      }\n      return { value: o, label: o };\n    });\n\n    let filtersDataKeys = Object.keys(filtersData);\n    if (filtersDataKeys.includes(key)) {\n      filtersData[key].selectedItemsArray = selectedItemsArray;\n      filtersData[key].selectedItems = options;\n      if (key !== 'hierarchy1') filtersData[key].options = options;\n    }\n    // filtersData[key].selectedItemsArray = selectedItemsArray;\n    // filtersData[key].selectedItems = options;\n    // if (key !== 'hierarchy1') filtersData[key].options = options;\n  });\n  return filtersData;\n};\n"]},"metadata":{},"sourceType":"module"}