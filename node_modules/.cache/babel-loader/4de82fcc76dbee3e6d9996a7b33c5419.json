{"ast":null,"code":"import axios from '../utils/axios';\nimport { config } from '../utils/config';\nimport { toast } from 'react-toastify';\nvar manuallyCreateMdActions = {\n  onResetInventoryInfo: function onResetInventoryInfo() {\n    return function (dispatch) {\n      dispatch({\n        type: 'RESET_INVENTORY_INFO_DATA'\n      });\n    };\n  },\n  onResetEditedInfo: function onResetEditedInfo() {\n    return function (dispatch) {\n      dispatch({\n        type: 'RESET_EDITED_INFO_DATA'\n      });\n    };\n  },\n  fetchInventoryInfo: function fetchInventoryInfo(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getInventoryInfo/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        if (resp.data && resp.data.data && resp.data.data.store_data.length <= 0) {\n          toast.error(\"Current filter selection doesn't have inventory please retry with different selection\", {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n        }\n\n        dispatch({\n          type: 'GET_INVENTORY_INFO',\n          payload: resp.data.data\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      }).catch(function (err) {\n        toast.error(err.message, {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  fetchCadence: function fetchCadence(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        // url: `${config.createMarkdownURL}/generateCadence/`,\n        url: \"\".concat(config.cadenceUrl, \"/MarkdownOptimization\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        if (resp.data && resp.data.status !== 'false') {\n          var skus = [];\n\n          if (resp.data.skus && resp.data.skus.length) {\n            skus = resp.data.skus.map(function (sku) {\n              return {\n                label: sku,\n                value: sku\n              };\n            });\n          }\n\n          dispatch({\n            type: 'GET_CADENCE_DATA',\n            payload: [resp.data.cadenceData],\n            csv_names: resp.data.csv_names,\n            skus: skus,\n            savedData: resp.data.saveData\n          }); // dispatch({\n          //   type:'ANAYSIS_DATA',\n          // })\n\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n            payload: resp.data.simulateData,\n            isEdit: reqObj.isEdit\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA',\n            payload: resp.data.simulateData,\n            data: resp.data,\n            cadenceType: 'Optimal',\n            comparisonData: [],\n            isEdit: reqObj.isEdit\n          });\n        } else {\n          toast.error(resp.data.message, {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n        }\n\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      }).catch(function (err) {\n        toast.error(err.message, {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  updateAnalysisData: function updateAnalysisData(req, cadenceType) {\n    return function (dispatch) {\n      dispatch({\n        type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n        payload: cadenceType === 'Optimal' ? req.simulateData : req\n      }); // if (this.state.defaultActiveKey === 'Optimal') {\n      //   obj.analysisData[key] = this.props.analysisData[this.state.defaultActiveKey]\n      //     ? this.props.analysisData[this.state.defaultActiveKey].simulateData\n      //     : [];\n      // } else {\n      //   const { analysisTabledata, detailed, overview } = this.props.analysisData[\n      //     this.state.defaultActiveKey\n      //   ];\n      //   obj.analysisData[key] = { analysisTabledata, detailed, overview };\n      // }\n\n      dispatch({\n        type: 'SET_ANALYSIS_TABLE_DATA',\n        payload: cadenceType === 'Optimal' ? req.simulateData : req,\n        data: req,\n        cadenceType: cadenceType\n      });\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: false\n        }\n      });\n    };\n  },\n  simulate: function simulate(reqObj, cadenceType, editData) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.cadenceUrl, \"/CalculationData\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        var returnStatus = true;\n\n        if (resp.data.status === 'false') {\n          toast.error(resp.data.message, {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false\n            }\n          });\n          returnStatus = false;\n        }\n\n        var uniqueSellThroughValue = new Set(resp.data.overview.sellThrough);\n\n        if (resp.data && resp.data.overview && uniqueSellThroughValue.size === 1 && uniqueSellThroughValue.has('0.0')) {\n          toast.error('Data not found', {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n        }\n\n        if (reqObj.skus === 'all') {\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n            payload: resp.data,\n            isEdit: reqObj.isEdit\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA',\n            payload: resp.data,\n            data: resp.data,\n            cadenceType: cadenceType,\n            isEdit: reqObj.isEdit\n          });\n        } else {\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA_BY_SKUS',\n            payload: resp.data,\n            isEdit: reqObj.isEdit\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA_BY_SKUS',\n            payload: resp.data,\n            data: resp.data,\n            cadenceType: cadenceType,\n            isEdit: reqObj.isEdit\n          });\n        }\n\n        if (editData) {\n          dispatch({\n            type: 'GET_CADENCE_DATA',\n            payload: [reqObj.scenario_data],\n            csv_names: reqObj.csv_names,\n            skus: editData,\n            savedData: resp.data.saveData\n          });\n        }\n\n        dispatch({\n          type: 'GET_COLUMNHEADERS'\n        }); // dispatch({\n        //   type: 'SET_ANALYSIS_TABLE_DATA',\n        //   payload: resp.data,\n        //   data: resp.data,\n        //   cadenceType,\n        // });\n        // dispatch({\n        //   type: 'LOADER_STATE',\n        //   payload: {\n        //     status: false,\n        //   },\n        // });\n\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return {\n          status: returnStatus\n        };\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return {\n          status: false\n        };\n      });\n    };\n  },\n  savedStatusFalse: function savedStatusFalse(status) {\n    return function (dispatch) {\n      dispatch({\n        type: 'MARKDOWN_SAVED_STATUS',\n        status: status\n      });\n    };\n  },\n  saveData: function saveData(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        url: \"\".concat(config.createMarkdownURL, \"/saveMarkDown/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        toast.success('Data Saved Sucessfully', {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        dispatch({\n          type: 'MARKDOWN_SAVED_STATUS',\n          status: true\n        }); // dispatch({\n        //   type: 'GET_INVENTORY_INFO',\n        //   payload: resp.data,\n        // });\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  fetchEditPlanData: function fetchEditPlanData(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/markdownDetails/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        dispatch({\n          type: 'GET_EDITPLAN_DETAILS',\n          payload: resp.data.data\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return resp.data.data;\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return [];\n      });\n    };\n  }\n};\nexport default manuallyCreateMdActions;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/manuallyCreateMdActions.js"],"names":["axios","config","toast","manuallyCreateMdActions","onResetInventoryInfo","dispatch","type","onResetEditedInfo","fetchInventoryInfo","reqObj","payload","status","url","createMarkdownURL","method","data","then","resp","store_data","length","error","autoClose","hideProgressBar","catch","err","message","fetchCadence","cadenceUrl","skus","map","sku","label","value","cadenceData","csv_names","savedData","saveData","simulateData","isEdit","cadenceType","comparisonData","updateAnalysisData","req","simulate","editData","returnStatus","uniqueSellThroughValue","Set","overview","sellThrough","size","has","scenario_data","savedStatusFalse","success","fetchEditPlanData"],"mappings":"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","sourcesContent":["import axios from '../utils/axios';\nimport { config } from '../utils/config';\nimport { toast } from 'react-toastify';\n\nconst manuallyCreateMdActions = {\n  onResetInventoryInfo: () => {\n    return (dispatch) => {\n      dispatch({\n        type: 'RESET_INVENTORY_INFO_DATA',\n      });\n    };\n  },\n  onResetEditedInfo: () => {\n    return (dispatch) => {\n      dispatch({\n        type: 'RESET_EDITED_INFO_DATA',\n      });\n    };\n  },\n  fetchInventoryInfo: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        url: `${config.createMarkdownURL}/getInventoryInfo/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          if (resp.data && resp.data.data && resp.data.data.store_data.length <= 0) {\n            toast.error(\n              `Current filter selection doesn't have inventory please retry with different selection`,\n              {\n                autoClose: 15000,\n                hideProgressBar: true,\n              }\n            );\n          }\n          dispatch({\n            type: 'GET_INVENTORY_INFO',\n            payload: resp.data.data,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        })\n        .catch((err) => {\n          toast.error(err.message, {\n            autoClose: 15000,\n            hideProgressBar: true,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n  fetchCadence: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        // url: `${config.createMarkdownURL}/generateCadence/`,\n        url: `${config.cadenceUrl}/MarkdownOptimization`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          if (resp.data && resp.data.status !== 'false') {\n            let skus = [];\n            if (resp.data.skus && resp.data.skus.length) {\n              skus = resp.data.skus.map((sku) => {\n                return {\n                  label: sku,\n                  value: sku,\n                };\n              });\n            }\n            dispatch({\n              type: 'GET_CADENCE_DATA',\n              payload: [resp.data.cadenceData],\n              csv_names: resp.data.csv_names,\n              skus: skus,\n              savedData: resp.data.saveData,\n            });\n            // dispatch({\n            //   type:'ANAYSIS_DATA',\n\n            // })\n            dispatch({\n              type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n              payload: resp.data.simulateData,\n              isEdit: reqObj.isEdit,\n            });\n            dispatch({\n              type: 'SET_ANALYSIS_TABLE_DATA',\n              payload: resp.data.simulateData,\n              data: resp.data,\n              cadenceType: 'Optimal',\n              comparisonData: [],\n              isEdit: reqObj.isEdit,\n            });\n          } else {\n            toast.error(resp.data.message, {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n          }\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        })\n        .catch((err) => {\n          toast.error(err.message, {\n            autoClose: 15000,\n            hideProgressBar: true,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n\n  updateAnalysisData: (req, cadenceType) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n        payload: cadenceType === 'Optimal' ? req.simulateData : req,\n      });\n      // if (this.state.defaultActiveKey === 'Optimal') {\n      //   obj.analysisData[key] = this.props.analysisData[this.state.defaultActiveKey]\n      //     ? this.props.analysisData[this.state.defaultActiveKey].simulateData\n      //     : [];\n      // } else {\n      //   const { analysisTabledata, detailed, overview } = this.props.analysisData[\n      //     this.state.defaultActiveKey\n      //   ];\n      //   obj.analysisData[key] = { analysisTabledata, detailed, overview };\n      // }\n      dispatch({\n        type: 'SET_ANALYSIS_TABLE_DATA',\n        payload: cadenceType === 'Optimal' ? req.simulateData : req,\n        data: req,\n        cadenceType,\n      });\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: false,\n        },\n      });\n    };\n  },\n\n  simulate: (reqObj, cadenceType, editData) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.cadenceUrl}/CalculationData`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          let returnStatus = true;\n          if (resp.data.status === 'false') {\n            toast.error(resp.data.message, {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n            dispatch({\n              type: 'LOADER_STATE',\n              payload: {\n                status: false,\n              },\n            });\n            returnStatus = false;\n          }\n          let uniqueSellThroughValue = new Set(resp.data.overview.sellThrough);\n          if (\n            resp.data &&\n            resp.data.overview &&\n            uniqueSellThroughValue.size === 1 &&\n            uniqueSellThroughValue.has('0.0')\n          ) {\n            toast.error('Data not found', {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n          }\n          if (reqObj.skus === 'all') {\n            dispatch({\n              type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n              payload: resp.data,\n              isEdit: reqObj.isEdit,\n            });\n            dispatch({\n              type: 'SET_ANALYSIS_TABLE_DATA',\n              payload: resp.data,\n              data: resp.data,\n              cadenceType,\n              isEdit: reqObj.isEdit,\n            });\n          } else {\n            dispatch({\n              type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA_BY_SKUS',\n              payload: resp.data,\n              isEdit: reqObj.isEdit,\n            });\n            dispatch({\n              type: 'SET_ANALYSIS_TABLE_DATA_BY_SKUS',\n              payload: resp.data,\n              data: resp.data,\n              cadenceType,\n              isEdit: reqObj.isEdit,\n            });\n          }\n          if (editData) {\n            dispatch({\n              type: 'GET_CADENCE_DATA',\n              payload: [reqObj.scenario_data],\n              csv_names: reqObj.csv_names,\n              skus: editData,\n              savedData: resp.data.saveData,\n            });\n          }\n          dispatch({\n            type: 'GET_COLUMNHEADERS',\n          });\n          // dispatch({\n          //   type: 'SET_ANALYSIS_TABLE_DATA',\n          //   payload: resp.data,\n          //   data: resp.data,\n          //   cadenceType,\n          // });\n          // dispatch({\n          //   type: 'LOADER_STATE',\n          //   payload: {\n          //     status: false,\n          //   },\n          // });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return { status: returnStatus };\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n\n          return { status: false };\n        });\n    };\n  },\n  savedStatusFalse: (status) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'MARKDOWN_SAVED_STATUS',\n        status,\n      });\n    };\n  },\n  saveData: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        url: `${config.createMarkdownURL}/saveMarkDown/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          toast.success('Data Saved Sucessfully', {\n            autoClose: 15000,\n            hideProgressBar: true,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          dispatch({\n            type: 'MARKDOWN_SAVED_STATUS',\n            status: true,\n          });\n          // dispatch({\n          //   type: 'GET_INVENTORY_INFO',\n          //   payload: resp.data,\n          // });\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n  fetchEditPlanData: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/markdownDetails/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          dispatch({\n            type: 'GET_EDITPLAN_DETAILS',\n            payload: resp.data.data,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return resp.data.data;\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return [];\n        });\n    };\n  },\n};\nexport default manuallyCreateMdActions;\n"]},"metadata":{},"sourceType":"module"}