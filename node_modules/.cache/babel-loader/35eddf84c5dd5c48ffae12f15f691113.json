{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Finalize/FinalizeMarkdown.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: flex-end;\\n  // display: flex;\\n  // flex-direction: row;\\n  // justify-content: space-between;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Filters from '../../services/filters';\nimport './finalizeMarkdownStyle.css';\nimport styled from 'styled-components';\nimport NoData from '../noTableData';\nimport FinalizeAction from '../../actions/draftStausFinalizeAction';\nimport Coldef from './coldef';\nimport _ from 'lodash';\nimport cloneDeep from 'clone-deep';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport AlertWarning from '../../utils/AlertMessage/alertDanger';\nimport AlertSuccess from '../../utils/AlertMessage/alertSuccess';\nimport CardComponent from '../../services/cardComponent/cardComponent';\nimport moment from 'moment';\nimport card1Image from '../../images/card1Image.png';\nimport card2Image from '../../images/card2Image.png';\nimport card3Image from '../../images/card3Image.png';\nimport card4Image from '../../images/card4Image.png';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox';\n\nvar FinalizeMarkdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FinalizeMarkdown, _Component);\n\n  function FinalizeMarkdown(props) {\n    var _this;\n\n    _classCallCheck(this, FinalizeMarkdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FinalizeMarkdown).call(this, props));\n\n    _this.findStatusColor = function (status, color) {\n      switch (status) {\n        case 'high':\n          return color.high;\n\n        case 'medium':\n          return color.medium;\n\n        case 'low':\n          return color.low;\n\n        default:\n          break;\n      }\n    };\n\n    _this.bgmCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var bgCol = {\n        high: '#F8E8E8',\n        medium: '#FCF3D1',\n        low: '#E8F8F5'\n      };\n      return _this.findStatusColor(status, bgCol);\n    };\n\n    _this.txtCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var txtCol = {\n        high: '#D38485',\n        medium: '#F0C53A',\n        low: '#66CFBA'\n      };\n      return _this.findStatusColor(status, txtCol);\n    };\n\n    _this.sendForReject = function () {\n      var payload = {\n        markdown_data: _this.state.selectedRows.map(function (item) {\n          return {\n            id: item.markdown_id\n          };\n        }),\n        update_status: 'rejected'\n      };\n      console.log(payload, 'sendForReject');\n\n      _this.props.sendForApproval(payload);\n    };\n\n    _this.sendForApprove = function () {\n      var payload = {\n        markdown_data: _this.state.selectedRows.map(function (item) {\n          return {\n            id: item.markdown_id,\n            scenario: item.scenario\n          };\n        }),\n        update_status: 'approved'\n      };\n      console.log(payload, 'sendForApprove');\n\n      _this.props.sendForApproval(payload);\n    };\n\n    _this.onActionSelection = function (rowData) {\n      var selectedRows = _this.state.selectedRows;\n\n      var foundEle = _.find(selectedRows, {\n        markdown_id: rowData.original.markdown_id\n      });\n\n      if (foundEle) {\n        _.remove(selectedRows, function (item) {\n          return item.markdown_id === rowData.original.markdown_id;\n        });\n      } else {\n        selectedRows.push(rowData.original);\n      }\n\n      console.log(selectedRows, 'onActionSelection', rowData);\n\n      _this.setState({\n        selectedRows: selectedRows\n      });\n    };\n\n    _this.onScenarioSelection = function (rowData) {\n      var selectedRows = _this.state.selectedRows;\n\n      var foundEle = _.find(selectedRows, {\n        markdown_id: rowData.original.markdown_id\n      });\n\n      if (foundEle) {\n        _.remove(selectedRows, function (item) {\n          return item.markdown_id === rowData.original.markdown_id;\n        });\n      } else {\n        selectedRows.push(rowData.original);\n      }\n\n      console.log(selectedRows, 'asdfmasdf', rowData);\n\n      _this.setState({\n        selectedRows: selectedRows\n      });\n    };\n\n    _this.onHandleSelect = function (selOptions) {\n      console.log('option:', selOptions);\n      var headers = cloneDeep(_this.state.columns);\n      console.log(headers, 'selheader');\n      selOptions.forEach(function (item) {\n        console.log(item, 'itemitemitemitemd');\n        var newTableCols = headers.filter(function (a) {\n          return a.accessor === item.value;\n        });\n        console.log(newTableCols, 'neww');\n\n        if (newTableCols.length == 0) {\n          headers.push({\n            Header: item.label,\n            accessor: item.value\n          });\n        }\n      });\n      console.log(headers, 'headeererererer');\n\n      _this.setState({\n        columns: headers\n      });\n    };\n\n    _this.onHandleCheckBox = function (e, label, index) {\n      //adding\n      if (e.target.checked) {\n        if (_this.state.selLabels.indexOf(label) === -1) {\n          var labels = [].concat(_toConsumableArray(_this.state.selLabels), [label]);\n          var tempArr = [];\n          labels.forEach(function (label) {\n            var columns = _this.props.getColumnHeaders[label];\n            var options = columns.map(function (label) {\n              return {\n                label: label,\n                value: label\n              };\n            });\n            tempArr.push.apply(tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selLabels: labels,\n            columnOptions: tempArr\n          });\n        }\n      } else {\n        //removing\n        var _index = _this.state.selLabels.indexOf(label);\n\n        if (_index !== -1) {\n          var selectedLabel = cloneDeep(_this.state.selLabels);\n          selectedLabel.splice(_index, 1);\n          var _tempArr = [];\n          selectedLabel.forEach(function (label) {\n            var columns = _this.props.getColumnHeaders[label];\n            var options = columns.map(function (label) {\n              return {\n                label: label,\n                value: label\n              };\n            });\n\n            _tempArr.push.apply(_tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selLabels: selectedLabel,\n            columnOptions: _tempArr\n          });\n        }\n      }\n    };\n\n    _this.onFilter = function () {\n      var payload = {\n        filters: {\n          hierarchy1: _this.props.selectedHierarchy1,\n          hierarchy2: _this.props.selectedHierarchy2,\n          hierarchy3: _this.props.selectedHierarchy3,\n          hierarchy4: _this.props.selectedHierarchy4,\n          hierarchy5: _this.props.selectedHierarchy5,\n          hierarchy6: _this.props.selectedHierarchy6,\n          hierarchy7: _this.props.selectedHierarchy7,\n          hierarchy8: _this.props.selectedHierarchy8,\n          tiers: _this.props.selectedStores\n        },\n        startDate: moment(_this.props.startDate).format('YYYY-MM-DD'),\n        endDate: moment(_this.props.endDate).format('YYYY-MM-DD'),\n        status: 'pending'\n      };\n      console.log(payload, 'finalizepayl');\n\n      _this.props.getMarkdowns(payload);\n    };\n\n    _this.state = {\n      attributes: ['Margin', 'Sales', 'Inventory'],\n      firstCardText: 'KPIs to be decided',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month',\n      selectedItems: [],\n      columnOptions: [],\n      selLabels: [],\n      columns: [],\n      selectedRows: []\n    };\n    return _this;\n  }\n\n  _createClass(FinalizeMarkdown, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.setMarkDowns([]);\n      this.props.setMDColumnHeaders({});\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // this.props.getMarkdowns({ status: 'pending' });\n      var cols = Coldef();\n      cols.push({\n        id: 'selection',\n        groupByBoundary: true,\n        Header: 'Actions',\n        Cell: function Cell(props) {\n          var row = props.row,\n              rows = props.rows;\n\n          var mdPlan = row.values.md_plan,\n              mainGrp = _.find(rows, {\n            isSelected: true,\n            values: {\n              md_plan: mdPlan\n            }\n          }),\n              checkboxDisabled = mainGrp && !row.isSelected ? true : false;\n\n          return row.canExpand ? React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, React.createElement(IndeterminateCheckbox, Object.assign({\n            row: row.id,\n            onClick: function onClick() {\n              _this2.onActionSelection(row);\n            },\n            disabled: checkboxDisabled\n          }, row.getToggleRowSelectedProps(), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }))) : null;\n        }\n      });\n      this.setState({\n        columns: cols\n      });\n    }\n  }, {\n    key: \"render\",\n    // onFilter = (selectedFilters) => {\n    //   let payload = { ...selectedFilters };\n    //   payload.startDate = moment(payload.startDate).format('MM-DD-YYYY');\n    //   payload.endDate = moment(payload.endDate).format('MM-DD-YYYY');\n    //   payload['week'] = '';\n    //   payload['status'] = 'draft';\n    //   this.props.getMarkDowns(payload).then((resp) => {\n    //     console.log(resp, 'aaaaaaaaaa');\n    //     if (resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n    //       let setDefaultColDef = Coldef().filter((col) =>\n    //         resp.columnHeaders.default.includes(col.Header)\n    //       );\n    //       let setDefaultLabel = [];\n    //       let setDefaultColumnOptions = [];\n    //       let setDefaultItems = [];\n    //       let colHeaders = _.cloneDeep(resp.columnHeaders);\n    //       let labels = Object.keys(colHeaders);\n    //       labels.splice(labels.indexOf('fixed'), 1);\n    //       labels.splice(labels.indexOf('default'), 1);\n    //       for (const label of labels) {\n    //         function diff(A = resp.columnHeaders[label], B = resp.columnHeaders.default) {\n    //           return A.filter(function (a) {\n    //             return B.indexOf(a) !== -1;\n    //           });\n    //         }\n    //         if (diff().length) {\n    //           setDefaultColumnOptions.push(...resp.columnHeaders[label]);\n    //           setDefaultItems.push(...diff());\n    //           setDefaultLabel.push(label);\n    //         }\n    //       }\n    //       let options = setDefaultColumnOptions.map((label) => {\n    //         return {\n    //           label: label,\n    //           value: label,\n    //         };\n    //       });\n    //       let selectedItems = setDefaultItems.map((label) => {\n    //         return {\n    //           label: label,\n    //           value: label,\n    //         };\n    //       });\n    //       this.setState({\n    //         columns: setDefaultColDef,\n    //         selLabels: setDefaultLabel,\n    //         selectedItems: selectedItems,\n    //         columnOptions: options,\n    //       });\n    //     }\n    //   });\n    // };\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.props.finalizeMarkdownData, 'finalizeMarkdownData');\n      return React.createElement(\"div\", {\n        className: \"createMd pl-2 pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"alertDivs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, this.state.showAlertWarning ? React.createElement(AlertWarning, {\n        message: \"Markdown Finalization Failed!\",\n        show: this.state.showAlertWarning,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }) : null, this.state.showAlertSuccess ? React.createElement(AlertSuccess, {\n        message: 'Markdown(s) are ' + this.state.message,\n        show: this.state.showAlertSuccess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }) : null), React.createElement(\"div\", {\n        className: \"card CalendarMain promoCalendarDiv1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"font-size-14  pad-10 markdown-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Markdown Optimization /\", React.createElement(\"span\", {\n        className: \"font-bold color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Finalize\"))), React.createElement(\"hr\", {\n        className: \"mb-2\",\n        style: {\n          marginTop: '-4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"filterCol mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(Filters, {\n        onFilter: this.onFilter,\n        stores: true,\n        dateRange: true,\n        hierarchy: [{\n          type: 'hierarchy1',\n          isMandatory: true,\n          isMultiple: false\n        }, {\n          type: 'hierarchy2',\n          isMandatory: true,\n          isMultiple: true\n        }, {\n          type: 'hierarchy3',\n          isMandatory: true,\n          isMultiple: true\n        }, {\n          type: 'hierarchy4',\n          isMandatory: true,\n          isMultiple: true\n        }, {\n          type: 'hierarchy5',\n          isMandatory: true,\n          isMultiple: true\n        }, {\n          type: 'hierarchy6',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'hierarchy7',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'hierarchy8',\n          isMandatory: false,\n          isMultiple: true\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }))), this.props.finalizeMarkdownData && this.props.finalizeMarkdownData.length ? React.createElement(\"div\", {\n        className: \"card pl-3 pr-3 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, React.createElement(ColSelBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          padding: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.sendForApprove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, \"Approve\"), \"\\xA0\", React.createElement(\"button\", {\n        className: \"btn btn-primary  btn-filter-reset\",\n        onClick: this.sendForReject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, \"Reject\"))), React.createElement(DataTable, {\n        columns: this.state.columns,\n        isSort: true,\n        isColumnFilter: true,\n        data: this.props.finalizeMarkdownData,\n        updateMyData: this.updateMyData // visibleColumns=\"markDownDrafts\"\n        ,\n        isPagination: true,\n        getColumnProps: function getColumnProps(column) {\n          return {// onClick: () => this.onColumnClick(column),\n          };\n        },\n        getCellProps: function getCellProps(cellInfo) {\n          return {\n            style: {\n              backgroundColor: _this3.bgmCol(cellInfo),\n              color: _this3.txtCol(cellInfo),\n              // textAlign: \"center\",\n              margin: '4px 4px',\n              borderRadius: '2px'\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      })) : React.createElement(NoData, {\n        description: \"Please select filters to show Markdown plans.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FinalizeMarkdown;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  console.log(store, 'storestore');\n  console.log(store.draftStatusReducer.markdowns, 'markdownsstore');\n  return {\n    finalizeMarkdownData: store.draftStatusReducer.markdowns,\n    getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    getMetricOptions: store.finalizeReducer.metricOptions,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    selectedStores: store.filtersReducer.selectedStores\n  };\n};\n\nvar mapActionToProps = {\n  getMarkdowns: FinalizeAction.getMarkdowns,\n  setMarkDowns: FinalizeAction.setMarkDowns,\n  setMDColumnHeaders: FinalizeAction.setMDColumnHeaders,\n  sendForApproval: FinalizeAction.sendForApproval\n};\nexport default connect(mapStateToProps, mapActionToProps)(withRouter(FinalizeMarkdown));\nvar ColSelBtn = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Finalize/FinalizeMarkdown.js"],"names":["React","Component","connect","withRouter","Filters","styled","NoData","FinalizeAction","Coldef","_","cloneDeep","DataTable","ColumnSelection","AlertWarning","AlertSuccess","CardComponent","moment","card1Image","card2Image","card3Image","card4Image","IndeterminateCheckbox","FinalizeMarkdown","props","findStatusColor","status","color","high","medium","low","bgmCol","cellInfo","column","id","row","original","md_status","bgCol","txtCol","sendForReject","payload","markdown_data","state","selectedRows","map","item","markdown_id","update_status","console","log","sendForApproval","sendForApprove","scenario","onActionSelection","rowData","foundEle","find","remove","push","setState","onScenarioSelection","onHandleSelect","selOptions","headers","columns","forEach","newTableCols","filter","a","accessor","value","length","Header","label","onHandleCheckBox","e","index","target","checked","selLabels","indexOf","labels","tempArr","getColumnHeaders","options","columnOptions","selectedLabel","splice","onFilter","filters","hierarchy1","selectedHierarchy1","hierarchy2","selectedHierarchy2","hierarchy3","selectedHierarchy3","hierarchy4","selectedHierarchy4","hierarchy5","selectedHierarchy5","hierarchy6","selectedHierarchy6","hierarchy7","selectedHierarchy7","hierarchy8","selectedHierarchy8","tiers","selectedStores","startDate","format","endDate","getMarkdowns","attributes","firstCardText","firstCardFirstValue","firstCardSecondValue","secondCardFirstValue","secondCardSecondValue","thirdCardFirstValue","thirdCardSecondValue","fourthCardFirstValue","fourthCardSecondValue","cardWeekText","cardMonthText","selectedItems","setMarkDowns","setMDColumnHeaders","cols","groupByBoundary","Cell","rows","mdPlan","values","md_plan","mainGrp","isSelected","checkboxDisabled","canExpand","getToggleRowSelectedProps","finalizeMarkdownData","showAlertWarning","showAlertSuccess","message","marginTop","type","isMandatory","isMultiple","padding","updateMyData","style","backgroundColor","margin","borderRadius","mapStateToProps","store","draftStatusReducer","markdowns","columnHeaders","getMetricOptions","finalizeReducer","metricOptions","filtersReducer","mapActionToProps","ColSelBtn","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Filters from '../../services/filters';\nimport './finalizeMarkdownStyle.css';\nimport styled from 'styled-components';\nimport NoData from '../noTableData';\nimport FinalizeAction from '../../actions/draftStausFinalizeAction';\nimport Coldef from './coldef';\nimport _ from 'lodash';\nimport cloneDeep from 'clone-deep';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport AlertWarning from '../../utils/AlertMessage/alertDanger';\nimport AlertSuccess from '../../utils/AlertMessage/alertSuccess';\nimport CardComponent from '../../services/cardComponent/cardComponent';\nimport moment from 'moment';\nimport card1Image from '../../images/card1Image.png';\nimport card2Image from '../../images/card2Image.png';\nimport card3Image from '../../images/card3Image.png';\nimport card4Image from '../../images/card4Image.png';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox';\nclass FinalizeMarkdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      attributes: ['Margin', 'Sales', 'Inventory'],\n      firstCardText: 'KPIs to be decided',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month',\n      selectedItems: [],\n      columnOptions: [],\n      selLabels: [],\n      columns: [],\n      selectedRows: [],\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.setMarkDowns([]);\n    this.props.setMDColumnHeaders({});\n  }\n\n  findStatusColor = (status, color) => {\n    switch (status) {\n      case 'high':\n        return color.high;\n      case 'medium':\n        return color.medium;\n      case 'low':\n        return color.low;\n      default:\n        break;\n    }\n  };\n\n  bgmCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let bgCol = {\n      high: '#F8E8E8',\n      medium: '#FCF3D1',\n      low: '#E8F8F5',\n    };\n    return this.findStatusColor(status, bgCol);\n  };\n  txtCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let txtCol = {\n      high: '#D38485',\n      medium: '#F0C53A',\n      low: '#66CFBA',\n    };\n    return this.findStatusColor(status, txtCol);\n  };\n  sendForReject = () => {\n    let payload = {\n      markdown_data: this.state.selectedRows.map((item) => {\n        return {\n          id: item.markdown_id,\n        };\n      }),\n      update_status: 'rejected',\n    };\n    console.log(payload, 'sendForReject');\n    this.props.sendForApproval(payload);\n  };\n  sendForApprove = () => {\n    let payload = {\n      markdown_data: this.state.selectedRows.map((item) => {\n        return {\n          id: item.markdown_id,\n          scenario: item.scenario,\n        };\n      }),\n      update_status: 'approved',\n    };\n\n    console.log(payload, 'sendForApprove');\n    this.props.sendForApproval(payload);\n  };\n  onActionSelection = (rowData) => {\n    let { selectedRows } = this.state;\n    let foundEle = _.find(selectedRows, { markdown_id: rowData.original.markdown_id });\n    if (foundEle) {\n      _.remove(selectedRows, (item) => item.markdown_id === rowData.original.markdown_id);\n    } else {\n      selectedRows.push(rowData.original);\n    }\n    console.log(selectedRows, 'onActionSelection', rowData);\n\n    this.setState({\n      selectedRows,\n    });\n  };\n  componentDidMount() {\n    // this.props.getMarkdowns({ status: 'pending' });\n    let cols = Coldef();\n    cols.push({\n      id: 'selection',\n      groupByBoundary: true,\n      Header: 'Actions',\n      Cell: (props) => {\n        let { row, rows } = props;\n        let mdPlan = row.values.md_plan,\n          mainGrp = _.find(rows, { isSelected: true, values: { md_plan: mdPlan } }),\n          checkboxDisabled = mainGrp && !row.isSelected ? true : false;\n\n        return row.canExpand ? (\n          <div>\n            <IndeterminateCheckbox\n              row={row.id}\n              onClick={() => {\n                this.onActionSelection(row);\n              }}\n              disabled={checkboxDisabled}\n              {...row.getToggleRowSelectedProps()}\n            />\n          </div>\n        ) : null;\n      },\n    });\n    this.setState({\n      columns: cols,\n    });\n  }\n\n  onScenarioSelection = (rowData) => {\n    let { selectedRows } = this.state;\n    let foundEle = _.find(selectedRows, { markdown_id: rowData.original.markdown_id });\n    if (foundEle) {\n      _.remove(selectedRows, (item) => item.markdown_id === rowData.original.markdown_id);\n    } else {\n      selectedRows.push(rowData.original);\n    }\n    console.log(selectedRows, 'asdfmasdf', rowData);\n\n    this.setState({\n      selectedRows,\n    });\n  };\n  onHandleSelect = (selOptions) => {\n    console.log('option:', selOptions);\n    let headers = cloneDeep(this.state.columns);\n    console.log(headers, 'selheader');\n    selOptions.forEach((item) => {\n      console.log(item, 'itemitemitemitemd');\n      let newTableCols = headers.filter((a) => {\n        return a.accessor === item.value;\n      });\n      console.log(newTableCols, 'neww');\n      if (newTableCols.length == 0) {\n        headers.push({\n          Header: item.label,\n          accessor: item.value,\n        });\n      }\n    });\n    console.log(headers, 'headeererererer');\n    this.setState({\n      columns: headers,\n    });\n  };\n  onHandleCheckBox = (e, label, index) => {\n    //adding\n    if (e.target.checked) {\n      if (this.state.selLabels.indexOf(label) === -1) {\n        let labels = [...this.state.selLabels, label];\n        let tempArr = [];\n        labels.forEach((label) => {\n          let columns = this.props.getColumnHeaders[label];\n          let options = columns.map((label) => {\n            return {\n              label: label,\n              value: label,\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selLabels: labels,\n          columnOptions: tempArr,\n        });\n      }\n    } else {\n      //removing\n      let index = this.state.selLabels.indexOf(label);\n      if (index !== -1) {\n        let selectedLabel = cloneDeep(this.state.selLabels);\n        selectedLabel.splice(index, 1);\n        let tempArr = [];\n        selectedLabel.forEach((label) => {\n          let columns = this.props.getColumnHeaders[label];\n          let options = columns.map((label) => {\n            return {\n              label: label,\n              value: label,\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selLabels: selectedLabel,\n          columnOptions: tempArr,\n        });\n      }\n    }\n  };\n  onFilter = () => {\n    let payload = {\n      filters: {\n        hierarchy1: this.props.selectedHierarchy1,\n        hierarchy2: this.props.selectedHierarchy2,\n        hierarchy3: this.props.selectedHierarchy3,\n        hierarchy4: this.props.selectedHierarchy4,\n        hierarchy5: this.props.selectedHierarchy5,\n        hierarchy6: this.props.selectedHierarchy6,\n        hierarchy7: this.props.selectedHierarchy7,\n        hierarchy8: this.props.selectedHierarchy8,\n        tiers: this.props.selectedStores,\n      },\n      startDate: moment(this.props.startDate).format('YYYY-MM-DD'),\n      endDate: moment(this.props.endDate).format('YYYY-MM-DD'),\n      status: 'pending',\n    };\n    console.log(payload, 'finalizepayl');\n    this.props.getMarkdowns(payload);\n  };\n  // onFilter = (selectedFilters) => {\n  //   let payload = { ...selectedFilters };\n  //   payload.startDate = moment(payload.startDate).format('MM-DD-YYYY');\n  //   payload.endDate = moment(payload.endDate).format('MM-DD-YYYY');\n  //   payload['week'] = '';\n  //   payload['status'] = 'draft';\n  //   this.props.getMarkDowns(payload).then((resp) => {\n  //     console.log(resp, 'aaaaaaaaaa');\n  //     if (resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n  //       let setDefaultColDef = Coldef().filter((col) =>\n  //         resp.columnHeaders.default.includes(col.Header)\n  //       );\n  //       let setDefaultLabel = [];\n  //       let setDefaultColumnOptions = [];\n  //       let setDefaultItems = [];\n  //       let colHeaders = _.cloneDeep(resp.columnHeaders);\n  //       let labels = Object.keys(colHeaders);\n  //       labels.splice(labels.indexOf('fixed'), 1);\n  //       labels.splice(labels.indexOf('default'), 1);\n  //       for (const label of labels) {\n  //         function diff(A = resp.columnHeaders[label], B = resp.columnHeaders.default) {\n  //           return A.filter(function (a) {\n  //             return B.indexOf(a) !== -1;\n  //           });\n  //         }\n\n  //         if (diff().length) {\n  //           setDefaultColumnOptions.push(...resp.columnHeaders[label]);\n  //           setDefaultItems.push(...diff());\n  //           setDefaultLabel.push(label);\n  //         }\n  //       }\n  //       let options = setDefaultColumnOptions.map((label) => {\n  //         return {\n  //           label: label,\n  //           value: label,\n  //         };\n  //       });\n  //       let selectedItems = setDefaultItems.map((label) => {\n  //         return {\n  //           label: label,\n  //           value: label,\n  //         };\n  //       });\n  //       this.setState({\n  //         columns: setDefaultColDef,\n  //         selLabels: setDefaultLabel,\n  //         selectedItems: selectedItems,\n  //         columnOptions: options,\n  //       });\n  //     }\n  //   });\n  // };\n\n  render() {\n    console.log(this.props.finalizeMarkdownData, 'finalizeMarkdownData');\n    return (\n      <div className=\"createMd pl-2 pr-2\">\n        <div className=\"alertDivs\">\n          {this.state.showAlertWarning ? (\n            <AlertWarning\n              message=\"Markdown Finalization Failed!\"\n              show={this.state.showAlertWarning}\n            />\n          ) : null}\n          {this.state.showAlertSuccess ? (\n            <AlertSuccess\n              message={'Markdown(s) are ' + this.state.message}\n              show={this.state.showAlertSuccess}\n            />\n          ) : null}\n        </div>\n        <div className=\"card CalendarMain promoCalendarDiv1 mt-3\">\n          <div>\n            <h4 className=\"font-size-14  pad-10 markdown-heading\">\n              Markdown Optimization /<span className=\"font-bold color-blue\">Finalize</span>\n            </h4>\n          </div>\n          <hr\n            className=\"mb-2\"\n            style={{\n              marginTop: '-4px',\n            }}\n          />\n          <div className=\"filterCol mb-4\">\n            <Filters\n              onFilter={this.onFilter}\n              stores\n              dateRange\n              hierarchy={[\n                {\n                  type: 'hierarchy1',\n                  isMandatory: true,\n                  isMultiple: false,\n                },\n                {\n                  type: 'hierarchy2',\n                  isMandatory: true,\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy3',\n                  isMandatory: true,\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy4',\n                  isMandatory: true,\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy5',\n                  isMandatory: true,\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy6',\n                  isMandatory: false,\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy7',\n                  isMandatory: false,\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy8',\n                  isMandatory: false,\n                  isMultiple: true,\n                },\n              ]}\n            />\n          </div>\n        </div>\n        {/* <div className=\"row\" style={{ marginTop: '15px' }}>\n          <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n            <CardComponent\n              cardImage={card1Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.firstCardFirstValue}\n              cardValueSecond={this.state.firstCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border1',\n                cardValue: 'card1-value',\n                cardImg: 'card1-img',\n                cardValueSecond: 'card-value-second',\n                cardSubHeading: 'card-subHeading',\n              }}\n            />\n          </div>\n          <div className=\"col-md-3 col-sm-3 col-xs-6\">\n            <CardComponent\n              cardImage={card2Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.secondCardFirstValue}\n              cardValueSecond={this.state.secondCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border2',\n                cardValue: 'card1-value',\n                cardImg: 'card2-img',\n                cardValueSecond: 'card-value-second',\n                cardSubHeading: 'card-subHeading',\n              }}\n            />\n          </div>\n          <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n            <CardComponent\n              cardImage={card3Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.thirdCardFirstValue}\n              cardValueSecond={this.state.thirdCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border3',\n                cardValue: 'card1-value',\n                cardImg: 'card3-img',\n                cardValueSecond: 'card-value-second',\n                cardSubHeading: 'card-subHeading',\n              }}\n            />\n          </div>\n          <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n            <CardComponent\n              cardImage={card4Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.fourthCardFirstValue}\n              cardValueSecond={this.state.fourthCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border4',\n                cardValue: 'card1-value',\n                cardImg: 'card4-img',\n              }}\n            />\n          </div>\n        </div> */}\n        {this.props.finalizeMarkdownData && this.props.finalizeMarkdownData.length ? (\n          <div className=\"card pl-3 pr-3 mt-3\">\n            <ColSelBtn>\n              {/* <ColumnSelection\n                onHandleCheckBox={this.onHandleCheckBox}\n                columnHeaders={this.props.getColumnHeaders}\n                onHandleSelect={this.onHandleSelect}\n                columnOptions={this.state.columnOptions}\n                selectedItems={this.state.selectedItems}\n                selLabels={this.state.selLabels}\n              /> */}\n              <div style={{ padding: '1rem' }}>\n                <button className=\"btn btn-primary\" onClick={this.sendForApprove}>\n                  Approve\n                </button>\n                &nbsp;\n                <button className=\"btn btn-primary  btn-filter-reset\" onClick={this.sendForReject}>\n                  Reject\n                </button>\n              </div>\n            </ColSelBtn>\n            <DataTable\n              columns={this.state.columns}\n              isSort={true}\n              isColumnFilter={true}\n              data={this.props.finalizeMarkdownData}\n              updateMyData={this.updateMyData}\n              // visibleColumns=\"markDownDrafts\"\n              isPagination={true}\n              getColumnProps={(column) => ({\n                // onClick: () => this.onColumnClick(column),\n              })}\n              getCellProps={(cellInfo) => ({\n                style: {\n                  backgroundColor: this.bgmCol(cellInfo),\n                  color: this.txtCol(cellInfo),\n                  // textAlign: \"center\",\n                  margin: '4px 4px',\n                  borderRadius: '2px',\n                },\n              })}\n            />\n          </div>\n        ) : (\n          <NoData description=\"Please select filters to show Markdown plans.\" />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  console.log(store, 'storestore');\n  console.log(store.draftStatusReducer.markdowns, 'markdownsstore');\n  return {\n    finalizeMarkdownData: store.draftStatusReducer.markdowns,\n    getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    getMetricOptions: store.finalizeReducer.metricOptions,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    selectedStores: store.filtersReducer.selectedStores,\n  };\n};\n\nconst mapActionToProps = {\n  getMarkdowns: FinalizeAction.getMarkdowns,\n  setMarkDowns: FinalizeAction.setMarkDowns,\n  setMDColumnHeaders: FinalizeAction.setMDColumnHeaders,\n  sendForApproval: FinalizeAction.sendForApproval,\n};\nexport default connect(mapStateToProps, mapActionToProps)(withRouter(FinalizeMarkdown));\n\nconst ColSelBtn = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  // display: flex;\n  // flex-direction: row;\n  // justify-content: space-between;\n`;\n"]},"metadata":{},"sourceType":"module"}