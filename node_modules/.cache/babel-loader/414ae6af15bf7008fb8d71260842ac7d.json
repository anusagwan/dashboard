{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/MarkdownAnalysis/AnalysisTable.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-family: arial, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%;\\n\\n  td,\\n  th {\\n    border: 1px solid #dddddd;\\n    text-align: center;\\n    padding: 8px;\\n  }\\n  tr {\\n    font-size: 15px;\\n    line-height: 4rem;\\n    font-size: 15px;\\n    color: #3c4148;\\n    font-weight: 500;\\n    // background-color: #e8eef2;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport numeral from 'numeral';\n\nvar AnalysisTable = function AnalysisTable(_ref) {\n  var tableData = _ref.tableData,\n      tableData2 = _ref.tableData2,\n      isEdit = _ref.isEdit,\n      editFrom = _ref.editFrom;\n  tableData = tableData || [];\n  tableData2 = tableData2 || [];\n\n  var getHeader = function getHeader() {\n    if (isEdit && !_.isEmpty(tableData2)) {\n      var headers = ['', 'Previous', 'Edited'];\n      console.log(headers, 'headers');\n      return headers.map(function (header, index) {\n        return React.createElement(\"th\", {\n          key: index,\n          style: {\n            backgroundColor: '#e8eef2'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, header);\n      });\n    }\n  };\n\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, editFrom && editFrom !== 'notEditModal' ? // horizontal table for edit popup\n  React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, isEdit && !_.isEmpty(tableData) && !_.isEmpty(tableData2) && React.createElement(\"th\", {\n    className: \"cellAlign\",\n    style: {\n      backgroundColor: '#e8eef2'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), tableData.length && tableData.length > 0 ? tableData.map(function (cell, index) {\n    return React.createElement(\"th\", {\n      className: \"cellAlign\",\n      style: {\n        backgroundColor: '#e8eef2'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, cell.style_id);\n  }) : null), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, isEdit && !_.isEmpty(tableData) && !_.isEmpty(tableData2) && React.createElement(\"td\", {\n    className: \"cellData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Previous\"), tableData.length && tableData.length > 0 ? tableData.map(function (cell, index) {\n    var styleDesc = cell.style_desc;\n    var sellThroughVal = tableData[0].style_desc.toString();\n\n    if (!sellThroughVal.includes('%')) {\n      var value = index < 4 ? numeral(cell.style_desc).format('0.00') : numeral(cell.style_desc).format('0,0');\n      styleDesc = cell.style_id.includes('%') ? \"\".concat(value, \"%\") : cell.style_id.includes('$') ? \"$\".concat(value) : value;\n    }\n\n    return React.createElement(\"td\", {\n      className: \"cellData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, styleDesc);\n  }) : null), isEdit && !_.isEmpty(tableData2) ? React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, isEdit && !_.isEmpty(tableData) && !_.isEmpty(tableData2) && React.createElement(\"td\", {\n    className: \"cellData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Edited\"), tableData.length && tableData.length > 0 ? tableData.map(function (cell, index) {\n    var styleDescEdited = isEdit && !_.isEmpty(tableData2) ? tableData2[index].style_desc : null;\n    var sellThroughVal = tableData[0].style_desc.toString();\n    var editedsellThroughVal = isEdit && !_.isEmpty(tableData2) ? tableData2[0].style_desc.toString() : null;\n\n    if (!sellThroughVal.includes('%')) {\n      var editedValue = editedsellThroughVal && (index < 4 ? numeral(tableData2[index].style_desc).format('0.00') : numeral(tableData2[index].style_desc).format('0,0'));\n      styleDescEdited = editedsellThroughVal && (tableData2[index].style_id.includes('%') ? \"\".concat(editedValue, \"%\") : tableData2[index].style_id.includes('$') ? \"$\".concat(editedValue) : editedValue);\n    }\n\n    return React.createElement(\"td\", {\n      className: \"cellData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, styleDescEdited); // return <td className=\"cellData\">{tableData2[index].style_desc}</td>;\n  }) : null) : null) : React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, getHeader()), tableData.length && tableData.length > 0 ? tableData.map(function (cell, index) {\n    var styleDesc = cell.style_desc;\n    var styleDescEdited = isEdit && !_.isEmpty(tableData2) ? tableData2[index].style_desc : null;\n    var sellThroughVal = tableData[0].style_desc.toString();\n    var editedsellThroughVal = isEdit && !_.isEmpty(tableData2) ? tableData2[0].style_desc.toString() : null;\n\n    if (!sellThroughVal.includes('%')) {\n      var value = index < 4 ? numeral(cell.style_desc).format('0.00') : numeral(cell.style_desc).format('0,0');\n      var editedValue = editedsellThroughVal && (index < 4 ? numeral(tableData2[index].style_desc).format('0.00') : numeral(tableData2[index].style_desc).format('0,0'));\n      styleDesc = cell.style_id.includes('%') ? \"\".concat(value, \"%\") : cell.style_id.includes('$') ? \"$\".concat(value) : value;\n      styleDescEdited = editedsellThroughVal && (tableData2[index].style_id.includes('%') ? \"\".concat(editedValue, \"%\") : tableData2[index].style_id.includes('$') ? \"$\".concat(editedValue) : editedValue);\n    }\n\n    return React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"cellAlign\",\n      style: {\n        backgroundColor: '#e8eef2'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, cell.style_id), React.createElement(\"td\", {\n      className: \"cellData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, styleDesc), isEdit && !_.isEmpty(tableData2) ? React.createElement(\"td\", {\n      className: \"cellData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, styleDescEdited) : null);\n  }) : React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    colSpan: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Loading...\"))))));\n};\n\nexport default AnalysisTable;\nvar Styles = styled.table(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/MarkdownAnalysis/AnalysisTable.js"],"names":["React","styled","_","numeral","AnalysisTable","tableData","tableData2","isEdit","editFrom","getHeader","isEmpty","headers","console","log","map","header","index","backgroundColor","display","justifyContent","length","cell","style_id","styleDesc","style_desc","sellThroughVal","toString","includes","value","format","styleDescEdited","editedsellThroughVal","editedValue","Styles","table"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport numeral from 'numeral';\n\nconst AnalysisTable = ({ tableData, tableData2, isEdit, editFrom }) => {\n  tableData = tableData || [];\n  tableData2 = tableData2 || [];\n  const getHeader = () => {\n    if (isEdit && !_.isEmpty(tableData2)) {\n      let headers = ['', 'Previous', 'Edited'];\n      console.log(headers, 'headers');\n      return headers.map((header, index) => {\n        return (\n          <th key={index} style={{ backgroundColor: '#e8eef2' }}>\n            {header}\n          </th>\n        );\n      });\n    }\n  };\n\n  return (\n    <Styles>\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <table>\n          {editFrom && editFrom !== 'notEditModal' ? ( // horizontal table for edit popup\n            <tbody>\n              <tr>\n                {isEdit && !_.isEmpty(tableData) && !_.isEmpty(tableData2) && (\n                  <th className=\"cellAlign\" style={{ backgroundColor: '#e8eef2' }} />\n                )}\n                {tableData.length && tableData.length > 0\n                  ? tableData.map((cell, index) => {\n                      return (\n                        <th className=\"cellAlign\" style={{ backgroundColor: '#e8eef2' }}>\n                          {cell.style_id}\n                        </th>\n                      );\n                    })\n                  : null}\n              </tr>\n              <tr>\n                {isEdit && !_.isEmpty(tableData) && !_.isEmpty(tableData2) && (\n                  <td className=\"cellData\">Previous</td>\n                )}\n                {tableData.length && tableData.length > 0\n                  ? tableData.map((cell, index) => {\n                      let styleDesc = cell.style_desc;\n                      let sellThroughVal = tableData[0].style_desc.toString();\n                      if (!sellThroughVal.includes('%')) {\n                        let value =\n                          index < 4\n                            ? numeral(cell.style_desc).format('0.00')\n                            : numeral(cell.style_desc).format('0,0');\n                        styleDesc = cell.style_id.includes('%')\n                          ? `${value}%`\n                          : cell.style_id.includes('$')\n                          ? `$${value}`\n                          : value;\n                      }\n                      return <td className=\"cellData\">{styleDesc}</td>;\n                    })\n                  : null}\n                {/* <td colSpan=\"5\">No data found</td> */}\n              </tr>\n              {isEdit && !_.isEmpty(tableData2) ? (\n                <tr>\n                  {isEdit && !_.isEmpty(tableData) && !_.isEmpty(tableData2) && (\n                    <td className=\"cellData\">Edited</td>\n                  )}\n                  {tableData.length && tableData.length > 0\n                    ? tableData.map((cell, index) => {\n                        let styleDescEdited =\n                          isEdit && !_.isEmpty(tableData2) ? tableData2[index].style_desc : null;\n                        let sellThroughVal = tableData[0].style_desc.toString();\n                        let editedsellThroughVal =\n                          isEdit && !_.isEmpty(tableData2)\n                            ? tableData2[0].style_desc.toString()\n                            : null;\n                        if (!sellThroughVal.includes('%')) {\n                          let editedValue =\n                            editedsellThroughVal &&\n                            (index < 4\n                              ? numeral(tableData2[index].style_desc).format('0.00')\n                              : numeral(tableData2[index].style_desc).format('0,0'));\n\n                          styleDescEdited =\n                            editedsellThroughVal &&\n                            (tableData2[index].style_id.includes('%')\n                              ? `${editedValue}%`\n                              : tableData2[index].style_id.includes('$')\n                              ? `$${editedValue}`\n                              : editedValue);\n                        }\n                        return <td className=\"cellData\">{styleDescEdited}</td>;\n\n                        // return <td className=\"cellData\">{tableData2[index].style_desc}</td>;\n                      })\n                    : null}\n                </tr>\n              ) : null}\n            </tbody>\n          ) : (\n            <tbody>\n              <tr>{getHeader()}</tr>\n              {tableData.length && tableData.length > 0 ? (\n                tableData.map((cell, index) => {\n                  let styleDesc = cell.style_desc;\n                  let styleDescEdited =\n                    isEdit && !_.isEmpty(tableData2) ? tableData2[index].style_desc : null;\n\n                  let sellThroughVal = tableData[0].style_desc.toString();\n                  let editedsellThroughVal =\n                    isEdit && !_.isEmpty(tableData2) ? tableData2[0].style_desc.toString() : null;\n\n                  if (!sellThroughVal.includes('%')) {\n                    let value =\n                      index < 4\n                        ? numeral(cell.style_desc).format('0.00')\n                        : numeral(cell.style_desc).format('0,0');\n\n                    let editedValue =\n                      editedsellThroughVal &&\n                      (index < 4\n                        ? numeral(tableData2[index].style_desc).format('0.00')\n                        : numeral(tableData2[index].style_desc).format('0,0'));\n\n                    styleDesc = cell.style_id.includes('%')\n                      ? `${value}%`\n                      : cell.style_id.includes('$')\n                      ? `$${value}`\n                      : value;\n\n                    styleDescEdited =\n                      editedsellThroughVal &&\n                      (tableData2[index].style_id.includes('%')\n                        ? `${editedValue}%`\n                        : tableData2[index].style_id.includes('$')\n                        ? `$${editedValue}`\n                        : editedValue);\n                  }\n\n                  return (\n                    <tr key={index}>\n                      <td className=\"cellAlign\" style={{ backgroundColor: '#e8eef2' }}>\n                        {cell.style_id}\n                      </td>\n                      <td className=\"cellData\">{styleDesc}</td>\n                      {isEdit && !_.isEmpty(tableData2) ? (\n                        <td className=\"cellData\">{styleDescEdited}</td>\n                      ) : null}\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td colSpan=\"5\">Loading...</td>\n                </tr>\n              )}\n            </tbody>\n          )}\n        </table>\n      </div>\n    </Styles>\n  );\n};\n\nexport default AnalysisTable;\n\nconst Styles = styled.table`\n  font-family: arial, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n\n  td,\n  th {\n    border: 1px solid #dddddd;\n    text-align: center;\n    padding: 8px;\n  }\n  tr {\n    font-size: 15px;\n    line-height: 4rem;\n    font-size: 15px;\n    color: #3c4148;\n    font-weight: 500;\n    // background-color: #e8eef2;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}