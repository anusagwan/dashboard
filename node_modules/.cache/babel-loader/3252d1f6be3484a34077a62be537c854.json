{"ast":null,"code":"import _regeneratorRuntime from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Content/BudgePlanning.js\";\nimport React, { Component } from \"react\"; // import { render } from \"react-dom\";\n\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Button } from \"react-bootstrap\";\nimport tableData from \"../../shared/data.json\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\"; // import cellRenderers from \"./cellRenderers\";\n\nimport LineChart from \"../Charts/LineCharts\";\nimport \"./budgePlanning.css\";\nimport Select from \"react-select\";\nimport \"../Content/Promotions/promotionstyling.css\";\nimport \"../Content/Promotions/PromoCalendar/promotionstyling.css\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport Toggle from \"react-toggle\";\nimport \"react-toggle/style.css\";\nimport { getBudgetData, getBudgetCalendarData, getBudgetGraphData, postBudgetEdit } from \"../../actions/budgetPlanningAction\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport moment from \"moment\";\nimport PageLoader from \"../../utils/Loader\";\nimport _ from 'lodash';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nvar ranges = [{\n  divider: 1e9,\n  suffix: \"B\"\n}, {\n  divider: 1e6,\n  suffix: \"M\"\n}, {\n  divider: 1e3,\n  suffix: \"k\"\n}];\nvar budgetDataPayload = {\n  Years: \"2020\",\n  category: \"Boys Ethnic Wear\"\n}; // const vendorOptions = [\n//   {value: 1, label: 'POPCHIPS INC'},\n//   {value: 2, label: 'CLABBER GIRL CORP'},\n//   {value: 3, label: 'DOMINO SUGAR CORP'},\n//   {value: 4, label: 'EAGLE FAMILY FOODS GROUP LLC'},\n//   {value: 5, label: 'QUAKER OATS CO'},\n//   {value: 6, label: 'MAYA KAIMAL FINE INDIAN FOODS LLC'}, \n// ];\n\nvar vendorOptions = [{\n  value: 1,\n  label: \"Jack's Winter Wear\"\n}, {\n  value: 2,\n  label: 'Jade SuperSports'\n}, {\n  value: 3,\n  label: 'PopColor Inc'\n}, {\n  value: 4,\n  label: 'Truwear Limited'\n}, {\n  value: 5,\n  label: 'Allnew Inc'\n}, {\n  value: 6,\n  label: 'Neighbourhood Friendly Inc.'\n}];\n\nfunction formatNumber(n) {\n  for (var i = 0; i < ranges.length; i++) {\n    if (Math.abs(n) >= ranges[i].divider) {\n      var newNumber = (n / ranges[i].divider).toFixed(2);\n      return newNumber.toString() + ranges[i].suffix;\n    }\n  }\n\n  return n;\n}\n\nfunction emptyValueFormatter(value) {\n  if (value.value) {\n    var toSting = Math.round(value.value);\n\n    if (value.value > 0) {\n      return toSting.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    } else {\n      var splitAvalue = Math.abs(toSting);\n      return \"(\" + splitAvalue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \")\";\n    }\n  } else {\n    if (value.value == 0) {\n      return 0;\n    } else {\n      return \"-\";\n    }\n  }\n}\n\nvar numberWithCommas = function numberWithCommas(x) {\n  if (Number.isInteger(x)) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  } else {\n    return Number.parseFloat(x).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n};\n\nvar BudgePlanning =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BudgePlanning, _Component);\n\n  function BudgePlanning(props) {\n    var _this;\n\n    _classCallCheck(this, BudgePlanning);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BudgePlanning).call(this, props));\n    _this.budgetData = [];\n\n    _this.callBudgetDataApi = function () {\n      console.log('callBUdget api hit');\n      var payload = {\n        Years: \"2020\",\n        category: \"Boys Ethnic Wear\"\n      };\n\n      _this.props.getBudgetData(payload);\n\n      _this.props.getBudgetCalendarData(payload);\n\n      _this.props.getBudgetGraphData(payload);\n    };\n\n    _this.onGridReady = function (params) {\n      _this.gridApi = params.api;\n      _this.gridColumnApi = params.columnApi;\n\n      _this.gridApi.sizeColumnsToFit();\n    };\n\n    _this.handleFirstDataRendered = function (event) {\n      _this.props.sizeToFit ? event.api.sizeColumnsToFit() : event.columnApi.autoSizeAllColumns();\n    };\n\n    _this.gridSizeChanged = function (event) {\n      _this.props.sizeToFit ? event.api.sizeColumnsToFit() : event.columnApi.autoSizeAllColumns();\n    };\n\n    _this.toggleMonthQuarter = function (val) {\n      if (_this.state.selectedView != val) {\n        _this.setState({\n          selectedView: val\n        });\n      }\n    };\n\n    _this.TYLYToggleHandler = function () {\n      _this.setState({\n        toggleLYSelected: !_this.state.toggleLYSelected\n      });\n    };\n\n    _this.vendorSelected = function (value) {\n      var selectedValue = value.value;\n\n      _this.setState({\n        selectedVendorVal: value\n      });\n    };\n\n    _this.categorySelected = function (value) {\n      var selectedValue = value.value;\n      /* let payload = {\n        category: selectedValue\n      }; */\n\n      _this.setState({\n        selectedCategoryVal: value\n      }); // this.props.getBudgetData(payload);\n      // this.props.getBudgetCalendarData(payload);\n      // this.props.getBudgetGraphData(payload);\n\n    };\n\n    _this.yearSelected = function (value) {\n      var selectedValue = value.value;\n      /* let payload = {\n        Years: selectedValue\n      }; */\n\n      _this.setState({\n        selectedYearVal: value\n      }); // this.props.getBudgetData(payload);\n      // this.props.getBudgetCalendarData(payload);\n      // this.props.getBudgetGraphData(payload);\n\n    };\n\n    _this.onAllocateBudget = function () {\n      var payload = {\n        category: _this.state.selectedCategoryVal.value,\n        Years: _this.state.selectedYearVal.value\n      };\n      console.log('aksdjfkqeakli/s', _this.state.selectedCategoryVal, _this.state.selectedYearVal);\n\n      if (payload.category && payload.Years) {\n        _this.props.getBudgetData(payload);\n\n        _this.props.getBudgetCalendarData(payload);\n\n        _this.props.getBudgetGraphData(payload);\n      }\n    };\n\n    _this.redirectToCalendar = function (data) {\n      console.log('what is date', data);\n      var timeMonth = moment((!_.isEmpty(_this.state.selectedYearVal) ? String(_this.state.selectedYearVal.value) : '2020') + String(' ' + data.months + ' 01')).format(); //debugger\n\n      var startDate = moment([data.year, data.months - 1]).format('YYYY-MM-DD');\n      var endDate = moment(startDate).endOf('month').format('YYYY-MM-DD');\n      console.log('asfdjjdsjygfhaskldjfuyewvfjjashdfluagvsdc', data, moment([data.year, data.months - 1]).format('YYYY-MM-DD'));\n      localStorage.setItem(\"calendarData\", JSON.stringify({\n        startDate: startDate,\n        endDate: endDate,\n        fiscalMonth: data.months - 1 // quarter: this.state.historyQuarter\n\n      })); // localStorage.setItem('startDate', startDate)\n      // localStorage.setItem('endDate', endDate)\n      // localStorage.setItem(\"fiscalMonth\", data.months - 1)\n\n      _this.props.history.push(\"/vis/Promo?populateMonth=true&timeMonth=\".concat(timeMonth));\n    };\n\n    _this.changeBudgetData = function (_ref) {\n      var months = _ref.months,\n          planned = _ref.planned;\n      console.log('change budget data called');\n\n      var updateBudgetData = _.cloneDeep(_this.budgetData);\n\n      updateBudgetData = _.filter(updateBudgetData, function (budget) {\n        return budget.month !== months;\n      });\n      updateBudgetData.push({\n        month: months,\n        planned: planned\n      });\n      _this.budgetData = updateBudgetData;\n      console.log('ljfoiasjdfhasld', updateBudgetData, _this.budgetData);\n    };\n\n    _this.saveBudgetDataChangedHandler =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var budgetData, budgetEditPayload;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              budgetData = _this.budgetData.map(function (budget) {\n                return {\n                  month: moment().month(budget.month).format(\"M\"),\n                  planned: budget.planned\n                };\n              });\n              budgetEditPayload = {\n                Years: _this.state.selectedYearVal.value ? _this.state.selectedYearVal.value : '2020',\n                category: _this.state.selectedCategoryVal.value ? _this.state.selectedCategoryVal.value : 'Boys Ethnic Wear',\n                budgetData: budgetData\n              }; // hardcoded data for budgetData, budgetGraphData and budgetCardData\n              // const budgetDataPayload = {\n              //     Years: \"2019\",\n              //     category: \"Cotton Shop\"\n              // };\n\n              if (!_.isEmpty(budgetData)) {\n                _context.next = 5;\n                break;\n              }\n\n              toast.error(\"No change in allocation amount\");\n              return _context.abrupt(\"return\");\n\n            case 5:\n              try {\n                _this.props.postBudgetEdit({\n                  budgetEditPayload: budgetEditPayload,\n                  budgetDataPayload: budgetDataPayload\n                });\n              } catch (err) {\n                console.log('Update budget data failed');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.state = {\n      options: {\n        dragData: true,\n        onDragEnd: function onDragEnd(e, datasetIndex, index, value) {}\n      },\n      data: {\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n        datasets: [{\n          label: \"Planned\",\n          data: [90, 70, 80, 75, 50, 55, 40],\n          // backgroundColor: \"#A6CEE3\",\n          borderColor: \"#A6CEE3\"\n        }, {\n          label: \"Actual\",\n          data: [100, 59, 30, 58, 56, 55, 20],\n          // backgroundColor: \"#44677B\",\n          borderColor: \"#44677B\"\n        }, {\n          label: \"Recommended\",\n          data: [65, 59, 80, 71, 36, 55, 40],\n          // backgroundColor: \"#F7E3E3\",\n          borderColor: \"#F7E3E3\"\n        }]\n      },\n      toggleLYSelected: false,\n      selectedView: \"Year\",\n      selectedCategoryVal: {\n        value: \"Boys Ethnic Wear\",\n        label: \"Boys Ethnic Wear\"\n      },\n      selectedYearVal: {\n        value: 2020,\n        label: 2020\n      },\n      previousBudget: _this.props.budgetGraphData.totlAllo,\n      defaultColDef: {\n        // editable: true,\n        resizable: true\n      }\n    };\n    return _this;\n  }\n\n  _createClass(BudgePlanning, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.callBudgetDataApi();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dragOptions = {\n        dragData: true,\n        onDragEnd: function onDragEnd(e, datasetIndex, index, value) {}\n      };\n      this.setState({\n        options: dragOptions\n      });\n    }\n  }, {\n    key: \"MedalCellRenderer\",\n    value: function MedalCellRenderer() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var that = this;\n\n      if (this.props.budgetGraphData && this.props.budgetGraphData.totlAllo && this.props.budgetGraphData.totlAllo != 0) {\n        localStorage.setItem('prevData', this.props.budgetGraphData.totlAllo);\n      }\n\n      var budgetDataTable = {\n        data: this.props.budgetPlanningData.data != undefined && this.props.budgetPlanningData.data.length > 0 ? this.props.budgetPlanningData.data.map(function (tabledata) {\n          return {\n            months: moment().month(tabledata.months - 1).format(\"MMMM\"),\n            actual: tabledata.actual != null ? tabledata.actual : tabledata.recommend,\n            planned: tabledata.planned,\n            roi: tabledata.roia != null ? Math.round(tabledata.roia) : Math.round(tabledata.roir),\n            roip: Math.round(tabledata.roip),\n            button: tabledata.button\n          };\n        }) : []\n      };\n      var colHeaders = {\n        headers: [{\n          headerName: \"Months\",\n          field: \"months\",\n          suppressMovable: true\n        }, {\n          headerName: \"Actual/Recommended\",\n          children: [{\n            headerName: \"($)\",\n            field: \"actual\",\n            suppressMovable: true,\n            valueFormatter: emptyValueFormatter,\n            cellStyle: function cellStyle(params) {\n              if (params.data[\"actual\"] >= 10000) {\n                return {\n                  \"background-color\": \"#BCE5E6\",\n                  color: \"#535353\"\n                };\n              } else if (params.data && params.data[\"actual\"] <= 10000 && params.data[\"actual\"] > 0) {\n                return {\n                  \"background-color\": \"#F3F3F3\",\n                  color: \"#535353\"\n                };\n              }\n            }\n          }, {\n            headerName: \"ROI(%)\",\n            field: \"roi\",\n            suppressMovable: true,\n            sortable: true,\n            valueFormatter: emptyValueFormatter,\n            cellStyle: function cellStyle(params) {\n              if (params.data[\"roi\"] >= 8) {\n                return {\n                  \"background-color\": \"#DCE4F4\",\n                  color: \"#535353\"\n                };\n              } else {\n                return {\n                  \"background-color\": \"#F7E2E2\",\n                  color: \"#535353\"\n                };\n              }\n            }\n          }]\n        }, {\n          headerName: \"Planned\",\n          children: [{\n            headerName: \"($)\",\n            field: \"planned\",\n            suppressMovable: true,\n            valueFormatter: emptyValueFormatter,\n            onCellValueChanged: function onCellValueChanged(params) {\n              console.log('ajfkasjnd', params);\n\n              _this2.changeBudgetData(params.data);\n            },\n            editable: function editable(params) {\n              console.log(\"param\", params.data);\n              return params.data.button === true;\n            },\n            cellRenderer: function cellRenderer(params) {\n              console.log(\"get index\", params);\n\n              if (params.data.button === true) {\n                return \"<span>\" + numberWithCommas(params.data.planned) + ' &nbsp; <i class=\"fa fa-pencil-square-o\"></i></span>';\n              } else {\n                return numberWithCommas(params.data.planned);\n              }\n            },\n            sortable: true\n          }, {\n            headerName: \"ROI(%)\",\n            field: \"roip\",\n            suppressMovable: true,\n            valueFormatter: emptyValueFormatter,\n            cellStyle: function cellStyle(params) {\n              if (params.data[\"roip\"] >= 8) {\n                return {\n                  \"background-color\": \"#DCE4F4\",\n                  color: \"#535353\"\n                };\n              } else {\n                return {\n                  \"background-color\": \"#F7E2E2\",\n                  color: \"#535353\"\n                };\n              }\n            }\n          }]\n        }, {\n          headerName: \"Change Over Last Year\",\n          children: [{\n            headerName: \"ROI(%)\",\n            field: \"LYpoi\",\n            suppressMovable: true,\n            valueFormatter: emptyValueFormatter,\n            cellStyle: function cellStyle(params) {\n              if (params.data[\"LYpoi\"] >= 5) {\n                return {\n                  \"background-color\": \"#DCE4F4\",\n                  color: \"#535353\"\n                };\n              } else if (params.data && params.data[\"LYpoi\"] <= 5 && params.data[\"LYpoi\"] > 0) {\n                return {\n                  \"background-color\": \"#F7E2E2\",\n                  color: \"#535353\"\n                };\n              }\n            }\n          }]\n        }, {\n          headerName: \"Calendar\",\n          field: \"action\",\n          suppressMovable: true,\n          cellRenderer: \"medalCellRenderer\"\n        }],\n        rowData: budgetDataTable.data,\n        headerStyle: {\n          \"background-color\": \"#E7EEF3\"\n        }\n      };\n      var calenderBox = []; // let tableData = [];\n\n      console.log(\"inside props,\", this.props.budgetGraphData);\n\n      if (this.props.budgetCalendarData.data && this.props.budgetCalendarData.data.length > 0) {\n        this.props.budgetCalendarData.data.map(function (data, i) {\n          /* Object.values(this.props.budgetCalendarData.chaneOverLY).map(changeLYdata => { */\n          var changeLYdata = _this2.props.budgetCalendarData.chaneOverLY[i + 1];\n          calenderBox.push(React.createElement(\"div\", {\n            className: \"col-md-3 calenderDataBox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 493\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card monthsBox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 494\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"budgetMonths\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 495\n            },\n            __self: this\n          }, moment().month(data.months - 1).format(\"MMMM\")), React.createElement(\"div\", {\n            className: \"budgetDatabox\",\n            style: {\n              backgroundColor: data.prep == 0 ? \"#EBEBEB\" : data.prep >= 1 && data.prep <= 5 ? \"#B9CCD6\" : data.prep > 5 && data.prep <= 10 ? \"#86a2b3\" : data.prep > 10 && data.prep <= 15 ? \"#6F8A99\" : data.prep > 15 && data.prep <= 20 ? \"#4E6A78\" : data.prep > 20 ? \"#2D4B5B\" : \"#EBEBEB\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 500\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 519\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col-md-6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 520\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"plannedBudget\",\n            style: {\n              color: data.prep > 5 ? \"#fff\" : \"#232222\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 521\n            },\n            __self: this\n          }, data.year === 2020 && data.months >= 1 && data.months <= 8 ? 'Recommended' : 'Planned'), React.createElement(\"p\", {\n            className: \"plannedBudgetData\",\n            style: {\n              color: data.prep > 5 ? \"#fff\" : \"#232222\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 533\n            },\n            __self: this\n          }, \"$\" + formatNumber(data.planned) + \" \" + \"(\" + Math.round(data.prep) + \"%\" + \")\")), React.createElement(\"div\", {\n            className: \"col-md-6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 548\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"plannedBudget\",\n            style: {\n              color: data.prep > 5 ? \"#fff\" : \"#232222\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 549\n            },\n            __self: this\n          }, \"Change over LY\"), React.createElement(\"p\", {\n            className: \"plannedBudgetData\",\n            style: {\n              color: data.prep > 5 ? \"#fff\" : \"#232222\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 557\n            },\n            __self: this\n          }, Math.round(changeLYdata) + \"%\"))), React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 567\n            },\n            __self: this\n          }, data.actual !== null ? React.createElement(\"div\", {\n            className: \"col-md-6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 569\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"plannedBudget\",\n            style: {\n              color: data.prep > 5 ? \"#fff\" : \"#232222\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 570\n            },\n            __self: this\n          }, \"Actual\"), React.createElement(\"p\", {\n            className: \"plannedBudgetData\",\n            style: {\n              color: data.prep > 5 ? \"#fff\" : \"#232222\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 578\n            },\n            __self: this\n          }, \"$\" + formatNumber(data.actual) + \" \" + \"(\" + Math.round(data.prea) + \"%\" + \")\")) : React.createElement(\"div\", {\n            className: \"col-md-6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 594\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"plannedBudget\",\n            style: {\n              color: data.prep > 5 ? \"#fff\" : \"#232222\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 595\n            },\n            __self: this\n          }, \"Recommended\"), React.createElement(\"p\", {\n            className: \"plannedBudgetData\",\n            style: {\n              color: data.prep > 5 ? \"#fff\" : \"#232222\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 603\n            },\n            __self: this\n          }, \"$\" + formatNumber(data.recommend) + \" \" + \"(\" + Math.round(data.prer) + \"%\" + \")\")), React.createElement(\"div\", {\n            className: \"col-md-6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 620\n            },\n            __self: this\n          }, data.button ? React.createElement(\"button\", {\n            style: {\n              marginTop: \"14px\"\n            },\n            type: \"button\",\n            class: \"btn btn-default palnnedButton\",\n            onClick: function onClick() {\n              _this2.redirectToCalendar(data);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 623\n            },\n            __self: this\n          }, \"Planned Promos \", React.createElement(\"i\", {\n            class: \"fa fa-fa-chevron-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 631\n            },\n            __self: this\n          })) : \"\"))))));\n        }); // });\n      }\n\n      this.MedalCellRenderer.prototype.init = function (params) {\n        // console.log(\"param\", params.data);\n        this.eGui = document.createElement(\"i\");\n        this.eGui.classList.add(\"fa\", \"fa-chevron-right\");\n        this.eGui.style.color = params.data.button == false ? \"grey\" : \"#44677B\";\n        this.eGui.style.fontSize = \"1rem\";\n        this.eGui.style.cursor = \"pointer\";\n        this.eGui.style.pointerEvents = params.data.button == false ? \"none\" : \"auto\";\n\n        this.eGui.onclick = function () {\n          // console.log(\"param:\", params,that);\n          // console.log(\"selectedYearVal:\",that.state.selectedYearVal.value || 2019)\n          // console.log('months:',params.data.months)\n          var timeMonth = moment(params.data.months + ' ' + (!_.isEmpty(that.state.selectedYearVal) ? String(that.state.selectedYearVal.value) : '2020')).format(); //debugger\n\n          console.log(\"onclick on arrow\", timeMonth, params);\n          var year = !_.isEmpty(that.state.selectedYearVal) ? that.state.selectedYearVal.value : 2020;\n          console.log('yeardkashfjsadgfjasd', year, moment([year, moment().month(params.data.months).format('M') - 1]).format('YYYY-MM-DD')); //let timeMonth = moment( (params.data.months)+' '+ (!_.isEmpty(that.state.selectedYearVal) ? String(that.state.selectedYearVal.value) : '2019')).format()\n\n          var startDate = moment([year, moment().month(params.data.months).format('M') - 1]).format('YYYY-MM-DD');\n          var endDate = moment(startDate).endOf('month').format('YYYY-MM-DD');\n          localStorage.setItem(\"calendarData\", JSON.stringify({\n            startDate: startDate,\n            endDate: endDate,\n            fiscalMonth: moment().month(params.data.months).format('M') - 1 // quarter: this.state.historyQuarter\n\n          })); // localStorage.setItem('startDate', startDate);\n          // localStorage.setItem('endDate', endDate);\n          // localStorage.setItem(\"fiscalMonth\", moment().month(params.data.months).format('M') - 1)\n\n          that.props.history.push(\"/vis/Promo?populateMonth=true&timeMonth=\".concat(timeMonth));\n        };\n      };\n\n      this.MedalCellRenderer.prototype.getGui = function () {\n        return this.eGui;\n      }; //graph data\n\n\n      if (this.props.budgetGraphData && Object.keys(this.props.budgetGraphData).length > 0) {\n        //code for line chart\n        var chartData = this.props.budgetGraphData;\n        var labelsData = chartData.months ? chartData.months : [];\n        var object = chartData.data;\n        var labels = [];\n        console.log('sakndfkjsabkdfj', labelsData, chartData, chartData.months);\n\n        if (chartData) {\n          labelsData.map(function (label) {\n            labels.push(moment().month(label - 1).format(\"MMMM\"));\n          });\n        }\n\n        var colors = [];\n        colors.push({\n          backgroundColor: \"#44677b\"\n        });\n        colors.push({\n          backgroundColor: \"#bcbcbc\"\n        });\n        colors.push({\n          backgroundColor: \"#a6cee3\"\n        });\n        var datasets = [];\n\n        for (var key in object) {\n          var index = Object.keys(object).indexOf(key);\n          datasets.push({\n            label: key,\n            data: object[key].map(function (val) {\n              return val > 0 ? val : null;\n            }),\n            backgroundColor: colors[index % 3].backgroundColor,\n            borderColor: colors[index % 3].backgroundColor\n          });\n        }\n\n        console.log('skdfkasjgdkfjadsf', datasets);\n        var lineOption = {\n          // legend: {\n          //     display: true,\n          //     position: 'bottom',\n          //     labels: {\n          //         fontSize: 10,\n          //     }\n          // },\n          tooltips: {\n            intersect: true,\n            callbacks: {\n              label: function label(tooltipItem, data) {\n                var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n                if (label) {\n                  label += ': ';\n                }\n\n                var no = tooltipItem.yLabel;\n\n                if (parseFloat(tooltipItem.yLabel) / 1000000 >= 1) {\n                  //add m\n                  no = parseFloat(tooltipItem.yLabel / 1000000).toFixed(2) + 'M';\n                } else if (parseFloat(tooltipItem.yLabel) / 1000 >= 1) {\n                  //add k\n                  no = (parseFloat(tooltipItem.yLabel) / 1000).toFixed(2) + 'K';\n                }\n\n                label += '$' + no;\n                return label;\n              }\n            }\n          },\n          options: {\n            spanGaps: false\n          },\n          scaleShowVerticalLines: false,\n          hover: {\n            intersect: false\n          },\n          elements: {\n            line: {\n              tension: 0,\n              fill: false\n            },\n            point: {\n              radius: 0\n            }\n          },\n          plugins: {\n            datalabels: {\n              display: false\n            }\n          },\n          scales: {\n            xAxes: [{\n              barPercentage: 1.0,\n              scaleLabel: {\n                display: true,\n                // labelString: lineDatajson.x_label,\n                fontStyle: \"bold\"\n              },\n              gridLines: {\n                display: false\n              },\n              ticks: {\n                autoSkip: true,\n                maxTicksLimit: 15,\n                fontSize: 10,\n                opacity: 0.7,\n                callback: function callback(value, index, values) {\n                  if (value === 0) {\n                    return null;\n                  }\n\n                  if (value.length >= 12) {\n                    return value.substr(0, 5) + \"...\" + value.substr(value.length - 5, 0);\n                  } else {\n                    return value;\n                  }\n                }\n              }\n            }],\n            yAxes: [{\n              offset: true,\n              gridLines: {\n                display: true\n              },\n              scaleLabel: {\n                display: true,\n                // labelString: lineDatajson.y_label,\n                fontStyle: \"bold\",\n                fontSize: 10\n              },\n              ticks: {\n                // beginAtZero: false,\n                // min: 1,\n                callback: function callback(value) {\n                  var ranges = [{\n                    divider: 1e9,\n                    suffix: \"B\"\n                  }, {\n                    divider: 1e6,\n                    suffix: \"M\"\n                  }, {\n                    divider: 1e3,\n                    suffix: \"k\"\n                  }];\n\n                  function formatNumber(n) {\n                    for (var i = 0; i < ranges.length; i++) {\n                      if (n >= ranges[i].divider) {\n                        return (n / ranges[i].divider).toString() + ranges[i].suffix;\n                      }\n                    }\n\n                    return n;\n                  }\n\n                  return \"$\" + formatNumber(value);\n                }\n              }\n            }]\n          },\n          legend: {\n            display: true,\n            position: \"bottom\",\n            labels: {\n              boxWidth: 12\n            },\n            fontFamily: \"poppins\",\n            fontSize: \"12px\"\n          },\n          responsive: true,\n          maintainAspectRatio: true\n        };\n        var lineData = {\n          labels: labels,\n          datasets: datasets\n        }; //code for pie chart\n\n        var pieLabels = [];\n        console.log(\"dta for line\", chartData.alloted, chartData.avallable);\n        pieLabels.push(Math.round(chartData.avallable));\n        pieLabels.push(Math.round(chartData.alloted));\n        var pieOptions = {\n          tooltips: {\n            callbacks: {\n              label: function label(tooltipItem, data) {\n                //get the concerned dataset\n                var dataset = data.datasets[tooltipItem.datasetIndex]; //calculate the total of this data set\n\n                var total = dataset.data.reduce(function (previousValue, currentValue, currentIndex, array) {\n                  return previousValue + currentValue;\n                }); //get the current items value\n\n                var currentValue = dataset.data[tooltipItem.index]; //calculate the precentage based on the total and current item, also this does a rough rounding to give a whole number\n\n                var percentage = Math.floor(currentValue / total * 100 + 0.5);\n                return percentage + \"%\";\n              }\n            }\n          },\n          cutoutPercentage: 80,\n          plugins: {\n            datalabels: {\n              display: false,\n              //  display: false,\n              color: \"#303030\",\n              font: {\n                size: 12,\n                weight: 600\n              }\n            }\n          },\n          stacked: true,\n          maintainAspectRatio: true,\n          responsive: true,\n          legend: {\n            position: \"right\",\n            labels: {\n              boxWidth: 10,\n              usePointStyle: true,\n              fontSize: 15\n            }\n          }\n        };\n        var pieData = {\n          labels: [pieLabels[0] + \"% \" + \"Available\", pieLabels[1] + \"% \" + \"Allotted\"],\n          datasets: [{\n            data: pieLabels,\n            backgroundColor: [\"#7b8eca\", \"#C19AB7\"],\n            hoverBackgroundColor: [\"#7b8eca\", \"#C19AB7\"]\n          }]\n        };\n      }\n\n      var yearArray = [2019, 2020, 2021];\n      var Category = [\"Boys Ethnic Wear\", \"Boys TShirts\"];\n      var years = []; // let VendorData = [\"POPCHIPS INC\",\"CLABBER GIRL CORP\",\"DOMINO SUGAR CORP\",\"EAGLE FAMILY FOODS GROUP LLC\",\"QUAKER OATS CO\",\"MAYA KAIMAL FINE INDIAN FOODS LLC\"];\n\n      var VendorData = [\"Jack's Winter Wear\", \"Jade SuperSports\", \"PopColor Inc\", \"Truwear Limited\", \"Allnew Inc\", \"Neighbourhood Friendly Inc.\"];\n      var CategoryArray = [];\n      Category.map(function (filterData) {\n        CategoryArray.push({\n          value: filterData,\n          label: filterData\n        });\n      });\n      yearArray.map(function (yearsData) {\n        years.push({\n          value: yearsData,\n          label: yearsData\n        });\n      });\n      var vendors = [];\n      VendorData.map(function (vendorsList) {\n        vendors.push({\n          value: vendorsList,\n          label: vendorsList\n        });\n      });\n      return React.createElement(PageLoader, {\n        loader: this.props.loader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 971\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"subcontent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 972\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card budgetSubContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 973\n        },\n        __self: this\n      }, React.createElement(ToastContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 974\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        className: \"BudgetHeading mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 975\n        },\n        __self: this\n      }, \"Promotion Planning / \", React.createElement(\"span\", {\n        className: \"heading-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 976\n        },\n        __self: this\n      }, \"Budget Allocation\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 978\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row  budget-label-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 979\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 SelectRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 981\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 982\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 983\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"budget-labels\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 984\n        },\n        __self: this\n      }, \"Department\"), React.createElement(Select, {\n        class: \"form-control catagorySelect\",\n        placeholder: \"Category\",\n        options: CategoryArray,\n        onChange: function onChange(value) {\n          return _this2.categorySelected(value);\n        },\n        value: !_.isEmpty(this.state.selectedCategoryVal) ? this.state.selectedCategoryVal : CategoryArray[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 985\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 995\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"budget-labels\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 997\n        },\n        __self: this\n      }, \"Year\"), React.createElement(Select, {\n        class: \"form-control catagorySelect\",\n        placeholder: \"Year\",\n        options: years,\n        onChange: function onChange(value) {\n          return _this2.yearSelected(value);\n        },\n        value: !_.isEmpty(this.state.selectedYearVal) ? this.state.selectedYearVal : {\n          value: 2020,\n          label: 2020\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 998\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1008\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"budget-labels\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1009\n        },\n        __self: this\n      }, \"Vendor\"), React.createElement(Select, {\n        class: \"form-control catagorySelect\",\n        placeholder: \"Vendor\",\n        options: vendorOptions,\n        onChange: function onChange(value) {\n          return _this2.vendorSelected(value);\n        },\n        value: !_.isEmpty(this.state.selectedVendorVal) ? this.state.selectedVendorVal : vendorOptions[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1010\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"col-md-4 text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1022\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.onAllocateBudget();\n        },\n        class: \"btn btn-primary top-margin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1023\n        },\n        __self: this\n      }, \"Allocate Budget\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1032\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row budgetSubContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1034\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card pieBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1035\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1036\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"textstyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1038\n        },\n        __self: this\n      }, \"Budget Plan\")), React.createElement(\"div\", {\n        className: \"col-md-5 BtnGroupRow1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1040\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"promoCal\",\n        className: \"divInn1 btn-group1 \",\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"textstyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1047\n        },\n        __self: this\n      }, \"Previous year Budget :\", React.createElement(\"span\", {\n        className: \"allocate-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048\n        },\n        __self: this\n      }, \" \", this.props.budgetGraphData.totlAllo != 0 ? \"$\" + numberWithCommas(this.props.budgetGraphData.totlAllo * 0.79) : \"$\" + (localStorage.getItem('prevData') && !isNaN(localStorage.getItem('prevData')) ? numberWithCommas(JSON.parse(localStorage.getItem('prevData'))) : 0))))), React.createElement(\"div\", {\n        className: \"col-md-5 text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1090\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"textstyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1091\n        },\n        __self: this\n      }, \"Allocated Budget :\", React.createElement(\"span\", {\n        className: \"allocate-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1092\n        },\n        __self: this\n      }, \" \", this.props.budgetGraphData.totlAllo ? \"$\" + numberWithCommas(this.props.budgetGraphData.totlAllo) : 0)))), React.createElement(LineChart, {\n        data: lineData,\n        options: lineOption,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1100\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card pieBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"textstyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1107\n        },\n        __self: this\n      }, \"Budget\")), React.createElement(\"div\", {\n        className: \"col-md-6 text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1109\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"textstyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1110\n        },\n        __self: this\n      }, \"Total :\", \" \", React.createElement(\"span\", {\n        className: \"allocate-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1112\n        },\n        __self: this\n      }, this.props.budgetGraphData.totlBug ? \"$\" + numberWithCommas(this.props.budgetGraphData.totlBug) : 0)))), React.createElement(\"div\", {\n        className: \"pieChartBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1120\n        },\n        __self: this\n      }, React.createElement(Doughnut, {\n        data: pieData,\n        options: pieOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1121\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"budgetAtbleContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          padding: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1128\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: this.state.toggleLYSelected ? \"\" : \"toggle-active-class\",\n        id: \"labelBudget\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1129\n        },\n        __self: this\n      }, \"Calendar\"), \"\\xA0\\xA0\", React.createElement(Toggle, {\n        defaultChecked: this.state.toggleLYSelected //disabled={this.state.toggleDisabled}\n        ,\n        icons: false,\n        className: \"custom-classname toggleBudget\",\n        onChange: function onChange(e) {\n          return _this2.TYLYToggleHandler(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1138\n        },\n        __self: this\n      }), \"\\xA0\\xA0\", React.createElement(\"label\", {\n        id: \"labelBudget\",\n        className: this.state.toggleLYSelected ? \"toggle-active-class\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1146\n        },\n        __self: this\n      }, \"Table\"))), this.state.toggleLYSelected ? React.createElement(\"div\", {\n        className: \"card-tableBudget\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"tableGrid\",\n        style: {\n          height: this.props.height === undefined ? \"327px\" : this.props.height,\n          width: \"100%\"\n        },\n        className: \"ag-theme-balham\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1158\n        },\n        __self: this\n      }, React.createElement(AgGridReact, {\n        columnDefs: colHeaders.headers,\n        defaultColDef: this.state.defaultColDef,\n        singleClickEdit: true,\n        suppressDragLeaveHidesColumns: true,\n        suppressHorizontalScroll: true,\n        components: {\n          medalCellRenderer: this.MedalCellRenderer\n        },\n        suppressRowTransform: true,\n        suppressColumnMoveAnimation: true,\n        onGridReady: this.onGridReady,\n        rowData: colHeaders.rowData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1171\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1187\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"Budget-color-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1188\n        },\n        __self: this\n      }, \"Actual\"), React.createElement(\"span\", {\n        className: \"Budget-color-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1189\n        },\n        __self: this\n      }, \"Recommended\"), React.createElement(\"span\", {\n        className: \"Budget-color-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1192\n        },\n        __self: this\n      }, \"Low ROI\"), React.createElement(\"span\", {\n        className: \"Budget-color-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1193\n        },\n        __self: this\n      }, \"High ROI\")))) : React.createElement(\"div\", {\n        className: \"card-tableBudget\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1198\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          margin: \"0px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1199\n        },\n        __self: this\n      }, calenderBox))), React.createElement(\"div\", {\n        className: \"row saveButtonContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1205\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12 text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1207\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary saveButton\",\n        onClick: this.saveBudgetDataChangedHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1209\n        },\n        __self: this\n      }, \"Save\"))))));\n    }\n  }]);\n\n  return BudgePlanning;\n}(Component);\n\nBudgePlanning.propTypes = {\n  getBudgetData: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    budgetPlanningData: state.budgetData.budgetPlanning,\n    budgetCalendarData: state.budgetCalendar.budgetPlanningCalenderData,\n    budgetGraphData: state.budgetData.budgetGraphData,\n    loader: state.budgetData.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getBudgetData: getBudgetData,\n  getBudgetCalendarData: getBudgetCalendarData,\n  getBudgetGraphData: getBudgetGraphData,\n  postBudgetEdit: postBudgetEdit\n})(withRouter(BudgePlanning));","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Content/BudgePlanning.js"],"names":["React","Component","AgGridReact","Button","tableData","LineChart","Select","Doughnut","Toggle","getBudgetData","getBudgetCalendarData","getBudgetGraphData","postBudgetEdit","PropTypes","connect","withRouter","moment","PageLoader","_","ToastContainer","toast","ranges","divider","suffix","budgetDataPayload","Years","category","vendorOptions","value","label","formatNumber","n","i","length","Math","abs","newNumber","toFixed","toString","emptyValueFormatter","toSting","round","replace","splitAvalue","numberWithCommas","x","Number","isInteger","parseFloat","BudgePlanning","props","budgetData","callBudgetDataApi","console","log","payload","onGridReady","params","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","handleFirstDataRendered","event","sizeToFit","autoSizeAllColumns","gridSizeChanged","toggleMonthQuarter","val","state","selectedView","setState","TYLYToggleHandler","toggleLYSelected","vendorSelected","selectedValue","selectedVendorVal","categorySelected","selectedCategoryVal","yearSelected","selectedYearVal","onAllocateBudget","redirectToCalendar","data","timeMonth","isEmpty","String","months","format","startDate","year","endDate","endOf","localStorage","setItem","JSON","stringify","fiscalMonth","history","push","changeBudgetData","planned","updateBudgetData","cloneDeep","filter","budget","month","saveBudgetDataChangedHandler","map","budgetEditPayload","error","err","options","dragData","onDragEnd","e","datasetIndex","index","labels","datasets","borderColor","previousBudget","budgetGraphData","totlAllo","defaultColDef","resizable","dragOptions","that","budgetDataTable","budgetPlanningData","undefined","tabledata","actual","recommend","roi","roia","roir","roip","button","colHeaders","headers","headerName","field","suppressMovable","children","valueFormatter","cellStyle","color","sortable","onCellValueChanged","editable","cellRenderer","rowData","headerStyle","calenderBox","budgetCalendarData","changeLYdata","chaneOverLY","backgroundColor","prep","prea","prer","marginTop","MedalCellRenderer","prototype","init","eGui","document","createElement","classList","add","style","fontSize","cursor","pointerEvents","onclick","getGui","Object","keys","chartData","labelsData","object","colors","key","indexOf","lineOption","tooltips","intersect","callbacks","tooltipItem","no","yLabel","spanGaps","scaleShowVerticalLines","hover","elements","line","tension","fill","point","radius","plugins","datalabels","display","scales","xAxes","barPercentage","scaleLabel","fontStyle","gridLines","ticks","autoSkip","maxTicksLimit","opacity","callback","values","substr","yAxes","offset","legend","position","boxWidth","fontFamily","responsive","maintainAspectRatio","lineData","pieLabels","alloted","avallable","pieOptions","dataset","total","reduce","previousValue","currentValue","currentIndex","array","percentage","floor","cutoutPercentage","font","size","weight","stacked","usePointStyle","pieData","hoverBackgroundColor","yearArray","Category","years","VendorData","CategoryArray","filterData","yearsData","vendors","vendorsList","loader","textAlign","getItem","isNaN","parse","totlBug","padding","height","width","medalCellRenderer","margin","propTypes","func","isRequired","mapStateToProps","budgetPlanning","budgetCalendar","budgetPlanningCalenderData","loading"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import { render } from \"react-dom\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Button } from \"react-bootstrap\";\nimport tableData from \"../../shared/data.json\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\n// import cellRenderers from \"./cellRenderers\";\nimport LineChart from \"../Charts/LineCharts\";\nimport \"./budgePlanning.css\";\nimport Select from \"react-select\";\nimport \"../Content/Promotions/promotionstyling.css\";\nimport \"../Content/Promotions/PromoCalendar/promotionstyling.css\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport Toggle from \"react-toggle\";\nimport \"react-toggle/style.css\";\nimport {\n  getBudgetData,\n  getBudgetCalendarData,\n  getBudgetGraphData,\n  postBudgetEdit\n} from \"../../actions/budgetPlanningAction\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport moment from \"moment\";\nimport PageLoader from \"../../utils/Loader\";\nimport _ from 'lodash';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nvar ranges = [\n  { divider: 1e9, suffix: \"B\" },\n  { divider: 1e6, suffix: \"M\" },\n  { divider: 1e3, suffix: \"k\" }\n];\nconst budgetDataPayload = {\n  Years: \"2020\",\n  category: \"Boys Ethnic Wear\"\n};\n\n// const vendorOptions = [\n//   {value: 1, label: 'POPCHIPS INC'},\n//   {value: 2, label: 'CLABBER GIRL CORP'},\n//   {value: 3, label: 'DOMINO SUGAR CORP'},\n//   {value: 4, label: 'EAGLE FAMILY FOODS GROUP LLC'},\n//   {value: 5, label: 'QUAKER OATS CO'},\n//   {value: 6, label: 'MAYA KAIMAL FINE INDIAN FOODS LLC'}, \n// ];\nconst vendorOptions = [\n  {value: 1, label: \"Jack's Winter Wear\"},\n  {value: 2, label: 'Jade SuperSports'},\n  {value: 3, label: 'PopColor Inc'},\n  {value: 4, label: 'Truwear Limited'},\n  {value: 5, label: 'Allnew Inc'},\n  {value: 6, label: 'Neighbourhood Friendly Inc.'}, \n];\n\nfunction formatNumber(n) {\n  for (var i = 0; i < ranges.length; i++) {\n    if (Math.abs(n) >= ranges[i].divider) {\n      let newNumber = (n / ranges[i].divider).toFixed(2);\n      return newNumber.toString() + ranges[i].suffix;\n    }\n  }\n  return n;\n}\n\nfunction emptyValueFormatter(value) {\n  if (value.value) {\n    var toSting = Math.round(value.value);\n    if (value.value > 0) {\n      return toSting.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    } else {\n      var splitAvalue = Math.abs(toSting);\n      return (\n        \"(\" + splitAvalue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \")\"\n      );\n    }\n  } else {\n    if (value.value == 0) {\n      return 0;\n    } else {\n      return \"-\";\n    }\n  }\n}\n\nvar numberWithCommas = function(x) {\n  if(Number.isInteger(x)){\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }else{\n    return Number.parseFloat(x).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n};\n\nclass BudgePlanning extends Component {\n\n  budgetData = [];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        dragData: true,\n        onDragEnd: (e, datasetIndex, index, value) => {}\n      },\n      data: {\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n        datasets: [\n          {\n            label: \"Planned\",\n            data: [90, 70, 80, 75, 50, 55, 40],\n            // backgroundColor: \"#A6CEE3\",\n            borderColor: \"#A6CEE3\"\n          },\n          {\n            label: \"Actual\",\n            data: [100, 59, 30, 58, 56, 55, 20],\n            // backgroundColor: \"#44677B\",\n            borderColor: \"#44677B\"\n          },\n          {\n            label: \"Recommended\",\n            data: [65, 59, 80, 71, 36, 55, 40],\n            // backgroundColor: \"#F7E3E3\",\n            borderColor: \"#F7E3E3\"\n          }\n        ]\n      },\n      toggleLYSelected: false,\n      selectedView: \"Year\",\n      selectedCategoryVal: {value: \"Boys Ethnic Wear\", label: \"Boys Ethnic Wear\"},\n      selectedYearVal: { value: 2020, label: 2020},\n      previousBudget:this.props.budgetGraphData.totlAllo,\n      defaultColDef: {\n        // editable: true,\n        resizable: true\n      },\n    };\n  }\n\n  callBudgetDataApi = () => {\n    console.log('callBUdget api hit');\n    let payload = {\n      Years: \"2020\",\n      category: \"Boys Ethnic Wear\"\n    };\n    this.props.getBudgetData(payload);\n    this.props.getBudgetCalendarData(payload);\n    this.props.getBudgetGraphData(payload);\n  }\n\n  componentWillMount() {\n    this.callBudgetDataApi();\n  }\n\n\n  onGridReady = params => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.sizeColumnsToFit();\n  };\n\n  componentDidMount() {\n    let dragOptions = {\n      dragData: true,\n      onDragEnd: (e, datasetIndex, index, value) => {}\n    };\n    this.setState({\n      options: dragOptions\n    });\n  }\n\n  handleFirstDataRendered = event => {\n    this.props.sizeToFit\n      ? event.api.sizeColumnsToFit()\n      : event.columnApi.autoSizeAllColumns();\n  };\n  gridSizeChanged = event => {\n    this.props.sizeToFit\n      ? event.api.sizeColumnsToFit()\n      : event.columnApi.autoSizeAllColumns();\n  };\n\n  MedalCellRenderer() {}\n\n  toggleMonthQuarter = val => {\n    if (this.state.selectedView != val) {\n      this.setState({ selectedView: val });\n    }\n  };\n\n  TYLYToggleHandler = () => {\n    this.setState({ toggleLYSelected: !this.state.toggleLYSelected });\n  };\n\n\n  vendorSelected = value => {\n    let selectedValue = value.value;\n    this.setState({\n      selectedVendorVal: value\n    });\n\n  }\n  categorySelected = value => {\n    let selectedValue = value.value;\n    /* let payload = {\n      category: selectedValue\n    }; */\n    this.setState({\n      selectedCategoryVal: value\n    });\n\n    // this.props.getBudgetData(payload);\n    // this.props.getBudgetCalendarData(payload);\n    // this.props.getBudgetGraphData(payload);\n  };\n\n  yearSelected = value => {\n    let selectedValue = value.value;\n    /* let payload = {\n      Years: selectedValue\n    }; */\n    this.setState({\n      selectedYearVal: value\n    });\n\n    // this.props.getBudgetData(payload);\n    // this.props.getBudgetCalendarData(payload);\n    // this.props.getBudgetGraphData(payload);\n  };\n\n  onAllocateBudget = () => {\n\n    let payload = {\n      category: this.state.selectedCategoryVal.value,\n      Years: this.state.selectedYearVal.value\n    };\n    console.log('aksdjfkqeakli/s', this.state.selectedCategoryVal, this.state.selectedYearVal);\n    if(payload.category && payload.Years){\n      this.props.getBudgetData(payload);\n      this.props.getBudgetCalendarData(payload);\n      this.props.getBudgetGraphData(payload);\n    }\n  \n  };\n\n\n  redirectToCalendar = (data) => {\n    console.log('what is date',data);\n    \n    let timeMonth = moment(( !_.isEmpty(this.state.selectedYearVal) ? String(this.state.selectedYearVal.value) : '2020')+String(' '+data.months+' 01')).format()\n    //debugger\n    let startDate = moment([data.year, data.months - 1]).format('YYYY-MM-DD')\n    let endDate = moment(startDate).endOf('month').format('YYYY-MM-DD')\n    console.log('asfdjjdsjygfhaskldjfuyewvfjjashdfluagvsdc', data, moment([data.year, data.months - 1]).format('YYYY-MM-DD'));\n\n    localStorage.setItem(\n      \"calendarData\",\n      JSON.stringify({\n        startDate: startDate,\n        endDate: endDate,\n        fiscalMonth: data.months - 1\n        // quarter: this.state.historyQuarter\n      })\n    );\n    // localStorage.setItem('startDate', startDate)\n    // localStorage.setItem('endDate', endDate)\n    // localStorage.setItem(\"fiscalMonth\", data.months - 1)\n    this.props.history.push(\n    `/vis/Promo?populateMonth=true&timeMonth=${timeMonth}`\n    );\n\n  }\n\n  // changing budget planned data\n  changeBudgetData = ({ months, planned }) => {\n    console.log('change budget data called');\n    let updateBudgetData = _.cloneDeep(this.budgetData);\n    updateBudgetData = _.filter(updateBudgetData, (budget) => {\n      return budget.month !== months;\n    });\n    updateBudgetData.push({\n      month: months,\n      planned,\n    });\n\n    this.budgetData = updateBudgetData;\n    console.log('ljfoiasjdfhasld', updateBudgetData, this.budgetData);\n  }\n\n  // Saving update budget planned value\n  saveBudgetDataChangedHandler = async () => {\n    const budgetData = this.budgetData.map(budget => {\n      return {\n        month: moment().month(budget.month).format(\"M\"),\n        planned: budget.planned,\n      }\n    });\n    const budgetEditPayload = {\n      Years: this.state.selectedYearVal.value ? this.state.selectedYearVal.value : '2020',\n      category: this.state.selectedCategoryVal.value ? this.state.selectedCategoryVal.value : 'Boys Ethnic Wear',\n      budgetData: budgetData,\n    };\n    // hardcoded data for budgetData, budgetGraphData and budgetCardData\n    // const budgetDataPayload = {\n    //     Years: \"2019\",\n    //     category: \"Cotton Shop\"\n    // };\n    \n    if(_.isEmpty(budgetData)){\n      toast.error(\"No change in allocation amount\");\n      return\n    }\n    try {\n      this.props.postBudgetEdit({budgetEditPayload, budgetDataPayload});\n    } catch(err) {\n      console.log('Update budget data failed');\n    }\n\n  }\n\n  render() {\n    let that = this;\n    if(this.props.budgetGraphData && this.props.budgetGraphData.totlAllo && this.props.budgetGraphData.totlAllo!=0){\n      localStorage.setItem('prevData',(this.props.budgetGraphData.totlAllo))\n    }\n    let budgetDataTable = {\n      data:\n        this.props.budgetPlanningData.data != undefined &&\n        this.props.budgetPlanningData.data.length > 0\n          ? this.props.budgetPlanningData.data.map(tabledata => {\n              return {\n                months: moment()\n                  .month(tabledata.months - 1)\n                  .format(\"MMMM\"),\n                actual:\n                  tabledata.actual != null\n                    ? tabledata.actual\n                    : tabledata.recommend,\n                planned: tabledata.planned,\n                roi:\n                  tabledata.roia != null\n                    ? Math.round(tabledata.roia)\n                    : Math.round(tabledata.roir),\n                roip: Math.round(tabledata.roip),\n                button: tabledata.button\n              };\n            })\n          : []\n    };\n\n    let colHeaders = {\n      headers: [\n        {\n          headerName: \"Months\",\n          field: \"months\",\n          suppressMovable:true\n        },\n        {\n          headerName: \"Actual/Recommended\",\n          children:[\n\n            {\n              headerName: \"($)\",\n              field: \"actual\",\n              suppressMovable:true,\n              valueFormatter: emptyValueFormatter,\n              cellStyle: params => {\n                if (params.data[\"actual\"] >= 10000) {\n                  return { \"background-color\": \"#BCE5E6\", color: \"#535353\" };\n                } else if (\n                  params.data &&\n                  params.data[\"actual\"] <= 10000 &&\n                  params.data[\"actual\"] > 0\n                ) {\n                  return { \"background-color\": \"#F3F3F3\", color: \"#535353\" };\n                }\n              }\n            },\n            {\n              headerName: \"ROI(%)\",\n              field: \"roi\",\n               suppressMovable:true,\n              sortable: true,\n              valueFormatter: emptyValueFormatter,\n              cellStyle: params => {\n                if (params.data[\"roi\"] >= 8) {\n                  return { \"background-color\": \"#DCE4F4\", color: \"#535353\" };\n                } else   {\n                  return { \"background-color\": \"#F7E2E2\", color: \"#535353\" };\n                }\n              }\n            }\n\n          ]\n        },\n        {\n          headerName: \"Planned\",\n          children:[\n\n            {\n              headerName: \"($)\",\n              field: \"planned\",\n              suppressMovable:true,\n              valueFormatter: emptyValueFormatter,\n              onCellValueChanged: (params) => {\n                console.log('ajfkasjnd', params);\n                this.changeBudgetData(params.data);\n              },\n              editable: (params) => {\n                console.log(\"param\", params.data);\n                return params.data.button === true;\n              },\n              cellRenderer: (params) => {\n                console.log(\"get index\",params);\n                if (params.data.button === true) {\n                  return (\n                    \"<span>\" +\n                    numberWithCommas(params.data.planned) +\n                    ' &nbsp; <i class=\"fa fa-pencil-square-o\"></i></span>'\n                  );\n                } else {\n                  return numberWithCommas(params.data.planned);\n                }\n              },\n    \n              sortable: true\n            },\n            {\n              headerName: \"ROI(%)\",\n              field: \"roip\",\n              suppressMovable:true,\n              valueFormatter: emptyValueFormatter,\n              cellStyle: params => {\n                if (params.data[\"roip\"] >= 8) {\n                  return { \"background-color\": \"#DCE4F4\", color: \"#535353\" };\n                } else  {\n                  return { \"background-color\": \"#F7E2E2\", color: \"#535353\" };\n                }\n              }\n            }\n\n          ]\n        },\n        {\n          headerName: \"Change Over Last Year\",\n          children: [\n            {\n              headerName: \"ROI(%)\",\n              field: \"LYpoi\",\n              suppressMovable:true,\n              valueFormatter: emptyValueFormatter,\n              cellStyle: params => {\n                if (params.data[\"LYpoi\"] >= 5) {\n                  return { \"background-color\": \"#DCE4F4\", color: \"#535353\" };\n                } else if (\n                  params.data &&\n                  params.data[\"LYpoi\"] <= 5 &&\n                  params.data[\"LYpoi\"] > 0\n                ) {\n                  return { \"background-color\": \"#F7E2E2\", color: \"#535353\" };\n                }\n              }\n            }\n          ]\n        },\n        {\n          headerName: \"Calendar\",\n          field: \"action\",\n          suppressMovable:true,\n          cellRenderer: \"medalCellRenderer\"\n        }\n      ],\n      rowData: budgetDataTable.data,\n      headerStyle: { \"background-color\": \"#E7EEF3\" }\n    };\n\n    let calenderBox = [];\n    // let tableData = [];\n    console.log(\"inside props,\", this.props.budgetGraphData);\n    if (\n      this.props.budgetCalendarData.data &&\n      this.props.budgetCalendarData.data.length > 0\n    ) {\n      this.props.budgetCalendarData.data.map((data, i) => {\n        /* Object.values(this.props.budgetCalendarData.chaneOverLY).map(changeLYdata => { */\n\n        const changeLYdata = this.props.budgetCalendarData.chaneOverLY[i + 1];\n\n        calenderBox.push(\n          <div className=\"col-md-3 calenderDataBox\">\n            <div className=\"card monthsBox\">\n              <p className=\"budgetMonths\">\n                {moment()\n                  .month(data.months - 1)\n                  .format(\"MMMM\")}\n              </p>\n              <div\n                className=\"budgetDatabox\"\n                style={{\n                  backgroundColor:\n                    data.prep == 0\n                      ? \"#EBEBEB\"\n                      : data.prep >= 1 && data.prep <= 5\n                      ? \"#B9CCD6\"\n                      : data.prep > 5 && data.prep <= 10\n                      ? \"#86a2b3\"\n                      : data.prep > 10 && data.prep <= 15\n                      ? \"#6F8A99\"\n                      : data.prep > 15 && data.prep <= 20\n                      ? \"#4E6A78\"\n                      : data.prep > 20\n                      ?\"#2D4B5B\"\n                      : \"#EBEBEB\"\n                }}\n              >\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <p\n                      className=\"plannedBudget\"\n                      style={{\n                        color: data.prep > 5 ? \"#fff\" : \"#232222\"\n                      }}\n                    >\n                      {data.year === 2020 && data.months >= 1 && data.months <= 8 ? \n                        'Recommended'\n                        :\n                        'Planned'\n                      }\n                    </p>\n                    <p\n                      className=\"plannedBudgetData\"\n                      style={{\n                        color: data.prep > 5 ? \"#fff\" : \"#232222\"\n                      }}\n                    >\n                      {\"$\" +\n                      formatNumber(data.planned) +\n                        \" \" +\n                        \"(\" +\n                        Math.round(data.prep) +\n                        \"%\" +\n                        \")\"}\n                    </p>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <p\n                      className=\"plannedBudget\"\n                      style={{\n                        color: data.prep > 5 ? \"#fff\" : \"#232222\"\n                      }}\n                    >\n                      Change over LY\n                    </p>\n                    <p\n                      className=\"plannedBudgetData\"\n                      style={{\n                        color: data.prep > 5 ? \"#fff\" : \"#232222\"\n                      }}\n                    >\n                      {Math.round(changeLYdata) + \"%\"}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  {data.actual !== null ? (\n                    <div className=\"col-md-6\">\n                      <p\n                        className=\"plannedBudget\"\n                        style={{\n                          color: data.prep > 5 ? \"#fff\" : \"#232222\"\n                        }}\n                      >\n                        Actual\n                      </p>\n                      <p\n                        className=\"plannedBudgetData\"\n                        style={{\n                          color: data.prep > 5 ? \"#fff\" : \"#232222\"\n                        }}\n                      >\n                        {\"$\" +\n                        formatNumber(data.actual) +\n                          \" \" +\n                          \"(\" +\n                          Math.round(data.prea) +\n                          \"%\" +\n                          \")\"}\n                      </p>\n                    </div>\n                  ) : (\n                    <div className=\"col-md-6\">\n                      <p\n                        className=\"plannedBudget\"\n                        style={{\n                          color: data.prep > 5 ? \"#fff\" : \"#232222\"\n                        }}\n                      >\n                        Recommended\n                      </p>\n                      <p\n                        className=\"plannedBudgetData\"\n                        style={{\n                          color: data.prep > 5 ? \"#fff\" : \"#232222\"\n                        }}\n                      >\n                        {\"$\" +\n                        formatNumber(data.recommend) +\n                          \" \" +\n                          \"(\" +\n                          Math.round(data.prer) +\n                          \"%\" +\n                          \")\"}\n                      </p>\n                    </div>\n                  )}\n\n                  <div className=\"col-md-6\">\n                    {/* <div> */}\n                    {data.button ? (\n                      <button\n                        style={{marginTop:\"14px\"}}\n                        type=\"button\"\n                        class=\"btn btn-default palnnedButton\"\n                        onClick={() => {this.redirectToCalendar(data)}}\n\n                      >\n                        Planned Promos {/* &nbsp; */}\n                        <i class=\"fa fa-fa-chevron-right\"></i>\n                      </button>\n                    ) : (\n                      \"\"\n                    )}\n                    {/* </div> */}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      });\n      // });\n    }\n\n    this.MedalCellRenderer.prototype.init = function(params){\n      // console.log(\"param\", params.data);\n      this.eGui = document.createElement(\"i\");\n      this.eGui.classList.add(\"fa\", \"fa-chevron-right\");\n      this.eGui.style.color = params.data.button == false ? \"grey\" : \"#44677B\";\n      this.eGui.style.fontSize = \"1rem\";\n      this.eGui.style.cursor = \"pointer\";\n      this.eGui.style.pointerEvents =\n        params.data.button == false ? \"none\" : \"auto\";\n      this.eGui.onclick = () => {\n        // console.log(\"param:\", params,that);\n        // console.log(\"selectedYearVal:\",that.state.selectedYearVal.value || 2019)\n        // console.log('months:',params.data.months)\n        let timeMonth = moment( (params.data.months)+' '+ (!_.isEmpty(that.state.selectedYearVal) ? String(that.state.selectedYearVal.value) : '2020')).format()\n        //debugger\n        console.log(\"onclick on arrow\",timeMonth,params);\n        let year = !_.isEmpty(that.state.selectedYearVal) ? that.state.selectedYearVal.value : 2020;\n        console.log('yeardkashfjsadgfjasd', year, moment([year, moment().month(params.data.months).format('M') - 1]).format('YYYY-MM-DD'))\n        //let timeMonth = moment( (params.data.months)+' '+ (!_.isEmpty(that.state.selectedYearVal) ? String(that.state.selectedYearVal.value) : '2019')).format()\n        let startDate = moment([year, moment().month(params.data.months).format('M') - 1]).format('YYYY-MM-DD');\n        let endDate = moment(startDate).endOf('month').format('YYYY-MM-DD');\n        localStorage.setItem(\n          \"calendarData\",\n          JSON.stringify({\n            startDate: startDate,\n            endDate: endDate,\n            fiscalMonth: moment().month(params.data.months).format('M') - 1\n            // quarter: this.state.historyQuarter\n          })\n        );\n        // localStorage.setItem('startDate', startDate);\n        // localStorage.setItem('endDate', endDate);\n        // localStorage.setItem(\"fiscalMonth\", moment().month(params.data.months).format('M') - 1)\n\n        that.props.history.push(\n          `/vis/Promo?populateMonth=true&timeMonth=${timeMonth}`\n        );\n      };\n    };\n\n    this.MedalCellRenderer.prototype.getGui = function() {\n      return this.eGui;\n    };\n\n    //graph data\n\n    if (\n      this.props.budgetGraphData &&\n      Object.keys(this.props.budgetGraphData).length > 0\n    ) {\n      //code for line chart\n      var chartData = this.props.budgetGraphData;\n      let labelsData = chartData.months ? chartData.months : [];\n      var object = chartData.data;\n      let labels = [];\n      console.log('sakndfkjsabkdfj', labelsData, chartData, chartData.months);\n      if(chartData){\n        labelsData.map(label => {\n          labels.push(\n            moment()\n              .month(label - 1)\n              .format(\"MMMM\")\n          );\n        });\n      }\n      \n\n      var colors = [];\n      colors.push({\n        backgroundColor: \"#44677b\"\n      });\n      colors.push({\n        backgroundColor: \"#bcbcbc\"\n      });\n      colors.push({\n        backgroundColor: \"#a6cee3\"\n      });\n      let datasets = [];\n      for (var key in object) {\n        var index = Object.keys(object).indexOf(key);\n        datasets.push({\n          label: key,\n          data: object[key].map(val => val > 0 ? val : null),\n          backgroundColor: colors[index % 3].backgroundColor,\n          borderColor: colors[index % 3].backgroundColor\n        });\n      }\n\n      console.log('skdfkasjgdkfjadsf', datasets)\n\n      var lineOption = {\n        // legend: {\n        //     display: true,\n        //     position: 'bottom',\n        //     labels: {\n        //         fontSize: 10,\n        //     }\n        // },\n        tooltips: {\n          intersect: true,\n          callbacks: {\n              label: function(tooltipItem, data) {\n                  var label = data.datasets[tooltipItem.datasetIndex].label || '';\n                  if (label) {\n                      label += ': ';\n                  }\n                  var no  = tooltipItem.yLabel;\n                  if(parseFloat(tooltipItem.yLabel)/1000000 >= 1){\n                  //add m\n                      no = parseFloat((tooltipItem.yLabel)/1000000).toFixed(2)+'M'\n                  }\n                  else if(parseFloat(tooltipItem.yLabel)/1000 >= 1){\n                  //add k\n                      no = (parseFloat(tooltipItem.yLabel)/1000).toFixed(2)+'K'\n                  }\n                  label += '$'+no;\n                  return label;\n              }\n          }\n      },\n        options: {\n          spanGaps: false,\n          \n        },\n        scaleShowVerticalLines: false,\n        hover: {\n          intersect: false\n        },\n        elements: {\n          line: {\n            tension: 0,\n            fill: false\n          },\n          point: {\n            radius: 0\n          }\n        },\n        plugins: {\n          datalabels: {\n            display: false\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              barPercentage: 1.0,\n              scaleLabel: {\n                display: true,\n                // labelString: lineDatajson.x_label,\n                fontStyle: \"bold\"\n              },\n              gridLines: {\n                display: false\n              },\n              ticks: {\n                \n                autoSkip: true,\n                maxTicksLimit: 15,\n                fontSize: 10,\n                opacity: 0.7,\n                callback: function(value, index, values) {\n                  if (value === 0) {\n                    return null;\n                  }\n                  if (value.length >= 12) {\n                    return (\n                      value.substr(0, 5) +\n                      \"...\" +\n                      value.substr(value.length - 5, 0)\n                    );\n                  } else {\n                    return value;\n                  }\n                }\n              }\n            }\n          ],\n          yAxes: [\n            {\n              offset: true,\n              gridLines: {\n                display: true\n              },\n              scaleLabel: {\n                display: true,\n                // labelString: lineDatajson.y_label,\n                fontStyle: \"bold\",\n                fontSize: 10\n              },\n              ticks: {\n                // beginAtZero: false,\n                // min: 1,\n                callback: function(value) {\n                  var ranges = [\n                    { divider: 1e9, suffix: \"B\" },\n                    { divider: 1e6, suffix: \"M\" },\n                    { divider: 1e3, suffix: \"k\" }\n                  ];\n                  function formatNumber(n) {\n                    for (var i = 0; i < ranges.length; i++) {\n                      if (n >= ranges[i].divider) {\n                        return (\n                          (n / ranges[i].divider).toString() + ranges[i].suffix\n                        );\n                      }\n                    }\n                    return n;\n                  }\n                  return \"$\" + formatNumber(value);\n                }\n              }\n            }\n          ]\n        },\n        legend: {\n          display: true,\n          position: \"bottom\",\n          labels: {\n            boxWidth: 12\n          },\n          fontFamily: \"poppins\",\n          fontSize: \"12px\"\n        },\n        responsive: true,\n        maintainAspectRatio: true\n      };\n\n      var lineData = {\n        labels: labels,\n        datasets: datasets\n      };\n\n      //code for pie chart\n      let pieLabels = [];\n      console.log(\"dta for line\", chartData.alloted, chartData.avallable);\n      pieLabels.push(Math.round(chartData.avallable));\n      pieLabels.push(Math.round(chartData.alloted));\n\n      var pieOptions = {\n        tooltips: {\n          callbacks: {\n            label: function(tooltipItem, data) {\n              //get the concerned dataset\n              var dataset = data.datasets[tooltipItem.datasetIndex];\n              //calculate the total of this data set\n              var total = dataset.data.reduce(function(previousValue, currentValue, currentIndex, array) {\n                return previousValue + currentValue;\n              });\n              //get the current items value\n              var currentValue = dataset.data[tooltipItem.index];\n              //calculate the precentage based on the total and current item, also this does a rough rounding to give a whole number\n              var percentage = Math.floor(((currentValue/total) * 100)+0.5);\n              return percentage + \"%\";\n            }\n          }\n         },\n        cutoutPercentage: 80,\n        plugins: {\n          datalabels: {\n            display: false,\n            //  display: false,\n            color: \"#303030\",\n            font: {\n              size: 12,\n              weight: 600\n            }\n          }\n        },\n        stacked: true,\n        maintainAspectRatio: true,\n        responsive: true,\n        legend: {\n          position: \"right\",\n          labels: {\n            boxWidth: 10,\n            usePointStyle: true,\n            fontSize: 15,\n          },\n\n        }\n      };\n\n      var pieData = {\n        labels: [\n          pieLabels[0] + \"% \" + \"Available\",\n          pieLabels[1] + \"% \" + \"Allotted\"\n        ],\n        datasets: [\n          {\n            data: pieLabels,\n            backgroundColor: [\"#7b8eca\", \"#C19AB7\"],\n            hoverBackgroundColor: [\"#7b8eca\", \"#C19AB7\"]\n          }\n        ]\n      };\n    }\n    let yearArray = [2019, 2020, 2021];\n    let Category = [\"Boys Ethnic Wear\", \"Boys TShirts\"];\n    let years = [];\n    // let VendorData = [\"POPCHIPS INC\",\"CLABBER GIRL CORP\",\"DOMINO SUGAR CORP\",\"EAGLE FAMILY FOODS GROUP LLC\",\"QUAKER OATS CO\",\"MAYA KAIMAL FINE INDIAN FOODS LLC\"];\n    let VendorData = [\"Jack's Winter Wear\",\"Jade SuperSports\",\"PopColor Inc\",\"Truwear Limited\",\"Allnew Inc\",\"Neighbourhood Friendly Inc.\"];\n    let CategoryArray = [];\n\n    Category.map(filterData => {\n      CategoryArray.push({\n        value: filterData,\n        label: filterData\n      });\n    });\n    yearArray.map(yearsData => {\n      years.push({\n        value: yearsData,\n        label: yearsData\n      });\n    });\n    var vendors = []\n    VendorData.map(vendorsList => {\n      vendors.push({\n        value: vendorsList,\n        label: vendorsList\n      });\n    });\n\n    return (\n      <PageLoader loader={this.props.loader}>\n        <div id=\"subcontent\">\n          <div className=\"card budgetSubContainer\">\n          <ToastContainer />\n            <h4 className=\"BudgetHeading mb-0\">\n              Promotion Planning / <span className=\"heading-top\">Budget Allocation</span>\n            </h4>\n             <hr />\n            <div\n              className=\"row  budget-label-div\">\n              <div className=\"col-md-8 SelectRow\">\n                <div className=\"row\" >\n                  <div className=\"col-md-4\">\n                    <label className=\"budget-labels\">Department</label>\n                    <Select\n                      class=\"form-control catagorySelect\"\n                      placeholder=\"Category\"\n                      options={CategoryArray}\n                      onChange={value => this.categorySelected(value)}\n                      value={ !_.isEmpty(this.state.selectedCategoryVal) ? \n                        this.state.selectedCategoryVal : CategoryArray[0]}\n\n                    />\n                  </div>\n                  <div className=\"col-md-4\">\n                    {/*JSON.stringify(years)*/}\n                    <label className=\"budget-labels\">Year</label>\n                    <Select\n                      class=\"form-control catagorySelect\"\n                      placeholder=\"Year\"\n                      options={years}\n                      onChange={value => this.yearSelected(value)}\n                      value={ !_.isEmpty(this.state.selectedYearVal) ? \n                                this.state.selectedYearVal : {value: 2020,label: 2020}}\n                    />\n                  </div>\n\n                  <div className=\"col-md-4\">\n                  <label className=\"budget-labels\">Vendor</label>\n                    <Select\n                      class=\"form-control catagorySelect\"\n                      placeholder=\"Vendor\"\n                      options={vendorOptions}\n                      onChange={value => this.vendorSelected(value)}\n                      value={ !_.isEmpty(this.state.selectedVendorVal) ? \n                        this.state.selectedVendorVal : vendorOptions[0]}\n                    />\n                  </div>\n\n                </div>\n              </div>\n              <div className=\"col-md-4 text-right\">\n                <button\n                  type=\"button\"\n                  onClick={() => this.onAllocateBudget()}\n                  class=\"btn btn-primary top-margin\"\n                >\n                  Allocate Budget\n                </button>\n              </div>\n            </div>\n            <hr />\n            <div className=\"row budgetSubContainer\">\n              <div className=\"col-md-8\">\n                <div className=\"card pieBox\">\n                  <div className=\"row\">\n                    <div className=\"col-md-2\">\n                      <p className=\"textstyle\">Budget Plan</p>\n                    </div>\n                    <div className=\"col-md-5 BtnGroupRow1\">\n                      <div\n                        id=\"promoCal\"\n                        className=\"divInn1 btn-group1 \"\n                        style={{ textAlign: \"center\" }}\n                      >\n\n                        <p className=\"textstyle\">\n                          Previous year Budget :<span className=\"allocate-text\">{\" \"}\n                          {this.props.budgetGraphData.totlAllo!=0\n                            ? \"$\" +\n                              numberWithCommas(this.props.budgetGraphData.totlAllo*0.79)\n                            : \"$\"+\n                            (localStorage.getItem('prevData') && !isNaN(localStorage.getItem('prevData')) ? \n                              numberWithCommas(JSON.parse(localStorage.getItem('prevData')))\n                              : 0)\n                            }\n                            </span>\n                        </p>\n\n                        {/*<button\n                          type=\"button\"\n                          className={classNames({\n                            active: this.state.selectedView == \"Year\",\n                            \" btn\": true,\n                            \"btn-outline-primary\": true,\n                            btnCalendr: true,\n                            calPromo: true\n                          })}\n                          onClick={() => this.toggleMonthQuarter(\"Year\")}\n                          style={{ width: \"90px\" }}\n                        >\n                          Year\n                        </button>\n                        <button\n                          type=\"button\"\n                          className={classNames({\n                            active: this.state.selectedView == \"Quarter\",\n                            \" btn\": true,\n                            \"btn-outline-primary\": true,\n                            btnCalendr: true,\n                            calPromo: true\n                          })}\n                          onClick={() => this.toggleMonthQuarter(\"Quarter\")}\n                          style={{ width: \"90px\" }}\n                        >\n                          Quarter\n                        </button>*/}\n                      </div>\n                    </div>\n                    <div className=\"col-md-5 text-right\">\n                      <p className=\"textstyle\">\n                        Allocated Budget :<span className=\"allocate-text\">{\" \"}\n                        {this.props.budgetGraphData.totlAllo\n                          ? \"$\" +\n                            numberWithCommas(this.props.budgetGraphData.totlAllo)\n                          : 0}</span>\n                      </p>\n                    </div>\n                  </div>\n                  <LineChart data={lineData} options={lineOption} />\n                </div>\n              </div>\n              <div className=\"col-md-4\">\n                <div className=\"card pieBox\">\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <p className=\"textstyle\">Budget</p>\n                    </div>\n                    <div className=\"col-md-6 text-right\">\n                      <p className=\"textstyle\">\n                        Total :{\" \"}\n                        <span className=\"allocate-text\">\n                        {this.props.budgetGraphData.totlBug\n                          ? \"$\" +\n                            numberWithCommas(this.props.budgetGraphData.totlBug)\n                          : 0}</span>\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"pieChartBox\">\n                    <Doughnut data={pieData} options={pieOptions} />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"budgetAtbleContainer\">\n              <div style={{ textAlign: \"center\", padding: \"10px\" }}>\n                <div className=\"mb-1\">\n                  <label\n                    className={\n                      this.state.toggleLYSelected ? \"\" : \"toggle-active-class\"\n                    }\n                    id=\"labelBudget\"\n                  >\n                    Calendar\n                  </label>\n                  &nbsp;&nbsp;\n                  <Toggle\n                    defaultChecked={this.state.toggleLYSelected}\n                    //disabled={this.state.toggleDisabled}\n                    icons={false}\n                    className=\"custom-classname toggleBudget\"\n                    onChange={e => this.TYLYToggleHandler(e)}\n                  />\n                  &nbsp;&nbsp;\n                  <label\n                    id=\"labelBudget\"\n                    className={\n                      this.state.toggleLYSelected ? \"toggle-active-class\" : \"\"\n                    }\n                  >\n                    Table\n                  </label>\n                </div>\n              </div>\n              {this.state.toggleLYSelected ? (\n                <div className=\"card-tableBudget\">\n                  <div\n                    id=\"tableGrid\"\n                    style={{\n                      height:\n                        this.props.height === undefined\n                          ? \"327px\"\n                          : this.props.height,\n                      width: \"100%\"\n                    }}\n                    className=\"ag-theme-balham\"\n                  >\n                  \n\n                    <AgGridReact\n                      columnDefs={colHeaders.headers}\n                      defaultColDef={this.state.defaultColDef}\n                      singleClickEdit={true}\n                      suppressDragLeaveHidesColumns={true}\n                      suppressHorizontalScroll={true}\n                      components={{\n                        medalCellRenderer: this.MedalCellRenderer\n                      }}\n                      suppressRowTransform={true}\n                      suppressColumnMoveAnimation={true}\n                      \n                      onGridReady={this.onGridReady}\n                      rowData={colHeaders.rowData}\n                    />\n                    \n                    <div align=\"left\">\n                      <span className=\"Budget-color-description\">Actual</span>\n                      <span className=\"Budget-color-description\">\n                        Recommended\n                      </span>\n                      <span className=\"Budget-color-description\">Low ROI</span>\n                      <span className=\"Budget-color-description\">High ROI</span>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"card-tableBudget\">\n                  <div className=\"row\" style={{ margin: \"0px\" }}>\n                    {calenderBox}\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className=\"row saveButtonContainer\">\n            {/* { JSON.stringify(colHeaders.rowData) } */}\n              <div className=\"col-md-12 text-right\">\n              \n                <button type=\"button\" class=\"btn btn-primary saveButton\" onClick={this.saveBudgetDataChangedHandler}>\n                  Save\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageLoader>\n    );\n  }\n}\n\nBudgePlanning.propTypes = {\n  getBudgetData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  budgetPlanningData: state.budgetData.budgetPlanning,\n  budgetCalendarData: state.budgetCalendar.budgetPlanningCalenderData,\n  budgetGraphData: state.budgetData.budgetGraphData,\n  loader: state.budgetData.loading\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBudgetData, getBudgetCalendarData, getBudgetGraphData, postBudgetEdit }\n)(withRouter(BudgePlanning));\n"]},"metadata":{},"sourceType":"module"}