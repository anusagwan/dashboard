{"ast":null,"code":"import axios from '../utils/axios';\nimport { config } from '../utils/config';\nimport { toast } from 'react-toastify';\nimport moment from 'moment';\n\nfunction pastWeekFutureWeekHandler(startDate, endDate) {\n  var calPastWeeks = [];\n  var calFutureWeeks = [];\n  var crrntDate = moment().format('YYYY-MM-DD');\n\n  for (var i = startDate; i <= endDate; i = moment(i).add(1, 'week').format('YYYY-MM-DD')) {\n    if (moment(i).isSameOrBefore(crrntDate)) {\n      calPastWeeks.push({\n        weekNum: moment(i).week(),\n        yearNum: moment(i).year()\n      });\n    } else {\n      calFutureWeeks.push({\n        weekNum: moment(i).week(),\n        yearNum: moment(i).year()\n      });\n    }\n  }\n\n  return {\n    calPastWeeks: calPastWeeks,\n    calFutureWeeks: calFutureWeeks\n  };\n}\n\nvar manuallyCreateMdActions = {\n  onResetInventoryInfo: function onResetInventoryInfo() {\n    return function (dispatch) {\n      dispatch({\n        type: 'RESET_INVENTORY_INFO_DATA'\n      });\n    };\n  },\n  onResetEditedInfo: function onResetEditedInfo() {\n    return function (dispatch) {\n      dispatch({\n        type: 'RESET_EDITED_INFO_DATA'\n      });\n    };\n  },\n  setSimulationId: function setSimulationId(id) {\n    return function (dispatch) {\n      dispatch({\n        type: 'SET_SIMULATION_ID',\n        payload: id\n      });\n    };\n  },\n  fetchInventoryInfo: function fetchInventoryInfo(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getInventoryInfo/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        if (resp.data && resp.data.data && resp.data.data.store_data.length <= 0) {\n          toast.error(\"Current filter selection doesn't have inventory please retry with different selection\", {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n        }\n\n        dispatch({\n          type: 'GET_INVENTORY_INFO',\n          payload: resp.data.data\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      }).catch(function (err) {\n        toast.error(err.message, {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  fetchOfferDetails: function fetchOfferDetails(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getOfferDetails/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        dispatch({\n          type: 'GET_OFFER_DETAILS',\n          payload: resp.data.data\n        });\n        var fixedPrice,\n            percentOff = '';\n\n        if (resp.data && resp.data.data.length) {\n          // fixedPrice = resp.data.data.find((item) => item.offer_type === 'fixed_price');\n          percentOff = resp.data.data.find(function (item) {\n            return item.offer_type === 'percent_off';\n          });\n        } // let discountPP = {\n        //   min: fixedPrice.min_price,\n        //   max: fixedPrice.max_price,\n        //   interval: fixedPrice.interval,\n        // };\n\n\n        var discountOff = {\n          min: percentOff.min_price,\n          max: percentOff.max_price,\n          interval: percentOff.interval\n        };\n        dispatch({\n          type: 'SET_OFFER_DETAILS',\n          // discountPP: discountPP,\n          discountOff: discountOff\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  fetchCadence: function fetchCadence(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getSimulationData/\"),\n        // url: `${config.createMarkdownURL}/MarkdownOptimization/`,\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        if (resp.data && resp.data.data[0] && resp.data.data[0].status == 'success') {\n          var cadenceOutput = resp && resp.data && resp.data.data[0] && resp.data.data[0].output;\n          var cadenceInput = resp && resp.data && resp.data.data[0] && resp.data.data[0].input;\n          var skus = [];\n\n          if (cadenceOutput.skus && cadenceOutput.skus.length) {\n            skus = cadenceOutput.skus.map(function (sku) {\n              return {\n                label: sku,\n                value: sku\n              };\n            });\n          }\n\n          dispatch({\n            type: 'SET_CADENCE_INPUT',\n            payload: cadenceInput\n          });\n          dispatch({\n            type: 'GET_CADENCE_DATA',\n            payload: [cadenceOutput.cadenceData],\n            csv_names: cadenceOutput.csv_names,\n            skus: skus,\n            savedData: cadenceOutput.saveData\n          });\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n            payload: cadenceOutput.simulateData,\n            isEdit: reqObj.isEdit\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA',\n            payload: cadenceOutput.simulateData,\n            data: cadenceOutput,\n            cadenceType: 'Optimal',\n            comparisonData: [],\n            isEdit: reqObj.isEdit\n          });\n        } else {\n          toast.error(resp.data.data[0].message, {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n        }\n\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return resp.data && resp.data.data;\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  fetchSkuAndCsv: function fetchSkuAndCsv(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        // url: `${config.createMarkdownURL}/generateCadence/`,\n        url: \"\".concat(config.cadenceUrl, \"/MarkdownOptimization\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        var skus = [];\n\n        if (resp.data.skus && resp.data.skus.length) {\n          skus = resp.data.skus.map(function (sku) {\n            return {\n              label: sku,\n              value: sku\n            };\n          });\n        }\n\n        dispatch({\n          type: 'GET_SKUS_AND_CSV',\n          csv_names: resp.data.csv_names,\n          skus: skus\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      }).catch(function (err) {\n        toast.error(err.message, {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  updateAnalysisData: function updateAnalysisData(req, cadenceType) {\n    return function (dispatch) {\n      dispatch({\n        type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n        payload: cadenceType === 'Optimal' ? req.simulateData : req\n      }); // if (this.state.defaultActiveKey === 'Optimal') {\n      //   obj.analysisData[key] = this.props.analysisData[this.state.defaultActiveKey]\n      //     ? this.props.analysisData[this.state.defaultActiveKey].simulateData\n      //     : [];\n      // } else {\n      //   const { analysisTabledata, detailed, overview } = this.props.analysisData[\n      //     this.state.defaultActiveKey\n      //   ];\n      //   obj.analysisData[key] = { analysisTabledata, detailed, overview };\n      // }\n\n      dispatch({\n        type: 'SET_ANALYSIS_TABLE_DATA',\n        payload: cadenceType === 'Optimal' ? req.simulateData : req,\n        data: req,\n        cadenceType: cadenceType\n      });\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: false\n        }\n      });\n    };\n  },\n  editSimulate: function editSimulate(reqObj, cadenceType) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.cadenceUrl, \"/ReSimulate\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        var returnStatus = true;\n\n        if (resp.data.status === 'false') {\n          toast.error(resp.data.message, {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false\n            }\n          });\n          returnStatus = false;\n        }\n\n        var uniqueSellThroughValue = new Set(resp.data.overview.sellThrough);\n\n        if (resp.data && resp.data.overview && uniqueSellThroughValue.size === 1 && uniqueSellThroughValue.has('0.0')) {\n          toast.error('Data not found', {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n        }\n\n        if (reqObj.skus === 'all') {\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n            payload: resp.data,\n            isEdit: true\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA',\n            payload: resp.data,\n            data: resp.data,\n            cadenceType: cadenceType,\n            isEdit: true\n          });\n        } else {\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA_BY_SKUS',\n            payload: resp.data,\n            isEdit: true\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA_BY_SKUS',\n            payload: resp.data,\n            data: resp.data,\n            cadenceType: cadenceType,\n            isEdit: true\n          });\n        }\n\n        dispatch({\n          type: 'GET_COLUMNHEADERS'\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return {\n          status: returnStatus\n        };\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return {\n          status: false\n        };\n      });\n    };\n  },\n  simulate: function simulate(reqObj, cadenceType, scenarioName, isReoptimize) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.cadenceUrl, \"/CalculationData\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        var returnStatus = true;\n\n        if (resp.data.status === 'false') {\n          toast.error(resp.data.message, {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false\n            }\n          });\n          returnStatus = false;\n        }\n\n        var uniqueSellThroughValue = new Set(resp.data.overview.sellThrough);\n\n        if (resp.data && resp.data.overview && uniqueSellThroughValue.size === 1 && uniqueSellThroughValue.has('0.0')) {\n          toast.error('Data not found', {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n        }\n\n        if (reqObj.skus === 'all') {\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n            payload: resp.data,\n            isEdit: isReoptimize ? isReoptimize : reqObj.isEdit //if true data will show up as editedData\n\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA',\n            payload: resp.data,\n            data: resp.data,\n            cadenceType: cadenceType,\n            isEdit: isReoptimize ? isReoptimize : reqObj.isEdit,\n            scenarioName: scenarioName\n          });\n        } else {\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA_BY_SKUS',\n            payload: resp.data,\n            isEdit: isReoptimize ? isReoptimize : reqObj.isEdit\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA_BY_SKUS',\n            payload: resp.data,\n            data: resp.data,\n            cadenceType: cadenceType,\n            isEdit: isReoptimize ? isReoptimize : reqObj.isEdit\n          });\n        }\n\n        dispatch({\n          type: 'GET_COLUMNHEADERS'\n        }); // dispatch({\n        //   type: 'SET_ANALYSIS_TABLE_DATA',\n        //   payload: resp.data,\n        //   data: resp.data,\n        //   cadenceType,\n        // });\n        // dispatch({\n        //   type: 'LOADER_STATE',\n        //   payload: {\n        //     status: false,\n        //   },\n        // });\n\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return {\n          status: returnStatus\n        };\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return {\n          status: false\n        };\n      });\n    };\n  },\n  savedStatusFalse: function savedStatusFalse(status) {\n    return function (dispatch) {\n      dispatch({\n        type: 'MARKDOWN_SAVED_STATUS',\n        status: status\n      });\n    };\n  },\n  saveData: function saveData(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        url: \"\".concat(config.createMarkdownURL, \"/saveMarkDown/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        toast.success('Data Saved Sucessfully', {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        dispatch({\n          type: 'MARKDOWN_SAVED_STATUS',\n          status: true\n        }); // dispatch({\n        //   type: 'GET_INVENTORY_INFO',\n        //   payload: resp.data,\n        // });\n      }).catch(function (err) {\n        var msg = err && err.response && err.response.data && err.response.data.message ? err.response.data.message : 'Something went wrong!';\n        toast.error(msg, {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  fetchEditPlanData: function fetchEditPlanData(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/markdownDetails/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        if (resp.data && resp.data.status !== 'false') {\n          var dataObj = resp.data.data && resp.data.data[0] && resp.data.data[0].request_obj;\n          var simulateData = Object.values(dataObj.analysisData);\n          var cadenceData = Object.values(dataObj.cadenceData);\n          var skus = dataObj.skus;\n          var weekInfo = pastWeekFutureWeekHandler(dataObj.startDate, dataObj.endDate);\n          dispatch({\n            type: 'GET_EDITPLAN_DETAILS',\n            payload: resp.data.data\n          });\n          dispatch({\n            type: 'GET_CADENCE_DATA',\n            payload: cadenceData,\n            skus: skus,\n            weekInfo: weekInfo\n          });\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n            payload: simulateData[0]\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA',\n            payload: simulateData[0],\n            cadenceType: 'Optimal',\n            comparisonData: []\n          });\n        }\n\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return resp.data.data;\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return [];\n      });\n    };\n  },\n  fetchStyleColorData: function fetchStyleColorData(reqObj, cadenceType) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getMarkdownStyleColorData/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        var returnStatus = true;\n\n        if (resp.data.status === 'false') {\n          toast.error(resp.data.message, {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false\n            }\n          });\n          returnStatus = false;\n        }\n\n        var uniqueSellThroughValue = new Set(resp.data.data[0].overview.sellThrough);\n\n        if (resp.data && resp.data.data && resp.data.data[0] && resp.data.data[0].overview && uniqueSellThroughValue.size === 1 && uniqueSellThroughValue.has('0.0')) {\n          toast.error('Data not found', {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n        }\n\n        dispatch({\n          type: 'GET_MDANALYSIS_GRAPH_DATA_BY_SKUS_STYLE',\n          payload: resp.data.data[0]\n        });\n        dispatch({\n          type: 'SET_ANALYSIS_TABLE_DATA_BY_SKUS_STYLE',\n          payload: resp.data.data[0],\n          data: resp.data.data[0],\n          cadenceType: cadenceType\n        });\n        dispatch({\n          type: 'GET_COLUMNHEADERS'\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return {\n          status: returnStatus\n        };\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return {\n          status: false\n        };\n      });\n    };\n  },\n  fetchCustomStyleDetails: function fetchCustomStyleDetails(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getStyleDetails/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        dispatch({\n          type: 'SET_CUSTOM_STYLE_INFO',\n          payload: resp.data.data\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return resp.data.data;\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return [];\n      });\n    };\n  },\n  fetchReoptimizeData: function fetchReoptimizeData(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getSimulationData/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        if (resp.data && resp.data.data[0] && resp.data.data[0].status == 'success') {\n          var cadenceOutput = resp && resp.data && resp.data.data[0] && resp.data.data[0].output;\n          var cadenceInput = resp && resp.data && resp.data.data[0] && resp.data.data[0].input;\n          var skus = [];\n\n          if (cadenceOutput.skus && cadenceOutput.skus.length) {\n            skus = cadenceOutput.skus.map(function (sku) {\n              return {\n                label: sku,\n                value: sku\n              };\n            });\n          }\n\n          var weekInfo = pastWeekFutureWeekHandler(cadenceInput.startDate, cadenceInput.endDate);\n          dispatch({\n            type: 'GET_REOPTIMIZED_DATA',\n            payload: {\n              cadenceData: [cadenceOutput.cadenceData],\n              csv_names: cadenceOutput.csv_names,\n              skus: skus,\n              savedData: cadenceOutput.saveData,\n              weekInfo: weekInfo\n            }\n          });\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n            payload: cadenceOutput.simulateData,\n            isEdit: true\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA',\n            payload: cadenceOutput.simulateData,\n            data: cadenceOutput,\n            cadenceType: 'Optimal',\n            isEdit: true\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false\n            }\n          });\n        } else {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false\n            }\n          });\n          toast.error(resp.data.data[0].message, {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n        } // dispatch({\n        //   type: 'LOADER_STATE',\n        //   payload: {\n        //     status: false,\n        //   },\n        // });\n\n\n        return resp.data && resp.data.data;\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return [];\n      });\n    };\n  },\n  getNotificationList: function getNotificationList() {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getNotifications/\"),\n        method: 'GET'\n      }).then(function (resp) {\n        dispatch({\n          type: 'SET_SIMULATION_ID',\n          payload: resp.data && Array.isArray(resp.data.data) && resp.data.data[0] && resp.data.data[0].array_agg\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return resp.data && resp.data.data;\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  }\n};\nexport default manuallyCreateMdActions;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/manuallyCreateMdActions.js"],"names":["axios","config","toast","moment","pastWeekFutureWeekHandler","startDate","endDate","calPastWeeks","calFutureWeeks","crrntDate","format","i","add","isSameOrBefore","push","weekNum","week","yearNum","year","manuallyCreateMdActions","onResetInventoryInfo","dispatch","type","onResetEditedInfo","setSimulationId","id","payload","fetchInventoryInfo","reqObj","status","url","createMarkdownURL","method","data","then","resp","store_data","length","error","autoClose","hideProgressBar","catch","err","message","fetchOfferDetails","fixedPrice","percentOff","find","item","offer_type","discountOff","min","min_price","max","max_price","interval","fetchCadence","cadenceOutput","output","cadenceInput","input","skus","map","sku","label","value","cadenceData","csv_names","savedData","saveData","simulateData","isEdit","cadenceType","comparisonData","fetchSkuAndCsv","cadenceUrl","updateAnalysisData","req","editSimulate","returnStatus","uniqueSellThroughValue","Set","overview","sellThrough","size","has","simulate","scenarioName","isReoptimize","savedStatusFalse","success","msg","response","fetchEditPlanData","dataObj","request_obj","Object","values","analysisData","weekInfo","fetchStyleColorData","fetchCustomStyleDetails","fetchReoptimizeData","getNotificationList","Array","isArray","array_agg"],"mappings":"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","sourcesContent":["import axios from '../utils/axios';\nimport { config } from '../utils/config';\nimport { toast } from 'react-toastify';\nimport moment from 'moment';\n\nfunction pastWeekFutureWeekHandler(startDate, endDate) {\n  let calPastWeeks = [];\n  let calFutureWeeks = [];\n  let crrntDate = moment().format('YYYY-MM-DD');\n\n  for (let i = startDate; i <= endDate; i = moment(i).add(1, 'week').format('YYYY-MM-DD')) {\n    if (moment(i).isSameOrBefore(crrntDate)) {\n      calPastWeeks.push({\n        weekNum: moment(i).week(),\n        yearNum: moment(i).year(),\n      });\n    } else {\n      calFutureWeeks.push({\n        weekNum: moment(i).week(),\n        yearNum: moment(i).year(),\n      });\n    }\n  }\n  return {\n    calPastWeeks,\n    calFutureWeeks,\n  };\n}\n\nconst manuallyCreateMdActions = {\n  onResetInventoryInfo: () => {\n    return (dispatch) => {\n      dispatch({\n        type: 'RESET_INVENTORY_INFO_DATA',\n      });\n    };\n  },\n  onResetEditedInfo: () => {\n    return (dispatch) => {\n      dispatch({\n        type: 'RESET_EDITED_INFO_DATA',\n      });\n    };\n  },\n  setSimulationId: (id) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'SET_SIMULATION_ID',\n        payload: id,\n      });\n    };\n  },\n  fetchInventoryInfo: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        url: `${config.createMarkdownURL}/getInventoryInfo/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          if (resp.data && resp.data.data && resp.data.data.store_data.length <= 0) {\n            toast.error(\n              `Current filter selection doesn't have inventory please retry with different selection`,\n              {\n                autoClose: 15000,\n                hideProgressBar: true,\n              }\n            );\n          }\n          dispatch({\n            type: 'GET_INVENTORY_INFO',\n            payload: resp.data.data,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        })\n        .catch((err) => {\n          toast.error(err.message, {\n            autoClose: 15000,\n            hideProgressBar: true,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n  fetchOfferDetails: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/getOfferDetails/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          dispatch({\n            type: 'GET_OFFER_DETAILS',\n            payload: resp.data.data,\n          });\n          let fixedPrice,\n            percentOff = '';\n          if (resp.data && resp.data.data.length) {\n            // fixedPrice = resp.data.data.find((item) => item.offer_type === 'fixed_price');\n            percentOff = resp.data.data.find((item) => item.offer_type === 'percent_off');\n          }\n          // let discountPP = {\n          //   min: fixedPrice.min_price,\n          //   max: fixedPrice.max_price,\n          //   interval: fixedPrice.interval,\n          // };\n          let discountOff = {\n            min: percentOff.min_price,\n            max: percentOff.max_price,\n            interval: percentOff.interval,\n          };\n          dispatch({\n            type: 'SET_OFFER_DETAILS',\n            // discountPP: discountPP,\n            discountOff: discountOff,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n  fetchCadence: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/getSimulationData/`,\n        // url: `${config.createMarkdownURL}/MarkdownOptimization/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          if (resp.data && resp.data.data[0] && resp.data.data[0].status == 'success') {\n            let cadenceOutput = resp && resp.data && resp.data.data[0] && resp.data.data[0].output;\n            let cadenceInput = resp && resp.data && resp.data.data[0] && resp.data.data[0].input;\n            let skus = [];\n            if (cadenceOutput.skus && cadenceOutput.skus.length) {\n              skus = cadenceOutput.skus.map((sku) => {\n                return {\n                  label: sku,\n                  value: sku,\n                };\n              });\n            }\n            dispatch({\n              type: 'SET_CADENCE_INPUT',\n              payload: cadenceInput,\n            });\n            dispatch({\n              type: 'GET_CADENCE_DATA',\n              payload: [cadenceOutput.cadenceData],\n              csv_names: cadenceOutput.csv_names,\n              skus: skus,\n              savedData: cadenceOutput.saveData,\n            });\n            dispatch({\n              type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n              payload: cadenceOutput.simulateData,\n              isEdit: reqObj.isEdit,\n            });\n            dispatch({\n              type: 'SET_ANALYSIS_TABLE_DATA',\n              payload: cadenceOutput.simulateData,\n              data: cadenceOutput,\n              cadenceType: 'Optimal',\n              comparisonData: [],\n              isEdit: reqObj.isEdit,\n            });\n          } else {\n            toast.error(resp.data.data[0].message, {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n          }\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return resp.data && resp.data.data;\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n  fetchSkuAndCsv: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        // url: `${config.createMarkdownURL}/generateCadence/`,\n        url: `${config.cadenceUrl}/MarkdownOptimization`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          let skus = [];\n          if (resp.data.skus && resp.data.skus.length) {\n            skus = resp.data.skus.map((sku) => {\n              return {\n                label: sku,\n                value: sku,\n              };\n            });\n          }\n          dispatch({\n            type: 'GET_SKUS_AND_CSV',\n            csv_names: resp.data.csv_names,\n            skus: skus,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        })\n        .catch((err) => {\n          toast.error(err.message, {\n            autoClose: 15000,\n            hideProgressBar: true,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n  updateAnalysisData: (req, cadenceType) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n        payload: cadenceType === 'Optimal' ? req.simulateData : req,\n      });\n      // if (this.state.defaultActiveKey === 'Optimal') {\n      //   obj.analysisData[key] = this.props.analysisData[this.state.defaultActiveKey]\n      //     ? this.props.analysisData[this.state.defaultActiveKey].simulateData\n      //     : [];\n      // } else {\n      //   const { analysisTabledata, detailed, overview } = this.props.analysisData[\n      //     this.state.defaultActiveKey\n      //   ];\n      //   obj.analysisData[key] = { analysisTabledata, detailed, overview };\n      // }\n      dispatch({\n        type: 'SET_ANALYSIS_TABLE_DATA',\n        payload: cadenceType === 'Optimal' ? req.simulateData : req,\n        data: req,\n        cadenceType,\n      });\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: false,\n        },\n      });\n    };\n  },\n  editSimulate: (reqObj, cadenceType) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.cadenceUrl}/ReSimulate`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          let returnStatus = true;\n          if (resp.data.status === 'false') {\n            toast.error(resp.data.message, {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n            dispatch({\n              type: 'LOADER_STATE',\n              payload: {\n                status: false,\n              },\n            });\n            returnStatus = false;\n          }\n          let uniqueSellThroughValue = new Set(resp.data.overview.sellThrough);\n          if (\n            resp.data &&\n            resp.data.overview &&\n            uniqueSellThroughValue.size === 1 &&\n            uniqueSellThroughValue.has('0.0')\n          ) {\n            toast.error('Data not found', {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n          }\n          if (reqObj.skus === 'all') {\n            dispatch({\n              type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n              payload: resp.data,\n              isEdit: true,\n            });\n            dispatch({\n              type: 'SET_ANALYSIS_TABLE_DATA',\n              payload: resp.data,\n              data: resp.data,\n              cadenceType,\n              isEdit: true,\n            });\n          } else {\n            dispatch({\n              type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA_BY_SKUS',\n              payload: resp.data,\n              isEdit: true,\n            });\n            dispatch({\n              type: 'SET_ANALYSIS_TABLE_DATA_BY_SKUS',\n              payload: resp.data,\n              data: resp.data,\n              cadenceType,\n              isEdit: true,\n            });\n          }\n          dispatch({\n            type: 'GET_COLUMNHEADERS',\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return { status: returnStatus };\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n\n          return { status: false };\n        });\n    };\n  },\n  simulate: (reqObj, cadenceType, scenarioName, isReoptimize) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.cadenceUrl}/CalculationData`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          let returnStatus = true;\n          if (resp.data.status === 'false') {\n            toast.error(resp.data.message, {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n            dispatch({\n              type: 'LOADER_STATE',\n              payload: {\n                status: false,\n              },\n            });\n            returnStatus = false;\n          }\n          let uniqueSellThroughValue = new Set(resp.data.overview.sellThrough);\n          if (\n            resp.data &&\n            resp.data.overview &&\n            uniqueSellThroughValue.size === 1 &&\n            uniqueSellThroughValue.has('0.0')\n          ) {\n            toast.error('Data not found', {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n          }\n          if (reqObj.skus === 'all') {\n            dispatch({\n              type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n              payload: resp.data,\n              isEdit: isReoptimize ? isReoptimize : reqObj.isEdit, //if true data will show up as editedData\n            });\n            dispatch({\n              type: 'SET_ANALYSIS_TABLE_DATA',\n              payload: resp.data,\n              data: resp.data,\n              cadenceType,\n              isEdit: isReoptimize ? isReoptimize : reqObj.isEdit,\n              scenarioName,\n            });\n          } else {\n            dispatch({\n              type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA_BY_SKUS',\n              payload: resp.data,\n              isEdit: isReoptimize ? isReoptimize : reqObj.isEdit,\n            });\n            dispatch({\n              type: 'SET_ANALYSIS_TABLE_DATA_BY_SKUS',\n              payload: resp.data,\n              data: resp.data,\n              cadenceType,\n              isEdit: isReoptimize ? isReoptimize : reqObj.isEdit,\n            });\n          }\n          dispatch({\n            type: 'GET_COLUMNHEADERS',\n          });\n          // dispatch({\n          //   type: 'SET_ANALYSIS_TABLE_DATA',\n          //   payload: resp.data,\n          //   data: resp.data,\n          //   cadenceType,\n          // });\n          // dispatch({\n          //   type: 'LOADER_STATE',\n          //   payload: {\n          //     status: false,\n          //   },\n          // });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return { status: returnStatus };\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n\n          return { status: false };\n        });\n    };\n  },\n  savedStatusFalse: (status) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'MARKDOWN_SAVED_STATUS',\n        status,\n      });\n    };\n  },\n  saveData: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        url: `${config.createMarkdownURL}/saveMarkDown/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          toast.success('Data Saved Sucessfully', {\n            autoClose: 15000,\n            hideProgressBar: true,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          dispatch({\n            type: 'MARKDOWN_SAVED_STATUS',\n            status: true,\n          });\n          // dispatch({\n          //   type: 'GET_INVENTORY_INFO',\n          //   payload: resp.data,\n          // });\n        })\n        .catch((err) => {\n          let msg =\n            err && err.response && err.response.data && err.response.data.message\n              ? err.response.data.message\n              : 'Something went wrong!';\n          toast.error(msg, {\n            autoClose: 15000,\n            hideProgressBar: true,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n  fetchEditPlanData: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/markdownDetails/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          if (resp.data && resp.data.status !== 'false') {\n            let dataObj = resp.data.data && resp.data.data[0] && resp.data.data[0].request_obj;\n\n            let simulateData = Object.values(dataObj.analysisData);\n            let cadenceData = Object.values(dataObj.cadenceData);\n            let skus = dataObj.skus;\n            let weekInfo = pastWeekFutureWeekHandler(dataObj.startDate, dataObj.endDate);\n\n            dispatch({\n              type: 'GET_EDITPLAN_DETAILS',\n              payload: resp.data.data,\n            });\n\n            dispatch({\n              type: 'GET_CADENCE_DATA',\n              payload: cadenceData,\n              skus: skus,\n              weekInfo,\n            });\n\n            dispatch({\n              type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n              payload: simulateData[0],\n            });\n\n            dispatch({\n              type: 'SET_ANALYSIS_TABLE_DATA',\n              payload: simulateData[0],\n              cadenceType: 'Optimal',\n              comparisonData: [],\n            });\n          }\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return resp.data.data;\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return [];\n        });\n    };\n  },\n  fetchStyleColorData: (reqObj, cadenceType) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/getMarkdownStyleColorData/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          let returnStatus = true;\n          if (resp.data.status === 'false') {\n            toast.error(resp.data.message, {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n            dispatch({\n              type: 'LOADER_STATE',\n              payload: {\n                status: false,\n              },\n            });\n            returnStatus = false;\n          }\n          let uniqueSellThroughValue = new Set(resp.data.data[0].overview.sellThrough);\n          if (\n            resp.data &&\n            resp.data.data &&\n            resp.data.data[0] &&\n            resp.data.data[0].overview &&\n            uniqueSellThroughValue.size === 1 &&\n            uniqueSellThroughValue.has('0.0')\n          ) {\n            toast.error('Data not found', {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n          }\n          dispatch({\n            type: 'GET_MDANALYSIS_GRAPH_DATA_BY_SKUS_STYLE',\n            payload: resp.data.data[0],\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA_BY_SKUS_STYLE',\n            payload: resp.data.data[0],\n            data: resp.data.data[0],\n            cadenceType,\n          });\n          dispatch({\n            type: 'GET_COLUMNHEADERS',\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return { status: returnStatus };\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n\n          return { status: false };\n        });\n    };\n  },\n  fetchCustomStyleDetails: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/getStyleDetails/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          dispatch({\n            type: 'SET_CUSTOM_STYLE_INFO',\n            payload: resp.data.data,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return resp.data.data;\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return [];\n        });\n    };\n  },\n  fetchReoptimizeData: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/getSimulationData/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          if (resp.data && resp.data.data[0] && resp.data.data[0].status == 'success') {\n            let cadenceOutput = resp && resp.data && resp.data.data[0] && resp.data.data[0].output;\n            let cadenceInput = resp && resp.data && resp.data.data[0] && resp.data.data[0].input;\n            let skus = [];\n            if (cadenceOutput.skus && cadenceOutput.skus.length) {\n              skus = cadenceOutput.skus.map((sku) => {\n                return {\n                  label: sku,\n                  value: sku,\n                };\n              });\n            }\n            let weekInfo = pastWeekFutureWeekHandler(cadenceInput.startDate, cadenceInput.endDate);\n\n            dispatch({\n              type: 'GET_REOPTIMIZED_DATA',\n              payload: {\n                cadenceData: [cadenceOutput.cadenceData],\n                csv_names: cadenceOutput.csv_names,\n                skus,\n                savedData: cadenceOutput.saveData,\n                weekInfo,\n              },\n            });\n            dispatch({\n              type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n              payload: cadenceOutput.simulateData,\n              isEdit: true,\n            });\n            dispatch({\n              type: 'SET_ANALYSIS_TABLE_DATA',\n              payload: cadenceOutput.simulateData,\n              data: cadenceOutput,\n              cadenceType: 'Optimal',\n              isEdit: true,\n            });\n            dispatch({\n              type: 'LOADER_STATE',\n              payload: {\n                status: false,\n              },\n            });\n          } else {\n            dispatch({\n              type: 'LOADER_STATE',\n              payload: {\n                status: false,\n              },\n            });\n            toast.error(resp.data.data[0].message, {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n          }\n          // dispatch({\n          //   type: 'LOADER_STATE',\n          //   payload: {\n          //     status: false,\n          //   },\n          // });\n          return resp.data && resp.data.data;\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return [];\n        });\n    };\n  },\n  getNotificationList: () => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/getNotifications/`,\n        method: 'GET',\n      })\n        .then((resp) => {\n          dispatch({\n            type: 'SET_SIMULATION_ID',\n            payload:\n              resp.data &&\n              Array.isArray(resp.data.data) &&\n              resp.data.data[0] &&\n              resp.data.data[0].array_agg,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return resp.data && resp.data.data;\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n};\nexport default manuallyCreateMdActions;\n"]},"metadata":{},"sourceType":"module"}