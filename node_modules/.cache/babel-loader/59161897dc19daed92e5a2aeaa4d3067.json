{"ast":null,"code":"var _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/draftStatus/status/coldef.js\";\nimport React from 'react';\nimport { toPercentage } from '../../../helper/formatter';\nimport moment from 'moment';\n\nfunction StatusCellStyling(_ref) {\n  var value = _ref.value;\n  console.log(value, 'vvvvvvvvalalla');\n\n  switch (value) {\n    case 'rejected':\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-ban fa-lg\",\n        \"aria-hidden\": \"true\",\n        style: {\n          color: '#D84039'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }), ' ', value, \" \\xA0 \\xA0\", ' ', React.createElement(\"i\", {\n        className: \"fa fa-commenting fa-lg\",\n        \"aria-hidden\": \"true\",\n        style: {\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }));\n\n    case 'draft':\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, value, \" \\xA0 \\xA0\", ' ');\n\n    case 'pending':\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-exclamation-circle fa-lg\",\n        style: {\n          color: '#E0D337'\n        },\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), ' ', value);\n\n    case 'approved':\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-check-circle fa-lg\",\n        \"aria-hidden\": \"true\",\n        style: {\n          color: '#59C770'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), ' ', value);\n\n    default:\n      return null;\n  }\n}\n\nexport default (function () {\n  var colDef = [{\n    Header: 'MD Plan',\n    accessor: 'md_plan',\n    disableGroupBy: true,\n    width: 50,\n    // isGroupBy: false,\n    align: 'left',\n    enableRowSpan: true // aggregate: 'uniqueCount',\n    // Aggregated: ({ value }) => `${value} scenario`,\n\n  }, {\n    Header: 'Scenario',\n    accessor: 'scenario',\n    disableGroupBy: true,\n    enableRowSpan: true,\n    // isGroupBy: false,\n    width: 50 // aggregate: 'uniqueCount',\n    // Aggregated: ({ value }) => `${value} scenario`,\n\n  }, {\n    // Build our expander column\n    id: 'expander',\n    // Make sure it has an ID\n    // Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n    //   <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}</span>\n    // ),\n    Header: 'Date Range',\n    width: 15,\n    Cell: function Cell(_ref2) {\n      var row = _ref2.row;\n      // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n      // to build the toggle for expanding a row\n      console.log('czseferuuuuuuu', row);\n      return row.canExpand ? React.createElement(\"span\", Object.assign({}, row.getToggleRowExpandedProps({\n        style: {\n          // We can even use the row.depth property\n          // and paddingLeft to indicate the depth\n          // of the row\n          paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n        }\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), moment(row.original.start_date).format('YYYY/MM/DD'), \" -\", ' ', moment(row.original.end_date).format('YYYY/MM/DD') + '  ', row.isExpanded ? React.createElement(\"i\", {\n        class: \"fa fa-angle-down expanded-icon-size\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }) : React.createElement(\"i\", {\n        class: \"fa fa-angle-right expanded-icon-size\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })) : null;\n    }\n  }, {\n    Header: 'Time Period',\n    accessor: 'week_num',\n    disableGroupBy: false,\n    isGroupBy: false,\n    width: 50,\n    // aggregate: 'uniqueCount',\n    Aggregated: function Aggregated(_ref3) {\n      var value = _ref3.value,\n          row = _ref3.row;\n      return \"weeks (\".concat(row.subRows.length, \")\");\n    }\n  }, {\n    Header: 'Sell through%',\n    accessor: 'sell_through',\n    disableGroupBy: true,\n    width: 50,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    },\n    aggregate: 'sum',\n    Aggregated: function Aggregated(_ref4) {\n      var value = _ref4.value;\n      return \"\".concat(value);\n    }\n  }, {\n    Header: 'Markdown %',\n    accessor: 'markdown_perc',\n    disableGroupBy: true,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    }\n  }, {\n    Header: 'Margin%',\n    accessor: 'margin_perc',\n    disableGroupBy: true,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    } // Aggregated: ({ value, row }) => ` ${row.overall_aum}`,\n\n  }, {\n    Header: 'Aum',\n    accessor: 'aum',\n    disableGroupBy: true,\n    Aggregated: function Aggregated(row) {\n      console.log(row.rows, 'anu');\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, row.value);\n    }\n  }, {\n    Header: 'Aur',\n    accessor: 'aur',\n    disableGroupBy: true\n  }, {\n    Header: 'Planned Units',\n    accessor: 'plannedUnits',\n    disableGroupBy: true\n  }, {\n    Header: 'Actual Units',\n    accessor: 'actualUnits',\n    disableGroupBy: true\n  }, {\n    Header: 'Revenue',\n    accessor: 'revenue$',\n    disableGroupBy: true,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    }\n  }, {\n    Header: 'Status',\n    accessor: 'status',\n    disableGroupBy: true,\n    Cell: StatusCellStyling // aggregate: 'average',\n    // Aggregated: ({ value }) => `${value}`,\n\n  }];\n  return colDef;\n});","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/draftStatus/status/coldef.js"],"names":["React","toPercentage","moment","StatusCellStyling","value","console","log","color","cursor","colDef","Header","accessor","disableGroupBy","width","align","enableRowSpan","id","Cell","row","canExpand","getToggleRowExpandedProps","style","paddingLeft","depth","original","start_date","format","end_date","isExpanded","isGroupBy","Aggregated","subRows","length","props","aggregate","rows"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { toPercentage } from '../../../helper/formatter';\nimport moment from 'moment';\n\nfunction StatusCellStyling({ value }) {\n  console.log(value, 'vvvvvvvvalalla');\n  switch (value) {\n    case 'rejected':\n      return (\n        <span>\n          <i className=\"fa fa-ban fa-lg\" aria-hidden=\"true\" style={{ color: '#D84039' }}></i>{' '}\n          {value} &nbsp; &nbsp;{' '}\n          <i\n            className=\"fa fa-commenting fa-lg\"\n            aria-hidden=\"true\"\n            style={{ cursor: 'pointer' }}></i>\n        </span>\n      );\n    case 'draft':\n      return (\n        <span>\n          {/* <i className=\"fa fa-ban fa-lg\" aria-hidden=\"true\" style={{ color: '#D84039' }}></i>{' '} */}\n          {value} &nbsp; &nbsp;{' '}\n        </span>\n      );\n    case 'pending':\n      return (\n        <span>\n          <i\n            className=\"fa fa-exclamation-circle fa-lg\"\n            style={{ color: '#E0D337' }}\n            aria-hidden=\"true\"></i>{' '}\n          {value}\n        </span>\n      );\n    case 'approved':\n      return (\n        <span>\n          <i\n            className=\"fa fa-check-circle fa-lg\"\n            aria-hidden=\"true\"\n            style={{ color: '#59C770' }}></i>{' '}\n          {value}\n        </span>\n      );\n\n    default:\n      return null;\n  }\n}\n\nexport default () => {\n  const colDef = [\n    {\n      Header: 'MD Plan',\n      accessor: 'md_plan',\n      disableGroupBy: true,\n      width: 50,\n      // isGroupBy: false,\n      align: 'left',\n      enableRowSpan: true,\n      // aggregate: 'uniqueCount',\n      // Aggregated: ({ value }) => `${value} scenario`,\n    },\n    {\n      Header: 'Scenario',\n      accessor: 'scenario',\n      disableGroupBy: true,\n      enableRowSpan: true,\n      // isGroupBy: false,\n      width: 50,\n      // aggregate: 'uniqueCount',\n      // Aggregated: ({ value }) => `${value} scenario`,\n    },\n    {\n      // Build our expander column\n      id: 'expander', // Make sure it has an ID\n      // Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n      //   <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}</span>\n      // ),\n      Header: 'Date Range',\n      width: 15,\n      Cell: ({ row }) => {\n        // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n        // to build the toggle for expanding a row\n        console.log('czseferuuuuuuu', row);\n\n        return row.canExpand ? (\n          <span\n            {...row.getToggleRowExpandedProps({\n              style: {\n                // We can even use the row.depth property\n                // and paddingLeft to indicate the depth\n                // of the row\n                paddingLeft: `${row.depth * 2}rem`,\n              },\n            })}>\n            {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n            {moment(row.original.end_date).format('YYYY/MM/DD') + '  '}\n            {row.isExpanded ? (\n              <i class=\"fa fa-angle-down expanded-icon-size\" aria-hidden=\"true\"></i>\n            ) : (\n              <i class=\"fa fa-angle-right expanded-icon-size\" aria-hidden=\"true\"></i>\n            )}\n          </span>\n        ) : null;\n      },\n    },\n    {\n      Header: 'Time Period',\n      accessor: 'week_num',\n      disableGroupBy: false,\n      isGroupBy: false,\n      width: 50,\n      // aggregate: 'uniqueCount',\n      Aggregated: ({ value, row }) => `weeks (${row.subRows.length})`,\n    },\n    {\n      Header: 'Sell through%',\n      accessor: 'sell_through',\n      disableGroupBy: true,\n      width: 50,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n      aggregate: 'sum',\n      Aggregated: ({ value }) => `${value}`,\n    },\n    {\n      Header: 'Markdown %',\n      accessor: 'markdown_perc',\n      disableGroupBy: true,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n    },\n\n    {\n      Header: 'Margin%',\n      accessor: 'margin_perc',\n      disableGroupBy: true,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n      // Aggregated: ({ value, row }) => ` ${row.overall_aum}`,\n    },\n    {\n      Header: 'Aum',\n      accessor: 'aum',\n      disableGroupBy: true,\n      Aggregated: (row) => {\n        console.log(row.rows, 'anu');\n        return <span>{row.value}</span>;\n      },\n    },\n    {\n      Header: 'Aur',\n      accessor: 'aur',\n      disableGroupBy: true,\n    },\n    {\n      Header: 'Planned Units',\n      accessor: 'plannedUnits',\n      disableGroupBy: true,\n    },\n    {\n      Header: 'Actual Units',\n      accessor: 'actualUnits',\n      disableGroupBy: true,\n    },\n    {\n      Header: 'Revenue',\n      accessor: 'revenue$',\n      disableGroupBy: true,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n    },\n    {\n      Header: 'Status',\n      accessor: 'status',\n      disableGroupBy: true,\n      Cell: StatusCellStyling,\n      // aggregate: 'average',\n      // Aggregated: ({ value }) => `${value}`,\n    },\n  ];\n  return colDef;\n};\n"]},"metadata":{},"sourceType":"module"}