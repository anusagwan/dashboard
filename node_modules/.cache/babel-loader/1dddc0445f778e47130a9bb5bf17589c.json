{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _defineProperty from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/draftStatus/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  li.nav-item {\\n    padding-right: 0;\\n  }\\n\\n  .nav-tabs .nav-item.show .nav-link,\\n  .nav-tabs .nav-link.active {\\n    background: none;\\n    border-bottom: 2px solid #44667a;\\n  }\\n  .nav-tabs .nav-link {\\n    border: 0px;\\n  }\\n  .nav-link {\\n    padding: 0 0.5rem;\\n  }\\n  .nav-tabs {\\n    margin-bottom: 1.3rem;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport LoadingOverlay from '../../utils/Loader';\nimport draftStausAction from '../../actions/draftStausFinalizeAction';\nimport styled from 'styled-components';\nimport Draft from './draft';\nimport Status from './status';\nimport './draftStatus.css';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { toPercentage, toDollarWithlDraft, toUnitDraft } from '../../helper/formatter';\nimport draftColdef from './draft/coldef';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox';\nimport EditMDModal from '../editMDModal';\nimport plannedReportsAction from '../../actions/plannedReportsAction';\n\nfunction FormatterStyling(props, value, val) {\n  var val1 = val || val == 0 ? val : props.value;\n  var props1 = val || val == 0 ? {\n    value: val\n  } : props;\n\n  if (value == 'pvh_units' || value == 'markdown_units' || value == 'overall_pvh_units' || value == 'overall_markdown_units') {\n    return val1 || val1 == 0 ? toUnitDraft(props1) : '-';\n  } else if (value == 'margin_perc' || value == 'overall_margin_perc') {\n    return val1 || val1 == 0 ? toPercentage(props1) : '-';\n  } else if (value == 'revenue$' || value == 'aur' || value == 'margin$' || value == 'aum' || value == 'overall_aum' || value == 'overall_revenue$' || value == 'overall_aur' || value == 'overall_margin$') {\n    return val1 || val1 == 0 ? toDollarWithlDraft(props1) : '-';\n  }\n\n  return '-';\n}\n\nvar DraftStatus =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DraftStatus, _Component);\n\n  function DraftStatus(_props) {\n    var _this;\n\n    _classCallCheck(this, DraftStatus);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DraftStatus).call(this, _props));\n\n    _this.scenarioSelectedHandler = function (value, row) {\n      _this.setState({\n        scenarioSelected: {\n          value: value,\n          row: row\n        }\n      });\n    };\n\n    _this.onToggleTab = function (tab) {\n      _this.setState({\n        toggle: !_this.state.toggle,\n        currentTab: tab\n      });\n    };\n\n    _this.onHandleSelect = function (selOptions, proceed) {\n      var _this$state = _this.state,\n          currentTab = _this$state.currentTab,\n          draftSelectedItems = _this$state.draftSelectedItems,\n          statusSelectedItems = _this$state.statusSelectedItems,\n          draftColumns = _this$state.draftColumns,\n          statusColumns = _this$state.statusColumns;\n      var selectedItems = currentTab === 'draft' ? draftSelectedItems : statusSelectedItems;\n      var columns = currentTab === 'draft' ? draftColumns : statusColumns;\n\n      if (!_.isEqual(selectedItems, selOptions) || proceed) {\n        var headers = _.cloneDeep(columns);\n\n        _.remove(headers, function (item) {\n          return item.metric;\n        });\n\n        selOptions.forEach(function (item) {\n          var newTableCols = headers.filter(function (a) {\n            return a.accessor === item.value;\n          });\n\n          if (newTableCols.length == 0) {\n            var spliceAt = headers.length - 1;\n            headers.splice(spliceAt, 0, {\n              Header: item.label,\n              accessor: item.value,\n              // Cell: (props) => {\n              // },\n              Cell: function Cell(props) {\n                return FormatterStyling(props, item.value);\n              },\n              Aggregated: function Aggregated(props) {\n                var accessorName = \"overall_\".concat(item.value);\n                var val = props.row.original[accessorName];\n                return FormatterStyling(props, accessorName, val); // return <span>{val ? Math.round(val) : '-'}</span>;\n              },\n              metric: true\n            });\n          }\n        });\n\n        _this.setState(function (state) {\n          if (state.currentTab === 'draft') {\n            return {\n              draftColumns: headers,\n              draftSelectedItems: selOptions\n            };\n          }\n\n          return {\n            statusColumns: headers,\n            statusSelectedItems: selOptions\n          };\n        });\n      }\n    };\n\n    _this.onHandleCheckBox = function (e, label, index) {\n      var _this$state2 = _this.state,\n          currentTab = _this$state2.currentTab,\n          draftSelectedItems = _this$state2.draftSelectedItems,\n          statusSelectedItems = _this$state2.statusSelectedItems,\n          draftSelLabels = _this$state2.draftSelLabels,\n          statusSelLabels = _this$state2.statusSelLabels;\n      var selectedItems = currentTab === 'draft' ? draftSelectedItems : statusSelectedItems;\n      var selLabels = currentTab === 'draft' ? draftSelLabels : statusSelLabels;\n      var getColumnHeaders = currentTab === 'draft' ? _this.props.draftColumnHeaders : _this.props.statusColumnHeaders; //adding\n\n      if (e.target.checked) {\n        if (selLabels.indexOf(label) === -1) {\n          var labels = [].concat(_toConsumableArray(selLabels), [label]);\n          var tempArr = [];\n          labels.forEach(function (label) {\n            var columns = getColumnHeaders[label];\n            var labelColumns = Object.keys(columns);\n            var options = labelColumns.map(function (label) {\n              return {\n                label: label,\n                value: columns[label]\n              };\n            });\n            tempArr.push.apply(tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState(function (state) {\n            if (state.currentTab === 'draft') {\n              return {\n                draftSelLabels: labels,\n                draftColumnOptions: tempArr\n              };\n            }\n\n            return {\n              statusSelLabels: labels,\n              statusColumnOptions: tempArr\n            };\n          });\n        }\n      } else {\n        //removing\n        var _index = selLabels.indexOf(label);\n\n        if (_index !== -1) {\n          var selectedLabel = _.cloneDeep(selLabels);\n\n          selectedLabel.splice(_index, 1);\n          var _tempArr = [];\n          selectedLabel.forEach(function (label) {\n            var columns = getColumnHeaders[label];\n            var labelColumns = Object.keys(columns);\n            var options = labelColumns.map(function (label) {\n              return {\n                label: label,\n                value: columns[label]\n              };\n            });\n\n            _tempArr.push.apply(_tempArr, _toConsumableArray(options));\n          });\n\n          var selectedItemsClone = _.cloneDeep(selectedItems);\n\n          var newSelectedItems = [];\n          var labelArr = Object.keys(getColumnHeaders[label]);\n          selectedItemsClone.forEach(function (item) {\n            if (!labelArr.includes(item.label)) {\n              newSelectedItems.push(item);\n            }\n          });\n\n          _this.onHandleSelect(newSelectedItems);\n\n          _this.setState(function (state) {\n            if (state.currentTab === 'draft') {\n              return {\n                draftSelLabels: selectedLabel,\n                draftColumnOptions: _tempArr,\n                draftSelectedItems: newSelectedItems\n              };\n            }\n\n            return {\n              statusSelLabels: selectedLabel,\n              statusColumnOptions: _tempArr,\n              statusSelectedItems: newSelectedItems\n            };\n          }); // this.setState({\n          //   selLabels: selectedLabel,\n          //   columnOptions: tempArr,\n          //   selectedItems: newSelectedItems,\n          // });\n\n        }\n      }\n    };\n\n    _this.getMarkdowns = function (payload) {\n      _this.props.getMarkdowns(payload).then(function (resp) {\n        var tempStatusObj = {};\n        var markdowns = _this.state.currentTab === 'draft' ? _this.props.draftMarkdowns : _this.props.statusMarkdowns;\n        markdowns.forEach(function (row) {\n          if (tempStatusObj.hasOwnProperty(row.status)) {\n            tempStatusObj[row.status] += 1;\n          } else {\n            tempStatusObj[\"\".concat(row.status)] = 1;\n          }\n        });\n\n        _this.setState({\n          statusCounts: tempStatusObj\n        });\n\n        if (resp && resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n          (function () {\n            var defaultHeader = Object.keys(resp.columnHeaders.default);\n            var setDefaultColDef = draftColdef().filter(function (col) {\n              return defaultHeader.includes(col.Header) || col.Header === 'Time Period' || // (this.state.toggle && col.Header === 'Actions') ||\n              col.id === 'expander' || _this.state.currentTab === 'status' && col.Header === 'Status';\n            });\n            var setDefaultLabel = [];\n            var setDefaultColumnOptions = [];\n            var setDefaultColumnOptions1 = [];\n            var setDefaultItems = [];\n\n            var colHeaders = _.cloneDeep(resp.columnHeaders);\n\n            var labels = Object.keys(colHeaders);\n            labels.splice(labels.indexOf('fixed'), 1);\n            labels.splice(labels.indexOf('default'), 1);\n\n            var _loop = function _loop() {\n              var label = _labels[_i];\n              var labelArray = Object.keys(resp.columnHeaders[label]);\n\n              function diff() {\n                var A = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : labelArray;\n                var B = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultHeader;\n                return A.filter(function (a) {\n                  return B.indexOf(a) !== -1;\n                });\n              }\n\n              if (diff().length) {\n                setDefaultColumnOptions.push.apply(setDefaultColumnOptions, _toConsumableArray(Object.keys(resp.columnHeaders[label])));\n                setDefaultColumnOptions1.push(resp.columnHeaders[label]);\n                setDefaultItems.push.apply(setDefaultItems, _toConsumableArray(diff()));\n                setDefaultLabel.push(label);\n              }\n            };\n\n            for (var _i = 0, _labels = labels; _i < _labels.length; _i++) {\n              _loop();\n            }\n\n            var options = setDefaultColumnOptions.map(function (label) {\n              var find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n              return {\n                label: label,\n                value: find\n              };\n            });\n            var selectedItems = setDefaultItems.map(function (label) {\n              var find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n              return {\n                label: label,\n                value: find\n              };\n            });\n\n            if (_this.state.currentTab === 'status') {\n              var _setDefaultColDef$spl;\n\n              setDefaultColDef.splice(0, 0, (_setDefaultColDef$spl = {\n                Header: 'MD Plan',\n                accessor: 'md_plan',\n                disableGroupBy: true,\n                enableRowSpan: 'markdown_id',\n                filter: function filter(rows, id, filterType) {\n                  return rows.filter(function (row) {\n                    return row.original.md_plan ? row.original.md_plan.startsWith(filterType) : null;\n                  });\n                },\n                Cell: function Cell(_ref) {\n                  var row = _ref.row;\n                  return React.createElement(\"div\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 310\n                    },\n                    __self: this\n                  }, React.createElement(\"span\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 311\n                    },\n                    __self: this\n                  }, row.original.md_plan ? row.original.md_plan : null));\n                },\n                align: 'center'\n              }, _defineProperty(_setDefaultColDef$spl, \"enableRowSpan\", true), _defineProperty(_setDefaultColDef$spl, \"downloadValue\", 'plan'), _setDefaultColDef$spl));\n            }\n\n            if (_this.state.currentTab === 'draft') {\n              var _setDefaultColDef$spl2;\n\n              setDefaultColDef.push({\n                id: 'selection',\n                groupByBoundary: true,\n                Header: 'Actions',\n                // fixed: 'left',\n                Cell: function Cell(props) {\n                  var row = props.row,\n                      rows = props.rows;\n\n                  var mdPlan = row.original.markdown_id,\n                      mainGrp = _.find(rows, {\n                    isSelected: true,\n                    original: {\n                      markdown_id: mdPlan\n                    }\n                  }),\n                      checkboxDisabled = mainGrp && !row.isSelected ? true : false;\n\n                  return row.canExpand ? React.createElement(\"div\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 335\n                    },\n                    __self: this\n                  }, React.createElement(IndeterminateCheckbox, Object.assign({\n                    row: row.id,\n                    onClick: function onClick() {\n                      _this.scenarioSelectedHandler(true, row);\n                    },\n                    disabled: checkboxDisabled\n                  }, row.getToggleRowSelectedProps(), {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 336\n                    },\n                    __self: this\n                  }))) : null;\n                }\n              });\n              setDefaultColDef.splice(0, 0, (_setDefaultColDef$spl2 = {\n                Header: 'MD Plan',\n                accessor: 'md_plan',\n                disableGroupBy: true,\n                enableRowSpan: 'markdown_id',\n                filter: function filter(rows, id, filterType) {\n                  return rows.filter(function (row) {\n                    return row.original.md_plan ? row.original.md_plan.startsWith(filterType) : null;\n                  });\n                },\n                Cell: function Cell(_ref2) {\n                  var row = _ref2.row;\n                  return React.createElement(\"div\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 366\n                    },\n                    __self: this\n                  }, React.createElement(\"span\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 367\n                    },\n                    __self: this\n                  }, row.original.md_plan ? row.original.md_plan : null), React.createElement(\"div\", {\n                    className: \"mt-1 mb-2\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 368\n                    },\n                    __self: this\n                  }, row.original.md_plan ? React.createElement(\"button\", {\n                    className: \"btn btn-secondary\",\n                    onClick: function onClick() {\n                      // this.props.updateSidebar('/vis/Markdown/create-markdown');\n                      // this.props.history.push({\n                      //   pathname: `/vis/Markdown/create-markdown`,\n                      //   state: {\n                      //     isEdit: true,\n                      //     planId: row.original.markdown_id,\n                      //     fromDraft: true,\n                      //   },\n                      // });\n                      _this.setState({\n                        fromDraft: true,\n                        showEditModal: true,\n                        selectedPlanDetails: row.original\n                      });\n                    },\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 370\n                    },\n                    __self: this\n                  }, React.createElement(\"span\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 388\n                    },\n                    __self: this\n                  }, React.createElement(\"i\", {\n                    className: \"fa fa-pencil color-blue\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 389\n                    },\n                    __self: this\n                  }, \"Edit\"))) : ''));\n                },\n                align: 'center'\n              }, _defineProperty(_setDefaultColDef$spl2, \"enableRowSpan\", true), _defineProperty(_setDefaultColDef$spl2, \"downloadValue\", 'plan'), _setDefaultColDef$spl2));\n            }\n\n            _this.setState(function (state) {\n              if (state.currentTab === 'draft') {\n                return {\n                  draftColumns: setDefaultColDef,\n                  draftSelLabels: setDefaultLabel,\n                  draftColumnOptions: options,\n                  draftSelectedItems: selectedItems\n                };\n              }\n\n              return {\n                statusColumns: setDefaultColDef,\n                statusSelLabels: setDefaultLabel,\n                statusColumnOptions: options,\n                statusSelectedItems: selectedItems\n              };\n            }); // this.setState({\n            //   columns: setDefaultColDef,\n            //   selLabels: setDefaultLabel,\n            //   selectedItems: selectedItems,\n            //   columnOptions: options,\n            // });\n\n\n            if (selectedItems) {\n              var filteredHeader = _.find(options, {\n                accessor: selectedItems[0].value\n              });\n\n              if (!filteredHeader) {\n                _this.onHandleSelect(selectedItems, true);\n              }\n            }\n          })();\n        }\n\n        if (resp && !resp.markdown_data.length) {\n          _this.textStrHandler();\n        }\n      });\n    };\n\n    _this.textStrHandler = function (reset) {\n      var currentTab = _this.state.currentTab;\n      if (currentTab === 'draft') _this.setState({\n        draftTextStr: reset ? 'Please select filters to show Markdown plans' : 'No data found. Please try with different filters.'\n      });\n      if (currentTab === 'status') _this.setState({\n        statusTextStr: reset ? 'Please select filters to show Markdown plans' : 'No data found. Please try with different filters.'\n      });\n    };\n\n    _this.showEditModalHandler = function (val) {\n      if (!val) document.body.setAttribute('style', '');\n\n      _this.setState({\n        showEditModal: val\n      });\n    };\n\n    _this.state = {\n      toggle: false,\n      currentTab: _props.location.state && _props.location.state.tab ? _props.location.state.tab : 'draft',\n      draftSelectedItems: [],\n      draftColumnOptions: [],\n      draftSelLabels: [],\n      statusSelectedItems: [],\n      statusColumnOptions: [],\n      statusSelLabels: [],\n      draftColumns: [],\n      statusColumns: [],\n      statusCounts: {},\n      scenarioSelected: {\n        value: false,\n        row: []\n      },\n      draftTextStr: 'Please select filters to show Markdown plans',\n      statusTextStr: 'Please select filters to show Markdown plans',\n      showEditModal: false,\n      selectedPlanDetails: null\n    };\n    return _this;\n  } // componentDidUpdate(props, state) {\n  //   if (state.currentTab !== this.state.currentTab) {\n  //     this.props.setMarkDowns([]);\n  //     this.props.setMDColumnHeaders({});\n  //   }\n  // }\n\n\n  _createClass(DraftStatus, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.setMarkDowns([]);\n      this.props.setMDColumnHeaders({});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Styles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, React.createElement(LoadingOverlay, {\n        loader: this.props.getOverlayLoaderState,\n        spinner: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: this.state.currentTab,\n        id: \"uncontrolled-tab-example\",\n        onSelect: this.onToggleTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        eventKey: \"draft\",\n        title: \"Draft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, React.createElement(Draft, {\n        getMarkdowns: this.getMarkdowns,\n        columns: this.state.draftColumns,\n        scenarioSelectedHandler: this.scenarioSelectedHandler,\n        scenarioSelected: this.state.scenarioSelected,\n        onHandleSelect: this.onHandleSelect,\n        selectedItems: this.state.draftSelectedItems,\n        onHandleCheckBox: this.onHandleCheckBox,\n        columnOptions: this.state.draftColumnOptions,\n        selLabels: this.state.draftSelLabels,\n        draftTextStr: this.state.draftTextStr,\n        textStrHandler: this.textStrHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      })), React.createElement(Tab, {\n        eventKey: \"status\",\n        title: \"Status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, React.createElement(Status, {\n        getMarkdowns: this.getMarkdowns,\n        currentTab: this.state.currentTab,\n        columns: this.state.statusColumns,\n        statusCounts: this.state.statusCounts,\n        onHandleSelect: this.onHandleSelect,\n        selectedItems: this.state.statusSelectedItems,\n        onHandleCheckBox: this.onHandleCheckBox,\n        columnOptions: this.state.statusColumnOptions,\n        selLabels: this.state.statusSelLabels,\n        statusTextStr: this.state.statusTextStr,\n        textStrHandler: this.textStrHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }))), this.state.showEditModal ? React.createElement(EditMDModal, {\n        showEditModalHandler: this.showEditModalHandler,\n        selectedPlanDetails: this.state.selectedPlanDetails,\n        from: \"draft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }) : null));\n    }\n  }]);\n\n  return DraftStatus;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    getOverlayLoaderState: store.loaderReducer.overlayLoaderState,\n    // markdowns: store.draftStatusReducer.markdowns,\n    // getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    getStatusOptions: store.draftStatusReducer.statusOptions,\n    draftMarkdowns: store.draftStatusReducer.draftMarkdowns,\n    statusMarkdowns: store.draftStatusReducer.statusMarkdowns,\n    draftColumnHeaders: store.draftStatusReducer.draftColumnHeaders,\n    statusColumnHeaders: store.draftStatusReducer.statusColumnHeaders\n  };\n};\n\nvar mapActionToProps = {\n  getMarkdowns: draftStausAction.getMarkdowns,\n  setMarkDowns: draftStausAction.setMarkDowns,\n  setMDColumnHeaders: draftStausAction.setMDColumnHeaders,\n  updateSidebar: plannedReportsAction.updateSidebar\n};\nexport default connect(mapStateToProps, mapActionToProps)(withRouter(DraftStatus));\nvar Styles = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/draftStatus/index.js"],"names":["React","Component","withRouter","Tabs","Tab","LoadingOverlay","draftStausAction","styled","Draft","Status","connect","_","toPercentage","toDollarWithlDraft","toUnitDraft","draftColdef","IndeterminateCheckbox","EditMDModal","plannedReportsAction","FormatterStyling","props","value","val","val1","props1","DraftStatus","scenarioSelectedHandler","row","setState","scenarioSelected","onToggleTab","tab","toggle","state","currentTab","onHandleSelect","selOptions","proceed","draftSelectedItems","statusSelectedItems","draftColumns","statusColumns","selectedItems","columns","isEqual","headers","cloneDeep","remove","item","metric","forEach","newTableCols","filter","a","accessor","length","spliceAt","splice","Header","label","Cell","Aggregated","accessorName","original","onHandleCheckBox","e","index","draftSelLabels","statusSelLabels","selLabels","getColumnHeaders","draftColumnHeaders","statusColumnHeaders","target","checked","indexOf","labels","tempArr","labelColumns","Object","keys","options","map","push","draftColumnOptions","statusColumnOptions","selectedLabel","selectedItemsClone","newSelectedItems","labelArr","includes","getMarkdowns","payload","then","resp","tempStatusObj","markdowns","draftMarkdowns","statusMarkdowns","hasOwnProperty","status","statusCounts","columnHeaders","defaultHeader","default","setDefaultColDef","col","id","setDefaultLabel","setDefaultColumnOptions","setDefaultColumnOptions1","setDefaultItems","colHeaders","labelArray","diff","A","B","find","disableGroupBy","enableRowSpan","rows","filterType","md_plan","startsWith","align","groupByBoundary","mdPlan","markdown_id","mainGrp","isSelected","checkboxDisabled","canExpand","getToggleRowSelectedProps","fromDraft","showEditModal","selectedPlanDetails","filteredHeader","markdown_data","textStrHandler","reset","draftTextStr","statusTextStr","showEditModalHandler","document","body","setAttribute","location","setMarkDowns","setMDColumnHeaders","getOverlayLoaderState","mapStateToProps","store","loaderReducer","overlayLoaderState","getStatusOptions","draftStatusReducer","statusOptions","mapActionToProps","updateSidebar","Styles","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport LoadingOverlay from '../../utils/Loader';\nimport draftStausAction from '../../actions/draftStausFinalizeAction';\nimport styled from 'styled-components';\nimport Draft from './draft';\nimport Status from './status';\nimport './draftStatus.css';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { toPercentage, toDollarWithlDraft, toUnitDraft } from '../../helper/formatter';\nimport draftColdef from './draft/coldef';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox';\nimport EditMDModal from '../editMDModal';\nimport plannedReportsAction from '../../actions/plannedReportsAction';\n\nfunction FormatterStyling(props, value, val) {\n  let val1 = val || val == 0 ? val : props.value;\n  let props1 = val || val == 0 ? { value: val } : props;\n  if (\n    value == 'pvh_units' ||\n    value == 'markdown_units' ||\n    value == 'overall_pvh_units' ||\n    value == 'overall_markdown_units'\n  ) {\n    return val1 || val1 == 0 ? toUnitDraft(props1) : '-';\n  } else if (value == 'margin_perc' || value == 'overall_margin_perc') {\n    return val1 || val1 == 0 ? toPercentage(props1) : '-';\n  } else if (\n    value == 'revenue$' ||\n    value == 'aur' ||\n    value == 'margin$' ||\n    value == 'aum' ||\n    value == 'overall_aum' ||\n    value == 'overall_revenue$' ||\n    value == 'overall_aur' ||\n    value == 'overall_margin$'\n  ) {\n    return val1 || val1 == 0 ? toDollarWithlDraft(props1) : '-';\n  }\n  return '-';\n}\n\nclass DraftStatus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false,\n      currentTab:\n        props.location.state && props.location.state.tab ? props.location.state.tab : 'draft',\n      draftSelectedItems: [],\n      draftColumnOptions: [],\n      draftSelLabels: [],\n      statusSelectedItems: [],\n      statusColumnOptions: [],\n      statusSelLabels: [],\n      draftColumns: [],\n      statusColumns: [],\n      statusCounts: {},\n      scenarioSelected: { value: false, row: [] },\n      draftTextStr: 'Please select filters to show Markdown plans',\n      statusTextStr: 'Please select filters to show Markdown plans',\n      showEditModal: false,\n      selectedPlanDetails: null,\n    };\n  }\n\n  // componentDidUpdate(props, state) {\n  //   if (state.currentTab !== this.state.currentTab) {\n  //     this.props.setMarkDowns([]);\n  //     this.props.setMDColumnHeaders({});\n  //   }\n  // }\n  componentWillUnmount() {\n    this.props.setMarkDowns([]);\n    this.props.setMDColumnHeaders({});\n  }\n  scenarioSelectedHandler = (value, row) => {\n    this.setState({ scenarioSelected: { value, row } });\n  };\n  onToggleTab = (tab) => {\n    this.setState({\n      toggle: !this.state.toggle,\n      currentTab: tab,\n    });\n  };\n\n  onHandleSelect = (selOptions, proceed) => {\n    let {\n      currentTab,\n      draftSelectedItems,\n      statusSelectedItems,\n      draftColumns,\n      statusColumns,\n    } = this.state;\n    let selectedItems = currentTab === 'draft' ? draftSelectedItems : statusSelectedItems;\n    let columns = currentTab === 'draft' ? draftColumns : statusColumns;\n    if (!_.isEqual(selectedItems, selOptions) || proceed) {\n      let headers = _.cloneDeep(columns);\n      _.remove(headers, (item) => item.metric);\n\n      selOptions.forEach((item) => {\n        let newTableCols = headers.filter((a) => {\n          return a.accessor === item.value;\n        });\n        if (newTableCols.length == 0) {\n          let spliceAt = headers.length - 1;\n          headers.splice(spliceAt, 0, {\n            Header: item.label,\n            accessor: item.value,\n            // Cell: (props) => {\n            // },\n            Cell: (props) => FormatterStyling(props, item.value),\n            Aggregated: (props) => {\n              let accessorName = `overall_${item.value}`;\n              let val = props.row.original[accessorName];\n              return FormatterStyling(props, accessorName, val);\n\n              // return <span>{val ? Math.round(val) : '-'}</span>;\n            },\n            metric: true,\n          });\n        }\n      });\n      this.setState((state) => {\n        if (state.currentTab === 'draft') {\n          return {\n            draftColumns: headers,\n            draftSelectedItems: selOptions,\n          };\n        }\n        return {\n          statusColumns: headers,\n          statusSelectedItems: selOptions,\n        };\n      });\n    }\n  };\n\n  onHandleCheckBox = (e, label, index) => {\n    let {\n      currentTab,\n      draftSelectedItems,\n      statusSelectedItems,\n      draftSelLabels,\n      statusSelLabels,\n    } = this.state;\n    let selectedItems = currentTab === 'draft' ? draftSelectedItems : statusSelectedItems;\n    let selLabels = currentTab === 'draft' ? draftSelLabels : statusSelLabels;\n    let getColumnHeaders =\n      currentTab === 'draft' ? this.props.draftColumnHeaders : this.props.statusColumnHeaders;\n\n    //adding\n    if (e.target.checked) {\n      if (selLabels.indexOf(label) === -1) {\n        let labels = [...selLabels, label];\n        let tempArr = [];\n        labels.forEach((label) => {\n          let columns = getColumnHeaders[label];\n          let labelColumns = Object.keys(columns);\n          let options = labelColumns.map((label) => {\n            return {\n              label: label,\n              value: columns[label],\n            };\n          });\n          tempArr.push(...options);\n        });\n\n        this.setState((state) => {\n          if (state.currentTab === 'draft') {\n            return {\n              draftSelLabels: labels,\n              draftColumnOptions: tempArr,\n            };\n          }\n          return {\n            statusSelLabels: labels,\n            statusColumnOptions: tempArr,\n          };\n        });\n      }\n    } else {\n      //removing\n      let index = selLabels.indexOf(label);\n      if (index !== -1) {\n        let selectedLabel = _.cloneDeep(selLabels);\n        selectedLabel.splice(index, 1);\n        let tempArr = [];\n        selectedLabel.forEach((label) => {\n          let columns = getColumnHeaders[label];\n          let labelColumns = Object.keys(columns);\n          let options = labelColumns.map((label) => {\n            return {\n              label: label,\n              value: columns[label],\n            };\n          });\n          tempArr.push(...options);\n        });\n        let selectedItemsClone = _.cloneDeep(selectedItems);\n        let newSelectedItems = [];\n        let labelArr = Object.keys(getColumnHeaders[label]);\n        selectedItemsClone.forEach((item) => {\n          if (!labelArr.includes(item.label)) {\n            newSelectedItems.push(item);\n          }\n        });\n\n        this.onHandleSelect(newSelectedItems);\n        this.setState((state) => {\n          if (state.currentTab === 'draft') {\n            return {\n              draftSelLabels: selectedLabel,\n              draftColumnOptions: tempArr,\n              draftSelectedItems: newSelectedItems,\n            };\n          }\n          return {\n            statusSelLabels: selectedLabel,\n            statusColumnOptions: tempArr,\n            statusSelectedItems: newSelectedItems,\n          };\n        });\n        // this.setState({\n        //   selLabels: selectedLabel,\n        //   columnOptions: tempArr,\n        //   selectedItems: newSelectedItems,\n        // });\n      }\n    }\n  };\n\n  getMarkdowns = (payload) => {\n    this.props.getMarkdowns(payload).then((resp) => {\n      let tempStatusObj = {};\n      let markdowns =\n        this.state.currentTab === 'draft' ? this.props.draftMarkdowns : this.props.statusMarkdowns;\n      markdowns.forEach((row) => {\n        if (tempStatusObj.hasOwnProperty(row.status)) {\n          tempStatusObj[row.status] += 1;\n        } else {\n          tempStatusObj[`${row.status}`] = 1;\n        }\n      });\n      this.setState({\n        statusCounts: tempStatusObj,\n      });\n      if (resp && resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n        let defaultHeader = Object.keys(resp.columnHeaders.default);\n\n        let setDefaultColDef = draftColdef().filter(\n          (col) =>\n            defaultHeader.includes(col.Header) ||\n            col.Header === 'Time Period' ||\n            // (this.state.toggle && col.Header === 'Actions') ||\n            col.id === 'expander' ||\n            (this.state.currentTab === 'status' && col.Header === 'Status')\n        );\n        let setDefaultLabel = [];\n        let setDefaultColumnOptions = [];\n        let setDefaultColumnOptions1 = [];\n        let setDefaultItems = [];\n        let colHeaders = _.cloneDeep(resp.columnHeaders);\n        let labels = Object.keys(colHeaders);\n        labels.splice(labels.indexOf('fixed'), 1);\n        labels.splice(labels.indexOf('default'), 1);\n        for (const label of labels) {\n          let labelArray = Object.keys(resp.columnHeaders[label]);\n          function diff(A = labelArray, B = defaultHeader) {\n            return A.filter(function (a) {\n              return B.indexOf(a) !== -1;\n            });\n          }\n\n          if (diff().length) {\n            setDefaultColumnOptions.push(...Object.keys(resp.columnHeaders[label]));\n            setDefaultColumnOptions1.push(resp.columnHeaders[label]);\n            setDefaultItems.push(...diff());\n            setDefaultLabel.push(label);\n          }\n        }\n        let options = setDefaultColumnOptions.map((label) => {\n          let find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n          return {\n            label: label,\n            value: find,\n          };\n        });\n        let selectedItems = setDefaultItems.map((label) => {\n          let find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n          return {\n            label: label,\n            value: find,\n          };\n        });\n        if (this.state.currentTab === 'status') {\n          setDefaultColDef.splice(0, 0, {\n            Header: 'MD Plan',\n            accessor: 'md_plan',\n            disableGroupBy: true,\n            enableRowSpan: 'markdown_id',\n            filter: (rows, id, filterType) =>\n              rows.filter((row) => {\n                return row.original.md_plan ? row.original.md_plan.startsWith(filterType) : null;\n              }),\n            Cell: ({ row }) => (\n              <div>\n                <span>{row.original.md_plan ? row.original.md_plan : null}</span>\n              </div>\n            ),\n            align: 'center',\n            enableRowSpan: true,\n            downloadValue: 'plan',\n          });\n        }\n        if (this.state.currentTab === 'draft') {\n          setDefaultColDef.push({\n            id: 'selection',\n            groupByBoundary: true,\n            Header: 'Actions',\n            // fixed: 'left',\n            Cell: (props) => {\n              let { row, rows } = props;\n              let mdPlan = row.original.markdown_id,\n                mainGrp = _.find(rows, {\n                  isSelected: true,\n                  original: { markdown_id: mdPlan },\n                }),\n                checkboxDisabled = mainGrp && !row.isSelected ? true : false;\n\n              return row.canExpand ? (\n                <div>\n                  <IndeterminateCheckbox\n                    row={row.id}\n                    onClick={() => {\n                      this.scenarioSelectedHandler(true, row);\n                    }}\n                    disabled={checkboxDisabled}\n                    {...row.getToggleRowSelectedProps()}\n                  />\n                  {/* <span className=\"ml-3 align-top\">\n                    <i\n                      onClick={() =>\n                        this.setState({ showEditModal: true, selectedPlanDetails: row.original })\n                      }\n                      className=\"fa fa-pencil color-blue\"\n                    />\n                  </span> */}\n                </div>\n              ) : null;\n            },\n          });\n          setDefaultColDef.splice(0, 0, {\n            Header: 'MD Plan',\n            accessor: 'md_plan',\n            disableGroupBy: true,\n            enableRowSpan: 'markdown_id',\n            filter: (rows, id, filterType) =>\n              rows.filter((row) => {\n                return row.original.md_plan ? row.original.md_plan.startsWith(filterType) : null;\n              }),\n            Cell: ({ row }) => (\n              <div>\n                <span>{row.original.md_plan ? row.original.md_plan : null}</span>\n                <div className=\"mt-1 mb-2\">\n                  {row.original.md_plan ? (\n                    <button\n                      className=\"btn btn-secondary\"\n                      onClick={() => {\n                        // this.props.updateSidebar('/vis/Markdown/create-markdown');\n                        // this.props.history.push({\n                        //   pathname: `/vis/Markdown/create-markdown`,\n                        //   state: {\n                        //     isEdit: true,\n                        //     planId: row.original.markdown_id,\n                        //     fromDraft: true,\n                        //   },\n                        // });\n                        this.setState({\n                          fromDraft: true,\n                          showEditModal: true,\n                          selectedPlanDetails: row.original,\n                        });\n                      }}>\n                      <span>\n                        <i className=\"fa fa-pencil color-blue\">Edit</i>\n                      </span>\n                    </button>\n                  ) : (\n                    ''\n                  )}\n                </div>\n              </div>\n            ),\n            align: 'center',\n            enableRowSpan: true,\n            downloadValue: 'plan',\n          });\n        }\n        this.setState((state) => {\n          if (state.currentTab === 'draft') {\n            return {\n              draftColumns: setDefaultColDef,\n              draftSelLabels: setDefaultLabel,\n              draftColumnOptions: options,\n              draftSelectedItems: selectedItems,\n            };\n          }\n          return {\n            statusColumns: setDefaultColDef,\n            statusSelLabels: setDefaultLabel,\n            statusColumnOptions: options,\n            statusSelectedItems: selectedItems,\n          };\n        });\n        // this.setState({\n        //   columns: setDefaultColDef,\n        //   selLabels: setDefaultLabel,\n        //   selectedItems: selectedItems,\n        //   columnOptions: options,\n        // });\n        if (selectedItems) {\n          let filteredHeader = _.find(options, { accessor: selectedItems[0].value });\n          if (!filteredHeader) {\n            this.onHandleSelect(selectedItems, true);\n          }\n        }\n      }\n      if (resp && !resp.markdown_data.length) {\n        this.textStrHandler();\n      }\n    });\n  };\n  textStrHandler = (reset) => {\n    let { currentTab } = this.state;\n    if (currentTab === 'draft')\n      this.setState({\n        draftTextStr: reset\n          ? 'Please select filters to show Markdown plans'\n          : 'No data found. Please try with different filters.',\n      });\n    if (currentTab === 'status')\n      this.setState({\n        statusTextStr: reset\n          ? 'Please select filters to show Markdown plans'\n          : 'No data found. Please try with different filters.',\n      });\n  };\n\n  showEditModalHandler = (val) => {\n    if (!val) document.body.setAttribute('style', '');\n    this.setState({ showEditModal: val });\n  };\n\n  render() {\n    return (\n      <Styles>\n        <LoadingOverlay loader={this.props.getOverlayLoaderState} spinner>\n          <Tabs\n            defaultActiveKey={this.state.currentTab}\n            id=\"uncontrolled-tab-example\"\n            onSelect={this.onToggleTab}>\n            <Tab eventKey=\"draft\" title=\"Draft\">\n              <Draft\n                getMarkdowns={this.getMarkdowns}\n                columns={this.state.draftColumns}\n                scenarioSelectedHandler={this.scenarioSelectedHandler}\n                scenarioSelected={this.state.scenarioSelected}\n                onHandleSelect={this.onHandleSelect}\n                selectedItems={this.state.draftSelectedItems}\n                onHandleCheckBox={this.onHandleCheckBox}\n                columnOptions={this.state.draftColumnOptions}\n                selLabels={this.state.draftSelLabels}\n                draftTextStr={this.state.draftTextStr}\n                textStrHandler={this.textStrHandler}\n              />\n            </Tab>\n            <Tab eventKey=\"status\" title=\"Status\">\n              <Status\n                getMarkdowns={this.getMarkdowns}\n                currentTab={this.state.currentTab}\n                columns={this.state.statusColumns}\n                statusCounts={this.state.statusCounts}\n                onHandleSelect={this.onHandleSelect}\n                selectedItems={this.state.statusSelectedItems}\n                onHandleCheckBox={this.onHandleCheckBox}\n                columnOptions={this.state.statusColumnOptions}\n                selLabels={this.state.statusSelLabels}\n                statusTextStr={this.state.statusTextStr}\n                textStrHandler={this.textStrHandler}\n              />\n            </Tab>\n          </Tabs>\n\n          {this.state.showEditModal ? (\n            <EditMDModal\n              showEditModalHandler={this.showEditModalHandler}\n              selectedPlanDetails={this.state.selectedPlanDetails}\n              from=\"draft\"\n            />\n          ) : null}\n        </LoadingOverlay>\n      </Styles>\n    );\n  }\n}\nconst mapStateToProps = (store) => {\n  return {\n    getOverlayLoaderState: store.loaderReducer.overlayLoaderState,\n    // markdowns: store.draftStatusReducer.markdowns,\n    // getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    getStatusOptions: store.draftStatusReducer.statusOptions,\n    draftMarkdowns: store.draftStatusReducer.draftMarkdowns,\n    statusMarkdowns: store.draftStatusReducer.statusMarkdowns,\n    draftColumnHeaders: store.draftStatusReducer.draftColumnHeaders,\n    statusColumnHeaders: store.draftStatusReducer.statusColumnHeaders,\n  };\n};\nconst mapActionToProps = {\n  getMarkdowns: draftStausAction.getMarkdowns,\n  setMarkDowns: draftStausAction.setMarkDowns,\n  setMDColumnHeaders: draftStausAction.setMDColumnHeaders,\n  updateSidebar: plannedReportsAction.updateSidebar,\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(withRouter(DraftStatus));\n\nconst Styles = styled.div`\n  li.nav-item {\n    padding-right: 0;\n  }\n\n  .nav-tabs .nav-item.show .nav-link,\n  .nav-tabs .nav-link.active {\n    background: none;\n    border-bottom: 2px solid #44667a;\n  }\n  .nav-tabs .nav-link {\n    border: 0px;\n  }\n  .nav-link {\n    padding: 0 0.5rem;\n  }\n  .nav-tabs {\n    margin-bottom: 1.3rem;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}