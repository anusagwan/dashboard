{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/MarkdownAnalysis/AnalysisTable.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-family: arial, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%;\\n\\n  td,\\n  th {\\n    border: 1px solid #dddddd;\\n    text-align: center;\\n    padding: 8px;\\n  }\\n  tr {\\n    font-size: 15px;\\n    line-height: 4rem;\\n    font-size: 15px;\\n    color: #3c4148;\\n    font-weight: 500;\\n    // background-color: #e8eef2;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport _ from 'lodash';\n\nvar AnalysisTable = function AnalysisTable(_ref) {\n  var tableData = _ref.tableData,\n      tableData2 = _ref.tableData2,\n      isEdit = _ref.isEdit;\n\n  var getHeader = function getHeader() {\n    if (isEdit && tableData2 && tableData2.length) {\n      console.log(tableData, 'dadadada');\n      var headers = ['', 'Previous', 'Edited'];\n      console.log(headers, 'headers');\n      return headers.map(function (header, index) {\n        return React.createElement(\"th\", {\n          key: index,\n          style: {\n            backgroundColor: '#e8eef2'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, header);\n      });\n    }\n  };\n\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    style: {\n      width: '137%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, getHeader()), tableData.length && tableData.length > 0 ? tableData.map(function (cell, index) {\n    console.log(cell, 'celll', index);\n    return React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"cellAlign\",\n      style: {\n        backgroundColor: '#e8eef2'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, cell.style_id), isEdit && !_.isEmpty(tableData2) ? React.createElement(\"td\", {\n      className: \"cellData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, cell.style_desc) : null, React.createElement(\"td\", {\n      className: \"cellData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, cell.style_desc));\n  }) : React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    colSpan: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Loading...\")))));\n};\n\nexport default AnalysisTable;\nvar Styles = styled.table(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/MarkdownAnalysis/AnalysisTable.js"],"names":["React","styled","_","AnalysisTable","tableData","tableData2","isEdit","getHeader","length","console","log","headers","map","header","index","backgroundColor","width","cell","style_id","isEmpty","style_desc","Styles","table"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAuC;AAAA,MAApCC,SAAoC,QAApCA,SAAoC;AAAA,MAAzBC,UAAyB,QAAzBA,UAAyB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAC3D,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAID,MAAM,IAAID,UAAV,IAAwBA,UAAU,CAACG,MAAvC,EAA+C;AAC7CC,MAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ,EAAuB,UAAvB;AACA,UAAIO,OAAO,GAAG,CAAC,EAAD,EAAK,UAAL,EAAiB,QAAjB,CAAd;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ,EAAqB,SAArB;AACA,aAAOA,OAAO,CAACC,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT,EAAmB;AACpC,eACE;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAgB,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAE;AAAnB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGF,MADH,CADF;AAKD,OANM,CAAP;AAOD;AACF,GAbD;;AAcA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,SAAS,EAAd,CADF,EAEGH,SAAS,CAACI,MAAV,IAAoBJ,SAAS,CAACI,MAAV,GAAmB,CAAvC,GACCJ,SAAS,CAACQ,GAAV,CAAc,UAACK,IAAD,EAAOH,KAAP,EAAiB;AAC7BL,IAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ,EAAkB,OAAlB,EAA2BH,KAA3B;AACA,WACE;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAA0B,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,IAAI,CAACC,QADR,CADF,EAIGZ,MAAM,IAAI,CAACJ,CAAC,CAACiB,OAAF,CAAUd,UAAV,CAAX,GACC;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BY,IAAI,CAACG,UAA/B,CADD,GAEG,IANN,EAOE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BH,IAAI,CAACG,UAA/B,CAPF,CADF;AAWD,GAbD,CADD,GAgBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAlBJ,CADF,CADF,CADF;AA6BD,CA5CD;;AA8CA,eAAejB,aAAf;AAEA,IAAMkB,MAAM,GAAGpB,MAAM,CAACqB,KAAV,mBAAZ","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport _ from 'lodash';\n\nconst AnalysisTable = ({ tableData, tableData2, isEdit }) => {\n  const getHeader = () => {\n    if (isEdit && tableData2 && tableData2.length) {\n      console.log(tableData, 'dadadada');\n      let headers = ['', 'Previous', 'Edited'];\n      console.log(headers, 'headers');\n      return headers.map((header, index) => {\n        return (\n          <th key={index} style={{ backgroundColor: '#e8eef2' }}>\n            {header}\n          </th>\n        );\n      });\n    }\n  };\n  return (\n    <Styles>\n      <table style={{ width: '137%' }}>\n        <tbody>\n          <tr>{getHeader()}</tr>\n          {tableData.length && tableData.length > 0 ? (\n            tableData.map((cell, index) => {\n              console.log(cell, 'celll', index);\n              return (\n                <tr key={index}>\n                  <td className=\"cellAlign\" style={{ backgroundColor: '#e8eef2' }}>\n                    {cell.style_id}\n                  </td>\n                  {isEdit && !_.isEmpty(tableData2) ? (\n                    <td className=\"cellData\">{cell.style_desc}</td>\n                  ) : null}\n                  <td className=\"cellData\">{cell.style_desc}</td>\n                </tr>\n              );\n            })\n          ) : (\n            <tr>\n              <td colSpan=\"5\">Loading...</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </Styles>\n  );\n};\n\nexport default AnalysisTable;\n\nconst Styles = styled.table`\n  font-family: arial, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n\n  td,\n  th {\n    border: 1px solid #dddddd;\n    text-align: center;\n    padding: 8px;\n  }\n  tr {\n    font-size: 15px;\n    line-height: 4rem;\n    font-size: 15px;\n    color: #3c4148;\n    font-weight: 500;\n    // background-color: #e8eef2;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}