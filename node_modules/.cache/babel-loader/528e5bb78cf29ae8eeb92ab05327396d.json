{"ast":null,"code":"import _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/MarkdownAnalysis/index.js\";\nimport React, { Component } from 'react';\nimport Tippy from '@tippy.js/react';\nimport Select from 'react-select';\nimport AnalysisTable from '../MarkdownAnalysis/AnalysisTable';\nimport moment from 'moment';\nimport 'tippy.js/dist/tippy.css';\nimport BarChart from '../support/Charts/Barchart';\nimport './index.css';\nimport _ from 'lodash';\nvar options2 = {\n  tooltips: {\n    callbacks: {\n      label: function label(tooltipItem, data) {\n        var label = data.labels[tooltipItem.index];\n        var value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n        var labelTip = 'Week' + ':' + label;\n        var valueTip = 'Margin%' + ':' + value;\n        return [labelTip, valueTip];\n      }\n    }\n  },\n  plugins: {\n    datalabels: {\n      display: false\n    }\n  },\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px'\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [{\n      stacked: true,\n      gridLines: {\n        display: true\n      },\n      ticks: {\n        fontSize: 13,\n        suggestedMin: 0\n      },\n      scaleLabel: {\n        show: true,\n        display: true,\n        fontSize: 14,\n        fontStyle: 'bold',\n        fontColor: '#000',\n        labelString: 'Margin %'\n      }\n    }],\n    xAxes: [{\n      id: 'x-axis-0',\n      categoryPercentage: 1.0,\n      barPercentage: 1.0,\n      stacked: true,\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        autoSkip: true,\n        autoSkipPadding: 40,\n        maxRotation: 0,\n        suggestedMin: 0\n      },\n      scaleLabel: {\n        display: true,\n        labelString: 'Time (week)',\n        fontWeight: 900,\n        fontStyle: 'bold'\n      }\n    }]\n  }\n};\nvar options = {\n  tooltips: {\n    callbacks: {\n      label: function label(tooltipItem, data) {\n        var label = data.labels[tooltipItem.index];\n        var value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n        var labelTip = 'Week' + ':' + label;\n        var valueTip = 'ST%' + ':' + value;\n        return [labelTip, valueTip];\n      }\n    }\n  },\n  plugins: {\n    datalabels: {\n      display: false\n    }\n  },\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px'\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [{\n      stacked: true,\n      gridLines: {\n        display: true\n      },\n      // ticks: {\n      //   fontSize: 13,\n      //   suggestedMin: 0,\n      // },\n      scaleLabel: {\n        show: true,\n        display: true,\n        fontSize: 14,\n        fontStyle: 'bold',\n        fontColor: '#000',\n        labelString: 'Sell Through %'\n      }\n    }],\n    xAxes: [{\n      id: 'x-axis-0',\n      categoryPercentage: 1.0,\n      barPercentage: 1.0,\n      gridLines: {\n        display: false\n      },\n      stacked: true,\n      ticks: {\n        autoSkip: true,\n        autoSkipPadding: 40,\n        maxRotation: 0,\n        suggestedMin: 0\n      },\n      scaleLabel: {\n        display: true,\n        labelString: 'Time (week)',\n        fontWeight: 900,\n        fontStyle: 'bold'\n      }\n    }]\n  }\n};\n\nvar MarkdownAnalysis =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MarkdownAnalysis, _Component);\n\n  function MarkdownAnalysis(props) {\n    var _this;\n\n    _classCallCheck(this, MarkdownAnalysis);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MarkdownAnalysis).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(MarkdownAnalysis, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var borderColors = ['#44677B', '#6F9FC3', '#83BE8C', '#88ad5f', '#b06d58', '#86588a', '#17a69c', '#b0a819', '#d97c30', '#5d5b85'];\n      var backgroundColors = ['rgba(68, 103, 123, 0.4)', 'rgba(166, 206, 227, 0.4)', 'rgba(131, 190, 140, 0.4)', 'rgba(136, 173, 95, 0.4)', 'rgba(176, 109, 88, 0.4)', 'rgba(134, 88, 138, 0.4)', 'rgba(23, 166, 156, 0.4)', 'rgba(89, 86, 25, 0.4)', 'rgba(217, 124, 48, 0.4)', 'rgba(93, 91, 133, 0.4)'];\n      var backgroundColors1 = ['rgba(68, 103, 123, 0.2)', 'rgba(166, 206, 227, 0.2)', 'rgba(131, 190, 140, 0.2)', 'rgba(136, 173, 95, 0.2)', 'rgba(176, 109, 88, 0.2)', 'rgba(134, 88, 138, 0.2)', 'rgba(23, 166, 156, 0.2)', 'rgba(89, 86, 25, 0.2)', 'rgba(217, 124, 48, 0.2)', 'rgba(93, 91, 133, 0.2)'];\n      var uniqueWeek = {};\n      this.props.markdownAnalysisGraphData.weekly_markdown.forEach(function (value, i) {\n        if (!uniqueWeek.hasOwnProperty(value)) {\n          uniqueWeek[value] = {\n            backgroundColor: backgroundColors.pop(),\n            backgroundColor1: backgroundColors1.pop()\n          };\n          uniqueWeek[value].borderColor = borderColors.pop();\n        }\n      });\n      var uniqueWeek1 = {};\n      this.props.editMarkdownAnalysisGraphData && this.props.editMarkdownAnalysisGraphData.weekly_markdown.forEach(function (value, i) {\n        if (!uniqueWeek1.hasOwnProperty(value)) {\n          uniqueWeek1[value] = {\n            backgroundColor1: backgroundColors1.pop()\n          };\n          uniqueWeek1[value].borderColor = borderColors.pop();\n        }\n      });\n      var legendPercentages = Object.keys(uniqueWeek);\n      var labels = this.props.markdownAnalysisGraphData.weekNum.map(function (date) {\n        if (_this2.props.level === 'week') {\n          return date;\n        } else {\n          return moment(date).format('MMM DD');\n        }\n      });\n      var sellThroughData = {\n        labels: labels,\n        datasets: [{\n          label: 'chart1',\n          data: this.props.markdownAnalysisGraphData.sellThrough,\n          borderColor: this.props.markdownAnalysisGraphData.weekly_markdown.map(function (m) {\n            return uniqueWeek[m].borderColor;\n          }),\n          backgroundColor: this.props.markdownAnalysisGraphData.weekly_markdown.map(function (m) {\n            return uniqueWeek[m].backgroundColor;\n          }),\n          borderWidth: {\n            top: 3,\n            right: 0,\n            bottom: 0,\n            left: 0\n          }\n        }, {\n          label: 'label2',\n          data: this.props.editMarkdownAnalysisGraphData && this.props.editMarkdownAnalysisGraphData.sellThrough,\n          borderColor: this.props.editMarkdownAnalysisGraphData && this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(function (m) {\n            return uniqueWeek1[m].borderColor;\n          }),\n          backgroundColor: this.props.editMarkdownAnalysisGraphData && this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(function (m) {\n            return uniqueWeek1[m].backgroundColor1;\n          }),\n          borderWidth: {\n            top: 3,\n            right: 0,\n            bottom: 0,\n            left: 0\n          }\n        }]\n      };\n      var marginData = {\n        labels: labels,\n        datasets: [{\n          label: 'chart1',\n          data: this.props.markdownAnalysisGraphData.margin,\n          borderColor: this.props.markdownAnalysisGraphData.weekly_markdown.map(function (m) {\n            return uniqueWeek[m].borderColor;\n          }),\n          backgroundColor: this.props.markdownAnalysisGraphData.weekly_markdown.map(function (m) {\n            return uniqueWeek[m].backgroundColor;\n          }),\n          borderWidth: {\n            top: 3,\n            right: 0,\n            bottom: 0,\n            left: 0\n          }\n        }, {\n          label: 'label2',\n          data: this.props.editMarkdownAnalysisGraphData && this.props.editMarkdownAnalysisGraphData.sellThrough,\n          borderColor: this.props.editMarkdownAnalysisGraphData && this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(function (m) {\n            return uniqueWeek1[m].borderColor;\n          }),\n          backgroundColor: this.props.editMarkdownAnalysisGraphData && this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(function (m) {\n            return uniqueWeek1[m].backgroundColor1;\n          }),\n          borderWidth: {\n            top: 3,\n            right: 0,\n            bottom: 0,\n            left: 0\n          }\n        }]\n      };\n\n      if (this.props.isEdit && !_.isEmpty(this.props.editMarkdownAnalysisGraphData)) {\n        var _uniqueWeek = {};\n        this.props.editMarkdownAnalysisGraphData.weekly_markdown.forEach(function (value, i) {\n          if (!_uniqueWeek.hasOwnProperty(value)) {\n            _uniqueWeek[value] = {\n              backgroundColor1: backgroundColors1.pop()\n            };\n            _uniqueWeek[value].borderColor = borderColors.pop();\n          }\n        }); // sellThroughData.datasets.push({\n        //   label: 'chart2',\n        //   data: this.props.editMarkdownAnalysisGraphData.sellThrough,\n        //   borderColor: this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n        //     (m) => uniqueWeek1[m].borderColor\n        //   ),\n        //   backgroundColor: this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n        //     (m) => uniqueWeek1[m].backgroundColor1\n        //   ),\n        //   borderWidth: {\n        //     top: 3,\n        //     right: 0,\n        //     bottom: 0,\n        //     left: 0,\n        //   },\n        // });\n\n        marginData.datasets.push({\n          data: this.props.editMarkdownAnalysisGraphData.margin,\n          borderColor: this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(function (m) {\n            return _uniqueWeek[m].borderColor;\n          }),\n          backgroundColor: this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(function (m) {\n            return _uniqueWeek[m].backgroundColor1;\n          }),\n          borderWidth: {\n            top: 3,\n            right: 0,\n            bottom: 0,\n            left: 0\n          }\n        });\n      }\n\n      var level = this.props.level === 'week' ? 'Week' : 'Month'; // options.scales.xAxes[0].scaleLabel.labelString = level;\n      // options2.scales.xAxes[0].scaleLabel.labelString = level;\n\n      legendPercentages = Object.keys(uniqueWeek).map(function (percentage) {\n        return \"\".concat(Number(percentage), \"%\");\n      });\n      return React.createElement(\"div\", {\n        className: this.props.isEdit && !_.isEmpty(this.props.editAnalysisData) ? 'edit-data-present' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row skuLabelStyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"skuLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, \"Style-Color\"), React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(Select, {\n        placeholder: \"Style-Color\",\n        value: this.props.selectedSku,\n        options: this.props.optionSku,\n        onChange: this.props.selectedSkuHandler,\n        isClearable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row analysis-overview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chartContainermain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"sellThroughLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"Sell Through %\"), React.createElement(\"div\", {\n        className: \"chartContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row j-c-c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, legendPercentages.map(function (percentage, index) {\n        return React.createElement(\"div\", {\n          className: \"d-flex\",\n          key: \"\".concat(Math.random() + index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387\n          },\n          __self: this\n        }, React.createElement(Tippy, {\n          style: {\n            cursor: 'pointer'\n          },\n          placement: 'left',\n          arrow: true,\n          distance: 10,\n          content: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 393\n            },\n            __self: this\n          }, \" MD \", percentage),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"color-box mr-2\",\n          style: {\n            cursor: 'pointer',\n            backgroundColor: Object.keys(uniqueWeek).map(function (percentage) {\n              return uniqueWeek[percentage].borderColor;\n            })[index]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"left-space\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404\n          },\n          __self: this\n        }, percentage));\n      }))), React.createElement(BarChart, {\n        width: '681px',\n        height: '280px',\n        data: sellThroughData,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"chartContainermain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"sellThroughLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, \"Margin %\"), React.createElement(\"div\", {\n        className: \"chartContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row j-c-c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, legendPercentages.map(function (percentage, index) {\n        return React.createElement(\"div\", {\n          className: \"d-flex\",\n          key: \"\".concat(Math.random() + index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421\n          },\n          __self: this\n        }, React.createElement(Tippy, {\n          style: {\n            cursor: 'pointer'\n          },\n          placement: 'left',\n          arrow: true,\n          distance: 10,\n          content: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 427\n            },\n            __self: this\n          }, \" MD \", percentage),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"color-box mr-2\",\n          style: {\n            cursor: 'pointer',\n            backgroundColor: Object.keys(uniqueWeek).map(function (percentage) {\n              return uniqueWeek[percentage].borderColor;\n            })[index]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"left-space\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438\n          },\n          __self: this\n        }, percentage));\n      }))), React.createElement(BarChart, {\n        width: '681px',\n        height: '280px',\n        data: marginData,\n        options: options2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, React.createElement(AnalysisTable, {\n        tableData: this.props.analysisTable || [],\n        tableData2: this.props.editAnalysisData || [],\n        isEdit: this.props.isEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return MarkdownAnalysis;\n}(Component);\n\nexport default MarkdownAnalysis;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/MarkdownAnalysis/index.js"],"names":["React","Component","Tippy","Select","AnalysisTable","moment","BarChart","_","options2","tooltips","callbacks","label","tooltipItem","data","labels","index","value","datasets","datasetIndex","labelTip","valueTip","plugins","datalabels","display","legend","position","boxWidth","fontFamily","fontSize","maintainAspectRatio","scales","yAxes","stacked","gridLines","ticks","suggestedMin","scaleLabel","show","fontStyle","fontColor","labelString","xAxes","id","categoryPercentage","barPercentage","autoSkip","autoSkipPadding","maxRotation","fontWeight","options","MarkdownAnalysis","props","state","borderColors","backgroundColors","backgroundColors1","uniqueWeek","markdownAnalysisGraphData","weekly_markdown","forEach","i","hasOwnProperty","backgroundColor","pop","backgroundColor1","borderColor","uniqueWeek1","editMarkdownAnalysisGraphData","legendPercentages","Object","keys","weekNum","map","date","level","format","sellThroughData","sellThrough","m","borderWidth","top","right","bottom","left","marginData","margin","isEdit","isEmpty","push","percentage","Number","editAnalysisData","selectedSku","optionSku","selectedSkuHandler","Math","random","cursor","analysisTable"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Tippy from '@tippy.js/react';\nimport Select from 'react-select';\nimport AnalysisTable from '../MarkdownAnalysis/AnalysisTable';\nimport moment from 'moment';\nimport 'tippy.js/dist/tippy.css';\nimport BarChart from '../support/Charts/Barchart';\nimport './index.css';\nimport _ from 'lodash';\nconst options2 = {\n  tooltips: {\n    callbacks: {\n      label: function (tooltipItem, data) {\n        let label = data.labels[tooltipItem.index];\n        let value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n        let labelTip = 'Week' + ':' + label;\n        let valueTip = 'Margin%' + ':' + value;\n        return [labelTip, valueTip];\n      },\n    },\n  },\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12,\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px',\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        stacked: true,\n        gridLines: {\n          display: true,\n        },\n        ticks: {\n          fontSize: 13,\n          suggestedMin: 0,\n        },\n        scaleLabel: {\n          show: true,\n          display: true,\n          fontSize: 14,\n          fontStyle: 'bold',\n          fontColor: '#000',\n          labelString: 'Margin %',\n        },\n      },\n    ],\n    xAxes: [\n      {\n        id: 'x-axis-0',\n        categoryPercentage: 1.0,\n        barPercentage: 1.0,\n        stacked: true,\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          autoSkip: true,\n          autoSkipPadding: 40,\n          maxRotation: 0,\n          suggestedMin: 0,\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Time (week)',\n          fontWeight: 900,\n          fontStyle: 'bold',\n        },\n      },\n    ],\n  },\n};\nconst options = {\n  tooltips: {\n    callbacks: {\n      label: function (tooltipItem, data) {\n        let label = data.labels[tooltipItem.index];\n        let value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n        let labelTip = 'Week' + ':' + label;\n        let valueTip = 'ST%' + ':' + value;\n        return [labelTip, valueTip];\n      },\n    },\n  },\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12,\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px',\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        stacked: true,\n        gridLines: {\n          display: true,\n        },\n        // ticks: {\n        //   fontSize: 13,\n        //   suggestedMin: 0,\n        // },\n        scaleLabel: {\n          show: true,\n          display: true,\n          fontSize: 14,\n          fontStyle: 'bold',\n          fontColor: '#000',\n          labelString: 'Sell Through %',\n        },\n      },\n    ],\n    xAxes: [\n      {\n        id: 'x-axis-0',\n        categoryPercentage: 1.0,\n        barPercentage: 1.0,\n        gridLines: {\n          display: false,\n        },\n        stacked: true,\n        ticks: {\n          autoSkip: true,\n          autoSkipPadding: 40,\n          maxRotation: 0,\n          suggestedMin: 0,\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Time (week)',\n          fontWeight: 900,\n          fontStyle: 'bold',\n        },\n      },\n    ],\n  },\n};\nclass MarkdownAnalysis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const borderColors = [\n      '#44677B',\n      '#6F9FC3',\n      '#83BE8C',\n      '#88ad5f',\n      '#b06d58',\n      '#86588a',\n      '#17a69c',\n      '#b0a819',\n      '#d97c30',\n      '#5d5b85',\n    ];\n    const backgroundColors = [\n      'rgba(68, 103, 123, 0.4)',\n      'rgba(166, 206, 227, 0.4)',\n      'rgba(131, 190, 140, 0.4)',\n      'rgba(136, 173, 95, 0.4)',\n      'rgba(176, 109, 88, 0.4)',\n      'rgba(134, 88, 138, 0.4)',\n      'rgba(23, 166, 156, 0.4)',\n      'rgba(89, 86, 25, 0.4)',\n      'rgba(217, 124, 48, 0.4)',\n      'rgba(93, 91, 133, 0.4)',\n    ];\n    const backgroundColors1 = [\n      'rgba(68, 103, 123, 0.2)',\n      'rgba(166, 206, 227, 0.2)',\n      'rgba(131, 190, 140, 0.2)',\n      'rgba(136, 173, 95, 0.2)',\n      'rgba(176, 109, 88, 0.2)',\n      'rgba(134, 88, 138, 0.2)',\n      'rgba(23, 166, 156, 0.2)',\n      'rgba(89, 86, 25, 0.2)',\n      'rgba(217, 124, 48, 0.2)',\n      'rgba(93, 91, 133, 0.2)',\n    ];\n    let uniqueWeek = {};\n    this.props.markdownAnalysisGraphData.weekly_markdown.forEach((value, i) => {\n      if (!uniqueWeek.hasOwnProperty(value)) {\n        uniqueWeek[value] = {\n          backgroundColor: backgroundColors.pop(),\n          backgroundColor1: backgroundColors1.pop(),\n        };\n        uniqueWeek[value].borderColor = borderColors.pop();\n      }\n    });\n    let uniqueWeek1 = {};\n    this.props.editMarkdownAnalysisGraphData &&\n      this.props.editMarkdownAnalysisGraphData.weekly_markdown.forEach((value, i) => {\n        if (!uniqueWeek1.hasOwnProperty(value)) {\n          uniqueWeek1[value] = {\n            backgroundColor1: backgroundColors1.pop(),\n          };\n          uniqueWeek1[value].borderColor = borderColors.pop();\n        }\n      });\n    let legendPercentages = Object.keys(uniqueWeek);\n    const labels = this.props.markdownAnalysisGraphData.weekNum.map((date) => {\n      if (this.props.level === 'week') {\n        return date;\n      } else {\n        return moment(date).format('MMM DD');\n      }\n    });\n    let sellThroughData = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'chart1',\n          data: this.props.markdownAnalysisGraphData.sellThrough,\n          borderColor: this.props.markdownAnalysisGraphData.weekly_markdown.map(\n            (m) => uniqueWeek[m].borderColor\n          ),\n          backgroundColor: this.props.markdownAnalysisGraphData.weekly_markdown.map(\n            (m) => uniqueWeek[m].backgroundColor\n          ),\n          borderWidth: {\n            top: 3,\n            right: 0,\n            bottom: 0,\n            left: 0,\n          },\n        },\n        {\n          label: 'label2',\n          data:\n            this.props.editMarkdownAnalysisGraphData &&\n            this.props.editMarkdownAnalysisGraphData.sellThrough,\n          borderColor:\n            this.props.editMarkdownAnalysisGraphData &&\n            this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n              (m) => uniqueWeek1[m].borderColor\n            ),\n          backgroundColor:\n            this.props.editMarkdownAnalysisGraphData &&\n            this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n              (m) => uniqueWeek1[m].backgroundColor1\n            ),\n          borderWidth: {\n            top: 3,\n            right: 0,\n            bottom: 0,\n            left: 0,\n          },\n        },\n      ],\n    };\n    let marginData = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'chart1',\n          data: this.props.markdownAnalysisGraphData.margin,\n          borderColor: this.props.markdownAnalysisGraphData.weekly_markdown.map(\n            (m) => uniqueWeek[m].borderColor\n          ),\n          backgroundColor: this.props.markdownAnalysisGraphData.weekly_markdown.map(\n            (m) => uniqueWeek[m].backgroundColor\n          ),\n          borderWidth: {\n            top: 3,\n            right: 0,\n            bottom: 0,\n            left: 0,\n          },\n        },\n        {\n          label: 'label2',\n          data:\n            this.props.editMarkdownAnalysisGraphData &&\n            this.props.editMarkdownAnalysisGraphData.sellThrough,\n          borderColor:\n            this.props.editMarkdownAnalysisGraphData &&\n            this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n              (m) => uniqueWeek1[m].borderColor\n            ),\n          backgroundColor:\n            this.props.editMarkdownAnalysisGraphData &&\n            this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n              (m) => uniqueWeek1[m].backgroundColor1\n            ),\n          borderWidth: {\n            top: 3,\n            right: 0,\n            bottom: 0,\n            left: 0,\n          },\n        },\n      ],\n    };\n    if (this.props.isEdit && !_.isEmpty(this.props.editMarkdownAnalysisGraphData)) {\n      let uniqueWeek1 = {};\n      this.props.editMarkdownAnalysisGraphData.weekly_markdown.forEach((value, i) => {\n        if (!uniqueWeek1.hasOwnProperty(value)) {\n          uniqueWeek1[value] = {\n            backgroundColor1: backgroundColors1.pop(),\n          };\n          uniqueWeek1[value].borderColor = borderColors.pop();\n        }\n      });\n\n      // sellThroughData.datasets.push({\n      //   label: 'chart2',\n      //   data: this.props.editMarkdownAnalysisGraphData.sellThrough,\n      //   borderColor: this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n      //     (m) => uniqueWeek1[m].borderColor\n      //   ),\n      //   backgroundColor: this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n      //     (m) => uniqueWeek1[m].backgroundColor1\n      //   ),\n      //   borderWidth: {\n      //     top: 3,\n      //     right: 0,\n      //     bottom: 0,\n      //     left: 0,\n      //   },\n      // });\n\n      marginData.datasets.push({\n        data: this.props.editMarkdownAnalysisGraphData.margin,\n        borderColor: this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n          (m) => uniqueWeek1[m].borderColor\n        ),\n        backgroundColor: this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n          (m) => uniqueWeek1[m].backgroundColor1\n        ),\n        borderWidth: {\n          top: 3,\n          right: 0,\n          bottom: 0,\n          left: 0,\n        },\n      });\n    }\n    let level = this.props.level === 'week' ? 'Week' : 'Month';\n    // options.scales.xAxes[0].scaleLabel.labelString = level;\n    // options2.scales.xAxes[0].scaleLabel.labelString = level;\n    legendPercentages = Object.keys(uniqueWeek).map((percentage) => `${Number(percentage)}%`);\n\n    return (\n      <div\n        className={\n          this.props.isEdit && !_.isEmpty(this.props.editAnalysisData) ? 'edit-data-present' : ''\n        }>\n        <div className=\"mb-4\">\n          <div className=\"row skuLabelStyle\">\n            <label className=\"skuLabel\">Style-Color</label>\n            <div className=\"col-md-2\">\n              <Select\n                placeholder=\"Style-Color\"\n                value={this.props.selectedSku}\n                options={this.props.optionSku}\n                onChange={this.props.selectedSkuHandler}\n                isClearable\n              />\n            </div>\n          </div>\n\n          <div className=\"row analysis-overview\">\n            <div className=\"col\">\n              <div className=\"chartContainermain\">\n                <label className=\"sellThroughLabel\">Sell Through %</label>\n                <div className=\"chartContainer\">\n                  <div className=\"row j-c-c\">\n                    {legendPercentages.map((percentage, index) => (\n                      <div className=\"d-flex\" key={`${Math.random() + index}`}>\n                        <Tippy\n                          style={{ cursor: 'pointer' }}\n                          placement={'left'}\n                          arrow={true}\n                          distance={10}\n                          content={<div> MD {percentage}</div>}>\n                          <div\n                            className=\"color-box mr-2\"\n                            style={{\n                              cursor: 'pointer',\n                              backgroundColor: Object.keys(uniqueWeek).map(\n                                (percentage) => uniqueWeek[percentage].borderColor\n                              )[index],\n                            }}\n                          />\n                        </Tippy>\n                        <span className=\"left-space\">{percentage}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                <BarChart\n                  width={'681px'}\n                  height={'280px'}\n                  data={sellThroughData}\n                  options={options}\n                />\n              </div>\n              <div className=\"chartContainermain\">\n                <label className=\"sellThroughLabel\">Margin %</label>\n                <div className=\"chartContainer\">\n                  <div className=\"row j-c-c\">\n                    {legendPercentages.map((percentage, index) => (\n                      <div className=\"d-flex\" key={`${Math.random() + index}`}>\n                        <Tippy\n                          style={{ cursor: 'pointer' }}\n                          placement={'left'}\n                          arrow={true}\n                          distance={10}\n                          content={<div> MD {percentage}</div>}>\n                          <div\n                            className=\"color-box mr-2\"\n                            style={{\n                              cursor: 'pointer',\n                              backgroundColor: Object.keys(uniqueWeek).map(\n                                (percentage) => uniqueWeek[percentage].borderColor\n                              )[index],\n                            }}\n                          />\n                        </Tippy>\n                        <span className=\"left-space\">{percentage}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                <BarChart width={'681px'} height={'280px'} data={marginData} options={options2} />\n              </div>\n            </div>\n            <div className=\"col mt-4\">\n              <AnalysisTable\n                tableData={this.props.analysisTable || []}\n                tableData2={this.props.editAnalysisData || []}\n                isEdit={this.props.isEdit}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MarkdownAnalysis;\n"]},"metadata":{},"sourceType":"module"}