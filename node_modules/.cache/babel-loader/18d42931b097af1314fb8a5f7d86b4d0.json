{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/excludeStoreTable.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 1rem;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: flex-start;\\n\\n  .custom-control {\\n    line-height: 1.5rem;\\n    margin: 0 1rem;\\n  }\\n\\n  .custom-control-label::before {\\n    top: 0.5rem;\\n  }\\n  .custom-control-label::after {\\n    top: 0.5rem;\\n  }\\n  .custom-checkbox label {\\n    vertical-align: -webkit-baseline-middle;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport excludeStoreColdef from './excludeStoreColdef';\nimport cloneDeep from 'clone-deep';\nimport styled from 'styled-components';\nimport Select from '../../utils/reactDropDownSelect';\n\nvar ExcludeStoreTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ExcludeStoreTable, _Component);\n\n  function ExcludeStoreTable(props) {\n    var _this;\n\n    _classCallCheck(this, ExcludeStoreTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExcludeStoreTable).call(this, props));\n\n    _this.limitClearnceHandler = function () {\n      var selectedRowId = _this.state.selected;\n\n      _this.props.excludeStoreValHandler(selectedRowId);\n\n      console.log(selectedRowId, 'selectid');\n\n      _this.props.showTablePopup();\n    };\n\n    _this.onRowClick = function (rowInfo) {\n      var selectedRow = cloneDeep(_this.state.selected);\n      selectedRow[rowInfo.original.store_code] = rowInfo.original;\n\n      _this.setState({\n        selected: selectedRow\n      });\n    };\n\n    _this.onHandleCheckBox = function (e, label, index) {\n      //adding\n      if (e.target.checked) {\n        if (_this.state.selLabels.indexOf(label) === -1) {\n          var labels = [].concat(_toConsumableArray(_this.state.selLabels), [label]);\n          var tempArr = [];\n          labels.forEach(function (label) {\n            var columns = _this.props.columnHeaders[label];\n            var labelColumns = Object.keys(columns);\n            var options = labelColumns.map(function (label) {\n              return {\n                label: label,\n                value: columns[label]\n              };\n            });\n            tempArr.push.apply(tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selLabels: labels,\n            columnOptions: tempArr\n          });\n        }\n      } else {\n        //removing\n        var columns = _this.props.columnHeaders[label];\n        var tabelColumns = cloneDeep(_this.state.columns);\n        columns.forEach(function (col) {\n          tabelColumns.forEach(function (tabelCol, index) {\n            if (tabelCol.Header === col) {\n              tabelColumns.splice(index, 1);\n            }\n          });\n        });\n\n        _this.setState({\n          columns: tabelColumns\n        });\n\n        var _index = _this.state.selLabels.indexOf(label);\n\n        if (_index !== -1) {\n          var selectedLabel = cloneDeep(_this.state.selLabels);\n          selectedLabel.splice(_index, 1);\n          var _tempArr = [];\n          selectedLabel.forEach(function (label) {\n            var columns = _this.props.columnHeaders[label];\n            var labelColumns = Object.keys(columns);\n            var options = labelColumns.map(function (label) {\n              return {\n                label: label,\n                value: columns[label]\n              };\n            });\n\n            _tempArr.push.apply(_tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selLabels: selectedLabel,\n            columnOptions: _tempArr\n          });\n        }\n      }\n    };\n\n    _this.onHandleSelect = function (data) {\n      console.log('data:', data);\n      var cols = cloneDeep(_this.state.columns);\n      console.log(cols, 'exccols'); // let selectedOptions = this.state.selectedOptions;\n\n      data.forEach(function (da) {\n        var newCols = cols.filter(function (a) {\n          return a.Header === da.value;\n        });\n\n        if (newCols.length == 0) {\n          cols.push({\n            Header: da.label,\n            accessor: da.value\n          });\n        }\n      });\n      console.log(cols, 'cols3');\n\n      _this.setState({\n        columns: cols\n      });\n    };\n\n    _this.state = {\n      // attributes: ['Product Information', 'Sales', 'Inventory', 'Margin'],\n      columnOptions: [],\n      selLabels: [],\n      columns: [],\n      selected: {}\n    };\n    return _this;\n  }\n\n  _createClass(ExcludeStoreTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        columns: excludeStoreColdef()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.selected, 'selected rows'); // let labels = Object.keys(this.props.columnHeaders);\n      // labels.splice(labels.indexOf('fixed'), 1);\n      // labels.splice(labels.indexOf('default'), 1);\n      // console.log(this.props.columnHeaders, labels, 'this.props.columnHeaders');\n\n      return React.createElement(\"div\", {\n        className: \"createMd pl-2 pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(ColumnSelection, {\n        onHandleCheckBox: this.onHandleCheckBox,\n        columnHeaders: this.props.columnHeaders,\n        onHandleSelect: this.onHandleSelect,\n        selLabels: this.state.selLabels,\n        columnOptions: this.state.columnOptions,\n        selectedItems: this.state.selectedItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        isPagination: true,\n        visibleColumns: \"onlyRowSelection\",\n        columns: this.state.columns,\n        data: this.props.storeData.splice(0, 10),\n        getRowProps: function getRowProps(rowInfo) {\n          return {\n            onClick: function onClick() {\n              return _this2.onRowClick(rowInfo);\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"mt-3 mb-3\",\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary biconbuttonFilter\",\n        onClick: this.limitClearnceHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Limit Clearance\"))));\n    }\n  }]);\n\n  return ExcludeStoreTable;\n}(Component);\n\nvar Styles = styled.div(_templateObject());\nexport default ExcludeStoreTable;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/excludeStoreTable.js"],"names":["React","Component","DataTable","ColumnSelection","excludeStoreColdef","cloneDeep","styled","Select","ExcludeStoreTable","props","limitClearnceHandler","selectedRowId","state","selected","excludeStoreValHandler","console","log","showTablePopup","onRowClick","rowInfo","selectedRow","original","store_code","setState","onHandleCheckBox","e","label","index","target","checked","selLabels","indexOf","labels","tempArr","forEach","columns","columnHeaders","labelColumns","Object","keys","options","map","value","push","columnOptions","tabelColumns","col","tabelCol","Header","splice","selectedLabel","onHandleSelect","data","cols","da","newCols","filter","a","length","accessor","selectedItems","storeData","onClick","display","justifyContent","Styles","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport excludeStoreColdef from './excludeStoreColdef';\nimport cloneDeep from 'clone-deep';\nimport styled from 'styled-components';\nimport Select from '../../utils/reactDropDownSelect';\n\nclass ExcludeStoreTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // attributes: ['Product Information', 'Sales', 'Inventory', 'Margin'],\n      columnOptions: [],\n      selLabels: [],\n      columns: [],\n      selected: {},\n    };\n  }\n  limitClearnceHandler = () => {\n    let selectedRowId = this.state.selected;\n    this.props.excludeStoreValHandler(selectedRowId);\n    console.log(selectedRowId, 'selectid');\n    this.props.showTablePopup();\n  };\n  onRowClick = (rowInfo) => {\n    let selectedRow = cloneDeep(this.state.selected);\n    selectedRow[rowInfo.original.store_code] = rowInfo.original;\n    this.setState({\n      selected: selectedRow,\n    });\n  };\n\n  onHandleCheckBox = (e, label, index) => {\n    //adding\n    if (e.target.checked) {\n      if (this.state.selLabels.indexOf(label) === -1) {\n        let labels = [...this.state.selLabels, label];\n        let tempArr = [];\n        labels.forEach((label) => {\n          let columns = this.props.columnHeaders[label];\n          let labelColumns = Object.keys(columns);\n          let options = labelColumns.map((label) => {\n            return {\n              label: label,\n              value: columns[label],\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selLabels: labels,\n          columnOptions: tempArr,\n        });\n      }\n    } else {\n      //removing\n      let columns = this.props.columnHeaders[label];\n      let tabelColumns = cloneDeep(this.state.columns);\n      columns.forEach((col) => {\n        tabelColumns.forEach((tabelCol, index) => {\n          if (tabelCol.Header === col) {\n            tabelColumns.splice(index, 1);\n          }\n        });\n      });\n      this.setState({\n        columns: tabelColumns,\n      });\n      let index = this.state.selLabels.indexOf(label);\n      if (index !== -1) {\n        let selectedLabel = cloneDeep(this.state.selLabels);\n        selectedLabel.splice(index, 1);\n        let tempArr = [];\n        selectedLabel.forEach((label) => {\n          let columns = this.props.columnHeaders[label];\n          let labelColumns = Object.keys(columns);\n          let options = labelColumns.map((label) => {\n            return {\n              label: label,\n              value: columns[label],\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selLabels: selectedLabel,\n          columnOptions: tempArr,\n        });\n      }\n    }\n  };\n  onHandleSelect = (data) => {\n    console.log('data:', data);\n    let cols = cloneDeep(this.state.columns);\n    console.log(cols, 'exccols');\n    // let selectedOptions = this.state.selectedOptions;\n    data.forEach((da) => {\n      let newCols = cols.filter((a) => {\n        return a.Header === da.value;\n      });\n      if (newCols.length == 0) {\n        cols.push({\n          Header: da.label,\n          accessor: da.value,\n        });\n      }\n    });\n    console.log(cols, 'cols3');\n    this.setState({\n      columns: cols,\n    });\n  };\n  componentDidMount() {\n    this.setState({\n      columns: excludeStoreColdef(),\n    });\n  }\n  render() {\n    console.log(this.state.selected, 'selected rows');\n    // let labels = Object.keys(this.props.columnHeaders);\n    // labels.splice(labels.indexOf('fixed'), 1);\n    // labels.splice(labels.indexOf('default'), 1);\n    // console.log(this.props.columnHeaders, labels, 'this.props.columnHeaders');\n    return (\n      <div className=\"createMd pl-2 pr-2\">\n        <div className=\"card mb-4\">\n          <ColumnSelection\n            onHandleCheckBox={this.onHandleCheckBox}\n            columnHeaders={this.props.columnHeaders}\n            onHandleSelect={this.onHandleSelect}\n            selLabels={this.state.selLabels}\n            columnOptions={this.state.columnOptions}\n            selectedItems={this.state.selectedItems}\n          />\n          <div>\n            <DataTable\n              isPagination={true}\n              visibleColumns=\"onlyRowSelection\"\n              columns={this.state.columns}\n              data={this.props.storeData.splice(0, 10)}\n              getRowProps={(rowInfo) => ({\n                onClick: () => this.onRowClick(rowInfo),\n              })}\n            />\n          </div>\n          <div class=\"mt-3 mb-3\" style={{ display: 'flex', justifyContent: 'center' }}>\n            <button\n              className=\"btn btn-primary biconbuttonFilter\"\n              onClick={this.limitClearnceHandler}>\n              Limit Clearance\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Styles = styled.div`\n  padding: 1rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n\n  .custom-control {\n    line-height: 1.5rem;\n    margin: 0 1rem;\n  }\n\n  .custom-control-label::before {\n    top: 0.5rem;\n  }\n  .custom-control-label::after {\n    top: 0.5rem;\n  }\n  .custom-checkbox label {\n    vertical-align: -webkit-baseline-middle;\n  }\n`;\n\nexport default ExcludeStoreTable;\n"]},"metadata":{},"sourceType":"module"}