{"ast":null,"code":"var _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Summary/aggColdef.js\";\nimport React from 'react';\nimport { toPercentage, toPercentageWithDecimalDraft, toUnit, toDollar, toDollarWithDecimal, toPercWithOneDecimal } from '../../helper/formatter';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport EditableCell from './EditableCell';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox'; //cellClassName must be same for aggColDef, binToWeekColDef and weekToBinColDef\n\n/********************************************************************* */\n//*******WHILE ADDING NEW COLUMNS ADD A UNIQUE CELLCLASSNAME************/\n\n/********ADD THE COLUMN TO ALL OF THREE COLDEFS*************************/\n\n/********************************************************************* */\n//aggColDef is aggregate level parent table coldef,\n//in this level user can expand both dateRange and Bins cols(when one is expanded the other will disable)\n\nexport var aggColDef = [// {\n//   Header: 'MD Plan',\n//   accessor: 'md_plan',\n//   cellClassName: 'summary_md_plan',\n// },\n{\n  Header: 'Plan Level',\n  accessor: 'level',\n  cellClassName: 'summary_cadence_type'\n}, {\n  id: 'expander',\n  cellClassName: 'summary_expander',\n  Header: 'Date Range',\n  Cell: function Cell(_ref) {\n    var row = _ref.row;\n    var startWeek = row.original && row.original.week_level_data && row.original.week_level_data[0];\n    var endWeek = row.original && row.original.week_level_data && row.original.week_level_data[row.original.week_level_data.length - 1];\n    var SDate = startWeek && moment().year(startWeek.year).week(startWeek.week).day('monday').format('YYYY/MM/DD');\n    var EDate = endWeek && moment().year(endWeek.year).week(endWeek.week + 1).day('sunday').format('YYYY/MM/DD');\n    return row.original.md_plan ? React.createElement(\"span\", Object.assign({\n      className: \"summary-table-icon\"\n    }, row.getToggleRowExpandedProps({\n      style: {\n        paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n      }\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), SDate, \" - \", EDate, \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n      class: \"fa fa-angle-down expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      class: \"fa fa-angle-right expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), \"\\xA0\\xA0\\xA0\") : null;\n  }\n}, {\n  id: 'expander1',\n  cellClassName: 'summary_expander1',\n  Header: 'Bins',\n  Cell: function Cell(_ref2) {\n    var row = _ref2.row;\n    return row.original.md_plan ? React.createElement(\"span\", Object.assign({\n      className: \"summary-table-icon\"\n    }, row.getToggleRowExpandedProps({\n      style: {\n        paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n      }\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), row.original.bin_level_data ? row.original.bin_level_data.length : row.original.week_level_data && row.original.week_level_data[0] && row.original.week_level_data[0].bin_level_data ? row.original.week_level_data[0].bin_level_data.length : row.original.week_level_data && row.original.week_level_data[0] && row.original.week_level_data[0].subRows ? row.original.week_level_data[0].subRows.length : '-', \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n      class: \"fa fa-angle-down expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      class: \"fa fa-angle-right expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), \"\\xA0\\xA0\\xA0\") : null;\n  }\n}, {\n  Header: '#Products',\n  accessor: 'overall_product_count',\n  cellClassName: 'summary_product_code',\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \" \", toUnit(props), \" \");\n  }\n}, // {\n//   Header: 'Next week MD',\n//   accessor: 'overall_next_week',\n//   cellClassName: 'summary_next_week',\n//   Cell: ({ row, rows }) => {\n//     return '-';\n//   },\n// },\n{\n  Header: 'Current running MD',\n  accessor: 'overall_next_week',\n  cellClassName: 'summary_current_md',\n  Cell: function Cell(_ref3) {\n    var row = _ref3.row,\n        rows = _ref3.rows;\n    return '-';\n  }\n}, {\n  Header: 'Planned MD',\n  accessor: 'overall_offer_value',\n  cellClassName: 'summary_planned_md',\n  Cell: function Cell(_ref4) {\n    var row = _ref4.row;\n    var value = row.original.overall_offer_value;\n    var type = row.original.overall_offer_type;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, value ? unitCheck(value, type) : '-');\n  }\n}, {\n  Header: 'Refreshed MD',\n  accessor: 'refreshed_md',\n  cellClassName: 'summary_refreshed_md',\n  Cell: function Cell(_ref5) {\n    var row = _ref5.row;\n    var value = row.original.overall_refreshed_md;\n    var type = row.original.overall_offer_type;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, value ? unitCheck(value, type) : '-');\n  }\n}, {\n  Header: 'MD Difference',\n  accessor: 'overall_md_diff',\n  cellClassName: 'summary_difference',\n  Cell: function Cell(_ref6) {\n    var row = _ref6.row;\n    return row.original.overall_md_diff ? row.original.overall_md_diff : '-';\n  }\n}, {\n  Header: 'Sell through %',\n  accessor: 'overall_sell_through',\n  cellClassName: 'summary_sell_through',\n  columns: [{\n    Header: 'Planned',\n    accessor: 'overall_sell_through',\n    cellClassName: 'summary_planned_sell_through',\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \" \", toPercentageWithDecimalDraft(props), \" \");\n    }\n  }, {\n    Header: 'Refreshed',\n    accessor: 'refreshed_overall_sell_through',\n    cellClassName: 'summary_refreshed_sell_through',\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \" \", toPercentageWithDecimalDraft(props), \" \");\n    }\n  }]\n}, // {\n//   Header: 'Markdown %',\n//   accessor: 'overall_markdown_perc',\n//   cellClassName: 'summary_markdown_perc',\n//   Cell: (props) => <div> {toPercentage(props)} </div>,\n// },\n{\n  Header: 'Margin %',\n  accessor: 'overall_margin_perc',\n  cellClassName: 'summary_margin_perc',\n  metric: true,\n  columns: [{\n    Header: 'Planned',\n    accessor: 'overall_margin_perc',\n    cellClassName: 'summary_planned_margin_perc',\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \" \", toPercWithOneDecimal(props), \" \");\n    }\n  }, {\n    Header: 'Refreshed',\n    accessor: 'refreshed_overall_margin_perc',\n    cellClassName: 'summary_refreshed_margin_perc',\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \" \", toPercWithOneDecimal(props), \" \");\n    }\n  }]\n}, {\n  Header: 'Margin $',\n  accessor: 'overall_margin$',\n  cellClassName: 'summary_margin',\n  hideColumn: true,\n  // Cell: (props) => <div> {toDollar(props)} </div>,\n  columns: [{\n    Header: 'Planned',\n    accessor: 'overall_margin$',\n    cellClassName: 'summary_planned_margin',\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \" \", toDollar(props), \" \");\n    }\n  }, {\n    Header: 'Refreshed',\n    accessor: 'refreshed_overall_margin$',\n    cellClassName: 'summary_refreshed_margin',\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \" \", toDollar(props), \" \");\n    }\n  }]\n}, {\n  Header: 'AUM $',\n  accessor: 'overall_aum',\n  cellClassName: 'summary_aum',\n  hideColumn: true,\n  // Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n  columns: [{\n    Header: 'Planned',\n    accessor: 'overall_aum',\n    cellClassName: 'summary_planned_aum',\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \" \", toDollarWithDecimal(props), \" \");\n    }\n  }, {\n    Header: 'Refreshed',\n    accessor: 'refreshed_overall_aum',\n    cellClassName: 'summary_refreshed_aum',\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \" \", toDollarWithDecimal(props), \" \");\n    }\n  }]\n}, {\n  Header: 'Revenue $',\n  accessor: 'overall_revenue$',\n  cellClassName: 'summary_revenue',\n  hideColumn: true,\n  // Cell: (props) => <div> {toDollar(props)} </div>,\n  columns: [{\n    Header: 'Planned',\n    accessor: 'overall_revenue$',\n    cellClassName: 'summary_planned_revenue',\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \" \", toDollar(props), \" \");\n    }\n  }, {\n    Header: 'Refreshed',\n    accessor: 'refreshed_overall_revenue$',\n    cellClassName: 'summary_refreshed_revenue',\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \" \", toDollar(props), \" \");\n    }\n  }]\n}, // {\n//   Header: 'Planned units',\n//   accessor: 'overall_planned_units',\n//   cellClassName: 'summary_pvh_units',\n//   hideColumn: true,\n//   Cell: (props) => <div> {toUnit(props)} </div>,\n// },\n{\n  Header: 'Units',\n  accessor: 'overall_markdown_units',\n  cellClassName: 'summary_markdown_units',\n  hideColumn: true,\n  // Cell: (props) => <div> {toUnit(props)} </div>,\n  columns: [{\n    Header: 'Planned',\n    accessor: 'overall_markdown_units',\n    cellClassName: 'summary_planned_markdown_units',\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \" \", toUnit(props), \" \");\n    }\n  }, {\n    Header: 'Refreshed',\n    accessor: 'refreshed_overall_markdown_units',\n    cellClassName: 'summary_refreshed_markdown_units',\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \" \", toUnit(props), \" \");\n    }\n  }]\n}, {\n  Header: 'AUR $',\n  accessor: 'overall_aur',\n  cellClassName: 'summary_aur',\n  hideColumn: true,\n  // Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n  columns: [{\n    Header: 'Planned',\n    accessor: 'overall_aur',\n    cellClassName: 'summary_planned_aur',\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \" \", toDollarWithDecimal(props), \" \");\n    }\n  }, {\n    Header: 'Refreshed',\n    accessor: 'refreshed_overall_aur',\n    cellClassName: 'summary_refreshed_aur',\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \" \", toDollarWithDecimal(props), \" \");\n    }\n  }]\n}]; //weekToBinColDef contains accessor in granular level,\n//in Cell method have added a condition to display aggregated level data\n//if u add a new column make sure to copy the same\n//only bins will be expandable\n\nexport var weekToBinColDef = function weekToBinColDef(handleInputChange) {\n  return [{\n    id: 'selection',\n    groupByBoundary: true,\n    Header: 'Actions',\n    // added to maintain parent and child table column alignment\n    Cell: function Cell(props) {\n      var row = props.row,\n          rows = props.rows;\n      return React.createElement(\"div\", {\n        style: {\n          visibility: 'hidden'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(IndeterminateCheckbox, Object.assign({\n        row: row.id,\n        disabled: true\n      }, row.getToggleRowSelectedProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      })));\n    }\n  }, {\n    Header: 'MD Plan',\n    accessor: 'md_plan',\n    cellClassName: 'summary_md_plan',\n    Cell: function Cell(_ref7) {\n      var row = _ref7.row;\n      return null;\n    }\n  }, {\n    Header: 'Plan Level',\n    accessor: 'level',\n    cellClassName: 'summary_cadence_type'\n  }, {\n    Header: 'Date Range',\n    id: 'expander',\n    cellClassName: 'summary_expander',\n    Cell: function Cell(_ref8) {\n      var row = _ref8.row;\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, row.original.week ? 'W' + row.original.week : '');\n    }\n  }, {\n    id: 'expander1',\n    cellClassName: 'summary_expander1',\n    Header: 'Bins',\n    Cell: function Cell(_ref9) {\n      var row = _ref9.row;\n      return row.original.subRows ? React.createElement(\"span\", Object.assign({\n        className: \"summary-table-icon\"\n      }, row.getToggleRowExpandedProps({\n        style: {\n          // We can even use the row.depth property\n          // and paddingLeft to indicate the depth\n          // of the row\n          paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n        }\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }), row.original.subRows ? row.original.subRows.length : '-', \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n        class: \"fa fa-angle-down expanded-icon-size color-blue\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }) : React.createElement(\"i\", {\n        class: \"fa fa-angle-right expanded-icon-size color-blue\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }), \"\\xA0\\xA0\\xA0\") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, row.original.bin_num ? 'Bin ' + row.original.bin_num : null);\n    }\n  }, {\n    Header: '#Products',\n    accessor: 'product_count',\n    cellClassName: 'summary_product_code',\n    Cell: function Cell(props) {\n      var value = props.row.original.subRows ? props.row.original.overall_week_product_count : props.value;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, \" \", toUnit({\n        value: value\n      }), \" \");\n    }\n  }, // {\n  //   Header: 'Next week MD',\n  //   accessor: 'next_week',\n  //   cellClassName: 'summary_next_week',\n  //   Cell: ({ row, rows }) => {\n  //     let typeAccessor = !_.isEmpty(row.subRows) ? 'overall_week_offer_type' : 'offer_type';\n  //     let value = findNextWeek(row, rows);\n  //     return <span>{value ? unitCheck(value, row.original[typeAccessor]) : '-'}</span>;\n  //   },\n  // },\n  {\n    Header: 'Current running MD',\n    accessor: 'next_week',\n    cellClassName: 'summary_current_md',\n    Aggregated: function Aggregated(_ref10) {\n      var row = _ref10.row,\n          rows = _ref10.rows;\n      if (_.isEmpty(row.subRows)) return '-';\n      var value = null,\n          subRows = row.subRows;\n\n      for (var i = 0; i < subRows.length; i++) {\n        var newValue = currentRunningMd(subRows[i], rows);\n        value = newValue ? value + newValue : value;\n      }\n\n      return value || value === 0 ? unitCheck(value / subRows.length, row.original.overall_week_offer_type) : '-';\n    },\n    Cell: function Cell(_ref11) {\n      var row = _ref11.row,\n          rows = _ref11.rows;\n      if (!_.isEmpty(row.subRows)) return '-';\n      var value = currentRunningMd(row, rows);\n      return value || value === 0 ? unitCheck(value, row.original.offer_type) : '-';\n    }\n  }, {\n    Header: 'Planned MD',\n    accessor: 'offer_value',\n    cellClassName: 'summary_planned_md',\n    Cell: function Cell(cellInfo) {\n      var row = cellInfo.row;\n      var value = !_.isEmpty(row.subRows) ? row.original.overall_week_offer_value : row.original.offer_value;\n      var type = !_.isEmpty(row.subRows) ? row.original.overall_week_offer_type : row.original.offer_type;\n      var disbleInput = false;\n\n      if (_.isEmpty(row.subRows)) {\n        var endWeek = row.original;\n        var EDate = endWeek && moment().year(endWeek.year).week(endWeek.week_num + 1).day('sunday').format('YYYY/MM/DD');\n        disbleInput = moment().isSameOrAfter(EDate, 'week');\n      }\n\n      return !_.isEmpty(row.subRows) ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, value ? unitCheck(value, type) : '-') : React.createElement(EditableCell, {\n        cellValue: value,\n        offerType: type,\n        handleInputChange: handleInputChange,\n        cellInfo: cellInfo,\n        type: \"week_to_bin\",\n        disbleInput: disbleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      });\n    }\n  }, {\n    Header: 'Refreshed MD',\n    accessor: 'refreshed_md',\n    cellClassName: 'summary_refreshed_md',\n    Cell: function Cell(_ref12) {\n      var row = _ref12.row;\n      var value = !_.isEmpty(row.subRows) ? row.original.overall_week_refreshed_md : row.original.refreshed_md;\n      var type = !_.isEmpty(row.subRows) ? row.original.overall_week_offer_type : row.original.offer_type;\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, value ? unitCheck(value, type) : '-');\n    }\n  }, {\n    Header: 'MD Difference',\n    accessor: 'md_diff',\n    cellClassName: 'summary_difference',\n    Cell: function Cell(_ref13) {\n      var row = _ref13.row,\n          rows = _ref13.rows;\n      var accessor = !_.isEmpty(row.subRows) ? 'overall_week_offer_value' : 'offer_value';\n      var type = !_.isEmpty(row.subRows) ? 'overall_week_offer_type' : 'offer_type';\n      var nextWeek,\n          currentWeek = row.original[accessor] ? parseFloat(row.original[accessor]) : 0;\n      var value = findNextWeek(row, rows);\n      nextWeek = value ? parseFloat(value) : 0;\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, currentWeek ? unitCheck(nextWeek - currentWeek, row.original[type]) : '-');\n    }\n  }, {\n    Header: 'Sell through %',\n    accessor: 'sell_through',\n    cellClassName: 'summary_sell_through',\n    columns: [{\n      Header: 'Planned',\n      accessor: 'sell_through',\n      cellClassName: 'summary_planned_sell_through',\n      Cell: function Cell(_ref14) {\n        var row = _ref14.row,\n            rows = _ref14.rows;\n        var id = row.id.split('.');\n        var value = 0;\n\n        if (_.isEmpty(row.subRows) && (row.original.sell_through || row.original.sell_through === 0)) {\n          for (var i = 0; i <= parseInt(id[0]); i++) {\n            var found = _.find(rows, {\n              id: \"\".concat(i)\n            });\n\n            var data = found && found.originalSubRows && found.originalSubRows[parseInt(id[1])] && found.originalSubRows[parseInt(id[1])].sell_through ? found.originalSubRows[parseInt(id[1])].sell_through : 0;\n            value = value + data;\n          }\n        }\n\n        if (!_.isEmpty(row.subRows) && row.original.overall_week_sell_through) {\n          for (var _i = 0; _i <= parseInt(id[0]); _i++) {\n            var _found = _.find(rows, {\n              id: \"\".concat(_i)\n            });\n\n            var _data = _found && _found.original && _found.original.overall_week_sell_through ? _found.original.overall_week_sell_through : 0;\n\n            value = value + _data;\n          }\n        }\n\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 562\n          },\n          __self: this\n        }, value || value === 0 ? toPercentageWithDecimalDraft({\n          value: value\n        }) : '-');\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_sell_through',\n      cellClassName: 'summary_refreshed_sell_through',\n      Cell: function Cell(_ref15) {\n        var row = _ref15.row,\n            rows = _ref15.rows;\n        var id = row.id.split('.');\n        var value = 0;\n\n        if (_.isEmpty(row.subRows) && (row.original.refreshed_sell_through || row.original.refreshed_sell_through === 0)) {\n          for (var i = 0; i <= parseInt(id[0]); i++) {\n            var found = _.find(rows, {\n              id: \"\".concat(i)\n            });\n\n            var data = found && found.originalSubRows && found.originalSubRows[parseInt(id[1])] && found.originalSubRows[parseInt(id[1])].refreshed_sell_through ? found.originalSubRows[parseInt(id[1])].refreshed_sell_through : 0;\n            value = value + data;\n          }\n        }\n\n        if (!_.isEmpty(row.subRows) && row.original.overall_week_refreshed_sell_through) {\n          for (var _i2 = 0; _i2 <= parseInt(id[0]); _i2++) {\n            var _found2 = _.find(rows, {\n              id: \"\".concat(_i2)\n            });\n\n            var _data2 = _found2 && _found2.original && _found2.original.overall_week_refreshed_sell_through ? _found2.original.overall_week_refreshed_sell_through : 0;\n\n            value = value + _data2;\n          }\n        }\n\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 603\n          },\n          __self: this\n        }, value || value === 0 ? toPercentageWithDecimalDraft({\n          value: value\n        }) : '-');\n      }\n    }]\n  }, // {\n  //   Header: 'Markdown %',\n  //   accessor: 'markdown_perc',\n  //   cellClassName: 'summary_markdown_perc',\n  //   Cell: (props) => {\n  //     let value = props.row.original.subRows\n  //       ? props.row.original.overall_week_markdown_perc\n  //       : props.value;\n  //     return <div> {toPercentage({ value })} </div>;\n  //   },\n  // },\n  {\n    Header: 'Margin %',\n    accessor: 'margin_perc',\n    cellClassName: 'summary_margin_perc',\n    metric: true,\n    // Cell: (props) => {\n    //   let value = props.row.original.subRows\n    //     ? props.row.original.overall_week_margin_perc\n    //     : props.value;\n    //   return <div> {toPercWithOneDecimal({ value })} </div>;\n    // },\n    columns: [{\n      Header: 'Planned',\n      accessor: 'margin_perc',\n      cellClassName: 'summary_planned_margin_perc',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_week_margin_perc : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 643\n          },\n          __self: this\n        }, \" \", toPercWithOneDecimal({\n          value: value\n        }), \" \");\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_margin_perc',\n      cellClassName: 'summary_refreshed_margin_perc',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_week_margin_perc : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 655\n          },\n          __self: this\n        }, \" \", toPercWithOneDecimal({\n          value: value\n        }), \" \");\n      }\n    }]\n  }, {\n    Header: 'Margin $',\n    accessor: 'margin$',\n    cellClassName: 'summary_margin',\n    hideColumn: true,\n    // Cell: (props) => {\n    //   let value = props.row.original.subRows\n    //     ? props.row.original.overall_week_margin$\n    //     : props.value;\n    //   return <div> {toDollar(value)} </div>;\n    // },\n    columns: [{\n      Header: 'Planned',\n      accessor: 'margin$',\n      cellClassName: 'summary_planned_margin',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_week_margin$ : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 680\n          },\n          __self: this\n        }, \" \", toDollar(value), \" \");\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_margin$',\n      cellClassName: 'summary_refreshed_margin',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_week_refreshed_margin$ : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 692\n          },\n          __self: this\n        }, \" \", toDollar(value), \" \");\n      }\n    }]\n  }, {\n    Header: 'AUM $',\n    accessor: 'aum',\n    cellClassName: 'summary_aum',\n    hideColumn: true,\n    // Cell: (props) => {\n    //   let value = props.row.original.subRows ? props.row.original.overall_week_aum : props.value;\n    //   return <div> {toDollarWithDecimal({ value })} </div>;\n    // },\n    columns: [{\n      Header: 'Planned',\n      accessor: 'aum',\n      cellClassName: 'summary_planned_aum',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_week_aum : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 715\n          },\n          __self: this\n        }, \" \", toDollarWithDecimal({\n          value: value\n        }), \" \");\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_aum',\n      cellClassName: 'summary_refreshed_aum',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_week_refreshed_aum : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 727\n          },\n          __self: this\n        }, \" \", toDollarWithDecimal({\n          value: value\n        }), \" \");\n      }\n    }]\n  }, {\n    Header: 'Revenue $',\n    accessor: 'revenue$',\n    cellClassName: 'summary_revenue',\n    hideColumn: true,\n    // Cell: (props) => {\n    //   let value = props.row.original.subRows\n    //     ? props.row.original.overall_week_revenue$\n    //     : props.value;\n    //   return <div> {toDollar({ value })} </div>;\n    // },\n    columns: [{\n      Header: 'Planned',\n      accessor: 'revenue$',\n      cellClassName: 'summary_planned_revenue',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_week_revenue$ : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 752\n          },\n          __self: this\n        }, \" \", toDollar({\n          value: value\n        }), \" \");\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_revenue$',\n      cellClassName: 'summary_refreshed_revenue',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_week_refreshed_revenue$ : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 764\n          },\n          __self: this\n        }, \" \", toDollar({\n          value: value\n        }), \" \");\n      }\n    }]\n  }, // {\n  //   Header: 'Planned units',\n  //   accessor: 'planned_units',\n  //   cellClassName: 'summary_pvh_units',\n  //   hideColumn: true,\n  //   Cell: (props) => {\n  //     let value = props.row.original.subRows\n  //       ? props.row.original.overall_week_planned_units\n  //       : props.value;\n  //     return <div> {toUnit({ value })} </div>;\n  //   },\n  // },\n  {\n    Header: 'Markdown units',\n    accessor: 'markdown_units',\n    cellClassName: 'summary_markdown_units',\n    hideColumn: true,\n    // Cell: (props) => {\n    //   let value = props.row.original.subRows\n    //     ? props.row.original.overall_week_markdown_units\n    //     : props.value;\n    //   return <div> {toUnit({ value })} </div>;\n    // },\n    columns: [{\n      Header: 'Planned',\n      accessor: 'markdown_units',\n      cellClassName: 'summary_planned_markdown_units',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_week_markdown_units : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 801\n          },\n          __self: this\n        }, \" \", toUnit({\n          value: value\n        }), \" \");\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_markdown_units',\n      cellClassName: 'summary_refreshed_markdown_units',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_week_refreshed_markdown_units : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 813\n          },\n          __self: this\n        }, \" \", toUnit({\n          value: value\n        }), \" \");\n      }\n    }]\n  }, {\n    Header: 'AUR $',\n    accessor: 'aur',\n    cellClassName: 'summary_aur',\n    hideColumn: true,\n    // Cell: (props) => {\n    //   let value = props.row.original.subRows ? props.row.original.overall_week_aur : props.value;\n    //   return <div> {toDollarWithDecimal({ value })} </div>;\n    // },\n    columns: [{\n      Header: 'Planned',\n      accessor: 'aur',\n      cellClassName: 'summary_planned_aur',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_week_aur : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 836\n          },\n          __self: this\n        }, \" \", toDollarWithDecimal({\n          value: value\n        }), \" \");\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_aur',\n      cellClassName: 'summary_refreshed_aur',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_week_refreshed_aur : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 848\n          },\n          __self: this\n        }, \" \", toDollarWithDecimal({\n          value: value\n        }), \" \");\n      }\n    }]\n  }];\n}; //same as weekToBinColDef, but bin to week level\n//only date range will be expandable\n\nexport var binToWeekColDef = function binToWeekColDef(handleInputChange) {\n  return [{\n    id: 'selection',\n    groupByBoundary: true,\n    Header: 'Actions',\n    // added to maintain parent and child table column alignment\n    Cell: function Cell(props) {\n      var row = props.row,\n          rows = props.rows;\n      return React.createElement(\"div\", {\n        style: {\n          visibility: 'hidden'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 867\n        },\n        __self: this\n      }, React.createElement(IndeterminateCheckbox, Object.assign({\n        row: row.id,\n        disabled: true\n      }, row.getToggleRowSelectedProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 868\n        },\n        __self: this\n      })));\n    }\n  }, {\n    Header: 'MD Plan',\n    accessor: 'md_plan',\n    cellClassName: 'summary_md_plan',\n    Cell: function Cell(_ref16) {\n      var row = _ref16.row;\n      return null;\n    }\n  }, {\n    Header: 'Plan Level',\n    accessor: 'level',\n    cellClassName: 'summary_cadence_type'\n  }, {\n    Header: 'Date Range',\n    id: 'expander',\n    cellClassName: 'summary_expander',\n    Cell: function Cell(_ref17) {\n      var row = _ref17.row;\n      var startWeek = row.originalSubRows && row.originalSubRows[0];\n      var endWeek = row.originalSubRows && row.originalSubRows[row.originalSubRows.length - 1];\n      var SDate = startWeek && moment().year(startWeek.year).week(startWeek.week_num).day('monday').format('YYYY/MM/DD');\n      var EDate = endWeek && moment().year(endWeek.year).week(endWeek.week_num + 1).day('sunday').format('YYYY/MM/DD');\n      return row.original.subRows ? React.createElement(\"span\", Object.assign({\n        className: \"summary-table-icon\"\n      }, row.getToggleRowExpandedProps({\n        style: {\n          paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n        }\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 907\n        },\n        __self: this\n      }), SDate, \" - \", EDate, \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n        class: \"fa fa-angle-down expanded-icon-size color-blue\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 919\n        },\n        __self: this\n      }) : React.createElement(\"i\", {\n        class: \"fa fa-angle-right expanded-icon-size color-blue\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 921\n        },\n        __self: this\n      }), \"\\xA0\\xA0\\xA0\") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 926\n        },\n        __self: this\n      }, row.original.week_num ? 'W' + row.original.week_num : '');\n    }\n  }, {\n    id: 'expander1',\n    cellClassName: 'summary_expander1',\n    Header: 'Bins',\n    Cell: function Cell(_ref18) {\n      var row = _ref18.row;\n      return row.original.bin ? 'Bin ' + row.original.bin : null;\n    }\n  }, {\n    Header: '#Products',\n    accessor: 'product_count',\n    cellClassName: 'summary_product_code',\n    Cell: function Cell(props) {\n      var value = props.row.original.subRows ? props.row.original.overall_bin_product_count : props.value;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 948\n        },\n        __self: this\n      }, \" \", toUnit({\n        value: value\n      }), \" \");\n    }\n  }, // {\n  //   Header: 'Next week MD',\n  //   accessor: 'next_week',\n  //   cellClassName: 'summary_next_week',\n  //   Cell: ({ row, rows }) => {\n  //     let id, value;\n  //     let accessor = !_.isEmpty(row.subRows) ? 'overall_bin_offer_value' : 'offer_value';\n  //     let typeAccessor = !_.isEmpty(row.subRows)\n  //       ? row.original.overall_bin_offer_type\n  //       : row.original.offer_type;\n  //     if (row.original[accessor]) {\n  //       id = row.id.split('.');\n  //       let find = _.find(rows, { id: id[0] });\n  //       value =\n  //         find.originalSubRows &&\n  //         find.originalSubRows[parseInt(id[1]) + 1] &&\n  //         find.originalSubRows[parseInt(id[1]) + 1][accessor];\n  //     }\n  //     return <span>{value ? unitCheck(value, typeAccessor) : '-'}</span>;\n  //   },\n  // },\n  {\n    Header: 'Current running MD',\n    accessor: 'next_week',\n    cellClassName: 'summary_current_md',\n    Aggregated: function Aggregated(_ref19) {\n      var row = _ref19.row,\n          rows = _ref19.rows;\n      if (_.isEmpty(row.subRows)) return '-';\n      var value = null,\n          subRows = row.subRows;\n\n      for (var i = 0; i < subRows.length; i++) {\n        var newValue = currentRunningMdBin(subRows[i], rows);\n        value = newValue ? value + newValue : value;\n      }\n\n      return value || value === 0 ? unitCheck(value / subRows.length, row.original.overall_bin_offer_type) : '-';\n    },\n    Cell: function Cell(_ref20) {\n      var row = _ref20.row,\n          rows = _ref20.rows;\n      if (!_.isEmpty(row.subRows)) return '-';\n      var value = currentRunningMdBin(row, rows);\n      return value || value === 0 ? unitCheck(value, row.original.offer_type) : '-';\n    }\n  }, {\n    Header: 'Planned MD',\n    accessor: 'offer_value',\n    cellClassName: 'summary_planned_md',\n    Cell: function Cell(cellInfo) {\n      var row = cellInfo.row;\n      var value = !_.isEmpty(row.subRows) ? row.original.overall_bin_offer_value : row.original.offer_value;\n      var type = !_.isEmpty(row.subRows) ? row.original.overall_bin_offer_type : row.original.offer_type;\n      var disbleInput = false;\n\n      if (_.isEmpty(row.subRows)) {\n        var endWeek = row.original;\n        var EDate = endWeek && moment().year(endWeek.year).week(endWeek.week_num + 1).day('sunday').format('YYYY/MM/DD');\n        disbleInput = moment().isSameOrAfter(EDate, 'week');\n      }\n\n      return !_.isEmpty(row.subRows) ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021\n        },\n        __self: this\n      }, value ? unitCheck(value, type) : '-') : React.createElement(EditableCell, {\n        cellValue: value,\n        offerType: type,\n        handleInputChange: handleInputChange,\n        cellInfo: cellInfo,\n        type: \"bin_to_week\",\n        disbleInput: disbleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1023\n        },\n        __self: this\n      });\n    }\n  }, {\n    Header: 'Refreshed MD',\n    accessor: 'refreshed_md',\n    cellClassName: 'summary_refreshed_md',\n    Cell: function Cell(_ref21) {\n      var row = _ref21.row;\n      var value = !_.isEmpty(row.subRows) ? row.original.overall_bin_refreshed_md : row.original.refreshed_md;\n      var type = !_.isEmpty(row.subRows) ? row.original.overall_bin_offer_type : row.original.offer_type;\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1046\n        },\n        __self: this\n      }, value ? unitCheck(value, type) : '-');\n    }\n  }, {\n    Header: 'MD Difference',\n    accessor: 'md_diff',\n    cellClassName: 'summary_difference',\n    Cell: function Cell(_ref22) {\n      var row = _ref22.row,\n          rows = _ref22.rows;\n      var accessor = !_.isEmpty(row.subRows) ? 'overall_bin_offer_value' : 'offer_value';\n      var type = !_.isEmpty(row.subRows) ? 'overall_bin_offer_type' : 'offer_type';\n      var id,\n          nextWeek,\n          currentWeek = row.original[[accessor]] ? parseFloat(row.original[[accessor]]) : 0;\n\n      if (row.original[[accessor]]) {\n        id = row.id.split('.');\n\n        var find = _.find(rows, {\n          id: id[0]\n        });\n\n        var value = find.originalSubRows && find.originalSubRows[parseInt(id[1]) + 1] && find.originalSubRows[parseInt(id[1]) + 1][[accessor]];\n        nextWeek = value ? parseFloat(value) : 0;\n      }\n\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1070\n        },\n        __self: this\n      }, currentWeek ? unitCheck(nextWeek - currentWeek, row.original[type]) : '-');\n    }\n  }, {\n    Header: 'Sell through %',\n    accessor: 'sell_through',\n    cellClassName: 'summary_sell_through',\n    columns: [{\n      Header: 'Planned',\n      accessor: 'sell_through',\n      cellClassName: 'summary_planned_sell_through',\n      Cell: function Cell(_ref23) {\n        var row = _ref23.row,\n            rows = _ref23.rows;\n        var id = row.id.split('.');\n        var value = 0;\n\n        if (_.isEmpty(row.subRows) && (row.original.sell_through || row.original.sell_through === 0)) {\n          var found = _.find(rows, {\n            id: id[0]\n          });\n\n          for (var i = 0; i <= parseInt(id[1]); i++) {\n            var data = found && found.originalSubRows && found.originalSubRows[i] && found.originalSubRows[i].sell_through ? found.originalSubRows[i].sell_through : 0;\n            value = value + data;\n          }\n        }\n\n        if (!_.isEmpty(row.subRows) && row.original.overall_bin_sell_through) {\n          for (var _i3 = 0; _i3 <= parseInt(id[0]); _i3++) {\n            var _found3 = _.find(rows, {\n              id: \"\".concat(_i3)\n            });\n\n            var _data3 = _found3 && _found3.original && _found3.original.overall_bin_sell_through ? _found3.original.overall_bin_sell_through : 0;\n\n            value = value + _data3;\n          }\n        }\n\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1114\n          },\n          __self: this\n        }, value || value === 0 ? toPercentageWithDecimalDraft({\n          value: value\n        }) : '-');\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_sell_through',\n      cellClassName: 'summary_refreshed_sell_through',\n      Cell: function Cell(_ref24) {\n        var row = _ref24.row,\n            rows = _ref24.rows;\n        var id = row.id.split('.');\n        var value = 0;\n\n        if (_.isEmpty(row.subRows) && (row.original.refreshed_sell_through || row.original.refreshed_sell_through === 0)) {\n          var found = _.find(rows, {\n            id: id[0]\n          });\n\n          for (var i = 0; i <= parseInt(id[1]); i++) {\n            var data = found && found.originalSubRows && found.originalSubRows[i] && found.originalSubRows[i].refreshed_sell_through ? found.originalSubRows[i].refreshed_sell_through : 0;\n            value = value + data;\n          }\n        }\n\n        if (!_.isEmpty(row.subRows) && row.original.overall_bin_refreshed_sell_through) {\n          for (var _i4 = 0; _i4 <= parseInt(id[0]); _i4++) {\n            var _found4 = _.find(rows, {\n              id: \"\".concat(_i4)\n            });\n\n            var _data4 = _found4 && _found4.original && _found4.original.overall_bin_refreshed_sell_through ? _found4.original.overall_bin_refreshed_sell_through : 0;\n\n            value = value + _data4;\n          }\n        }\n\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1155\n          },\n          __self: this\n        }, value || value === 0 ? toPercentageWithDecimalDraft({\n          value: value\n        }) : '-');\n      }\n    }]\n  }, // {\n  //   Header: 'Markdown %',\n  //   accessor: 'markdown_perc',\n  //   cellClassName: 'summary_markdown_perc',\n  //   Cell: (props) => {\n  //     let value = props.row.original.subRows\n  //       ? props.row.original.overall_bin_markdown_perc\n  //       : props.value;\n  //     return <div> {toPercentage({ value })} </div>;\n  //   },\n  // },\n  {\n    Header: 'Margin %',\n    accessor: 'margin_perc',\n    cellClassName: 'summary_margin_perc',\n    metric: true,\n    // Cell: (props) => {\n    //   let value = props.row.original.subRows\n    //     ? props.row.original.overall_bin_margin_perc\n    //     : props.value;\n    //   return <div> {toPercWithOneDecimal({ value })} </div>;\n    // },\n    columns: [{\n      Header: 'Planned',\n      accessor: 'margin_perc',\n      cellClassName: 'summary_planned_margin_perc',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_bin_margin_perc : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1194\n          },\n          __self: this\n        }, \" \", toPercWithOneDecimal({\n          value: value\n        }), \" \");\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_margin_perc',\n      cellClassName: 'summary_refreshed_margin_perc',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_bin_refreshed_margin_perc : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1206\n          },\n          __self: this\n        }, \" \", toPercWithOneDecimal({\n          value: value\n        }), \" \");\n      }\n    }]\n  }, {\n    Header: 'Margin $',\n    accessor: 'margin$',\n    cellClassName: 'summary_margin',\n    hideColumn: true,\n    // Cell: (props) => {\n    //   let value = props.row.original.subRows\n    //     ? props.row.original.overall_bin_margin$\n    //     : props.value;\n    //   return <div> {toDollar({ value })} </div>;\n    // },\n    columns: [{\n      Header: 'Planned',\n      accessor: 'margin$',\n      cellClassName: 'summary_planned_margin',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_bin_margin$ : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1231\n          },\n          __self: this\n        }, \" \", toDollar({\n          value: value\n        }), \" \");\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_margin$',\n      cellClassName: 'summary_refreshed_margin',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_bin_refreshed_margin$ : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1243\n          },\n          __self: this\n        }, \" \", toDollar({\n          value: value\n        }), \" \");\n      }\n    }]\n  }, {\n    Header: 'AUM $',\n    accessor: 'aum',\n    cellClassName: 'summary_aum',\n    hideColumn: true,\n    // Cell: (props) => {\n    //   let value = props.row.original.subRows ? props.row.original.overall_bin_aum : props.value;\n    //   return <div> {toDollarWithDecimal({ value })} </div>;\n    // },\n    columns: [{\n      Header: 'Planned',\n      accessor: 'aum',\n      cellClassName: 'summary_planned_aum',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_bin_aum : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1266\n          },\n          __self: this\n        }, \" \", toDollarWithDecimal({\n          value: value\n        }), \" \");\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_aum',\n      cellClassName: 'summary_refreshed_aum',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_bin_refreshed_aum : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1278\n          },\n          __self: this\n        }, \" \", toDollarWithDecimal({\n          value: value\n        }), \" \");\n      }\n    }]\n  }, {\n    Header: 'Revenue $',\n    accessor: 'revenue$',\n    cellClassName: 'summary_revenue',\n    hideColumn: true,\n    // Cell: (props) => {\n    //   let value = props.row.original.subRows\n    //     ? props.row.original.overall_bin_revenue$\n    //     : props.value;\n    //   return <div> {toDollar({ value })} </div>;\n    // },\n    columns: [{\n      Header: 'Planned',\n      accessor: 'revenue$',\n      cellClassName: 'summary_planned_revenue',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_bin_revenue$ : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1303\n          },\n          __self: this\n        }, \" \", toDollar({\n          value: value\n        }), \" \");\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_revenue$',\n      cellClassName: 'summary_refreshed_revenue',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_bin_refreshed_revenue$ : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1315\n          },\n          __self: this\n        }, \" \", toDollar({\n          value: value\n        }), \" \");\n      }\n    }]\n  }, // {\n  //   Header: 'Planned units',\n  //   accessor: 'planned_units',\n  //   cellClassName: 'summary_pvh_units',\n  //   hideColumn: true,\n  //   Cell: (props) => {\n  //     let value = props.row.original.subRows\n  //       ? props.row.original.overall_bin_planned_units\n  //       : props.value;\n  //     return <div> {toUnit({ value })} </div>;\n  //   },\n  // },\n  {\n    Header: 'Markdown units',\n    accessor: 'markdown_units',\n    cellClassName: 'summary_markdown_units',\n    hideColumn: true,\n    // Cell: (props) => {\n    //   let value = props.row.original.subRows\n    //     ? props.row.original.overall_bin_markdown_units\n    //     : props.value;\n    //   return <div> {toUnit({ value })} </div>;\n    // },\n    columns: [{\n      Header: 'Planned',\n      accessor: 'markdown_units',\n      cellClassName: 'summary_planned_markdown_units',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_bin_markdown_units : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1352\n          },\n          __self: this\n        }, \" \", toUnit({\n          value: value\n        }), \" \");\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_markdown_units',\n      cellClassName: 'summary_refreshed_markdown_units',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_bin_refreshed_markdown_units : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1364\n          },\n          __self: this\n        }, \" \", toUnit({\n          value: value\n        }), \" \");\n      }\n    }]\n  }, {\n    Header: 'AUR $',\n    accessor: 'aur',\n    cellClassName: 'summary_aur',\n    hideColumn: true,\n    // Cell: (props) => {\n    //   let value = props.row.original.subRows ? props.row.original.overall_bin_aur : props.value;\n    //   return <div> {toDollarWithDecimal({ value })} </div>;\n    // },\n    columns: [{\n      Header: 'Planned',\n      accessor: 'aur',\n      cellClassName: 'summary_planned_aur',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_bin_aur : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1387\n          },\n          __self: this\n        }, \" \", toDollarWithDecimal({\n          value: value\n        }), \" \");\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_aur',\n      cellClassName: 'summary_refreshed_aur',\n      Cell: function Cell(props) {\n        var value = props.row.original.subRows ? props.row.original.overall_bin_refreshed_aur : props.value;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1399\n          },\n          __self: this\n        }, \" \", toDollarWithDecimal({\n          value: value\n        }), \" \");\n      }\n    }]\n  }];\n}; /////detailed table coldefs\n\nexport var detailedColDef = function detailedColDef(handleInputChange) {\n  return [{\n    Header: 'MD Plan',\n    accessor: 'title'\n  }, {\n    Header: 'Plan Level',\n    accessor: 'level'\n  }, // {\n  //   accessor: 'date',\n  //   Header: 'Date Range',\n  //   Cell: ({ row }) => {\n  //     return (\n  //       <span>\n  //         {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n  //         {moment(row.original.end_date).format('YYYY/MM/DD')}\n  //       </span>\n  //     );\n  //   },\n  // },\n  {\n    Header: 'Week Number',\n    accessor: 'week',\n    downloadFormatter: function downloadFormatter(params) {\n      return params.value ? \"W\".concat(params.value) : '-';\n    },\n    Cell: function Cell(_ref25) {\n      var row = _ref25.row;\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1435\n        },\n        __self: this\n      }, row.original.week ? \"W\".concat(row.original.week) : null);\n    }\n  }, {\n    Header: 'Bins',\n    accessor: 'bins',\n    downloadFormatter: function downloadFormatter(params) {\n      return params.value ? \"Bin \".concat(params.value) : '-';\n    },\n    Cell: function Cell(_ref26) {\n      var row = _ref26.row;\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1446\n        },\n        __self: this\n      }, \"Bin \", row.original.bins);\n    }\n  }, {\n    Header: 'Product code',\n    accessor: 'product_code'\n  }, // {\n  //   Header: 'Next week MD',\n  //   accessor: 'overall_next_week',\n  // },\n  {\n    Header: 'Current running MD',\n    accessor: 'week_level_runnig_value',\n    Cell: function Cell(_ref27) {\n      var data = _ref27.data,\n          row = _ref27.row;\n      var original = row.original;\n      var lastWeekNum = moment().subtract(1, 'week').week();\n\n      var isLastWeek = _.find(data, {\n        promo_code: original.promo_code,\n        product_code: original.product_code,\n        week: lastWeekNum\n      });\n\n      var date = moment().year(original.year).week(original.week).day('monday').format('YYYY-MM-DD');\n      if (_.isEmpty(isLastWeek) || !moment().isSameOrBefore(date, 'week')) return '-';\n      return isLastWeek.week_level_refreshed_md ? unitCheck(isLastWeek.week_level_refreshed_md, isLastWeek.offer_type) : '-';\n    }\n  }, {\n    Header: 'Planned MD',\n    accessor: 'week_level_offer_value',\n    downloadFormatter: unitCheck,\n    Cell: function Cell(cellInfo) {\n      var row = cellInfo.row;\n      var value = !_.isEmpty(row.subRows) ? row.original.overall_week_offer_value : row.original.offer_value;\n      var type = !_.isEmpty(row.subRows) ? row.original.overall_week_offer_type : row.original.offer_type;\n      var disbleInput = false;\n\n      if (_.isEmpty(row.subRows)) {\n        var endWeek = row.original;\n        var EDate = endWeek && moment().year(endWeek.year).week(endWeek.week_num + 1).day('sunday').format('YYYY/MM/DD');\n        disbleInput = moment().isSameOrAfter(EDate, 'week');\n      }\n\n      return !_.isEmpty(row.subRows) ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1505\n        },\n        __self: this\n      }, value ? unitCheck(value, type) : '-') : React.createElement(EditableCell, {\n        cellValue: value,\n        offerType: type,\n        handleInputChange: handleInputChange,\n        cellInfo: cellInfo,\n        type: \"week_to_bin\",\n        disbleInput: disbleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1507\n        },\n        __self: this\n      });\n    }\n  }, {\n    Header: 'Refreshed MD',\n    accessor: 'week_level_refreshed_md',\n    downloadFormatter: unitCheck,\n    Cell: function Cell(_ref28) {\n      var row = _ref28.row;\n      return row.original.week_level_refreshed_md ? unitCheck(row.original.week_level_refreshed_md, row.original.offer_type) : '-';\n    }\n  }, // {\n  //   Header: 'MD Difference',\n  //   accessor: 'overall_md_diff',\n  //   Cell: ({ row }) => {\n  //     return row.original.overall_md_diff ? row.original.overall_md_diff : '-';\n  //   },\n  // },\n  {\n    Header: 'Sell through %',\n    accessor: 'week_level_sell_through',\n    // Cell: (props) => <div> {toPercentageWithDecimalDraft(props)} </div>,\n    columns: [{\n      Header: 'Planned',\n      accessor: 'week_level_sell_through',\n      cellClassName: 'summary_planned_sell_through',\n      downloadHeader: 'Planned Sell through %',\n      downloadFormatter: toPercentageWithDecimalDraft,\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1547\n          },\n          __self: this\n        }, \" \", toPercentageWithDecimalDraft(props), \" \");\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_week_level_sell_through',\n      cellClassName: 'summary_refreshed_sell_through',\n      downloadHeader: 'Refreshed Sell through %',\n      downloadFormatter: toPercentageWithDecimalDraft,\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1555\n          },\n          __self: this\n        }, \" \", toPercentageWithDecimalDraft(props), \" \");\n      }\n    }]\n  }, // {\n  //   Header: 'Markdown %',\n  //   accessor: 'week_level_markdown_perc',\n  //   Cell: (props) => <div> {toPercentage(props)} </div>,\n  // },\n  {\n    Header: 'Margin %',\n    accessor: 'week_level_margin_perc',\n    metric: true,\n    // Cell: (props) => <div> {toPercWithOneDecimal(props)} </div>,\n    columns: [{\n      Header: 'Planned',\n      accessor: 'week_level_margin_perc',\n      cellClassName: 'summary_planned_sell_through',\n      downloadHeader: 'Planned Margin %',\n      downloadFormatter: toPercWithOneDecimal,\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1577\n          },\n          __self: this\n        }, \" \", toPercWithOneDecimal(props), \" \");\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_week_level_margin_perc',\n      cellClassName: 'summary_refreshed_sell_through',\n      downloadHeader: 'Refreshed Margin %',\n      downloadFormatter: toPercWithOneDecimal,\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1585\n          },\n          __self: this\n        }, \" \", toPercWithOneDecimal(props), \" \");\n      }\n    }]\n  }, {\n    Header: 'Margin $',\n    accessor: 'week_level_margin$',\n    hideColumn: true,\n    // Cell: (props) => <div> {toDollar(props)} </div>,\n    columns: [{\n      Header: 'Planned',\n      accessor: 'week_level_margin$',\n      cellClassName: 'summary_planned_sell_through',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1599\n          },\n          __self: this\n        }, \" \", toDollar(props), \" \");\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_week_level_margin$',\n      cellClassName: 'summary_refreshed_sell_through',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1605\n          },\n          __self: this\n        }, \" \", toDollar(props), \" \");\n      }\n    }]\n  }, {\n    Header: 'AUM $',\n    accessor: 'week_level_aum',\n    hideColumn: true,\n    // Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n    columns: [{\n      Header: 'Planned',\n      accessor: 'week_level_aum',\n      cellClassName: 'summary_planned_sell_through',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1619\n          },\n          __self: this\n        }, \" \", toDollarWithDecimal(props), \" \");\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_week_level_aum',\n      cellClassName: 'summary_refreshed_sell_through',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1625\n          },\n          __self: this\n        }, \" \", toDollarWithDecimal(props), \" \");\n      }\n    }]\n  }, {\n    Header: 'Revenue $',\n    accessor: 'week_level_revenue$',\n    hideColumn: true,\n    // Cell: (props) => <div> {toDollar(props)} </div>,\n    columns: [{\n      Header: 'Planned',\n      accessor: 'week_level_revenue$',\n      cellClassName: 'summary_planned_sell_through',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1639\n          },\n          __self: this\n        }, \" \", toDollar(props), \" \");\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_week_level_revenue$',\n      cellClassName: 'summary_refreshed_sell_through',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1645\n          },\n          __self: this\n        }, \" \", toDollar(props), \" \");\n      }\n    }]\n  }, // {\n  //   Header: 'Planned units',\n  //   accessor: 'week_level_planned_units',\n  //   hideColumn: true,\n  //   Cell: (props) => <div> {toUnit(props)} </div>,\n  // },\n  {\n    Header: 'Units',\n    accessor: 'week_level_markdown_units',\n    hideColumn: true,\n    // Cell: (props) => <div> {toUnit(props)} </div>,\n    columns: [{\n      Header: 'Planned',\n      accessor: 'week_level_markdown_units',\n      cellClassName: 'summary_planned_sell_through',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1665\n          },\n          __self: this\n        }, \" \", toUnit(props), \" \");\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_week_level_markdown_units',\n      cellClassName: 'summary_refreshed_sell_through',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1671\n          },\n          __self: this\n        }, \" \", toUnit(props), \" \");\n      }\n    }]\n  }, {\n    Header: 'AUR $',\n    accessor: 'week_level_aur',\n    hideColumn: true,\n    // Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n    columns: [{\n      Header: 'Planned',\n      accessor: 'week_level_aur',\n      cellClassName: 'summary_planned_sell_through',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1685\n          },\n          __self: this\n        }, \" \", toDollarWithDecimal(props), \" \");\n      }\n    }, {\n      Header: 'Refreshed',\n      accessor: 'refreshed_week_level_aur',\n      cellClassName: 'summary_refreshed_sell_through',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1691\n          },\n          __self: this\n        }, \" \", toDollarWithDecimal(props), \" \");\n      }\n    }]\n  }];\n};\n\nfunction unitCheck(value, type) {\n  if (!value && value !== 0 || !type) return '-';\n  if (type === 'percent_off') return toPercentage({\n    value: value\n  });\n  if (type === 'fixed_price') return toDollar({\n    value: value\n  });\n}\n\nfunction findNextWeek(row, rows) {\n  var value;\n  var id = row.id.split('.');\n\n  var found = _.find(rows, {\n    id: \"\".concat(parseInt(id[0]) + 1)\n  });\n\n  if (!_.isEmpty(found) && _.isEmpty(row.subRows) && row.original.offer_value) {\n    value = found.originalSubRows && found.originalSubRows[parseInt(id[1])] && found.originalSubRows[parseInt(id[1])].offer_value;\n  }\n\n  if (!_.isEmpty(found) && !_.isEmpty(row.subRows) && row.original.overall_week_offer_value) {\n    value = found.original && found.original.overall_week_offer_value;\n  }\n\n  return value;\n}\n\nfunction currentRunningMd(row, rows) {\n  var value = null;\n  var date = moment().year(row.original.year).week(row.original.week_num).day('monday').format('YYYY-MM-DD');\n\n  if (moment().isSameOrBefore(date, 'week')) {\n    var lastWeekNum = moment().subtract(1, 'week').week();\n\n    var found = _.find(rows, {\n      original: {\n        week: lastWeekNum\n      }\n    });\n\n    var found1 = _.find(found && found.originalSubRows && found.originalSubRows, {\n      bin_num: row.original.bin_num\n    });\n\n    value = found1 && found1.refreshed_md ? found1.refreshed_md : null;\n  }\n\n  return value;\n}\n\nfunction currentRunningMdBin(row, rows) {\n  var value = null;\n  var date = moment().year(row.original.year).week(row.original.week_num).day('monday').format('YYYY-MM-DD');\n\n  if (moment().isSameOrBefore(date, 'week')) {\n    var id = row.id.split('.');\n\n    var found = _.find(rows, {\n      id: id[0]\n    });\n\n    if (!_.isEmpty(found) && found.originalSubRows.length) {\n      var lastWeekNum = moment().subtract(1, 'week').week();\n\n      var find = _.find(found.originalSubRows, {\n        week_num: lastWeekNum\n      });\n\n      if (!find) return null;\n      value = find.refreshed_md;\n    }\n  }\n\n  return value;\n}","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Summary/aggColdef.js"],"names":["React","toPercentage","toPercentageWithDecimalDraft","toUnit","toDollar","toDollarWithDecimal","toPercWithOneDecimal","_","moment","EditableCell","IndeterminateCheckbox","aggColDef","Header","accessor","cellClassName","id","Cell","row","startWeek","original","week_level_data","endWeek","length","SDate","year","week","day","format","EDate","md_plan","getToggleRowExpandedProps","style","paddingLeft","depth","isExpanded","bin_level_data","subRows","props","rows","value","overall_offer_value","type","overall_offer_type","unitCheck","overall_refreshed_md","overall_md_diff","columns","metric","hideColumn","weekToBinColDef","handleInputChange","groupByBoundary","visibility","getToggleRowSelectedProps","bin_num","overall_week_product_count","Aggregated","isEmpty","i","newValue","currentRunningMd","overall_week_offer_type","offer_type","cellInfo","overall_week_offer_value","offer_value","disbleInput","week_num","isSameOrAfter","overall_week_refreshed_md","refreshed_md","nextWeek","currentWeek","parseFloat","findNextWeek","split","sell_through","parseInt","found","find","data","originalSubRows","overall_week_sell_through","refreshed_sell_through","overall_week_refreshed_sell_through","overall_week_margin_perc","overall_week_margin$","overall_week_refreshed_margin$","overall_week_aum","overall_week_refreshed_aum","overall_week_revenue$","overall_week_refreshed_revenue$","overall_week_markdown_units","overall_week_refreshed_markdown_units","overall_week_aur","overall_week_refreshed_aur","binToWeekColDef","bin","overall_bin_product_count","currentRunningMdBin","overall_bin_offer_type","overall_bin_offer_value","overall_bin_refreshed_md","overall_bin_sell_through","overall_bin_refreshed_sell_through","overall_bin_margin_perc","overall_bin_refreshed_margin_perc","overall_bin_margin$","overall_bin_refreshed_margin$","overall_bin_aum","overall_bin_refreshed_aum","overall_bin_revenue$","overall_bin_refreshed_revenue$","overall_bin_markdown_units","overall_bin_refreshed_markdown_units","overall_bin_aur","overall_bin_refreshed_aur","detailedColDef","downloadFormatter","params","bins","lastWeekNum","subtract","isLastWeek","promo_code","product_code","date","isSameOrBefore","week_level_refreshed_md","downloadHeader","found1"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  toPercentage,\n  toPercentageWithDecimalDraft,\n  toUnit,\n  toDollar,\n  toDollarWithDecimal,\n  toPercWithOneDecimal,\n} from '../../helper/formatter';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport EditableCell from './EditableCell';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox';\n\n//cellClassName must be same for aggColDef, binToWeekColDef and weekToBinColDef\n/********************************************************************* */\n//*******WHILE ADDING NEW COLUMNS ADD A UNIQUE CELLCLASSNAME************/\n/********ADD THE COLUMN TO ALL OF THREE COLDEFS*************************/\n/********************************************************************* */\n//aggColDef is aggregate level parent table coldef,\n//in this level user can expand both dateRange and Bins cols(when one is expanded the other will disable)\nexport const aggColDef = [\n  // {\n  //   Header: 'MD Plan',\n  //   accessor: 'md_plan',\n  //   cellClassName: 'summary_md_plan',\n  // },\n  {\n    Header: 'Plan Level',\n    accessor: 'level',\n    cellClassName: 'summary_cadence_type',\n  },\n  {\n    id: 'expander',\n    cellClassName: 'summary_expander',\n    Header: 'Date Range',\n    Cell: ({ row }) => {\n      let startWeek =\n        row.original && row.original.week_level_data && row.original.week_level_data[0];\n      let endWeek =\n        row.original &&\n        row.original.week_level_data &&\n        row.original.week_level_data[row.original.week_level_data.length - 1];\n      let SDate =\n        startWeek &&\n        moment().year(startWeek.year).week(startWeek.week).day('monday').format('YYYY/MM/DD');\n      let EDate =\n        endWeek &&\n        moment()\n          .year(endWeek.year)\n          .week(endWeek.week + 1)\n          .day('sunday')\n          .format('YYYY/MM/DD');\n      return row.original.md_plan ? (\n        <span\n          className=\"summary-table-icon\"\n          {...row.getToggleRowExpandedProps({\n            style: {\n              paddingLeft: `${row.depth * 2}rem`,\n            },\n          })}>\n          {/* ******************************************* */}\n          {/* bcs need to show date range visible in summary table not plan date range */}\n          {/* ******************************************* */}\n          {SDate} - {EDate}\n          {/* {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n          {moment(row.original.end_date).format('YYYY/MM/DD')} */}\n          &nbsp;&nbsp;&nbsp;\n          {row.isExpanded ? (\n            <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          ) : (\n            <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          )}\n          &nbsp;&nbsp;&nbsp;\n        </span>\n      ) : null;\n    },\n  },\n\n  {\n    id: 'expander1',\n    cellClassName: 'summary_expander1',\n    Header: 'Bins',\n    Cell: ({ row }) => {\n      return row.original.md_plan ? (\n        <span\n          className=\"summary-table-icon\"\n          {...row.getToggleRowExpandedProps({\n            style: {\n              paddingLeft: `${row.depth * 2}rem`,\n            },\n          })}>\n          {row.original.bin_level_data\n            ? row.original.bin_level_data.length\n            : row.original.week_level_data &&\n              row.original.week_level_data[0] &&\n              row.original.week_level_data[0].bin_level_data\n            ? row.original.week_level_data[0].bin_level_data.length\n            : row.original.week_level_data &&\n              row.original.week_level_data[0] &&\n              row.original.week_level_data[0].subRows\n            ? row.original.week_level_data[0].subRows.length\n            : '-'}\n          &nbsp;&nbsp;&nbsp;\n          {row.isExpanded ? (\n            <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          ) : (\n            <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          )}\n          &nbsp;&nbsp;&nbsp;\n        </span>\n      ) : null;\n    },\n  },\n\n  {\n    Header: '#Products',\n    accessor: 'overall_product_count',\n    cellClassName: 'summary_product_code',\n    Cell: (props) => {\n      return <div> {toUnit(props)} </div>;\n    },\n  },\n  // {\n  //   Header: 'Next week MD',\n  //   accessor: 'overall_next_week',\n  //   cellClassName: 'summary_next_week',\n  //   Cell: ({ row, rows }) => {\n  //     return '-';\n  //   },\n  // },\n  {\n    Header: 'Current running MD',\n    accessor: 'overall_next_week',\n    cellClassName: 'summary_current_md',\n    Cell: ({ row, rows }) => {\n      return '-';\n    },\n  },\n  {\n    Header: 'Planned MD',\n    accessor: 'overall_offer_value',\n    cellClassName: 'summary_planned_md',\n    Cell: ({ row }) => {\n      let value = row.original.overall_offer_value;\n      let type = row.original.overall_offer_type;\n      return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    },\n  },\n  {\n    Header: 'Refreshed MD',\n    accessor: 'refreshed_md',\n    cellClassName: 'summary_refreshed_md',\n    Cell: ({ row }) => {\n      let value = row.original.overall_refreshed_md;\n      let type = row.original.overall_offer_type;\n      return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    },\n  },\n  {\n    Header: 'MD Difference',\n    accessor: 'overall_md_diff',\n    cellClassName: 'summary_difference',\n    Cell: ({ row }) => {\n      return row.original.overall_md_diff ? row.original.overall_md_diff : '-';\n    },\n  },\n  {\n    Header: 'Sell through %',\n    accessor: 'overall_sell_through',\n    cellClassName: 'summary_sell_through',\n    columns: [\n      {\n        Header: 'Planned',\n        accessor: 'overall_sell_through',\n        cellClassName: 'summary_planned_sell_through',\n        Cell: (props) => <div> {toPercentageWithDecimalDraft(props)} </div>,\n      },\n      {\n        Header: 'Refreshed',\n        accessor: 'refreshed_overall_sell_through',\n        cellClassName: 'summary_refreshed_sell_through',\n        Cell: (props) => <div> {toPercentageWithDecimalDraft(props)} </div>,\n      },\n    ],\n  },\n\n  // {\n  //   Header: 'Markdown %',\n  //   accessor: 'overall_markdown_perc',\n  //   cellClassName: 'summary_markdown_perc',\n  //   Cell: (props) => <div> {toPercentage(props)} </div>,\n  // },\n  {\n    Header: 'Margin %',\n    accessor: 'overall_margin_perc',\n    cellClassName: 'summary_margin_perc',\n    metric: true,\n    columns: [\n      {\n        Header: 'Planned',\n        accessor: 'overall_margin_perc',\n        cellClassName: 'summary_planned_margin_perc',\n        Cell: (props) => <div> {toPercWithOneDecimal(props)} </div>,\n      },\n\n      {\n        Header: 'Refreshed',\n        accessor: 'refreshed_overall_margin_perc',\n        cellClassName: 'summary_refreshed_margin_perc',\n        Cell: (props) => <div> {toPercWithOneDecimal(props)} </div>,\n      },\n    ],\n  },\n  {\n    Header: 'Margin $',\n    accessor: 'overall_margin$',\n    cellClassName: 'summary_margin',\n    hideColumn: true,\n    // Cell: (props) => <div> {toDollar(props)} </div>,\n    columns: [\n      {\n        Header: 'Planned',\n        accessor: 'overall_margin$',\n        cellClassName: 'summary_planned_margin',\n        Cell: (props) => <div> {toDollar(props)} </div>,\n      },\n\n      {\n        Header: 'Refreshed',\n        accessor: 'refreshed_overall_margin$',\n        cellClassName: 'summary_refreshed_margin',\n        Cell: (props) => <div> {toDollar(props)} </div>,\n      },\n    ],\n  },\n  {\n    Header: 'AUM $',\n    accessor: 'overall_aum',\n    cellClassName: 'summary_aum',\n    hideColumn: true,\n    // Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n    columns: [\n      {\n        Header: 'Planned',\n        accessor: 'overall_aum',\n        cellClassName: 'summary_planned_aum',\n        Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n      },\n\n      {\n        Header: 'Refreshed',\n        accessor: 'refreshed_overall_aum',\n        cellClassName: 'summary_refreshed_aum',\n        Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n      },\n    ],\n  },\n  {\n    Header: 'Revenue $',\n    accessor: 'overall_revenue$',\n    cellClassName: 'summary_revenue',\n    hideColumn: true,\n    // Cell: (props) => <div> {toDollar(props)} </div>,\n    columns: [\n      {\n        Header: 'Planned',\n        accessor: 'overall_revenue$',\n        cellClassName: 'summary_planned_revenue',\n        Cell: (props) => <div> {toDollar(props)} </div>,\n      },\n\n      {\n        Header: 'Refreshed',\n        accessor: 'refreshed_overall_revenue$',\n        cellClassName: 'summary_refreshed_revenue',\n        Cell: (props) => <div> {toDollar(props)} </div>,\n      },\n    ],\n  },\n  // {\n  //   Header: 'Planned units',\n  //   accessor: 'overall_planned_units',\n  //   cellClassName: 'summary_pvh_units',\n  //   hideColumn: true,\n  //   Cell: (props) => <div> {toUnit(props)} </div>,\n  // },\n  {\n    Header: 'Units',\n    accessor: 'overall_markdown_units',\n    cellClassName: 'summary_markdown_units',\n    hideColumn: true,\n    // Cell: (props) => <div> {toUnit(props)} </div>,\n    columns: [\n      {\n        Header: 'Planned',\n        accessor: 'overall_markdown_units',\n        cellClassName: 'summary_planned_markdown_units',\n        Cell: (props) => <div> {toUnit(props)} </div>,\n      },\n\n      {\n        Header: 'Refreshed',\n        accessor: 'refreshed_overall_markdown_units',\n        cellClassName: 'summary_refreshed_markdown_units',\n        Cell: (props) => <div> {toUnit(props)} </div>,\n      },\n    ],\n  },\n  {\n    Header: 'AUR $',\n    accessor: 'overall_aur',\n    cellClassName: 'summary_aur',\n    hideColumn: true,\n    // Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n    columns: [\n      {\n        Header: 'Planned',\n        accessor: 'overall_aur',\n        cellClassName: 'summary_planned_aur',\n        Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n      },\n\n      {\n        Header: 'Refreshed',\n        accessor: 'refreshed_overall_aur',\n        cellClassName: 'summary_refreshed_aur',\n        Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n      },\n    ],\n  },\n];\n//weekToBinColDef contains accessor in granular level,\n//in Cell method have added a condition to display aggregated level data\n//if u add a new column make sure to copy the same\n//only bins will be expandable\nexport const weekToBinColDef = (handleInputChange) => {\n  return [\n    {\n      id: 'selection',\n      groupByBoundary: true,\n      Header: 'Actions', // added to maintain parent and child table column alignment\n      Cell: (props) => {\n        let { row, rows } = props;\n\n        return (\n          <div style={{ visibility: 'hidden' }}>\n            <IndeterminateCheckbox\n              row={row.id}\n              disabled={true}\n              {...row.getToggleRowSelectedProps()}\n            />\n          </div>\n        );\n      },\n    },\n    {\n      Header: 'MD Plan',\n      accessor: 'md_plan',\n      cellClassName: 'summary_md_plan',\n      Cell: ({ row }) => null,\n    },\n    {\n      Header: 'Plan Level',\n      accessor: 'level',\n      cellClassName: 'summary_cadence_type',\n    },\n    {\n      Header: 'Date Range',\n      id: 'expander',\n      cellClassName: 'summary_expander',\n      Cell: ({ row }) => {\n        return <span>{row.original.week ? 'W' + row.original.week : ''}</span>;\n      },\n    },\n\n    {\n      id: 'expander1',\n      cellClassName: 'summary_expander1',\n      Header: 'Bins',\n      Cell: ({ row }) => {\n        return row.original.subRows ? (\n          <span\n            className=\"summary-table-icon\"\n            {...row.getToggleRowExpandedProps({\n              style: {\n                // We can even use the row.depth property\n                // and paddingLeft to indicate the depth\n                // of the row\n                paddingLeft: `${row.depth * 2}rem`,\n              },\n            })}>\n            {row.original.subRows ? row.original.subRows.length : '-'}\n            &nbsp;&nbsp;&nbsp;\n            {row.isExpanded ? (\n              <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n            ) : (\n              <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n            )}\n            &nbsp;&nbsp;&nbsp;\n          </span>\n        ) : (\n          <span>{row.original.bin_num ? 'Bin ' + row.original.bin_num : null}</span>\n        );\n      },\n    },\n\n    {\n      Header: '#Products',\n      accessor: 'product_count',\n      cellClassName: 'summary_product_code',\n      Cell: (props) => {\n        let value = props.row.original.subRows\n          ? props.row.original.overall_week_product_count\n          : props.value;\n        return <div> {toUnit({ value: value })} </div>;\n      },\n    },\n    // {\n    //   Header: 'Next week MD',\n    //   accessor: 'next_week',\n    //   cellClassName: 'summary_next_week',\n    //   Cell: ({ row, rows }) => {\n    //     let typeAccessor = !_.isEmpty(row.subRows) ? 'overall_week_offer_type' : 'offer_type';\n    //     let value = findNextWeek(row, rows);\n\n    //     return <span>{value ? unitCheck(value, row.original[typeAccessor]) : '-'}</span>;\n    //   },\n    // },\n    {\n      Header: 'Current running MD',\n      accessor: 'next_week',\n      cellClassName: 'summary_current_md',\n      Aggregated: ({ row, rows }) => {\n        if (_.isEmpty(row.subRows)) return '-';\n        let value = null,\n          { subRows } = row;\n        for (let i = 0; i < subRows.length; i++) {\n          let newValue = currentRunningMd(subRows[i], rows);\n          value = newValue ? value + newValue : value;\n        }\n        return value || value === 0\n          ? unitCheck(value / subRows.length, row.original.overall_week_offer_type)\n          : '-';\n      },\n      Cell: ({ row, rows }) => {\n        if (!_.isEmpty(row.subRows)) return '-';\n        let value = currentRunningMd(row, rows);\n        return value || value === 0 ? unitCheck(value, row.original.offer_type) : '-';\n      },\n    },\n    {\n      Header: 'Planned MD',\n      accessor: 'offer_value',\n      cellClassName: 'summary_planned_md',\n      Cell: (cellInfo) => {\n        let row = cellInfo.row;\n        let value = !_.isEmpty(row.subRows)\n          ? row.original.overall_week_offer_value\n          : row.original.offer_value;\n        let type = !_.isEmpty(row.subRows)\n          ? row.original.overall_week_offer_type\n          : row.original.offer_type;\n        let disbleInput = false;\n        if (_.isEmpty(row.subRows)) {\n          let endWeek = row.original;\n          let EDate =\n            endWeek &&\n            moment()\n              .year(endWeek.year)\n              .week(endWeek.week_num + 1)\n              .day('sunday')\n              .format('YYYY/MM/DD');\n          disbleInput = moment().isSameOrAfter(EDate, 'week');\n        }\n        return !_.isEmpty(row.subRows) ? (\n          <span>{value ? unitCheck(value, type) : '-'}</span>\n        ) : (\n          <EditableCell\n            cellValue={value}\n            offerType={type}\n            handleInputChange={handleInputChange}\n            cellInfo={cellInfo}\n            type=\"week_to_bin\"\n            disbleInput={disbleInput}\n          />\n        );\n      },\n    },\n    {\n      Header: 'Refreshed MD',\n      accessor: 'refreshed_md',\n      cellClassName: 'summary_refreshed_md',\n      Cell: ({ row }) => {\n        let value = !_.isEmpty(row.subRows)\n          ? row.original.overall_week_refreshed_md\n          : row.original.refreshed_md;\n        let type = !_.isEmpty(row.subRows)\n          ? row.original.overall_week_offer_type\n          : row.original.offer_type;\n        return <span>{value ? unitCheck(value, type) : '-'}</span>;\n      },\n    },\n    {\n      Header: 'MD Difference',\n      accessor: 'md_diff',\n      cellClassName: 'summary_difference',\n      Cell: ({ row, rows }) => {\n        let accessor = !_.isEmpty(row.subRows) ? 'overall_week_offer_value' : 'offer_value';\n        let type = !_.isEmpty(row.subRows) ? 'overall_week_offer_type' : 'offer_type';\n\n        let nextWeek,\n          currentWeek = row.original[accessor] ? parseFloat(row.original[accessor]) : 0;\n        let value = findNextWeek(row, rows);\n        nextWeek = value ? parseFloat(value) : 0;\n        return (\n          <span>{currentWeek ? unitCheck(nextWeek - currentWeek, row.original[type]) : '-'}</span>\n        );\n      },\n    },\n\n    {\n      Header: 'Sell through %',\n      accessor: 'sell_through',\n      cellClassName: 'summary_sell_through',\n      columns: [\n        {\n          Header: 'Planned',\n          accessor: 'sell_through',\n          cellClassName: 'summary_planned_sell_through',\n          Cell: ({ row, rows }) => {\n            let id = row.id.split('.');\n            let value = 0;\n\n            if (\n              _.isEmpty(row.subRows) &&\n              (row.original.sell_through || row.original.sell_through === 0)\n            ) {\n              for (let i = 0; i <= parseInt(id[0]); i++) {\n                let found = _.find(rows, { id: `${i}` });\n                let data =\n                  found &&\n                  found.originalSubRows &&\n                  found.originalSubRows[parseInt(id[1])] &&\n                  found.originalSubRows[parseInt(id[1])].sell_through\n                    ? found.originalSubRows[parseInt(id[1])].sell_through\n                    : 0;\n                value = value + data;\n              }\n            }\n            if (!_.isEmpty(row.subRows) && row.original.overall_week_sell_through) {\n              for (let i = 0; i <= parseInt(id[0]); i++) {\n                let found = _.find(rows, { id: `${i}` });\n                let data =\n                  found && found.original && found.original.overall_week_sell_through\n                    ? found.original.overall_week_sell_through\n                    : 0;\n                value = value + data;\n              }\n            }\n            return (\n              <span>\n                {value || value === 0 ? toPercentageWithDecimalDraft({ value: value }) : '-'}\n              </span>\n            );\n          },\n        },\n        {\n          Header: 'Refreshed',\n          accessor: 'refreshed_sell_through',\n          cellClassName: 'summary_refreshed_sell_through',\n          Cell: ({ row, rows }) => {\n            let id = row.id.split('.');\n            let value = 0;\n\n            if (\n              _.isEmpty(row.subRows) &&\n              (row.original.refreshed_sell_through || row.original.refreshed_sell_through === 0)\n            ) {\n              for (let i = 0; i <= parseInt(id[0]); i++) {\n                let found = _.find(rows, { id: `${i}` });\n                let data =\n                  found &&\n                  found.originalSubRows &&\n                  found.originalSubRows[parseInt(id[1])] &&\n                  found.originalSubRows[parseInt(id[1])].refreshed_sell_through\n                    ? found.originalSubRows[parseInt(id[1])].refreshed_sell_through\n                    : 0;\n                value = value + data;\n              }\n            }\n            if (!_.isEmpty(row.subRows) && row.original.overall_week_refreshed_sell_through) {\n              for (let i = 0; i <= parseInt(id[0]); i++) {\n                let found = _.find(rows, { id: `${i}` });\n                let data =\n                  found && found.original && found.original.overall_week_refreshed_sell_through\n                    ? found.original.overall_week_refreshed_sell_through\n                    : 0;\n                value = value + data;\n              }\n            }\n            return (\n              <span>\n                {value || value === 0 ? toPercentageWithDecimalDraft({ value: value }) : '-'}\n              </span>\n            );\n          },\n        },\n      ],\n    },\n    // {\n    //   Header: 'Markdown %',\n    //   accessor: 'markdown_perc',\n    //   cellClassName: 'summary_markdown_perc',\n    //   Cell: (props) => {\n    //     let value = props.row.original.subRows\n    //       ? props.row.original.overall_week_markdown_perc\n    //       : props.value;\n    //     return <div> {toPercentage({ value })} </div>;\n    //   },\n    // },\n\n    {\n      Header: 'Margin %',\n      accessor: 'margin_perc',\n      cellClassName: 'summary_margin_perc',\n      metric: true,\n      // Cell: (props) => {\n      //   let value = props.row.original.subRows\n      //     ? props.row.original.overall_week_margin_perc\n      //     : props.value;\n      //   return <div> {toPercWithOneDecimal({ value })} </div>;\n      // },\n      columns: [\n        {\n          Header: 'Planned',\n          accessor: 'margin_perc',\n          cellClassName: 'summary_planned_margin_perc',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_week_margin_perc\n              : props.value;\n            return <div> {toPercWithOneDecimal({ value })} </div>;\n          },\n        },\n\n        {\n          Header: 'Refreshed',\n          accessor: 'refreshed_margin_perc',\n          cellClassName: 'summary_refreshed_margin_perc',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_week_margin_perc\n              : props.value;\n            return <div> {toPercWithOneDecimal({ value })} </div>;\n          },\n        },\n      ],\n    },\n    {\n      Header: 'Margin $',\n      accessor: 'margin$',\n      cellClassName: 'summary_margin',\n      hideColumn: true,\n      // Cell: (props) => {\n      //   let value = props.row.original.subRows\n      //     ? props.row.original.overall_week_margin$\n      //     : props.value;\n      //   return <div> {toDollar(value)} </div>;\n      // },\n      columns: [\n        {\n          Header: 'Planned',\n          accessor: 'margin$',\n          cellClassName: 'summary_planned_margin',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_week_margin$\n              : props.value;\n            return <div> {toDollar(value)} </div>;\n          },\n        },\n\n        {\n          Header: 'Refreshed',\n          accessor: 'refreshed_margin$',\n          cellClassName: 'summary_refreshed_margin',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_week_refreshed_margin$\n              : props.value;\n            return <div> {toDollar(value)} </div>;\n          },\n        },\n      ],\n    },\n    {\n      Header: 'AUM $',\n      accessor: 'aum',\n      cellClassName: 'summary_aum',\n      hideColumn: true,\n      // Cell: (props) => {\n      //   let value = props.row.original.subRows ? props.row.original.overall_week_aum : props.value;\n      //   return <div> {toDollarWithDecimal({ value })} </div>;\n      // },\n      columns: [\n        {\n          Header: 'Planned',\n          accessor: 'aum',\n          cellClassName: 'summary_planned_aum',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_week_aum\n              : props.value;\n            return <div> {toDollarWithDecimal({ value })} </div>;\n          },\n        },\n\n        {\n          Header: 'Refreshed',\n          accessor: 'refreshed_aum',\n          cellClassName: 'summary_refreshed_aum',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_week_refreshed_aum\n              : props.value;\n            return <div> {toDollarWithDecimal({ value })} </div>;\n          },\n        },\n      ],\n    },\n    {\n      Header: 'Revenue $',\n      accessor: 'revenue$',\n      cellClassName: 'summary_revenue',\n      hideColumn: true,\n      // Cell: (props) => {\n      //   let value = props.row.original.subRows\n      //     ? props.row.original.overall_week_revenue$\n      //     : props.value;\n      //   return <div> {toDollar({ value })} </div>;\n      // },\n      columns: [\n        {\n          Header: 'Planned',\n          accessor: 'revenue$',\n          cellClassName: 'summary_planned_revenue',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_week_revenue$\n              : props.value;\n            return <div> {toDollar({ value })} </div>;\n          },\n        },\n\n        {\n          Header: 'Refreshed',\n          accessor: 'refreshed_revenue$',\n          cellClassName: 'summary_refreshed_revenue',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_week_refreshed_revenue$\n              : props.value;\n            return <div> {toDollar({ value })} </div>;\n          },\n        },\n      ],\n    },\n    // {\n    //   Header: 'Planned units',\n    //   accessor: 'planned_units',\n    //   cellClassName: 'summary_pvh_units',\n    //   hideColumn: true,\n    //   Cell: (props) => {\n    //     let value = props.row.original.subRows\n    //       ? props.row.original.overall_week_planned_units\n    //       : props.value;\n    //     return <div> {toUnit({ value })} </div>;\n    //   },\n    // },\n    {\n      Header: 'Markdown units',\n      accessor: 'markdown_units',\n      cellClassName: 'summary_markdown_units',\n      hideColumn: true,\n      // Cell: (props) => {\n      //   let value = props.row.original.subRows\n      //     ? props.row.original.overall_week_markdown_units\n      //     : props.value;\n      //   return <div> {toUnit({ value })} </div>;\n      // },\n      columns: [\n        {\n          Header: 'Planned',\n          accessor: 'markdown_units',\n          cellClassName: 'summary_planned_markdown_units',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_week_markdown_units\n              : props.value;\n            return <div> {toUnit({ value })} </div>;\n          },\n        },\n\n        {\n          Header: 'Refreshed',\n          accessor: 'refreshed_markdown_units',\n          cellClassName: 'summary_refreshed_markdown_units',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_week_refreshed_markdown_units\n              : props.value;\n            return <div> {toUnit({ value })} </div>;\n          },\n        },\n      ],\n    },\n    {\n      Header: 'AUR $',\n      accessor: 'aur',\n      cellClassName: 'summary_aur',\n      hideColumn: true,\n      // Cell: (props) => {\n      //   let value = props.row.original.subRows ? props.row.original.overall_week_aur : props.value;\n      //   return <div> {toDollarWithDecimal({ value })} </div>;\n      // },\n      columns: [\n        {\n          Header: 'Planned',\n          accessor: 'aur',\n          cellClassName: 'summary_planned_aur',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_week_aur\n              : props.value;\n            return <div> {toDollarWithDecimal({ value })} </div>;\n          },\n        },\n\n        {\n          Header: 'Refreshed',\n          accessor: 'refreshed_aur',\n          cellClassName: 'summary_refreshed_aur',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_week_refreshed_aur\n              : props.value;\n            return <div> {toDollarWithDecimal({ value })} </div>;\n          },\n        },\n      ],\n    },\n  ];\n};\n//same as weekToBinColDef, but bin to week level\n//only date range will be expandable\nexport const binToWeekColDef = (handleInputChange) => {\n  return [\n    {\n      id: 'selection',\n      groupByBoundary: true,\n      Header: 'Actions', // added to maintain parent and child table column alignment\n      Cell: (props) => {\n        let { row, rows } = props;\n\n        return (\n          <div style={{ visibility: 'hidden' }}>\n            <IndeterminateCheckbox\n              row={row.id}\n              disabled={true}\n              {...row.getToggleRowSelectedProps()}\n            />\n          </div>\n        );\n      },\n    },\n    {\n      Header: 'MD Plan',\n      accessor: 'md_plan',\n      cellClassName: 'summary_md_plan',\n      Cell: ({ row }) => null,\n    },\n    {\n      Header: 'Plan Level',\n      accessor: 'level',\n      cellClassName: 'summary_cadence_type',\n    },\n    {\n      Header: 'Date Range',\n      id: 'expander',\n      cellClassName: 'summary_expander',\n      Cell: ({ row }) => {\n        let startWeek = row.originalSubRows && row.originalSubRows[0];\n        let endWeek = row.originalSubRows && row.originalSubRows[row.originalSubRows.length - 1];\n        let SDate =\n          startWeek &&\n          moment().year(startWeek.year).week(startWeek.week_num).day('monday').format('YYYY/MM/DD');\n        let EDate =\n          endWeek &&\n          moment()\n            .year(endWeek.year)\n            .week(endWeek.week_num + 1)\n            .day('sunday')\n            .format('YYYY/MM/DD');\n\n        return row.original.subRows ? (\n          <span\n            className=\"summary-table-icon\"\n            {...row.getToggleRowExpandedProps({\n              style: {\n                paddingLeft: `${row.depth * 2}rem`,\n              },\n            })}>\n            {SDate} - {EDate}\n            {/* {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n          {moment(row.original.end_date).format('YYYY/MM/DD')} */}\n            &nbsp;&nbsp;&nbsp;\n            {row.isExpanded ? (\n              <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n            ) : (\n              <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n            )}\n            &nbsp;&nbsp;&nbsp;\n          </span>\n        ) : (\n          <span>{row.original.week_num ? 'W' + row.original.week_num : ''}</span>\n        );\n      },\n    },\n\n    {\n      id: 'expander1',\n      cellClassName: 'summary_expander1',\n      Header: 'Bins',\n      Cell: ({ row }) => {\n        return row.original.bin ? 'Bin ' + row.original.bin : null;\n      },\n    },\n\n    {\n      Header: '#Products',\n      accessor: 'product_count',\n      cellClassName: 'summary_product_code',\n      Cell: (props) => {\n        let value = props.row.original.subRows\n          ? props.row.original.overall_bin_product_count\n          : props.value;\n        return <div> {toUnit({ value: value })} </div>;\n      },\n    },\n    // {\n    //   Header: 'Next week MD',\n    //   accessor: 'next_week',\n    //   cellClassName: 'summary_next_week',\n    //   Cell: ({ row, rows }) => {\n    //     let id, value;\n    //     let accessor = !_.isEmpty(row.subRows) ? 'overall_bin_offer_value' : 'offer_value';\n    //     let typeAccessor = !_.isEmpty(row.subRows)\n    //       ? row.original.overall_bin_offer_type\n    //       : row.original.offer_type;\n\n    //     if (row.original[accessor]) {\n    //       id = row.id.split('.');\n    //       let find = _.find(rows, { id: id[0] });\n    //       value =\n    //         find.originalSubRows &&\n    //         find.originalSubRows[parseInt(id[1]) + 1] &&\n    //         find.originalSubRows[parseInt(id[1]) + 1][accessor];\n    //     }\n    //     return <span>{value ? unitCheck(value, typeAccessor) : '-'}</span>;\n    //   },\n    // },\n\n    {\n      Header: 'Current running MD',\n      accessor: 'next_week',\n      cellClassName: 'summary_current_md',\n      Aggregated: ({ row, rows }) => {\n        if (_.isEmpty(row.subRows)) return '-';\n        let value = null,\n          { subRows } = row;\n        for (let i = 0; i < subRows.length; i++) {\n          let newValue = currentRunningMdBin(subRows[i], rows);\n          value = newValue ? value + newValue : value;\n        }\n        return value || value === 0\n          ? unitCheck(value / subRows.length, row.original.overall_bin_offer_type)\n          : '-';\n      },\n      Cell: ({ row, rows }) => {\n        if (!_.isEmpty(row.subRows)) return '-';\n        let value = currentRunningMdBin(row, rows);\n        return value || value === 0 ? unitCheck(value, row.original.offer_type) : '-';\n      },\n    },\n    {\n      Header: 'Planned MD',\n      accessor: 'offer_value',\n      cellClassName: 'summary_planned_md',\n      Cell: (cellInfo) => {\n        let row = cellInfo.row;\n        let value = !_.isEmpty(row.subRows)\n          ? row.original.overall_bin_offer_value\n          : row.original.offer_value;\n        let type = !_.isEmpty(row.subRows)\n          ? row.original.overall_bin_offer_type\n          : row.original.offer_type;\n        let disbleInput = false;\n        if (_.isEmpty(row.subRows)) {\n          let endWeek = row.original;\n          let EDate =\n            endWeek &&\n            moment()\n              .year(endWeek.year)\n              .week(endWeek.week_num + 1)\n              .day('sunday')\n              .format('YYYY/MM/DD');\n          disbleInput = moment().isSameOrAfter(EDate, 'week');\n        }\n        return !_.isEmpty(row.subRows) ? (\n          <span>{value ? unitCheck(value, type) : '-'}</span>\n        ) : (\n          <EditableCell\n            cellValue={value}\n            offerType={type}\n            handleInputChange={handleInputChange}\n            cellInfo={cellInfo}\n            type=\"bin_to_week\"\n            disbleInput={disbleInput}\n          />\n        );\n      },\n    },\n\n    {\n      Header: 'Refreshed MD',\n      accessor: 'refreshed_md',\n      cellClassName: 'summary_refreshed_md',\n      Cell: ({ row }) => {\n        let value = !_.isEmpty(row.subRows)\n          ? row.original.overall_bin_refreshed_md\n          : row.original.refreshed_md;\n        let type = !_.isEmpty(row.subRows)\n          ? row.original.overall_bin_offer_type\n          : row.original.offer_type;\n        return <span>{value ? unitCheck(value, type) : '-'}</span>;\n      },\n    },\n    {\n      Header: 'MD Difference',\n      accessor: 'md_diff',\n      cellClassName: 'summary_difference',\n      Cell: ({ row, rows }) => {\n        let accessor = !_.isEmpty(row.subRows) ? 'overall_bin_offer_value' : 'offer_value';\n        let type = !_.isEmpty(row.subRows) ? 'overall_bin_offer_type' : 'offer_type';\n\n        let id,\n          nextWeek,\n          currentWeek = row.original[[accessor]] ? parseFloat(row.original[[accessor]]) : 0;\n        if (row.original[[accessor]]) {\n          id = row.id.split('.');\n          let find = _.find(rows, { id: id[0] });\n          let value =\n            find.originalSubRows &&\n            find.originalSubRows[parseInt(id[1]) + 1] &&\n            find.originalSubRows[parseInt(id[1]) + 1][[accessor]];\n          nextWeek = value ? parseFloat(value) : 0;\n        }\n        return (\n          <span>{currentWeek ? unitCheck(nextWeek - currentWeek, row.original[type]) : '-'}</span>\n        );\n      },\n    },\n    {\n      Header: 'Sell through %',\n      accessor: 'sell_through',\n      cellClassName: 'summary_sell_through',\n      columns: [\n        {\n          Header: 'Planned',\n          accessor: 'sell_through',\n          cellClassName: 'summary_planned_sell_through',\n          Cell: ({ row, rows }) => {\n            let id = row.id.split('.');\n            let value = 0;\n\n            if (\n              _.isEmpty(row.subRows) &&\n              (row.original.sell_through || row.original.sell_through === 0)\n            ) {\n              let found = _.find(rows, { id: id[0] });\n              for (let i = 0; i <= parseInt(id[1]); i++) {\n                let data =\n                  found &&\n                  found.originalSubRows &&\n                  found.originalSubRows[i] &&\n                  found.originalSubRows[i].sell_through\n                    ? found.originalSubRows[i].sell_through\n                    : 0;\n                value = value + data;\n              }\n            }\n            if (!_.isEmpty(row.subRows) && row.original.overall_bin_sell_through) {\n              for (let i = 0; i <= parseInt(id[0]); i++) {\n                let found = _.find(rows, { id: `${i}` });\n                let data =\n                  found && found.original && found.original.overall_bin_sell_through\n                    ? found.original.overall_bin_sell_through\n                    : 0;\n                value = value + data;\n              }\n            }\n            return (\n              <span>\n                {value || value === 0 ? toPercentageWithDecimalDraft({ value: value }) : '-'}\n              </span>\n            );\n          },\n        },\n        {\n          Header: 'Refreshed',\n          accessor: 'refreshed_sell_through',\n          cellClassName: 'summary_refreshed_sell_through',\n          Cell: ({ row, rows }) => {\n            let id = row.id.split('.');\n            let value = 0;\n\n            if (\n              _.isEmpty(row.subRows) &&\n              (row.original.refreshed_sell_through || row.original.refreshed_sell_through === 0)\n            ) {\n              let found = _.find(rows, { id: id[0] });\n              for (let i = 0; i <= parseInt(id[1]); i++) {\n                let data =\n                  found &&\n                  found.originalSubRows &&\n                  found.originalSubRows[i] &&\n                  found.originalSubRows[i].refreshed_sell_through\n                    ? found.originalSubRows[i].refreshed_sell_through\n                    : 0;\n                value = value + data;\n              }\n            }\n            if (!_.isEmpty(row.subRows) && row.original.overall_bin_refreshed_sell_through) {\n              for (let i = 0; i <= parseInt(id[0]); i++) {\n                let found = _.find(rows, { id: `${i}` });\n                let data =\n                  found && found.original && found.original.overall_bin_refreshed_sell_through\n                    ? found.original.overall_bin_refreshed_sell_through\n                    : 0;\n                value = value + data;\n              }\n            }\n            return (\n              <span>\n                {value || value === 0 ? toPercentageWithDecimalDraft({ value: value }) : '-'}\n              </span>\n            );\n          },\n        },\n      ],\n    },\n    // {\n    //   Header: 'Markdown %',\n    //   accessor: 'markdown_perc',\n    //   cellClassName: 'summary_markdown_perc',\n    //   Cell: (props) => {\n    //     let value = props.row.original.subRows\n    //       ? props.row.original.overall_bin_markdown_perc\n    //       : props.value;\n    //     return <div> {toPercentage({ value })} </div>;\n    //   },\n    // },\n    {\n      Header: 'Margin %',\n      accessor: 'margin_perc',\n      cellClassName: 'summary_margin_perc',\n      metric: true,\n      // Cell: (props) => {\n      //   let value = props.row.original.subRows\n      //     ? props.row.original.overall_bin_margin_perc\n      //     : props.value;\n      //   return <div> {toPercWithOneDecimal({ value })} </div>;\n      // },\n      columns: [\n        {\n          Header: 'Planned',\n          accessor: 'margin_perc',\n          cellClassName: 'summary_planned_margin_perc',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_bin_margin_perc\n              : props.value;\n            return <div> {toPercWithOneDecimal({ value })} </div>;\n          },\n        },\n\n        {\n          Header: 'Refreshed',\n          accessor: 'refreshed_margin_perc',\n          cellClassName: 'summary_refreshed_margin_perc',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_bin_refreshed_margin_perc\n              : props.value;\n            return <div> {toPercWithOneDecimal({ value })} </div>;\n          },\n        },\n      ],\n    },\n    {\n      Header: 'Margin $',\n      accessor: 'margin$',\n      cellClassName: 'summary_margin',\n      hideColumn: true,\n      // Cell: (props) => {\n      //   let value = props.row.original.subRows\n      //     ? props.row.original.overall_bin_margin$\n      //     : props.value;\n      //   return <div> {toDollar({ value })} </div>;\n      // },\n      columns: [\n        {\n          Header: 'Planned',\n          accessor: 'margin$',\n          cellClassName: 'summary_planned_margin',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_bin_margin$\n              : props.value;\n            return <div> {toDollar({ value })} </div>;\n          },\n        },\n\n        {\n          Header: 'Refreshed',\n          accessor: 'refreshed_margin$',\n          cellClassName: 'summary_refreshed_margin',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_bin_refreshed_margin$\n              : props.value;\n            return <div> {toDollar({ value })} </div>;\n          },\n        },\n      ],\n    },\n    {\n      Header: 'AUM $',\n      accessor: 'aum',\n      cellClassName: 'summary_aum',\n      hideColumn: true,\n      // Cell: (props) => {\n      //   let value = props.row.original.subRows ? props.row.original.overall_bin_aum : props.value;\n      //   return <div> {toDollarWithDecimal({ value })} </div>;\n      // },\n      columns: [\n        {\n          Header: 'Planned',\n          accessor: 'aum',\n          cellClassName: 'summary_planned_aum',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_bin_aum\n              : props.value;\n            return <div> {toDollarWithDecimal({ value })} </div>;\n          },\n        },\n\n        {\n          Header: 'Refreshed',\n          accessor: 'refreshed_aum',\n          cellClassName: 'summary_refreshed_aum',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_bin_refreshed_aum\n              : props.value;\n            return <div> {toDollarWithDecimal({ value })} </div>;\n          },\n        },\n      ],\n    },\n    {\n      Header: 'Revenue $',\n      accessor: 'revenue$',\n      cellClassName: 'summary_revenue',\n      hideColumn: true,\n      // Cell: (props) => {\n      //   let value = props.row.original.subRows\n      //     ? props.row.original.overall_bin_revenue$\n      //     : props.value;\n      //   return <div> {toDollar({ value })} </div>;\n      // },\n      columns: [\n        {\n          Header: 'Planned',\n          accessor: 'revenue$',\n          cellClassName: 'summary_planned_revenue',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_bin_revenue$\n              : props.value;\n            return <div> {toDollar({ value })} </div>;\n          },\n        },\n\n        {\n          Header: 'Refreshed',\n          accessor: 'refreshed_revenue$',\n          cellClassName: 'summary_refreshed_revenue',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_bin_refreshed_revenue$\n              : props.value;\n            return <div> {toDollar({ value })} </div>;\n          },\n        },\n      ],\n    },\n    // {\n    //   Header: 'Planned units',\n    //   accessor: 'planned_units',\n    //   cellClassName: 'summary_pvh_units',\n    //   hideColumn: true,\n    //   Cell: (props) => {\n    //     let value = props.row.original.subRows\n    //       ? props.row.original.overall_bin_planned_units\n    //       : props.value;\n    //     return <div> {toUnit({ value })} </div>;\n    //   },\n    // },\n    {\n      Header: 'Markdown units',\n      accessor: 'markdown_units',\n      cellClassName: 'summary_markdown_units',\n      hideColumn: true,\n      // Cell: (props) => {\n      //   let value = props.row.original.subRows\n      //     ? props.row.original.overall_bin_markdown_units\n      //     : props.value;\n      //   return <div> {toUnit({ value })} </div>;\n      // },\n      columns: [\n        {\n          Header: 'Planned',\n          accessor: 'markdown_units',\n          cellClassName: 'summary_planned_markdown_units',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_bin_markdown_units\n              : props.value;\n            return <div> {toUnit({ value })} </div>;\n          },\n        },\n\n        {\n          Header: 'Refreshed',\n          accessor: 'refreshed_markdown_units',\n          cellClassName: 'summary_refreshed_markdown_units',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_bin_refreshed_markdown_units\n              : props.value;\n            return <div> {toUnit({ value })} </div>;\n          },\n        },\n      ],\n    },\n    {\n      Header: 'AUR $',\n      accessor: 'aur',\n      cellClassName: 'summary_aur',\n      hideColumn: true,\n      // Cell: (props) => {\n      //   let value = props.row.original.subRows ? props.row.original.overall_bin_aur : props.value;\n      //   return <div> {toDollarWithDecimal({ value })} </div>;\n      // },\n      columns: [\n        {\n          Header: 'Planned',\n          accessor: 'aur',\n          cellClassName: 'summary_planned_aur',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_bin_aur\n              : props.value;\n            return <div> {toDollarWithDecimal({ value })} </div>;\n          },\n        },\n\n        {\n          Header: 'Refreshed',\n          accessor: 'refreshed_aur',\n          cellClassName: 'summary_refreshed_aur',\n          Cell: (props) => {\n            let value = props.row.original.subRows\n              ? props.row.original.overall_bin_refreshed_aur\n              : props.value;\n            return <div> {toDollarWithDecimal({ value })} </div>;\n          },\n        },\n      ],\n    },\n  ];\n};\n/////detailed table coldefs\nexport const detailedColDef = (handleInputChange) => [\n  {\n    Header: 'MD Plan',\n    accessor: 'title',\n  },\n  {\n    Header: 'Plan Level',\n    accessor: 'level',\n  },\n  // {\n  //   accessor: 'date',\n  //   Header: 'Date Range',\n  //   Cell: ({ row }) => {\n  //     return (\n  //       <span>\n  //         {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n  //         {moment(row.original.end_date).format('YYYY/MM/DD')}\n  //       </span>\n  //     );\n  //   },\n  // },\n  {\n    Header: 'Week Number',\n    accessor: 'week',\n    downloadFormatter: (params) => {\n      return params.value ? `W${params.value}` : '-';\n    },\n    Cell: ({ row }) => {\n      return <span>{row.original.week ? `W${row.original.week}` : null}</span>;\n    },\n  },\n\n  {\n    Header: 'Bins',\n    accessor: 'bins',\n    downloadFormatter: (params) => {\n      return params.value ? `Bin ${params.value}` : '-';\n    },\n    Cell: ({ row }) => {\n      return <span>Bin {row.original.bins}</span>;\n    },\n  },\n\n  {\n    Header: 'Product code',\n    accessor: 'product_code',\n  },\n  // {\n  //   Header: 'Next week MD',\n  //   accessor: 'overall_next_week',\n  // },\n  {\n    Header: 'Current running MD',\n    accessor: 'week_level_runnig_value',\n    Cell: ({ data, row }) => {\n      let { original } = row;\n      let lastWeekNum = moment().subtract(1, 'week').week();\n      let isLastWeek = _.find(data, {\n        promo_code: original.promo_code,\n        product_code: original.product_code,\n        week: lastWeekNum,\n      });\n      let date = moment()\n        .year(original.year)\n        .week(original.week)\n        .day('monday')\n        .format('YYYY-MM-DD');\n      if (_.isEmpty(isLastWeek) || !moment().isSameOrBefore(date, 'week')) return '-';\n      return isLastWeek.week_level_refreshed_md\n        ? unitCheck(isLastWeek.week_level_refreshed_md, isLastWeek.offer_type)\n        : '-';\n    },\n  },\n  {\n    Header: 'Planned MD',\n    accessor: 'week_level_offer_value',\n    downloadFormatter: unitCheck,\n    Cell: (cellInfo) => {\n      let row = cellInfo.row;\n      let value = !_.isEmpty(row.subRows)\n        ? row.original.overall_week_offer_value\n        : row.original.offer_value;\n      let type = !_.isEmpty(row.subRows)\n        ? row.original.overall_week_offer_type\n        : row.original.offer_type;\n      let disbleInput = false;\n      if (_.isEmpty(row.subRows)) {\n        let endWeek = row.original;\n        let EDate =\n          endWeek &&\n          moment()\n            .year(endWeek.year)\n            .week(endWeek.week_num + 1)\n            .day('sunday')\n            .format('YYYY/MM/DD');\n        disbleInput = moment().isSameOrAfter(EDate, 'week');\n      }\n      return !_.isEmpty(row.subRows) ? (\n        <span>{value ? unitCheck(value, type) : '-'}</span>\n      ) : (\n        <EditableCell\n          cellValue={value}\n          offerType={type}\n          handleInputChange={handleInputChange}\n          cellInfo={cellInfo}\n          type=\"week_to_bin\"\n          disbleInput={disbleInput}\n        />\n      );\n    },\n  },\n\n  {\n    Header: 'Refreshed MD',\n    accessor: 'week_level_refreshed_md',\n    downloadFormatter: unitCheck,\n    Cell: ({ row }) => {\n      return row.original.week_level_refreshed_md\n        ? unitCheck(row.original.week_level_refreshed_md, row.original.offer_type)\n        : '-';\n    },\n  },\n  // {\n  //   Header: 'MD Difference',\n  //   accessor: 'overall_md_diff',\n  //   Cell: ({ row }) => {\n  //     return row.original.overall_md_diff ? row.original.overall_md_diff : '-';\n  //   },\n  // },\n  {\n    Header: 'Sell through %',\n    accessor: 'week_level_sell_through',\n    // Cell: (props) => <div> {toPercentageWithDecimalDraft(props)} </div>,\n    columns: [\n      {\n        Header: 'Planned',\n        accessor: 'week_level_sell_through',\n        cellClassName: 'summary_planned_sell_through',\n        downloadHeader: 'Planned Sell through %',\n        downloadFormatter: toPercentageWithDecimalDraft,\n        Cell: (props) => <div> {toPercentageWithDecimalDraft(props)} </div>,\n      },\n      {\n        Header: 'Refreshed',\n        accessor: 'refreshed_week_level_sell_through',\n        cellClassName: 'summary_refreshed_sell_through',\n        downloadHeader: 'Refreshed Sell through %',\n        downloadFormatter: toPercentageWithDecimalDraft,\n        Cell: (props) => <div> {toPercentageWithDecimalDraft(props)} </div>,\n      },\n    ],\n  },\n\n  // {\n  //   Header: 'Markdown %',\n  //   accessor: 'week_level_markdown_perc',\n  //   Cell: (props) => <div> {toPercentage(props)} </div>,\n  // },\n  {\n    Header: 'Margin %',\n    accessor: 'week_level_margin_perc',\n    metric: true,\n    // Cell: (props) => <div> {toPercWithOneDecimal(props)} </div>,\n    columns: [\n      {\n        Header: 'Planned',\n        accessor: 'week_level_margin_perc',\n        cellClassName: 'summary_planned_sell_through',\n        downloadHeader: 'Planned Margin %',\n        downloadFormatter: toPercWithOneDecimal,\n        Cell: (props) => <div> {toPercWithOneDecimal(props)} </div>,\n      },\n      {\n        Header: 'Refreshed',\n        accessor: 'refreshed_week_level_margin_perc',\n        cellClassName: 'summary_refreshed_sell_through',\n        downloadHeader: 'Refreshed Margin %',\n        downloadFormatter: toPercWithOneDecimal,\n        Cell: (props) => <div> {toPercWithOneDecimal(props)} </div>,\n      },\n    ],\n  },\n  {\n    Header: 'Margin $',\n    accessor: 'week_level_margin$',\n    hideColumn: true,\n    // Cell: (props) => <div> {toDollar(props)} </div>,\n    columns: [\n      {\n        Header: 'Planned',\n        accessor: 'week_level_margin$',\n        cellClassName: 'summary_planned_sell_through',\n        Cell: (props) => <div> {toDollar(props)} </div>,\n      },\n      {\n        Header: 'Refreshed',\n        accessor: 'refreshed_week_level_margin$',\n        cellClassName: 'summary_refreshed_sell_through',\n        Cell: (props) => <div> {toDollar(props)} </div>,\n      },\n    ],\n  },\n  {\n    Header: 'AUM $',\n    accessor: 'week_level_aum',\n    hideColumn: true,\n    // Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n    columns: [\n      {\n        Header: 'Planned',\n        accessor: 'week_level_aum',\n        cellClassName: 'summary_planned_sell_through',\n        Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n      },\n      {\n        Header: 'Refreshed',\n        accessor: 'refreshed_week_level_aum',\n        cellClassName: 'summary_refreshed_sell_through',\n        Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n      },\n    ],\n  },\n  {\n    Header: 'Revenue $',\n    accessor: 'week_level_revenue$',\n    hideColumn: true,\n    // Cell: (props) => <div> {toDollar(props)} </div>,\n    columns: [\n      {\n        Header: 'Planned',\n        accessor: 'week_level_revenue$',\n        cellClassName: 'summary_planned_sell_through',\n        Cell: (props) => <div> {toDollar(props)} </div>,\n      },\n      {\n        Header: 'Refreshed',\n        accessor: 'refreshed_week_level_revenue$',\n        cellClassName: 'summary_refreshed_sell_through',\n        Cell: (props) => <div> {toDollar(props)} </div>,\n      },\n    ],\n  },\n  // {\n  //   Header: 'Planned units',\n  //   accessor: 'week_level_planned_units',\n  //   hideColumn: true,\n  //   Cell: (props) => <div> {toUnit(props)} </div>,\n  // },\n  {\n    Header: 'Units',\n    accessor: 'week_level_markdown_units',\n    hideColumn: true,\n    // Cell: (props) => <div> {toUnit(props)} </div>,\n    columns: [\n      {\n        Header: 'Planned',\n        accessor: 'week_level_markdown_units',\n        cellClassName: 'summary_planned_sell_through',\n        Cell: (props) => <div> {toUnit(props)} </div>,\n      },\n      {\n        Header: 'Refreshed',\n        accessor: 'refreshed_week_level_markdown_units',\n        cellClassName: 'summary_refreshed_sell_through',\n        Cell: (props) => <div> {toUnit(props)} </div>,\n      },\n    ],\n  },\n  {\n    Header: 'AUR $',\n    accessor: 'week_level_aur',\n    hideColumn: true,\n    // Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n    columns: [\n      {\n        Header: 'Planned',\n        accessor: 'week_level_aur',\n        cellClassName: 'summary_planned_sell_through',\n        Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n      },\n      {\n        Header: 'Refreshed',\n        accessor: 'refreshed_week_level_aur',\n        cellClassName: 'summary_refreshed_sell_through',\n        Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n      },\n    ],\n  },\n];\n\nfunction unitCheck(value, type) {\n  if ((!value && value !== 0) || !type) return '-';\n  if (type === 'percent_off') return toPercentage({ value });\n  if (type === 'fixed_price') return toDollar({ value });\n}\nfunction findNextWeek(row, rows) {\n  let value;\n  let id = row.id.split('.');\n  let found = _.find(rows, { id: `${parseInt(id[0]) + 1}` });\n\n  if (!_.isEmpty(found) && _.isEmpty(row.subRows) && row.original.offer_value) {\n    value =\n      found.originalSubRows &&\n      found.originalSubRows[parseInt(id[1])] &&\n      found.originalSubRows[parseInt(id[1])].offer_value;\n  }\n  if (!_.isEmpty(found) && !_.isEmpty(row.subRows) && row.original.overall_week_offer_value) {\n    value = found.original && found.original.overall_week_offer_value;\n  }\n  return value;\n}\n\nfunction currentRunningMd(row, rows) {\n  let value = null;\n  let date = moment()\n    .year(row.original.year)\n    .week(row.original.week_num)\n    .day('monday')\n    .format('YYYY-MM-DD');\n  if (moment().isSameOrBefore(date, 'week')) {\n    let lastWeekNum = moment().subtract(1, 'week').week();\n    let found = _.find(rows, { original: { week: lastWeekNum } });\n    let found1 = _.find(found && found.originalSubRows && found.originalSubRows, {\n      bin_num: row.original.bin_num,\n    });\n    value = found1 && found1.refreshed_md ? found1.refreshed_md : null;\n  }\n  return value;\n}\nfunction currentRunningMdBin(row, rows) {\n  let value = null;\n  let date = moment()\n    .year(row.original.year)\n    .week(row.original.week_num)\n    .day('monday')\n    .format('YYYY-MM-DD');\n  if (moment().isSameOrBefore(date, 'week')) {\n    let id = row.id.split('.');\n    let found = _.find(rows, { id: id[0] });\n    if (!_.isEmpty(found) && found.originalSubRows.length) {\n      let lastWeekNum = moment().subtract(1, 'week').week();\n      let find = _.find(found.originalSubRows, { week_num: lastWeekNum });\n      if (!find) return null;\n      value = find.refreshed_md;\n    }\n  }\n  return value;\n}\n"]},"metadata":{},"sourceType":"module"}