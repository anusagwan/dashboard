{"ast":null,"code":"import _objectSpread from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { config } from '../utils/config';\nimport { GET_STORE_INVENTORY, GET_ERRORS, SIMULATE_CADENCE_SKU, FLUSH_STORE_DATA, SIMULATE_CADENCE_SKU_LOADING, SIMULATE_PRE_SEASON_MARKDOWN_DATA, SAVE_OVERALL_MARKDOWN, RESET_MARKDOWN_SAVED, SAVE_SKU_MARKDOWN, SIMULATE_DATA_FOR_SKU } from './types';\nexport var fetchStoreData = function fetchStoreData(payload) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var url, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = config.markDownUrl + '/markdown/getStoreInventory';\n                _context.prev = 1;\n                _context.next = 4;\n                return axios.post(url, payload);\n\n              case 4:\n                res = _context.sent;\n\n                if (res.data.status) {\n                  dispatch({\n                    type: GET_STORE_INVENTORY,\n                    payload: res.data.data\n                  });\n                } else {\n                  dispatch({\n                    type: GET_STORE_INVENTORY,\n                    payload: [],\n                    message: res.data.msg\n                  });\n                  /* let payload = {\n                    message: res.data.msg\n                  };\n                  dispatch({\n                    type: GET_ERRORS,\n                    payload: payload\n                  }); */\n                }\n\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                dispatch({\n                  type: GET_ERRORS,\n                  payload: _context.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var simulateMarkdownCadenceAndSkuList = function simulateMarkdownCadenceAndSkuList(payload) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var url, res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                url = config.markDownUrl + '/markdown/simulate';\n                _context2.prev = 1;\n                dispatch({\n                  type: SIMULATE_CADENCE_SKU_LOADING\n                });\n                _context2.next = 5;\n                return axios.post(url, payload);\n\n              case 5:\n                res = _context2.sent;\n\n                if (res.data.status) {\n                  dispatch({\n                    type: SIMULATE_CADENCE_SKU,\n                    payload: res.data.data\n                  });\n                } else {\n                  dispatch({\n                    type: SIMULATE_CADENCE_SKU,\n                    payload: []\n                  });\n                }\n\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](1);\n                dispatch({\n                  type: GET_ERRORS,\n                  payload: _context2.t0\n                });\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 9]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var simulatePreSeasonMarkDown = function simulatePreSeasonMarkDown(payload) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var url, res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                url = config.markDownUrl + '/markdown/preseason';\n                _context3.prev = 1;\n                dispatch({\n                  type: SIMULATE_CADENCE_SKU_LOADING\n                });\n                _context3.next = 5;\n                return axios.post(url, payload);\n\n              case 5:\n                res = _context3.sent;\n\n                if (res.data.status) {\n                  dispatch({\n                    type: SIMULATE_PRE_SEASON_MARKDOWN_DATA,\n                    payload: res.data.data\n                  });\n                } else {\n                  dispatch({\n                    type: SIMULATE_PRE_SEASON_MARKDOWN_DATA,\n                    payload: {}\n                  });\n                }\n\n                _context3.next = 12;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](1);\n                dispatch({\n                  type: GET_ERRORS,\n                  payload: _context3.t0\n                });\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 9]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var simulateMarkdownCadenceAndSkuListMultiple = function simulateMarkdownCadenceAndSkuListMultiple(payloads) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var url, apis, responsePayload;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                url = config.markDownUrl + '/markdown/simulate';\n\n                try {\n                  dispatch({\n                    type: SIMULATE_CADENCE_SKU_LOADING\n                  });\n                  apis = payloads.markdowns.map(function (pld) {\n                    payloads.markdown = pld.map(function (pd) {\n                      return pd / 100;\n                    }).join(',');\n                    return axios.post(url, _objectSpread({}, payloads));\n                  });\n                  responsePayload = [];\n                  Promise.all(apis).then(function (res) {\n                    if (res && res.length) {\n                      if (payloads.skus) {\n                        res.forEach(function (re, idx) {\n                          if (re.data.data && re.data.data.set0) {\n                            responsePayload.push({\n                              overall: re.data.data.set0[payloads.skus]\n                            });\n                          }\n                        });\n                        dispatch({\n                          type: SIMULATE_DATA_FOR_SKU,\n                          payload: res\n                        });\n                      } else {\n                        res.forEach(function (re, idx) {\n                          if (re.data.status) {\n                            responsePayload.push(re.data.data[0]);\n                          } else {}\n                        });\n                      }\n\n                      responsePayload && responsePayload.length && dispatch({\n                        type: SIMULATE_CADENCE_SKU,\n                        payload: responsePayload\n                      });\n                      responsePayload && !responsePayload.length && dispatch({\n                        type: SIMULATE_CADENCE_SKU,\n                        payload: []\n                      });\n                    }\n                  });\n                } catch (err) {\n                  dispatch({\n                    type: GET_ERRORS,\n                    payload: err\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var flushStoreData = function flushStoreData() {\n  return function (dispatch) {\n    dispatch({\n      type: FLUSH_STORE_DATA\n    });\n  };\n};\nexport var saveOverAllMarkdown = function saveOverAllMarkdown(payload) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        var url, res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                url = config.markDownUrl + '/markdown/save';\n                _context5.prev = 1;\n                _context5.next = 4;\n                return axios.post(url, payload);\n\n              case 4:\n                res = _context5.sent;\n                dispatch({\n                  type: SAVE_OVERALL_MARKDOWN,\n                  payload: res.data.status\n                });\n                _context5.next = 11;\n                break;\n\n              case 8:\n                _context5.prev = 8;\n                _context5.t0 = _context5[\"catch\"](1);\n                dispatch({\n                  type: GET_ERRORS,\n                  payload: _context5.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[1, 8]]);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var resetMakrdownSave = function resetMakrdownSave() {\n  return function (dispatch) {\n    dispatch({\n      type: RESET_MARKDOWN_SAVED\n    });\n  };\n};\nexport var saveSkuMarkdown = function saveSkuMarkdown(payload) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch) {\n        var url, res;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                url = config.markDownUrl + '/markdown/saveSku';\n                _context6.prev = 1;\n                _context6.next = 4;\n                return axios.post(url, payload);\n\n              case 4:\n                res = _context6.sent;\n                dispatch({\n                  type: SAVE_SKU_MARKDOWN,\n                  payload: res.data.status\n                });\n                _context6.next = 11;\n                break;\n\n              case 8:\n                _context6.prev = 8;\n                _context6.t0 = _context6[\"catch\"](1);\n                dispatch({\n                  type: GET_ERRORS,\n                  payload: _context6.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[1, 8]]);\n      }));\n\n      return function (_x6) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/aiAssistedIn_PreSeasonActions.js"],"names":["axios","config","GET_STORE_INVENTORY","GET_ERRORS","SIMULATE_CADENCE_SKU","FLUSH_STORE_DATA","SIMULATE_CADENCE_SKU_LOADING","SIMULATE_PRE_SEASON_MARKDOWN_DATA","SAVE_OVERALL_MARKDOWN","RESET_MARKDOWN_SAVED","SAVE_SKU_MARKDOWN","SIMULATE_DATA_FOR_SKU","fetchStoreData","payload","dispatch","url","markDownUrl","post","res","data","status","type","message","msg","simulateMarkdownCadenceAndSkuList","simulatePreSeasonMarkDown","simulateMarkdownCadenceAndSkuListMultiple","payloads","apis","markdowns","map","pld","markdown","pd","join","responsePayload","Promise","all","then","length","skus","forEach","re","idx","set0","push","overall","err","flushStoreData","saveOverAllMarkdown","resetMakrdownSave","saveSkuMarkdown"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { config } from '../utils/config';\nimport {\n  GET_STORE_INVENTORY,\n  GET_ERRORS,\n  SIMULATE_CADENCE_SKU,\n  FLUSH_STORE_DATA,\n  SIMULATE_CADENCE_SKU_LOADING,\n  SIMULATE_PRE_SEASON_MARKDOWN_DATA,\n  SAVE_OVERALL_MARKDOWN,\n  RESET_MARKDOWN_SAVED,\n  SAVE_SKU_MARKDOWN,\n  SIMULATE_DATA_FOR_SKU,\n} from './types';\n\nexport const fetchStoreData = (payload) => async (dispatch) => {\n  let url = config.markDownUrl + '/markdown/getStoreInventory';\n  try {\n    const res = await axios.post(url, payload);\n    if (res.data.status) {\n      dispatch({ type: GET_STORE_INVENTORY, payload: res.data.data });\n    } else {\n      dispatch({ type: GET_STORE_INVENTORY, payload: [], message: res.data.msg });\n      /* let payload = {\n        message: res.data.msg\n      };\n      dispatch({\n        type: GET_ERRORS,\n        payload: payload\n      }); */\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err,\n    });\n  }\n};\n\nexport const simulateMarkdownCadenceAndSkuList = (payload) => async (dispatch) => {\n  let url = config.markDownUrl + '/markdown/simulate';\n  try {\n    dispatch({ type: SIMULATE_CADENCE_SKU_LOADING });\n\n    const res = await axios.post(url, payload);\n\n    if (res.data.status) {\n      dispatch({ type: SIMULATE_CADENCE_SKU, payload: res.data.data });\n    } else {\n      dispatch({ type: SIMULATE_CADENCE_SKU, payload: [] });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err,\n    });\n  }\n};\n\nexport const simulatePreSeasonMarkDown = (payload) => async (dispatch) => {\n  let url = config.markDownUrl + '/markdown/preseason';\n  try {\n    dispatch({ type: SIMULATE_CADENCE_SKU_LOADING });\n    const res = await axios.post(url, payload);\n    if (res.data.status) {\n      dispatch({ type: SIMULATE_PRE_SEASON_MARKDOWN_DATA, payload: res.data.data });\n    } else {\n      dispatch({ type: SIMULATE_PRE_SEASON_MARKDOWN_DATA, payload: {} });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err,\n    });\n  }\n};\n\nexport const simulateMarkdownCadenceAndSkuListMultiple = (payloads) => async (dispatch) => {\n  let url = config.markDownUrl + '/markdown/simulate';\n  try {\n    dispatch({ type: SIMULATE_CADENCE_SKU_LOADING });\n    let apis = payloads.markdowns.map((pld) => {\n      payloads.markdown = pld.map((pd) => pd / 100).join(',');\n      return axios.post(url, { ...payloads });\n    });\n\n    let responsePayload = [];\n\n    Promise.all(apis).then(function (res) {\n      if (res && res.length) {\n        if (payloads.skus) {\n          res.forEach((re, idx) => {\n            if (re.data.data && re.data.data.set0) {\n              responsePayload.push({\n                overall: re.data.data.set0[payloads.skus],\n              });\n            }\n          });\n          dispatch({\n            type: SIMULATE_DATA_FOR_SKU,\n            payload: res,\n          });\n        } else {\n          res.forEach((re, idx) => {\n            if (re.data.status) {\n              responsePayload.push(re.data.data[0]);\n            } else {\n            }\n          });\n        }\n\n        responsePayload &&\n          responsePayload.length &&\n          dispatch({ type: SIMULATE_CADENCE_SKU, payload: responsePayload });\n        responsePayload &&\n          !responsePayload.length &&\n          dispatch({ type: SIMULATE_CADENCE_SKU, payload: [] });\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err,\n    });\n  }\n};\n\nexport const flushStoreData = () => (dispatch) => {\n  dispatch({ type: FLUSH_STORE_DATA });\n};\n\nexport const saveOverAllMarkdown = (payload) => async (dispatch) => {\n  let url = config.markDownUrl + '/markdown/save';\n  try {\n    const res = await axios.post(url, payload);\n    dispatch({ type: SAVE_OVERALL_MARKDOWN, payload: res.data.status });\n  } catch (err) {\n    dispatch({ type: GET_ERRORS, payload: err });\n  }\n};\n\nexport const resetMakrdownSave = () => (dispatch) => {\n  dispatch({ type: RESET_MARKDOWN_SAVED });\n};\n\nexport const saveSkuMarkdown = (payload) => async (dispatch) => {\n  let url = config.markDownUrl + '/markdown/saveSku';\n  try {\n    const res = await axios.post(url, payload);\n    dispatch({ type: SAVE_SKU_MARKDOWN, payload: res.data.status });\n  } catch (err) {\n    dispatch({ type: GET_ERRORS, payload: err });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}