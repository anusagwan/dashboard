{"ast":null,"code":"import _regeneratorRuntime from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/index.js\";\nimport React, { Component } from 'react';\nimport Filters from '../../services/filters';\nimport MarkdownAnalysis from '../MarkdownAnalysis';\nimport InventoryInfo from './InventoryInfo';\nimport Constraints from './Constraints';\nimport CreateCadence from './CreateCadence';\nimport Modal from 'react-awesome-modal';\nimport { withRouter } from 'react-router-dom';\nimport Select from 'react-select';\nimport { connect } from 'react-redux';\nimport Download from '../../services/download';\nimport LoadingOverlay from '../../utils/Loader';\nimport _ from 'lodash';\nimport GetMarkdownPercentageHeader from './GetMarkdownPercentageHeader';\nimport manuallyCreateMdActions from '../../actions/manuallyCreateMdActions.js';\nimport plannedReportsAction from '../../actions/plannedReportsAction';\nimport './index.css';\nimport moment from 'moment';\nimport { Button, Tabs, Tab } from 'react-bootstrap';\nimport MarkdownDetailedTable from './MardownDetailedTable';\nimport cloneDeep from 'clone-deep';\nimport ComparisonTable from './ComparisonTable';\nimport ComparisonMetricTable from './ComparisonMetricTable';\nimport classNames from 'classnames';\nimport ExcludeStoreTable from './excludeStoreTable'; // import config from '../../utils/config';\n\nimport PlanSavePopup from './planSavePopup';\nimport { toast } from 'react-toastify'; // import FormikFilter from './FormikFilter';\n\nimport comparisonColdef from './comparisonColdef';\nimport StyleConfigActions from '../../actions/styleConfigActions';\n\nvar ManuallyCreateMD =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ManuallyCreateMD, _Component);\n\n  function ManuallyCreateMD(props) {\n    var _this;\n\n    _classCallCheck(this, ManuallyCreateMD);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ManuallyCreateMD).call(this, props));\n\n    _this.detailedTableDataHandler = function (data) {\n      _this.setState({\n        detailedTableData: data\n      });\n    };\n\n    _this.onFilterStyles = function () {\n      var _this$state = _this.state,\n          selectedSkuId = _this$state.selectedSkuId,\n          selectedCustomGroup = _this$state.selectedCustomGroup,\n          selectedStyleColor = _this$state.selectedStyleColor;\n\n      _this.setState({\n        selectedStyle: selectedSkuId ? selectedSkuId.value : 'all'\n      });\n\n      if (_this.state.isEdit && selectedSkuId) {\n        _this.getStyleColorData(selectedSkuId);\n\n        return;\n      }\n\n      if (_this.state.isEdit && !selectedSkuId) {\n        //for all case we are gonna use markDownOptimization data for prevData, its already stored in analysisData reducer\n        return;\n      }\n\n      selectedSkuId && selectedSkuId.value ? _this.callAPISimulate(selectedSkuId.value) : _this.callAPISimulate();\n    };\n\n    _this.selectedSkuHandler = function (val) {\n      _this.setState({\n        // selectedStyle: val ? val.value : 'all',\n        selectedSkuId: val,\n        selectedCustomGroup: '',\n        selectedStyleColor: ''\n      }); // if (this.state.isEdit && val) {\n      //   this.getStyleColorData(val);\n      //   return;\n      // }\n      // if (this.state.isEdit && !val) {\n      //   //for all case we are gonna use markDownOptimization data for prevData, its already stored in analysisData reducer\n      //   return;\n      // }\n      // val && val.value ? this.callAPISimulate(val.value) : this.callAPISimulate();\n\n    };\n\n    _this.selectedCustomGroupHandler = function (val) {\n      return _this.setState({\n        selectedCustomGroup: val,\n        selectedStyleColor: ''\n      });\n    };\n\n    _this.selectedStyleColorHandler = function (val) {\n      return _this.setState({\n        selectedStyleColor: val\n      });\n    };\n\n    _this.comparisonCheckbox = function (comparisonRowVal) {\n      _this.setState({\n        comparisonRow: comparisonRowVal\n      }); // this.setState({ disableSimBtn: false });\n\n    };\n\n    _this.onComparisonInputChange = function (data) {\n      var cadence = cloneDeep(_this.state.overallCadenceData);\n      cadence[_this.state.TabTitles.indexOf('Comparison')] = data;\n      var dataArray = [];\n\n      _.map(data, function (item) {\n        dataArray = [].concat(_toConsumableArray(dataArray), _toConsumableArray(Object.values(item)));\n      });\n\n      _this.setState({\n        overallCadenceData: cadence\n      });\n\n      _this.setState({\n        disableSimBtn: dataArray.includes('') ? true : false\n      });\n    };\n\n    _this.onUpdateMarkdownPercentage = function (data, index) {\n      if (_this.state.cadenceConstraintsVal === 'overall') {\n        var data1 = cloneDeep(_this.state.overallCadenceData);\n        data1[index] = data;\n\n        _this.setState({\n          overallCadenceData: data1,\n          disableSimBtn: Object.values(data[0]).includes('') ? true : false\n        });\n      } else {\n        var _data = cloneDeep(_this.state.skuLabelCadenceData);\n\n        _data[index] = data;\n\n        _this.setState({\n          skuLabelCadenceData: _data\n        });\n      } // this.setState({ disableSimBtn: false });\n\n    };\n\n    _this.getCadenceData = function (index) {\n      if (_this.state.cadenceConstraintsVal === 'overall') return _this.state.overallCadenceData[index];\n      return _this.state.skuLabelCadenceData[index];\n    };\n\n    _this.checkTabIsCompasionAndSkuType = function (tabTitle) {\n      return _this.state.cadenceConstraintsVal === 'sku' && tabTitle === 'Comparison';\n    };\n\n    _this.isSKUType = function (header) {\n      return _this.state.cadenceConstraintsVal === 'sku';\n    };\n\n    _this.isNotComparsionTab = function (tabTitle) {\n      return tabTitle !== 'Comparison';\n    };\n\n    _this.getComparsionHeader = function (header) {\n      if (_this.state.cadenceConstraintsVal === 'sku' && header === 'Comparison') {\n        var optimalData = _this.state.skuLabelCadenceData[0];\n        var options = optimalData.map(function (data) {\n          return {\n            label: data.SKU_Id,\n            value: data.SKU_Id\n          };\n        });\n        return React.createElement(\"div\", {\n          className: \"row skuLabelStyle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"skuLabel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        }, \"SKU/SKU Group\"), React.createElement(\"div\", {\n          className: \"col-md-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370\n          },\n          __self: this\n        }, React.createElement(Select, {\n          name: \"category\",\n          options: options,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371\n          },\n          __self: this\n        })));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"add-scenario-cont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"font-size-14 markdown-percentage-heading \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, \"Markdown Percentages\")), _this.state.isEdit ? null : React.createElement(\"div\", {\n        className: \"addScenario\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary mr-3\",\n        onClick: _this.addScenario,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"Add Scenario\"), _this.state.defaultActiveKey === 'Comparison' ? React.createElement(Download, {\n        data2: _this.comparisonDataHandler() //Object.values(this.props.comparisonData)}\n        ,\n        data2Header: comparisonColdef(),\n        data: _this.state.overallCadenceData[_this.state.overallCadenceData.length - 1],\n        xlsx: true,\n        fileName: \"Comparison Metric Table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }) : null));\n    };\n\n    _this.comparisonDataHandler = function () {\n      var overallCadenceData = _this.state.overallCadenceData;\n\n      var comparisonTabs = _.map(overallCadenceData[overallCadenceData.length - 1], function (item) {\n        return item.scenarios;\n      });\n\n      var comparisonData = _.cloneDeep(_this.props.comparisonData);\n\n      _.map(Object.keys(comparisonData), function (item) {\n        if (!comparisonTabs.includes(item)) {\n          delete comparisonData[item];\n        }\n      });\n\n      return comparisonData;\n    };\n\n    _this.getTabTag = function (tabTitle, index) {\n      if (tabTitle === 'Comparison') {\n        if (_this.state.cadenceConstraintsVal === 'sku') {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 419\n            },\n            __self: this\n          }, React.createElement(ComparisonMetricTable, {\n            showCheckBoxComparsionTable: true,\n            data: _this.comparisonDataHandler() //this.props.comparisonData}\n            ,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 420\n            },\n            __self: this\n          }));\n        } else {\n          return React.createElement(ComparisonTable, {\n            comparisonCheckbox: function comparisonCheckbox(comparisonRowVal, index) {\n              return _this.comparisonCheckbox(comparisonRowVal, index);\n            },\n            data: _this.state.overallCadenceData[index],\n            updatedData: _this.onComparisonInputChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 428\n            },\n            __self: this\n          });\n        }\n      } else if (tabTitle === 'edit') {\n        return React.createElement(\"div\", {\n          className: \"cadencetable\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439\n          },\n          __self: this\n        }, React.createElement(CreateCadence, {\n          overallCadenceData: _this.state.cadenceConstraintsVal === 'overall' ? _this.state.overallCadenceData[index] : _this.state.skuLabelCadenceData[index],\n          onUpdateMarkdownPercentage: _this.onUpdateMarkdownPercentage,\n          selectedSku: _this.state.selectedSku,\n          key: tabTitle,\n          index: index,\n          editPlanDetails: _this.props.editPlanDetails,\n          activeTab: \"edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"cadencetable\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457\n          },\n          __self: this\n        }, React.createElement(CreateCadence, {\n          overallCadenceData: _this.state.cadenceConstraintsVal === 'overall' ? _this.state.overallCadenceData[index] : _this.state.skuLabelCadenceData[index],\n          onUpdateMarkdownPercentage: _this.onUpdateMarkdownPercentage,\n          addScenario: _this.addScenario,\n          selectedSku: _this.state.selectedSku,\n          key: tabTitle,\n          index: index,\n          editPlanDetails: _this.props.editPlanDetails,\n          activeTab: _this.state.defaultActiveKey,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458\n          },\n          __self: this\n        }));\n      }\n    };\n\n    _this.onSelectTabs = function (key) {\n      var simulatedCadenceData = _this.state.simulatedCadenceData;\n\n      _this.setState({\n        defaultActiveKey: key,\n        disableSimBtn: true,\n        isDraftDisabled: true,\n        selectedStyle: 'all',\n        selectedSkuId: null,\n        overallCadenceData: _.cloneDeep(simulatedCadenceData) //reset edited input field data\n\n      }, function () {\n        if (_this.state.defaultActiveKey !== 'Comparison') {\n          _this.props.updateAnalysisData(_this.props.analysisData[_this.state.defaultActiveKey], _this.state.defaultActiveKey); // this.callAPISimulate();\n\n        }\n      });\n    };\n\n    _this.addTitleInTabs = function () {\n      //checl comparison is there or not if yes -1\n      var TabTitles = _this.state.TabTitles;\n      var comparisonTitleIndex = TabTitles.indexOf('Comparison');\n      var newSceniosIndex = TabTitles.length;\n      var defaultSceniosTitle = \"Scenario 0\".concat(TabTitles.length);\n\n      if (comparisonTitleIndex !== -1) {\n        //comparsion present\n        newSceniosIndex = comparisonTitleIndex;\n        defaultSceniosTitle = \"Scenario 0\".concat(newSceniosIndex);\n        TabTitles.splice(newSceniosIndex, 0, defaultSceniosTitle);\n      } else {\n        TabTitles.splice(newSceniosIndex, 0, defaultSceniosTitle);\n      }\n\n      _this.setState({\n        TabTitles: TabTitles,\n        defaultActiveKey: defaultSceniosTitle\n      });\n\n      _this.addContentsInTabs(newSceniosIndex, defaultSceniosTitle);\n    };\n\n    _this.addContentsInTabs = function (newSceniosIndex, defaultSceniosTitle) {\n      var data = _this.state.cadenceConstraintsVal === 'overall' ? _this.state.overallCadenceData : _this.state.skuLabelCadenceData; // );\n\n      var simulatedCadenceData = _this.state.simulatedCadenceData;\n      data.splice(newSceniosIndex, 0, cloneDeep(data[0]));\n      simulatedCadenceData.splice(newSceniosIndex, 0, cloneDeep(data[0]));\n      var obj = {\n        skuLabelCadenceData: data\n      };\n\n      if (_this.state.cadenceConstraintsVal === 'overall') {\n        obj = {\n          overallCadenceData: cloneDeep(simulatedCadenceData),\n          //reset edited input field data\n          simulatedCadenceData: simulatedCadenceData\n        };\n      }\n\n      _this.props.updateAnalysisData(_this.props.analysisData['Optimal'].simulateData, defaultSceniosTitle);\n\n      _this.setState(obj);\n    };\n\n    _this.addScenario = function () {\n      if (_this.isTotalSceniosCreatedFive()) {\n        _this.setState({\n          selectedSkuId: null,\n          selectedCustomGroup: null,\n          selectedStyleColor: null,\n          selectedStyle: 'all'\n        });\n\n        _this.addTitleInTabs();\n\n        _this.setState({\n          disableSimBtn: true,\n          isDraftDisabled: true\n        });\n\n        return;\n      }\n\n      toast.error(\"Max 5 Scenarios can be created\", {\n        autoClose: 15000,\n        hideProgressBar: true\n      });\n    };\n\n    _this.isTotalSceniosCreatedFive = function () {\n      var totalScenariosCreated = _this.state.TabTitles.filter(function (title) {\n        return title.startsWith('Scenario');\n      });\n\n      return totalScenariosCreated.length < 5;\n    };\n\n    _this.resetCadence = function () {\n      _this.setState({\n        TabTitles: ['Optimal'],\n        overallCadenceData: [],\n        simulatedData: false,\n        showCadence: false,\n        defaultActiveKey: 'Optimal'\n      });\n\n      _this.resetComp();\n    };\n\n    _this.validateMargin = function (e) {\n      if (_this.state.minTS < parseInt(_this.state.marginVal) && _this.state.maxTS > parseInt(_this.state.marginVal)) {\n        return true;\n      }\n\n      var msg = _.isEmpty(_this.state.marginVal) ? 'Please enter Margin % value' : 'Margin % value should be between 0 to 100';\n      toast.error(msg, {\n        autoClose: 15000,\n        hideProgressBar: true\n      });\n      return false;\n    };\n\n    _this.validateSellThrough = function (e) {\n      if (_this.state.minTS < parseInt(_this.state.targetSellThroughVal) && _this.state.maxTS > parseInt(_this.state.targetSellThroughVal)) {\n        return true;\n      }\n\n      var msg = _.isEmpty(_this.state.targetSellThroughVal) ? 'Please enter Target Sell through % value' : 'Target Sell through % value should be between 0 to 100';\n      toast.error(msg, {\n        autoClose: 15000,\n        hideProgressBar: true\n      });\n      return false;\n    };\n\n    _this.checkDateRange = function () {\n      if (_this.state.startDate && _this.state.endDate && moment(new Date()).week() + 1 <= _this.state.startDate.week() && moment(new Date()).add(13, 'weeks').week() >= _this.state.endDate.week()) {\n        return true;\n      }\n\n      var msg = _.isEmpty(_this.state.startDate) ? 'Please enter Start Date' : _.isEmpty(_this.state.endDate) ? 'Please enter End Date' : 'Start week should be greater than current week and end date less than 13 weeks';\n      toast.error(msg, {\n        autoClose: 15000,\n        hideProgressBar: true\n      });\n      return false;\n    };\n\n    _this.generateCadence = function () {\n      // if (!this.validateSellThrough() || !this.validateMargin() || !this.checkDateRange()) {\n      //   return;\n      // }\n      _this.resetCadence();\n\n      _this.setState({\n        showCadence: false,\n        simulatedData: true\n      });\n\n      var startWeek = _this.state.startDate.week();\n\n      var endWeek = _this.state.endDate.week();\n\n      var weeks = _this.getWeekRange(startWeek, endWeek);\n\n      var payloafForProductCodes = cloneDeep(_this.state.filteredData);\n      var request = cloneDeep(_this.state.filteredData);\n      request.filters['product_codes'] = [];\n      var inputData = {\n        cadenceData: _this.state.cadenceData,\n        inventorySelected: '',\n        storeSelected: '',\n        excludeStore: _this.state.excludedStores,\n        sellThrough: _this.state.targetSellThroughVal || '',\n        margin: _this.state.marginVal || '',\n        markdownType: _this.state.markdownTypeVal || '',\n        cadenceType: _this.state.cadenceConstraintsVal || 'overall',\n        startDate: _this.state.startDate.format('YYYY-MM-DD'),\n        endDate: _this.state.endDate.format('YYYY-MM-DD'),\n        week: weeks,\n        totalInDc: _this.state.totalInDc,\n        totalOnHand: _this.state.totalOnHand,\n        totalOnOrder: _this.state.totalOnOrder,\n        totalInTransit: _this.state.totalInTransit,\n        stores: _this.state.stores,\n        md_level: _this.state.md_level,\n        md_level_no_range: weeks,\n        startWeek: startWeek,\n        endWeek: endWeek\n      };\n\n      var saveCadenceRequest = _objectSpread({}, request, inputData);\n\n      _this.setState({\n        saveCadenceRequest: saveCadenceRequest\n      });\n\n      delete payloafForProductCodes['customStoreGroup']; // delete payloafForProductCodes['product_codes'];\n\n      _this.props.fetchStyle(payloafForProductCodes.filters).then(function (res) {\n        return console.log(res, 'fetchress');\n      });\n\n      _this.props.fetchCadence(saveCadenceRequest);\n    };\n\n    _this.checkComparsionDataPresent = function (data) {\n      return data.indexOf('Comparison') !== -1 ? true : false;\n    };\n\n    _this.updateComparsionDataInTab = function (tabTitles, firstSimulate) {\n      var comparsionData = [];\n      var newComparisonData = [];\n      var activeKey = _this.state.defaultActiveKey;\n\n      var cadenceData = _.cloneDeep(_this.state.overallCadenceData);\n\n      var spliceIndex = firstSimulate ? cadenceData.length : cadenceData.length - 1;\n      var tabTitleForComparison = firstSimulate ? ['Optimal'] : _.map(cadenceData[cadenceData.length - 1], function (item, index) {\n        return index < cadenceData.length && item.scenarios;\n      });\n      tabTitleForComparison.splice(activeKey.charAt(activeKey.length - 1), 0, activeKey);\n      tabTitleForComparison = _.uniq(tabTitleForComparison);\n\n      _.map(tabTitleForComparison, function (item) {\n        var findEle = _.find(cadenceData, function (row, idx) {\n          return item === 'Optimal' && idx === 0 || item.charAt(item.length - 1) == idx;\n        });\n\n        if (findEle) {\n          var newObj = _objectSpread({\n            scenarios: item\n          }, findEle[0]);\n\n          newComparisonData.push(newObj);\n        }\n      });\n\n      cadenceData.splice(spliceIndex, 1, newComparisonData);\n\n      for (var i = 0; i < tabTitles.length - 1; i++) {\n        if (_this.state.cadenceConstraintsVal === 'overall') {// comparsionData.push({\n          //   scenarios: tabTitles[i],\n          //   ...cloneDeep(this.state.overallCadenceData[i][0]),\n          // });\n        } else {\n          var rows = cloneDeep(_this.state.skuLabelCadenceData[i][0]);\n          delete rows['SKU ID'];\n          delete rows['MD Status'];\n          comparsionData.push(_objectSpread({\n            scenarios: tabTitles[i]\n          }, rows));\n        }\n      }\n\n      var data = [];\n      var minusIndex = 0;\n\n      if (_this.checkComparsionDataPresent(_this.state.TabTitles)) {\n        minusIndex = 1;\n      }\n\n      if (_this.state.cadenceConstraintsVal === 'overall') {\n        // data = cloneDeep(this.state.overallCadenceData);\n        // data.splice(data.length - minusIndex, 1, comparsionData);\n        _this.setState({\n          overallCadenceData: cadenceData,\n          simulatedCadenceData: _.cloneDeep(cadenceData),\n          //reset edited input field data\n          simulatedData: true\n        });\n      } else {\n        data = cloneDeep(_this.state.skuLabelCadenceData);\n        data.splice(data.length - minusIndex, 1, comparsionData);\n\n        _this.setState({\n          skuLabelCadenceData: data,\n          simulatedData: true\n        });\n      }\n    };\n\n    _this.resetComp = function () {\n      _this.setState({\n        comparisonData: {}\n      });\n    };\n\n    _this.onSimulate =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res, tabTitles, firstSimulate, array;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.callAPISimulate();\n\n            case 2:\n              res = _context.sent;\n\n              if (res.status) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              //adding comparsion title\n              tabTitles = cloneDeep(_this.state.TabTitles);\n              firstSimulate = false;\n\n              _this.setState({\n                isDraftDisabled: false,\n                selectedSkuId: null,\n                selectedCustomGroup: null,\n                selectedStyleColor: null\n              });\n\n              if (_this.state.TabTitles.indexOf('Comparison') === -1) {\n                firstSimulate = true;\n                array = [].concat(_toConsumableArray(_this.state.TabTitles), ['Comparison']);\n                tabTitles = array;\n\n                _this.setState({\n                  TabTitles: array,\n                  selectedStyle: 'all',\n                  selectedSkuId: null,\n                  selectedCustomGroup: null,\n                  selectedStyleColor: null // isDraftDisabled: false,\n\n                });\n              }\n\n              _this.updateComparsionDataInTab(tabTitles, firstSimulate); // this.callAPISimulate();\n\n\n              _this.setState({\n                disableSimBtn: true\n              });\n\n              _this.resetComp();\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.getStyleColorData =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(skus) {\n        var styleGroup, res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                styleGroup = skus.value.split('-');\n                _context2.next = 3;\n                return _this.props.fetchStyleColorData({\n                  promo_code: _this.state.planId,\n                  // style_id: styleGroup[styleGroup.length - 2], //1,\n                  style_group: styleGroup[styleGroup.length - 1],\n                  //65,\n                  customStyleGroup: _.isEmpty(_this.state.selectedCustomGroup) ? '' : _this.state.selectedCustomGroup.value,\n                  styleColor: _.isEmpty(_this.state.selectedStyleColor) ? '' : _this.state.selectedStyleColor.value\n                }, _this.state.defaultActiveKey);\n\n              case 3:\n                res = _context2.sent;\n\n                if (!_.isEqual(_this.state.simulatedCadenceData, _this.state.overallCadenceData) // &&\n                // skus &&\n                // skus.value &&\n                // skus.value !== this.state.selectedStyle\n                ) {\n                    _this.onEditSimulate(skus);\n                  }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.onEditSimulate =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(skus) {\n        var array, skusCalc, dataObj, scenario, analysisDataObj, startWeek, endWeek, weeks, currentWeek, fiscalWeekList, scenario_data_old, scenario_data_new, sell_through_old_overall, sell_through_old_sku, inputData, res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                array = _this.getCadenceData(0), skusCalc = skus && skus.value ? skus.value : _this.state.selectedStyle;\n                dataObj = _this.props.editPlanDetails[0] && _this.props.editPlanDetails[0].request_obj;\n                scenario = Object.keys(dataObj.analysisData);\n                analysisDataObj = dataObj.analysisData[scenario[0]];\n\n                if (!_.isEmpty(dataObj)) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 6:\n                startWeek = dataObj.startWeek;\n                endWeek = dataObj.endWeek;\n                weeks = _this.getWeekRange(startWeek, endWeek);\n                currentWeek = _this.props.editPlanDetails[0] && _this.props.editPlanDetails[0].current_week;\n                fiscalWeekList = _this.props.editPlanDetails[0] && _this.props.editPlanDetails[0].weeks_list;\n                scenario_data_old = {};\n                scenario_data_new = {}, sell_through_old_overall = {};\n\n                _.map(Object.keys(array[0]), function (item, index) {\n                  if (item.replace('W', '') <= currentWeek) {\n                    scenario_data_old[item] = array[0][item];\n                    sell_through_old_overall[item] = dataObj.analysisData[scenario[0]].overview.sellThrough[index];\n                  }\n\n                  if (item.replace('W', '') > currentWeek) {\n                    scenario_data_new[item] = array[0][item];\n                  }\n                });\n\n                sell_through_old_sku = [];\n\n                if (!_.isEmpty(Object.keys(scenario_data_old))) {\n                  _.map(analysisDataObj.detailed.data, function (item) {\n                    var newObj = {};\n\n                    _.map(fiscalWeekList, function (weekNum) {\n                      if (weekNum <= currentWeek) {\n                        newObj[\"W\".concat(weekNum)] = item[\"w\".concat(weekNum, \"sellThrough\")];\n                      }\n                    });\n\n                    newObj.SKU_Id = item.SKU_Id;\n                    sell_through_old_sku.push(newObj);\n                  });\n                }\n\n                inputData = {\n                  filters: {\n                    hierarchy1: _this.props.selectedHierarchy1,\n                    hierarchy2: _this.props.selectedHierarchy2,\n                    hierarchy3: _this.props.selectedHierarchy3,\n                    hierarchy4: _this.props.selectedHierarchy4,\n                    hierarchy5: _this.props.selectedHierarchy5,\n                    hierarchy6: _this.props.selectedHierarchy6,\n                    hierarchy7: _this.props.selectedHierarchy7,\n                    hierarchy8: _this.props.selectedHierarchy8,\n                    customStyleGroup: _this.props.selectedCustomStyleGroup,\n                    customStoreGroup: _this.props.selectedCustomStoreGroup,\n                    tiers: _this.props.selectedStores\n                  },\n                  inventorySelected: '',\n                  storeSelected: '',\n                  sellThrough: dataObj.sellThrough || '',\n                  margin: dataObj.margin || '',\n                  markdownType: '',\n                  cadenceType: _this.state.cadenceConstraintsVal || 'overall',\n                  scenario: 'true',\n                  cadenceData: _this.state.cadenceData,\n                  startDate: dataObj.startDate,\n                  endDate: dataObj.endDate,\n                  week: weeks,\n                  totalInDc: dataObj.totalInDc,\n                  totalOnHand: dataObj.totalOnHand,\n                  totalOnOrder: dataObj.totalOnOrder,\n                  totalInTransit: dataObj.totalInTransit,\n                  stores: dataObj.stores,\n                  md_level: dataObj.md_level,\n                  md_level_no_range: dataObj.md_level_no_range,\n                  startWeek: startWeek,\n                  endWeek: endWeek,\n                  sell_through_old_sku: sell_through_old_sku,\n                  sell_through_old_overall: _.isEmpty(Object.keys(sell_through_old_overall)) ? [] : [sell_through_old_overall],\n                  scenario_data_old: _.isEmpty(Object.keys(scenario_data_old)) ? [] : [scenario_data_old],\n                  scenario_data_new: [scenario_data_new],\n                  styleGroup: skusCalc,\n                  customStyleGroup: _.isEmpty(_this.state.selectedCustomGroup) ? '' : _this.state.selectedCustomGroup.value,\n                  styleColor: _.isEmpty(_this.state.selectedStyleColor) ? '' : _this.state.selectedStyleColor.value,\n                  compressedData: {\n                    saveData: dataObj.simulatedData[scenario[0]]\n                  }\n                };\n                _context3.next = 19;\n                return _this.props.editSimulate(inputData, _this.state.defaultActiveKey);\n\n              case 19:\n                res = _context3.sent;\n\n                if (res.status) {\n                  _context3.next = 22;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 22:\n                if (!_.isEqual(_this.state.selectedStyle, skusCalc)) {\n                  _this.setState({\n                    selectedStyle: skusCalc,\n                    selectedSkuId: skusCalc === 'all' ? null : skus\n                  });\n                }\n\n                _this.setState({\n                  disableSimBtn: true,\n                  isDraftDisabled: false\n                });\n\n              case 24:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.callAPISimulate =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var skus,\n          response,\n          index,\n          array,\n          cadence,\n          lastComparisonArray,\n          data,\n          i,\n          row,\n          scenarioName,\n          res,\n          _res,\n          _args4 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              skus = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : 'all';\n              response = [];\n              index = _this.state.TabTitles.indexOf(_this.state.defaultActiveKey);\n              array = [];\n\n              if (!(_this.state.defaultActiveKey === 'Comparison')) {\n                _context4.next = 27;\n                break;\n              }\n\n              cadence = _this.state.cadenceConstraintsVal === 'overall' ? cloneDeep(_this.state.overallCadenceData) : cloneDeep(_this.state.skuLabelCadenceData);\n              lastComparisonArray = cadence[cadence.length - 1];\n\n              _.map(lastComparisonArray, function (item) {\n                var scenios = cloneDeep(item);\n                var index = item.scenarios === 'Optimal' ? 0 : item.scenarios.charAt(item.scenarios.length - 1);\n                delete scenios.scenarios;\n                cadence[index] = [scenios];\n              });\n\n              data = cadence[_this.state.TabTitles.indexOf('Comparison')];\n              i = 1;\n\n            case 10:\n              if (!(i < data.length)) {\n                _context4.next = 21;\n                break;\n              }\n\n              row = cloneDeep(data[i]);\n              scenarioName = row.scenarios;\n              delete row.scenarios;\n              _context4.next = 16;\n              return _this.props.simulate({\n                csv_names: _this.props.csv_names,\n                // skus: 'all',\n                styleGroup: 'all',\n                customStyleGroup: '',\n                styleColor: '',\n                cadenceType: _this.state.cadenceConstraintsVal,\n                scenario: 'true',\n                scenario_data: [row]\n              }, _this.state.defaultActiveKey, scenarioName);\n\n            case 16:\n              res = _context4.sent;\n              response = _.isEmpty(response) || response.status ? res : response;\n\n            case 18:\n              i++;\n              _context4.next = 10;\n              break;\n\n            case 21:\n              if (response.status) {\n                _context4.next = 23;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", response);\n\n            case 23:\n              _this.setState({\n                overallCadenceData: cadence,\n                simulatedCadenceData: _.cloneDeep(cadence) //reset edited input field data\n\n              });\n\n              return _context4.abrupt(\"return\", response);\n\n            case 27:\n              // let cadence =\n              //   this.state.cadenceConstraintsVal === 'overall'\n              //     ? cloneDeep(this.state.overallCadenceData)\n              //     : cloneDeep(this.state.skuLabelCadenceData);\n              // // let lastComparisonArray = cadence[cadence.length - 1];\n              array = _this.getCadenceData(index);\n              _context4.next = 30;\n              return _this.props.simulate({\n                csv_names: _this.props.csv_names,\n                // skus,\n                styleGroup: skus,\n                customStyleGroup: _.isEmpty(_this.state.selectedCustomGroup) ? '' : _this.state.selectedCustomGroup.value,\n                styleColor: _.isEmpty(_this.state.selectedStyleColor) ? '' : _this.state.selectedStyleColor.value,\n                cadenceType: _this.state.cadenceConstraintsVal,\n                // isEdit: this.state.isEdit && skus === 'all' ? true : false,\n                scenario: 'true',\n                scenario_data: array\n              }, _this.state.defaultActiveKey);\n\n            case 30:\n              _res = _context4.sent;\n              response = _res;\n\n            case 32:\n              return _context4.abrupt(\"return\", response);\n\n            case 33:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    _this.changedView = function (view) {\n      _this.setState({\n        selectedView: view\n      });\n    };\n\n    _this.onExcludeStores = function () {\n      _this.setState({\n        showExcludeStorePopup: true\n      });\n    };\n\n    _this.showPlanSavePopup = function () {\n      _this.setState({\n        showPlanSavePopup: false\n      });\n    };\n\n    _this.excludeStoreValHandler = function () {\n      var selectedRowId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var selectedRows = arguments.length > 1 ? arguments[1] : undefined;\n      var rowIds = Object.values(selectedRowId);\n      var totalStoresData = cloneDeep(_this.props.inventoryInfoData.store_data);\n      var totalStoreIds = totalStoresData.map(function (obj) {\n        return obj.store_code;\n      });\n      var totalExcludedStores = rowIds.map(function (obj) {\n        return obj.store_code;\n      });\n\n      for (var i = 0; i < totalExcludedStores.length; i++) {\n        totalStoreIds.splice(totalStoreIds.indexOf(totalExcludedStores[i]), 1);\n      }\n\n      var tempObj = {\n        inDc: 0,\n        onHand: 0,\n        onOrder: 0,\n        inTransit: 0,\n        stores: 0\n      };\n      rowIds.forEach(function (obj, index) {\n        tempObj.inDc += obj.inventory_data.inventory_in_dc;\n        tempObj.onHand += obj.inventory_data.inventory_on_hand;\n        tempObj.onOrder += obj.inventory_data.inventory_on_order;\n        tempObj.inTransit += obj.inventory_data.inventory_in_transit;\n        tempObj.stores = index + 1; // return a.inventory_on_hand + b.inventory_on_hand;\n      });\n      var _this$props$inventory = _this.props.inventoryInfoData.totalInv,\n          inventory_in_dc = _this$props$inventory.inventory_in_dc,\n          inventory_in_transit = _this$props$inventory.inventory_in_transit,\n          inventory_on_hand = _this$props$inventory.inventory_on_hand,\n          inventory_on_order = _this$props$inventory.inventory_on_order; // let DC = inventory_in_dc - tempObj.inDc;\n\n      _this.setState({\n        totalInDc: inventory_in_dc,\n        totalOnHand: inventory_on_hand - tempObj.onHand,\n        totalOnOrder: inventory_on_order - tempObj.onOrder,\n        totalInTransit: inventory_in_transit - tempObj.inTransit,\n        selectedStores: _this.props.inventoryInfoData.totalStore - tempObj.stores,\n        stores: totalStoreIds,\n        excludedRows: selectedRows\n      });\n    };\n\n    _this.showTablePopup = function () {\n      _this.setState({\n        showExcludeStorePopup: false\n      });\n    };\n\n    _this.getWeekRange = function (startWeek, endWeek) {\n      var arr = [];\n\n      for (var i = startWeek; i <= endWeek; i++) {\n        arr.push(i);\n      }\n\n      return arr;\n    };\n\n    _this.resetInvStrategy = function () {\n      _this.setState({\n        targetSellThroughVal: '',\n        marginVal: '',\n        excludeStore: [],\n        markdownType: '',\n        cadenceType: 'overall',\n        startDate: null,\n        endDate: null,\n        week: '',\n        selectedStores: 0,\n        totalInDc: 0,\n        totalOnHand: 0,\n        totalOnOrder: 0,\n        totalInTransit: 0,\n        totalStores: 0,\n        stores: [],\n        md_level: _this.state.md_level,\n        md_level_no_range: ''\n      });\n\n      _this.resetCadence();\n    };\n\n    _this.validateFilters = function () {\n      return _this.props.selectedHierarchy1 && _this.props.selectedHierarchy2.length && _this.props.selectedHierarchy3.length && _this.props.selectedHierarchy4.length && _this.props.selectedHierarchy5.length && _this.props.selectedStores.length;\n    };\n\n    _this.onReset = function () {\n      _this.props.onResetInventoryInfo();\n\n      _this.setState({\n        filteredData: null,\n        excludedRows: []\n      }, function () {\n        _this.resetInvStrategy();\n      });\n    };\n\n    _this.onFilter = function () {\n      if (!_this.validateFilters()) {\n        toast.error(\"Please select mandatory filters\", {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        return;\n      } // let startWeek = this.state.startDate.week();\n      // let endWeek = this.state.endDate.week();\n      // let weeks = this.getWeekRange(startWeek, endWeek);\n\n\n      var payload = {\n        filters: {\n          hierarchy1: _this.props.selectedHierarchy1,\n          hierarchy2: _this.props.selectedHierarchy2,\n          hierarchy3: _this.props.selectedHierarchy3,\n          hierarchy4: _this.props.selectedHierarchy4,\n          hierarchy5: _this.props.selectedHierarchy5,\n          hierarchy6: _this.props.selectedHierarchy6,\n          hierarchy7: _this.props.selectedHierarchy7,\n          hierarchy8: _this.props.selectedHierarchy8,\n          customStyleGroup: _this.props.selectedCustomStyleGroup,\n          customStoreGroup: _this.props.selectedCustomStoreGroup,\n          tiers: _this.props.selectedStores\n        },\n        inventorySelected: '',\n        storeSelected: '',\n        excludeStore: '',\n        sellThrough: '',\n        margin: '',\n        markdownType: '',\n        cadenceType: 'overall',\n        page: _this.state.currentPage,\n        offset: _this.state.offset\n      };\n\n      if (_this.state.filteredData && _.isEqual(payload.filters, _this.state.filteredData.filters)) {\n        return;\n      }\n\n      _this.resetInvStrategy();\n\n      _this.setState({\n        filteredData: payload,\n        excludedRows: []\n      });\n\n      _this.props.fetchInventoryInfo(payload);\n    };\n\n    _this.constraintsCadenceHandler = function (value) {\n      _this.setState({\n        cadenceConstraintsVal: value,\n        showCadence: false,\n        TabTitles: ['Optimal'],\n        defaultActiveKey: 'Optimal'\n      });\n    };\n\n    _this.markdownTypeHandler = function (val) {\n      _this.setState({\n        markdownTypeVal: val\n      });\n    };\n\n    _this.targetSellThrough = function (e) {\n      _this.setState({\n        targetSellThroughVal: e.target.value\n      });\n    };\n\n    _this.marginValueHandler = function (e) {\n      _this.setState({\n        marginVal: e.target.value\n      });\n    };\n\n    _this.disabledButtonHandler = function (from) {\n      var _this$state2 = _this.state,\n          overallCadenceData = _this$state2.overallCadenceData,\n          defaultActiveKey = _this$state2.defaultActiveKey,\n          TabTitles = _this$state2.TabTitles;\n\n      if (from === 'edit') {\n        return _.isEmpty(_this.props.editMarkdownAnalysisGraphData) ? true : false;\n      }\n\n      if (defaultActiveKey !== 'Comparison') {\n        if (defaultActiveKey === 'Optimal') return false;\n        if (!TabTitles.includes('Comparison')) return true;\n\n        if (TabTitles.includes('Comparison')) {\n          var tabs = _.map(overallCadenceData[overallCadenceData.length - 1], function (item) {\n            return item.scenarios;\n          });\n\n          return tabs.includes(defaultActiveKey) ? false : true;\n        }\n      }\n\n      return from === 'approved' ? _this.state.comparisonRow.length !== 1 : _this.state.comparisonRow.length <= 0;\n    };\n\n    _this.onSaveEdit = function (planName, sceniosNames) {\n      var index = _this.getActiveIndex();\n\n      var editDetails = _this.props.editPlanDetails[0] && _this.props.editPlanDetails[0].request_obj;\n      var startWeek = editDetails.startWeek;\n      var endWeek = editDetails.endWeek;\n\n      var weeks = _this.getWeekRange(startWeek, endWeek);\n\n      var obj = {\n        filters: {\n          hierarchy1: _this.props.selectedHierarchy1,\n          hierarchy2: _this.props.selectedHierarchy2,\n          hierarchy3: _this.props.selectedHierarchy3,\n          hierarchy4: _this.props.selectedHierarchy4,\n          hierarchy5: _this.props.selectedHierarchy5,\n          hierarchy6: _this.props.selectedHierarchy6,\n          hierarchy7: _this.props.selectedHierarchy7,\n          hierarchy8: _this.props.selectedHierarchy8,\n          customStyleGroup: _this.props.selectedCustomStyleGroup,\n          customStoreGroup: _this.props.selectedCustomStoreGroup,\n          tiers: _this.props.selectedStores\n        },\n        title: editDetails.title,\n        status: _this.state.status,\n        promo_code: _this.state.planId,\n        inventorySelected: '',\n        storeSelected: '',\n        sellThrough: editDetails.sellThrough,\n        margin: editDetails.margin || '',\n        markdownType: '',\n        cadenceType: _this.state.cadenceConstraintsVal || 'overall',\n        // cadenceData: this.props.editAnalysisData,\n        startDate: editDetails.startDate,\n        endDate: editDetails.endDate,\n        week: weeks,\n        totalInDc: editDetails.totalInDc,\n        totalOnHand: editDetails.totalOnHand,\n        totalOnOrder: editDetails.totalOnOrder,\n        totalInTransit: editDetails.totalInTransit,\n        stores: editDetails.stores,\n        md_level: editDetails.md_level,\n        md_level_no_range: editDetails.md_level_no_range,\n        startWeek: startWeek,\n        endWeek: endWeek,\n        simulatedData: {},\n        cadenceData: {},\n        analysisData: {},\n        csv_names: editDetails.csv_names,\n        skus: _this.props.skuData\n      };\n\n      if (_this.state.defaultActiveKey === 'Comparison') {\n        sceniosNames.forEach(function (sceniosObject) {\n          console.log(_this.props.analysisData, 'savevev');\n          var temp = sceniosObject.value || sceniosObject.scenarios;\n          obj.simulatedData[temp] = _this.props.analysisData[sceniosObject.scenarios] ? _this.props.analysisData[sceniosObject.scenarios].saveData : [];\n\n          if (sceniosObject.scenarios === 'Optimal') {\n            obj.analysisData[temp] = _this.props.analysisData[sceniosObject.scenarios] ? _this.props.analysisData[sceniosObject.scenarios].simulateData : [];\n          } else {\n            var _this$props$analysisD = _this.props.analysisData[sceniosObject.scenarios],\n                analysisTabledata = _this$props$analysisD.analysisTabledata,\n                detailed = _this$props$analysisD.detailed,\n                overview = _this$props$analysisD.overview;\n            obj.analysisData[temp] = {\n              analysisTabledata: analysisTabledata,\n              detailed: detailed,\n              overview: overview\n            };\n          }\n\n          delete sceniosObject.scenarios;\n          delete sceniosObject.label;\n          delete sceniosObject.value;\n          obj.cadenceData[temp] = [sceniosObject];\n        });\n      } else {\n        var key = sceniosNames[0].value || _this.state.defaultActiveKey;\n        obj.simulatedData[key] = _this.props.analysisData[_this.state.defaultActiveKey] ? _this.props.analysisData[_this.state.defaultActiveKey].saveData : [];\n\n        if (_this.state.defaultActiveKey === 'Optimal') {\n          obj.analysisData[key] = _this.props.editMarkdownAnalysisGraphData;\n        } else {\n          var _this$props$analysisD2 = _this.props.analysisData[_this.state.defaultActiveKey],\n              analysisTabledata = _this$props$analysisD2.analysisTabledata,\n              detailed = _this$props$analysisD2.detailed,\n              overview = _this$props$analysisD2.overview;\n          obj.analysisData[key] = {\n            analysisTabledata: analysisTabledata,\n            detailed: detailed,\n            overview: overview\n          };\n          console.log(obj.analysisData[key], 'obj.analysisData[key]');\n        }\n\n        var data = _this.state.cadenceConstraintsVal === 'overall' ? _this.state.overallCadenceData[index] : _this.state.skuLabelCadenceData[index];\n        obj.cadenceData[key] = data;\n      }\n\n      _this.setState({\n        showPlanSavePopup: false\n      });\n\n      _this.props.saveData(obj);\n    };\n\n    _this.onSave = function (planName, sceniosNames) {\n      var index = _this.getActiveIndex();\n\n      var obj = cloneDeep(_this.state.saveCadenceRequest);\n      obj.title = planName;\n      obj.status = _this.state.status;\n      obj.cadenceData = {};\n      obj.simulatedData = {};\n      obj.sellThrough = _this.state.targetSellThroughVal;\n      obj.analysisData = {};\n      obj.csv_names = _this.props.csv_names;\n      obj.skus = _this.props.skuData;\n\n      if (_this.state.defaultActiveKey === 'Comparison') {\n        sceniosNames.forEach(function (sceniosObject) {\n          var temp = sceniosObject.value || sceniosObject.scenarios;\n          obj.simulatedData[temp] = _this.props.analysisData[sceniosObject.scenarios] ? _this.props.analysisData[sceniosObject.scenarios].saveData : [];\n\n          if (sceniosObject.scenarios === 'Optimal') {\n            obj.analysisData[temp] = _this.props.analysisData[sceniosObject.scenarios] ? _this.props.analysisData[sceniosObject.scenarios].simulateData : [];\n          } else {\n            var _this$props$analysisD3 = _this.props.analysisData[sceniosObject.scenarios],\n                analysisTabledata = _this$props$analysisD3.analysisTabledata,\n                detailed = _this$props$analysisD3.detailed,\n                overview = _this$props$analysisD3.overview;\n            obj.analysisData[temp] = {\n              analysisTabledata: analysisTabledata,\n              detailed: detailed,\n              overview: overview\n            };\n          }\n\n          delete sceniosObject.scenarios;\n          delete sceniosObject.label;\n          delete sceniosObject.value;\n          obj.cadenceData[temp] = [sceniosObject];\n        });\n      } else {\n        // if (this.state.defaultActiveKey === 'Optimal') {\n        //   await this.props.fetchCadence(this.state.saveCadenceRequest);\n        // } else {\n        // await this.callAPISimulate();\n        // let index = this.state.TabTitles.indexOf(this.state.defaultActiveKey);\n        // let array = this.getCadenceData(index);\n        // debugger;\n        // this.props.simulate(\n        //   {\n        //     csv_names: this.props.csv_names,\n        //     skus: 'all',\n        //     cadenceType: this.state.cadenceConstraintsVal,\n        //     scenario: 'true',\n        //     scenario_data: array,\n        //   },\n        //   this.state.defaultActiveKey\n        // );\n        // }\n        var key = sceniosNames[0].value || _this.state.defaultActiveKey;\n        obj.simulatedData[key] = _this.props.analysisData[_this.state.defaultActiveKey] ? _this.props.analysisData[_this.state.defaultActiveKey].saveData : [];\n\n        if (_this.state.defaultActiveKey === 'Optimal') {\n          // let analysis = this.props.analysisData[this.state.defaultActiveKey];\n          obj.analysisData[key] = _this.props.markdownAnalysisGraphData; // ? this.props.analysisData[this.state.defaultActiveKey].simulateData\n          //   ? this.props.analysisData[this.state.defaultActiveKey].simulateData\n          //   : {\n          //       analysisTabledata: analysis.analysisTabledata,\n          //       detailed: analysis.detailed,\n          //       overview: analysis.overview,\n          //     }\n          // : [];\n        } else {\n          var _this$props$analysisD4 = _this.props.analysisData[_this.state.defaultActiveKey],\n              analysisTabledata = _this$props$analysisD4.analysisTabledata,\n              detailed = _this$props$analysisD4.detailed,\n              overview = _this$props$analysisD4.overview;\n          obj.analysisData[key] = {\n            analysisTabledata: analysisTabledata,\n            detailed: detailed,\n            overview: overview\n          };\n        }\n\n        var data = _this.state.cadenceConstraintsVal === 'overall' ? _this.state.overallCadenceData[index] : _this.state.skuLabelCadenceData[index];\n        obj.cadenceData[key] = data;\n      }\n\n      obj.startDate = moment(_this.state.startDate).format('YYYY-MM-DD');\n      obj.endDate = moment(_this.state.endDate).format('YYYY-MM-DD');\n\n      _this.setState({\n        showPlanSavePopup: false\n      });\n\n      _this.props.saveData(obj);\n    };\n\n    _this.getActiveIndex = function () {\n      return _this.state.TabTitles.indexOf(_this.state.defaultActiveKey);\n    };\n\n    _this.onDatesChange = function (_ref5) {\n      var startDate = _ref5.startDate,\n          endDate = _ref5.endDate;\n\n      // let startDate = moment(dates.startDate).format('YYYY-MM-DD');\n      // let endDate = moment(dates.endDate).format('YYYY-MM-DD');\n      _this.setState({\n        startDate: startDate,\n        endDate: endDate\n      });\n    };\n\n    _this.state = {\n      stores: [],\n      selectedStyle: 'all',\n      saveCadenceRequest: {},\n      selectedSkuId: null,\n      targetSellThroughVal: null,\n      markdownTypeVal: false,\n      cadenceConstraintsVal: 'overall',\n      marginVal: null,\n      overallCadenceData: [],\n      skuLabelCadenceData: [],\n      simulatedCadenceData: [],\n      //reset edited input field data\n      offset: 10,\n      minTS: 0,\n      maxTS: 100,\n      minMargin: -100,\n      maxMargin: 100,\n      totalInDc: 0,\n      totalOnHand: 0,\n      totalOnOrder: 0,\n      totalInTransit: 0,\n      cadenceData: ['35', '40', '45', '50', '55', '60', '65', '70', '75', '80'],\n      currentPage: 1,\n      filters: [{\n        type: 'hierarchy1',\n        isMandatory: true,\n        isMultiple: false\n      }, {\n        type: 'hierarchy2',\n        isMandatory: true,\n        isMultiple: true\n      }, {\n        type: 'hierarchy3',\n        isMandatory: true,\n        isMultiple: true\n      }, {\n        type: 'hierarchy4',\n        isMandatory: true,\n        isMultiple: true\n      }, {\n        type: 'hierarchy5',\n        isMandatory: true,\n        isMultiple: true\n      }, {\n        type: 'hierarchy6',\n        isMandatory: false,\n        isMultiple: true\n      }, {\n        type: 'hierarchy7',\n        isMandatory: false,\n        isMultiple: true\n      }, {\n        type: 'hierarchy8',\n        isMandatory: false,\n        isMultiple: true\n      }],\n      // filteredData: {},\n      inventoryDc: 0,\n      onHandInventory: 0,\n      onOrderInventory: 0,\n      inTransitInventory: 0,\n      totalInventory: 0,\n      currentInventory: 0,\n      totalStores: 0,\n      selectedStores: 0,\n      disableSimBtn: true,\n      selectedView: 'Overview',\n      selectedSku: [],\n      selectedCustomGroup: [],\n      selectedStyleColor: [],\n      showExcludeStorePopup: false,\n      showPlanSavePopup: false,\n      TabTitles: ['Optimal'],\n      defaultActiveKey: 'Optimal',\n      comparisonData: [],\n      showCadence: false,\n      simulatedData: false,\n      comparisonRow: [],\n      status: 'pending',\n      md_level: 'week',\n      isDraftDisabled: false,\n      detailedTableData: {},\n      excludedRows: [],\n      isEdit: false,\n      planId: null\n    };\n    return _this;\n  }\n\n  _createClass(ManuallyCreateMD, [{\n    key: \"getTab\",\n    value: function getTab() {\n      var _this2 = this;\n\n      return this.state.TabTitles.map(function (tabTitle, index) {\n        return React.createElement(Tab, {\n          eventKey: tabTitle,\n          title: tabTitle,\n          key: tabTitle,\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479\n          },\n          __self: this\n        }, _this2.getComparsionHeader(tabTitle), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 481\n          },\n          __self: this\n        }, _this2.getTabTag(tabTitle, index)));\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.updateSidebar('/vis/Markdown/create-markdown');\n\n      if (this.props.location.state && this.props.location.state.planId) {\n        var _this$props$location$ = this.props.location.state,\n            isEdit = _this$props$location$.isEdit,\n            planId = _this$props$location$.planId;\n        this.setState({\n          isEdit: isEdit,\n          planId: planId\n        });\n        this.props.fetchEditPlanData({\n          promo_code: planId\n        }); // .then((res) => {\n        //   let dataObj = res[0] && res[0].request_obj;\n        //   if (_.isEmpty(dataObj)) return;\n        //   let startWeek = dataObj.startWeek;\n        //   let endWeek = dataObj.endWeek;\n        //   let weeks = this.getWeekRange(startWeek, endWeek);\n        //   let inputData = {\n        //     filters: {\n        //       hierarchy1: this.props.selectedHierarchy1,\n        //       hierarchy2: this.props.selectedHierarchy2,\n        //       hierarchy3: this.props.selectedHierarchy3,\n        //       hierarchy4: this.props.selectedHierarchy4,\n        //       hierarchy5: this.props.selectedHierarchy5,\n        //       hierarchy6: this.props.selectedHierarchy6,\n        //       hierarchy7: this.props.selectedHierarchy7,\n        //       hierarchy8: this.props.selectedHierarchy8,\n        //       tiers: this.props.selectedStores,\n        //     },\n        //     inventorySelected: '',\n        //     storeSelected: '',\n        //     sellThrough: dataObj.sellThrough || '',\n        //     margin: dataObj.margin || '',\n        //     markdownType: '',\n        //     cadenceType: this.state.cadenceConstraintsVal || 'overall',\n        //     cadenceData: this.state.cadenceData,\n        //     startDate: dataObj.startDate,\n        //     endDate: dataObj.endDate,\n        //     week: weeks,\n        //     totalInDc: dataObj.totalInDc,\n        //     totalOnHand: dataObj.totalOnHand,\n        //     totalOnOrder: dataObj.totalOnOrder,\n        //     totalInTransit: dataObj.totalInTransit,\n        //     stores: dataObj.stores,\n        //     md_level: dataObj.md_level,\n        //     md_level_no_range: dataObj.md_level_no_range,\n        //     startWeek,\n        //     endWeek,\n        //   };\n        //   this.props.fetchSkuAndCsv(inputData);\n        //   console.log(inputData, 'fetchSkuAndCsv', dataObj);\n        // });\n      }\n\n      this.props.savedStatusFalse(false);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.savedStatus) {\n        this.props.updateSidebar('/vis/Markdown/draftStatus');\n\n        if (this.state.status === 'draft') {\n          this.props.history.push('/vis/Markdown/draftStatus');\n        } else {\n          this.props.history.push({\n            pathname: '/vis/Markdown/draftStatus',\n            state: {\n              tab: 'status'\n            }\n          });\n        }\n\n        return;\n      }\n\n      if (this.props.cadenceData !== prevProps.cadenceData) {\n        this.setState({\n          showCadence: true,\n          simulatedData: true\n        });\n        this.state.cadenceConstraintsVal === 'overall' && this.setState({\n          overallCadenceData: cloneDeep(this.props.cadenceData),\n          simulatedCadenceData: cloneDeep(this.props.cadenceData) //reset edited input field data\n\n        });\n        this.state.cadenceConstraintsVal === 'sku' && this.setState({\n          skuLabelCadenceData: cloneDeep(this.props.cadenceData)\n        });\n      }\n\n      if (!_.isEqual(prevProps.inventoryInfoData, this.props.inventoryInfoData)) {\n        var storeIds = [];\n\n        if (this.props.inventoryInfoData && this.props.inventoryInfoData.store_data) {\n          storeIds = cloneDeep(this.props.inventoryInfoData.store_data).map(function (obj) {\n            return obj.store_code;\n          });\n        }\n\n        var totalInv = this.props.inventoryInfoData && this.props.inventoryInfoData.totalInv;\n        var inventory_in_dc = totalInv.inventory_in_dc,\n            inventory_in_transit = totalInv.inventory_in_transit,\n            inventory_on_hand = totalInv.inventory_on_hand,\n            inventory_on_order = totalInv.inventory_on_order;\n        var totalStores = this.props.inventoryInfoData && this.props.inventoryInfoData.totalStore;\n        this.setState({\n          stores: storeIds,\n          totalInventory: totalInv,\n          currentInventory: totalInv,\n          selectedStores: totalStores,\n          totalStores: totalStores,\n          actualInv: totalInv,\n          totalInDc: inventory_in_dc < 0 ? 0 : inventory_in_dc,\n          totalOnHand: inventory_on_hand || 0,\n          totalOnOrder: inventory_on_order || 0,\n          totalInTransit: inventory_in_transit || 0\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.onResetEditedInfo();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state3 = this.state,\n          minTS = _this$state3.minTS,\n          maxTS = _this$state3.maxTS,\n          minMargin = _this$state3.minMargin,\n          maxMargin = _this$state3.maxMargin;\n      var keyName = this.state.isEdit ? 'analysistabledata' : 'analysisTabledata';\n      return React.createElement(LoadingOverlay, {\n        loader: this.props.getOverlayLoaderState,\n        spinner: true // text={this.props.getOverlayLoaderText}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1513\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"createMd pl-2 pr-2 create-md-padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1518\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1519\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1520\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"font-size-14  pad-10 markdown-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1521\n        },\n        __self: this\n      }, \"MarkSmart /\", React.createElement(\"span\", {\n        className: \"font-bold color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1523\n        },\n        __self: this\n      }, this.state.isEdit ? 'Edit' : 'Create', \" Markdown\"))), React.createElement(\"hr\", {\n        className: \"mb-2\",\n        style: {\n          marginTop: '-4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1528\n        },\n        __self: this\n      }), React.createElement(Filters, {\n        customStyleGroups: true,\n        customStoreGroup: true,\n        hierarchy: this.state.filters,\n        onFilter: function onFilter() {\n          return _this3.onFilter();\n        },\n        stores: true,\n        onReset: this.onReset,\n        allowInactiveProducts: true,\n        isEdit: this.state.isEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1535\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        className: \"dotted-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1547\n        },\n        __self: this\n      }), React.createElement(InventoryInfo, {\n        editPlanDetails: this.props.editPlanDetails,\n        isEdit: this.state.isEdit,\n        inventoryDc: this.state.inventoryDc,\n        onHandInventory: this.state.onHandInventory,\n        onOrderInventory: this.state.onOrderInventory,\n        inTransitInventory: this.state.inTransitInventory,\n        onExcludeStores: this.onExcludeStores,\n        totalInDc: this.state.totalInDc,\n        totalOnHand: this.state.totalOnHand,\n        totalOnOrder: this.state.totalOnOrder,\n        totalInTransit: this.state.totalInTransit // totalInventory={this.state.totalInventory}\n        // currentInventory={this.state.currentInventory}\n        ,\n        totalStores: this.state.totalStores,\n        selectedStores: this.state.selectedStores,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1548\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        className: \"dotted-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1565\n        },\n        __self: this\n      }), React.createElement(Constraints, {\n        minTS: minTS,\n        maxTS: maxTS,\n        editPlanDetails: this.props.editPlanDetails // validateSellThrough={this.validateSellThrough}\n        ,\n        startDate: this.state.startDate,\n        endDate: this.state.endDate,\n        minMargin: minMargin,\n        maxMargin: maxMargin,\n        marginVal: this.state.marginVal,\n        targetSellThroughVal: this.state.targetSellThroughVal,\n        markdownTypeHandler: this.markdownTypeHandler,\n        marginValueHandler: this.marginValueHandler,\n        markdownTypeVal: this.state.markdownTypeVal,\n        targetSellThrough: this.targetSellThrough,\n        onDatesChange: this.onDatesChange,\n        constraintsCadenceHandler: this.constraintsCadenceHandler,\n        cadenceConstraintsVal: this.state.cadenceConstraintsVal,\n        isEdit: this.state.isEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1566\n        },\n        __self: this\n      }), this.state.isEdit ? React.createElement(\"div\", {\n        className: \"mt-4 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1587\n        },\n        __self: this\n      }) : React.createElement(React.Fragment, null, React.createElement(\"hr\", {\n        className: \"dotted-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1590\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"cadencebtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1591\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: !this.state.totalStores,\n        onClick: this.generateCadence,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1592\n        },\n        __self: this\n      }, \"Generate Cadence\")), ' ')), this.state.showCadence && (!!this.state.overallCadenceData.length || !!this.state.skuLabelCadenceData.length) && React.createElement(\"div\", {\n        className: \"card mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1602\n        },\n        __self: this\n      }, this.state.isEdit ? React.createElement(React.Fragment, null, this.getComparsionHeader('edit'), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1606\n        },\n        __self: this\n      }, this.getTabTag('edit', 0))) : React.createElement(Tabs, {\n        activeKey: this.state.defaultActiveKey,\n        transition: false,\n        id: \"noanim-tab-example\",\n        onSelect: this.onSelectTabs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1609\n        },\n        __self: this\n      }, this.getTab()), React.createElement(\"div\", {\n        className: \"simulatebtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1618\n        },\n        __self: this\n      }, this.state.defaultActiveKey !== 'Optimal' && React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        disabled: this.state.disableSimBtn,\n        onClick: this.onSimulate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1620\n        },\n        __self: this\n      }, \"Simulate\"), this.state.isEdit && React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        disabled: this.state.disableSimBtn,\n        onClick: function onClick() {\n          return _this3.onEditSimulate({\n            value: 'all'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1628\n        },\n        __self: this\n      }, \"Simulate\"), React.createElement(\"button\", {\n        className: \"btn btn-primary ml-3 mr-3\",\n        disabled: this.state.isEdit ? this.disabledButtonHandler('edit') : this.disabledButtonHandler('approved') // this.state.comparisonRow.length !== 1 &&\n        // this.state.defaultActiveKey === 'Comparison'\n        //   ? true\n        //   : false\n        ,\n        onClick: function onClick() {\n          // this.resetStyleValue();\n          _this3.setState({\n            showPlanSavePopup: true,\n            status: 'pending' // disableSimBtn: true,\n\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1635\n        },\n        __self: this\n      }, \"Send for approval\"), this.state.isEdit ? null : React.createElement(\"button\", {\n        className: \"btn btn-primary resetButton\",\n        disabled: this.disabledButtonHandler('draft'),\n        onClick: function onClick() {\n          // this.resetStyleValue();\n          _this3.setState({\n            showPlanSavePopup: true,\n            status: 'draft' // disableSimBtn: true,\n\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1658\n        },\n        __self: this\n      }, \"Send to drafts\"))), this.state.cadenceConstraintsVal === 'overall' && this.state.defaultActiveKey === 'Comparison' && React.createElement(\"div\", {\n        className: \"card mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1677\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"optimalheading pl-3 pt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1678\n        },\n        __self: this\n      }, this.state.defaultActiveKey), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1679\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1680\n        },\n        __self: this\n      }, React.createElement(ComparisonMetricTable, {\n        data: this.comparisonDataHandler() //this.props.comparisonData}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1681\n        },\n        __self: this\n      }))), this.state.showCadence && this.state.simulatedData && this.props.markdownAnalysisGraphData && this.props.markdownAnalysisGraphData.overview && this.state.defaultActiveKey !== 'Comparison' && React.createElement(\"div\", {\n        className: \"card mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1693\n        },\n        __self: this\n      }, this.state.isEdit ? React.createElement(\"div\", {\n        className: \"my-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1695\n        },\n        __self: this\n      }) : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"optimalheading pl-3 pt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1698\n        },\n        __self: this\n      }, this.state.defaultActiveKey), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1699\n        },\n        __self: this\n      })), this.state.defaultActiveKey !== 'Comparison' && React.createElement(\"div\", {\n        className: \"overviewtoggle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1703\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        style: {\n          fontSize: '15px',\n          border: '1px solid',\n          borderWidth: '1px 0px 1px 1px'\n        },\n        className: classNames({\n          active: this.state.selectedView === 'Overview',\n          btn: true,\n          'btn-outline-primary cal-btn': true,\n          overView: true,\n          detailed: true\n        }),\n        onClick: function onClick() {\n          return _this3.changedView('Overview');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1704\n        },\n        __self: this\n      }, \"Overview\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: classNames({\n          active: this.state.selectedView === 'Detailed',\n          ' btn': true,\n          'btn-outline-primary cal-btn': true,\n          overView: true,\n          detailed: true\n        }),\n        onClick: function onClick() {\n          return _this3.changedView('Detailed');\n        },\n        style: {\n          fontSize: '15px',\n          border: '1px solid',\n          borderWidth: '1px 1px 1px 0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1721\n        },\n        __self: this\n      }, \"Detailed\")), this.state.showCadence && this.state.simulatedData && (this.state.selectedStyle === 'all' ? this.props.markdownAnalysisGraphData : this.props.markdownAnalysisGraphDataBySkus) && (this.state.selectedStyle === 'all' ? this.props.markdownAnalysisGraphData.overview : this.props.markdownAnalysisGraphDataBySkus.overview) && this.state.selectedView === 'Overview' && this.state.defaultActiveKey !== 'Comparison' && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1750\n        },\n        __self: this\n      }, React.createElement(MarkdownAnalysis // anaTableData={anaTableData}\n      // graphData={graphData}\n      , {\n        level: this.state.md_level,\n        analysisTable: this.state.selectedStyle === 'all' ? this.props.analysisTable.analysisTabledata : this.props.analysisTableBySkus[keyName],\n        markdownAnalysisGraphData: this.state.selectedStyle === 'all' ? this.props.markdownAnalysisGraphData.overview : this.props.markdownAnalysisGraphDataBySkus.overview,\n        editMarkdownAnalysisGraphData: this.state.selectedStyle === 'all' ? this.props.editMarkdownAnalysisGraphData.overview : this.props.editAnalysisTableDataBySkus.overview,\n        editAnalysisData: this.state.selectedStyle === 'all' ? this.props.editAnalysisData.analysisTabledata : this.props.editAnalysisTableDataBySkus.analysisTabledata,\n        selectedSku: this.state.selectedSkuId,\n        selectedCustomGroup: this.state.selectedCustomGroup,\n        selectedStyleColor: this.state.selectedStyleColor,\n        optionSku: this.props.skuData,\n        selectedSkuHandler: function selectedSkuHandler(val) {\n          return _this3.selectedSkuHandler(val);\n        },\n        onFilterStyles: this.onFilterStyles,\n        selectedCustomGroupHandler: function selectedCustomGroupHandler(val) {\n          return _this3.selectedCustomGroupHandler(val);\n        },\n        selectedStyleColorHandler: function selectedStyleColorHandler(val) {\n          return _this3.selectedStyleColorHandler(val);\n        },\n        isEdit: this.state.isEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1751\n        },\n        __self: this\n      })), this.state.selectedView === 'Detailed' && this.state.defaultActiveKey !== 'Comparison' && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1789\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"detailedTable ml-4 mr-4\",\n        style: {\n          paddingBottom: '2rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1791\n        },\n        __self: this\n      }, React.createElement(MarkdownDetailedTable, {\n        data: this.state.selectedStyle === 'all' ? this.props.markdownAnalysisGraphData.detailed : this.props.markdownAnalysisGraphDataBySkus.detailed,\n        editData: this.state.selectedStyle === 'all' ? this.props.editMarkdownAnalysisGraphData.detailed : this.props.editAnalysisTableDataBySkus.detailed,\n        columnHeaders: this.props.columnHeaders,\n        detailedTableDataHandler: this.detailedTableDataHandler,\n        detailedTableData: this.state.detailedTableData,\n        isEdit: this.state.isEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1792\n        },\n        __self: this\n      }))), ' '), React.createElement(Modal, {\n        visible: this.state.showPlanSavePopup // effect=\"fadeInDown\"\n        ,\n        effect: \"fadeInRight\",\n        width: \"30%\",\n        style: {\n          height: 'auto',\n          overflow: 'auto'\n        },\n        onClickAway: function onClickAway() {\n          return _this3.showPlanSavePopup();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1814\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1821\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1822\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1823\n        },\n        __self: this\n      }, \"Enter MD Plan Details\", React.createElement(\"span\", {\n        onClick: function onClick() {\n          return _this3.showPlanSavePopup();\n        },\n        className: \"pull-right select-store-span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1825\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        style: {\n          cursor: 'pointer'\n        },\n        className: \"fa fa-times\",\n        onClick: function onClick() {\n          return _this3.showPlanSavePopup();\n        },\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1828\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1836\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mr-3\",\n        style: {\n          display: 'flex',\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1839\n        },\n        __self: this\n      }, React.createElement(PlanSavePopup, {\n        data: this.state.cadenceConstraintsVal === 'overall' ? this.state.overallCadenceData : this.state.skuLabelCadenceData,\n        activeIndex: this.getActiveIndex(),\n        comparsionSelectedData: cloneDeep(this.state.comparisonRow),\n        activeTab: this.state.defaultActiveKey,\n        isEdit: this.state.isEdit,\n        editPlanDetails: this.props.editPlanDetails,\n        onSave: function onSave(planName, sceniosNames) {\n          return _this3.state.isEdit ? _this3.onSaveEdit(planName, sceniosNames) : _this3.onSave(planName, sceniosNames);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1840\n        },\n        __self: this\n      })))), React.createElement(Modal, {\n        visible: this.state.showExcludeStorePopup,\n        effect: \"fadeInDown\",\n        width: \"75%\",\n        height: \"95%\",\n        onClickAway: function onClickAway() {\n          return _this3.showTablePopup();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1860\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body pb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1867\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"card-title\",\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1868\n        },\n        __self: this\n      }, \"Select stores\", React.createElement(\"span\", {\n        onClick: function onClick() {\n          return _this3.showTablePopup();\n        },\n        className: \"pull-right select-store-span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1870\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        style: {\n          cursor: 'pointer'\n        },\n        className: \"fa fa-times\",\n        onClick: function onClick() {\n          return _this3.showTablePopup();\n        },\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1873\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1881\n        },\n        __self: this\n      })), this.state.showExcludeStorePopup && this.props.inventoryInfoData && React.createElement(\"div\", {\n        className: \"ai-pre-grid-table overflow-handler\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1884\n        },\n        __self: this\n      }, React.createElement(ExcludeStoreTable, {\n        currentPage: this.state.currentPage,\n        offset: this.state.offset,\n        showTablePopup: this.showTablePopup,\n        columnHeaders: this.props.inventoryInfoData.columnHeaders || [],\n        excludeStoreValHandler: this.excludeStoreValHandler,\n        storeData: this.props.inventoryInfoData.store_data || [],\n        excludedRows: this.state.excludedRows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1885\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ManuallyCreateMD;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    getOverlayLoaderState: state.loaderReducer.overlayLoaderState,\n    getOverlayLoaderText: state.loaderReducer.loaderText,\n    inventoryInfoData: state.manuallyCreateMdData.inventoryInfoData,\n    cadenceData: state.manuallyCreateMdData.cadenceData,\n    savedStatus: state.manuallyCreateMdData.status,\n    skuData: state.manuallyCreateMdData.skus,\n    startDate: state.filtersReducer.startDate,\n    endDate: state.filtersReducer.endDate,\n    weeks: state.filtersReducer.weeks,\n    csv_names: state.manuallyCreateMdData.csv_names,\n    editPlanDetails: state.manuallyCreateMdData.editPlanDetails,\n    drops: state.filtersReducer.selectedDrops,\n    selectedHierarchy1: state.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: state.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: state.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: state.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: state.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: state.filtersReducer.selectedHierarchy6,\n    selectedHierarchy7: state.filtersReducer.selectedHierarchy7,\n    selectedHierarchy8: state.filtersReducer.selectedHierarchy8,\n    selectedStores: state.filtersReducer.selectedStores,\n    selectedCustomStyleGroup: state.filtersReducer.selectedCustomStyleGroup,\n    selectedCustomStoreGroup: state.filtersReducer.selectedCustomStoreGroup,\n    markdownAnalysisGraphData: state.markdownAnalysisData.markdownAnalysisGraphData,\n    editMarkdownAnalysisGraphData: state.markdownAnalysisData.editMarkdownAnalysisGraphData,\n    editAnalysisData: state.markdownAnalysisData.editAnalysisData,\n    markdownAnalysisGraphDataBySkus: state.markdownAnalysisData.markdownAnalysisGraphDataBySkus,\n    analysisTable: state.markdownAnalysisData.analysisTable,\n    analysisTableBySkus: state.markdownAnalysisData.analysisTableBySkus,\n    analysisDataBySkus: state.markdownAnalysisData.analysisDataBySkus,\n    comparisonData: state.markdownAnalysisData.comparisonData,\n    editMarkdownAnalysisGraphDataBySkus: state.markdownAnalysisData.editMarkdownAnalysisGraphDataBySkus,\n    editAnalysisTableDataBySkus: state.markdownAnalysisData.editAnalysisTableDataBySkus,\n    analysisData: state.markdownAnalysisData.analysisData,\n    savedData: state.manuallyCreateMdData.savedData,\n    columnHeaders: state.manuallyCreateMdData.columnHeaders,\n    styleColorData: state.styleReducer.styleColorData\n  };\n};\n\nvar mapActionsToProps = {\n  fetchStyle: StyleConfigActions.fetchStyle,\n  fetchInventoryInfo: manuallyCreateMdActions.fetchInventoryInfo,\n  fetchSkuAndCsv: manuallyCreateMdActions.fetchSkuAndCsv,\n  fetchCadence: manuallyCreateMdActions.fetchCadence,\n  simulate: manuallyCreateMdActions.simulate,\n  saveData: manuallyCreateMdActions.saveData,\n  savedStatusFalse: manuallyCreateMdActions.savedStatusFalse,\n  updateAnalysisData: manuallyCreateMdActions.updateAnalysisData,\n  onResetInventoryInfo: manuallyCreateMdActions.onResetInventoryInfo,\n  onResetEditedInfo: manuallyCreateMdActions.onResetEditedInfo,\n  updateSidebar: plannedReportsAction.updateSidebar,\n  fetchEditPlanData: manuallyCreateMdActions.fetchEditPlanData,\n  fetchStyleColorData: manuallyCreateMdActions.fetchStyleColorData,\n  editSimulate: manuallyCreateMdActions.editSimulate\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withRouter(ManuallyCreateMD));","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/index.js"],"names":["React","Component","Filters","MarkdownAnalysis","InventoryInfo","Constraints","CreateCadence","Modal","withRouter","Select","connect","Download","LoadingOverlay","_","GetMarkdownPercentageHeader","manuallyCreateMdActions","plannedReportsAction","moment","Button","Tabs","Tab","MarkdownDetailedTable","cloneDeep","ComparisonTable","ComparisonMetricTable","classNames","ExcludeStoreTable","PlanSavePopup","toast","comparisonColdef","StyleConfigActions","ManuallyCreateMD","props","detailedTableDataHandler","data","setState","detailedTableData","onFilterStyles","state","selectedSkuId","selectedCustomGroup","selectedStyleColor","selectedStyle","value","isEdit","getStyleColorData","callAPISimulate","selectedSkuHandler","val","selectedCustomGroupHandler","selectedStyleColorHandler","comparisonCheckbox","comparisonRowVal","comparisonRow","onComparisonInputChange","cadence","overallCadenceData","TabTitles","indexOf","dataArray","map","item","Object","values","disableSimBtn","includes","onUpdateMarkdownPercentage","index","cadenceConstraintsVal","data1","skuLabelCadenceData","getCadenceData","checkTabIsCompasionAndSkuType","tabTitle","isSKUType","header","isNotComparsionTab","getComparsionHeader","optimalData","options","label","SKU_Id","addScenario","defaultActiveKey","comparisonDataHandler","length","comparisonTabs","scenarios","comparisonData","keys","getTabTag","selectedSku","editPlanDetails","onSelectTabs","key","simulatedCadenceData","isDraftDisabled","updateAnalysisData","analysisData","addTitleInTabs","comparisonTitleIndex","newSceniosIndex","defaultSceniosTitle","splice","addContentsInTabs","obj","simulateData","isTotalSceniosCreatedFive","error","autoClose","hideProgressBar","totalScenariosCreated","filter","title","startsWith","resetCadence","simulatedData","showCadence","resetComp","validateMargin","e","minTS","parseInt","marginVal","maxTS","msg","isEmpty","validateSellThrough","targetSellThroughVal","checkDateRange","startDate","endDate","Date","week","add","generateCadence","startWeek","endWeek","weeks","getWeekRange","payloafForProductCodes","filteredData","request","filters","inputData","cadenceData","inventorySelected","storeSelected","excludeStore","excludedStores","sellThrough","margin","markdownType","markdownTypeVal","cadenceType","format","totalInDc","totalOnHand","totalOnOrder","totalInTransit","stores","md_level","md_level_no_range","saveCadenceRequest","fetchStyle","then","res","console","log","fetchCadence","checkComparsionDataPresent","updateComparsionDataInTab","tabTitles","firstSimulate","comparsionData","newComparisonData","activeKey","spliceIndex","tabTitleForComparison","charAt","uniq","findEle","find","row","idx","newObj","push","i","rows","minusIndex","onSimulate","status","array","skus","styleGroup","split","fetchStyleColorData","promo_code","planId","style_group","customStyleGroup","styleColor","isEqual","onEditSimulate","skusCalc","dataObj","request_obj","scenario","analysisDataObj","currentWeek","current_week","fiscalWeekList","weeks_list","scenario_data_old","scenario_data_new","sell_through_old_overall","replace","overview","sell_through_old_sku","detailed","weekNum","hierarchy1","selectedHierarchy1","hierarchy2","selectedHierarchy2","hierarchy3","selectedHierarchy3","hierarchy4","selectedHierarchy4","hierarchy5","selectedHierarchy5","hierarchy6","selectedHierarchy6","hierarchy7","selectedHierarchy7","hierarchy8","selectedHierarchy8","selectedCustomStyleGroup","customStoreGroup","selectedCustomStoreGroup","tiers","selectedStores","compressedData","saveData","editSimulate","response","lastComparisonArray","scenios","scenarioName","simulate","csv_names","scenario_data","changedView","view","selectedView","onExcludeStores","showExcludeStorePopup","showPlanSavePopup","excludeStoreValHandler","selectedRowId","selectedRows","rowIds","totalStoresData","inventoryInfoData","store_data","totalStoreIds","store_code","totalExcludedStores","tempObj","inDc","onHand","onOrder","inTransit","forEach","inventory_data","inventory_in_dc","inventory_on_hand","inventory_on_order","inventory_in_transit","totalInv","totalStore","excludedRows","showTablePopup","arr","resetInvStrategy","totalStores","validateFilters","onReset","onResetInventoryInfo","onFilter","payload","page","currentPage","offset","fetchInventoryInfo","constraintsCadenceHandler","markdownTypeHandler","targetSellThrough","target","marginValueHandler","disabledButtonHandler","from","editMarkdownAnalysisGraphData","tabs","onSaveEdit","planName","sceniosNames","getActiveIndex","editDetails","skuData","sceniosObject","temp","analysisTabledata","onSave","markdownAnalysisGraphData","onDatesChange","minMargin","maxMargin","type","isMandatory","isMultiple","inventoryDc","onHandInventory","onOrderInventory","inTransitInventory","totalInventory","currentInventory","textAlign","updateSidebar","location","fetchEditPlanData","savedStatusFalse","prevProps","prevState","savedStatus","history","pathname","tab","storeIds","actualInv","onResetEditedInfo","keyName","getOverlayLoaderState","marginTop","getTab","fontSize","border","borderWidth","active","btn","overView","markdownAnalysisGraphDataBySkus","analysisTable","analysisTableBySkus","editAnalysisTableDataBySkus","editAnalysisData","paddingBottom","columnHeaders","height","overflow","cursor","display","fontWeight","mapStateToProps","loaderReducer","overlayLoaderState","getOverlayLoaderText","loaderText","manuallyCreateMdData","filtersReducer","drops","selectedDrops","markdownAnalysisData","analysisDataBySkus","editMarkdownAnalysisGraphDataBySkus","savedData","styleColorData","styleReducer","mapActionsToProps","fetchSkuAndCsv"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Filters from '../../services/filters';\nimport MarkdownAnalysis from '../MarkdownAnalysis';\nimport InventoryInfo from './InventoryInfo';\nimport Constraints from './Constraints';\nimport CreateCadence from './CreateCadence';\nimport Modal from 'react-awesome-modal';\nimport { withRouter } from 'react-router-dom';\nimport Select from 'react-select';\nimport { connect } from 'react-redux';\nimport Download from '../../services/download';\nimport LoadingOverlay from '../../utils/Loader';\nimport _ from 'lodash';\nimport GetMarkdownPercentageHeader from './GetMarkdownPercentageHeader';\nimport manuallyCreateMdActions from '../../actions/manuallyCreateMdActions.js';\nimport plannedReportsAction from '../../actions/plannedReportsAction';\nimport './index.css';\nimport moment from 'moment';\nimport { Button, Tabs, Tab } from 'react-bootstrap';\nimport MarkdownDetailedTable from './MardownDetailedTable';\nimport cloneDeep from 'clone-deep';\nimport ComparisonTable from './ComparisonTable';\nimport ComparisonMetricTable from './ComparisonMetricTable';\nimport classNames from 'classnames';\nimport ExcludeStoreTable from './excludeStoreTable';\n// import config from '../../utils/config';\nimport PlanSavePopup from './planSavePopup';\nimport { toast } from 'react-toastify';\n// import FormikFilter from './FormikFilter';\nimport comparisonColdef from './comparisonColdef';\nimport StyleConfigActions from '../../actions/styleConfigActions';\n\nclass ManuallyCreateMD extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stores: [],\n      selectedStyle: 'all',\n      saveCadenceRequest: {},\n      selectedSkuId: null,\n      targetSellThroughVal: null,\n      markdownTypeVal: false,\n      cadenceConstraintsVal: 'overall',\n      marginVal: null,\n      overallCadenceData: [],\n      skuLabelCadenceData: [],\n      simulatedCadenceData: [], //reset edited input field data\n      offset: 10,\n      minTS: 0,\n      maxTS: 100,\n      minMargin: -100,\n      maxMargin: 100,\n      totalInDc: 0,\n      totalOnHand: 0,\n      totalOnOrder: 0,\n      totalInTransit: 0,\n      cadenceData: ['35', '40', '45', '50', '55', '60', '65', '70', '75', '80'],\n      currentPage: 1,\n      filters: [\n        {\n          type: 'hierarchy1',\n          isMandatory: true,\n          isMultiple: false,\n        },\n        {\n          type: 'hierarchy2',\n          isMandatory: true,\n          isMultiple: true,\n        },\n        {\n          type: 'hierarchy3',\n          isMandatory: true,\n          isMultiple: true,\n        },\n        {\n          type: 'hierarchy4',\n          isMandatory: true,\n          isMultiple: true,\n        },\n        {\n          type: 'hierarchy5',\n          isMandatory: true,\n          isMultiple: true,\n        },\n        {\n          type: 'hierarchy6',\n          isMandatory: false,\n          isMultiple: true,\n        },\n        {\n          type: 'hierarchy7',\n          isMandatory: false,\n          isMultiple: true,\n        },\n        {\n          type: 'hierarchy8',\n          isMandatory: false,\n          isMultiple: true,\n        },\n      ],\n      // filteredData: {},\n      inventoryDc: 0,\n      onHandInventory: 0,\n      onOrderInventory: 0,\n      inTransitInventory: 0,\n      totalInventory: 0,\n      currentInventory: 0,\n      totalStores: 0,\n      selectedStores: 0,\n      disableSimBtn: true,\n      selectedView: 'Overview',\n      selectedSku: [],\n      selectedCustomGroup: [],\n      selectedStyleColor: [],\n      showExcludeStorePopup: false,\n      showPlanSavePopup: false,\n      TabTitles: ['Optimal'],\n      defaultActiveKey: 'Optimal',\n      comparisonData: [],\n      showCadence: false,\n      simulatedData: false,\n      comparisonRow: [],\n      status: 'pending',\n      md_level: 'week',\n      isDraftDisabled: false,\n      detailedTableData: {},\n      excludedRows: [],\n      isEdit: false,\n      planId: null,\n    };\n  }\n  detailedTableDataHandler = (data) => {\n    this.setState({ detailedTableData: data });\n  };\n  onFilterStyles = () => {\n    let { selectedSkuId, selectedCustomGroup, selectedStyleColor } = this.state;\n\n    this.setState({\n      selectedStyle: selectedSkuId ? selectedSkuId.value : 'all',\n    });\n    if (this.state.isEdit && selectedSkuId) {\n      this.getStyleColorData(selectedSkuId);\n      return;\n    }\n    if (this.state.isEdit && !selectedSkuId) {\n      //for all case we are gonna use markDownOptimization data for prevData, its already stored in analysisData reducer\n      return;\n    }\n    selectedSkuId && selectedSkuId.value\n      ? this.callAPISimulate(selectedSkuId.value)\n      : this.callAPISimulate();\n  };\n  selectedSkuHandler = (val) => {\n    this.setState({\n      // selectedStyle: val ? val.value : 'all',\n      selectedSkuId: val,\n      selectedCustomGroup: '',\n      selectedStyleColor: '',\n    });\n    // if (this.state.isEdit && val) {\n    //   this.getStyleColorData(val);\n    //   return;\n    // }\n    // if (this.state.isEdit && !val) {\n    //   //for all case we are gonna use markDownOptimization data for prevData, its already stored in analysisData reducer\n    //   return;\n    // }\n    // val && val.value ? this.callAPISimulate(val.value) : this.callAPISimulate();\n  };\n\n  selectedCustomGroupHandler = (val) =>\n    this.setState({ selectedCustomGroup: val, selectedStyleColor: '' });\n\n  selectedStyleColorHandler = (val) => this.setState({ selectedStyleColor: val });\n\n  comparisonCheckbox = (comparisonRowVal) => {\n    this.setState({ comparisonRow: comparisonRowVal });\n    // this.setState({ disableSimBtn: false });\n  };\n  onComparisonInputChange = (data) => {\n    let cadence = cloneDeep(this.state.overallCadenceData);\n    cadence[this.state.TabTitles.indexOf('Comparison')] = data;\n    let dataArray = [];\n    _.map(data, (item) => {\n      dataArray = [...dataArray, ...Object.values(item)];\n    });\n    this.setState({\n      overallCadenceData: cadence,\n    });\n    this.setState({ disableSimBtn: dataArray.includes('') ? true : false });\n  };\n  onUpdateMarkdownPercentage = (data, index) => {\n    if (this.state.cadenceConstraintsVal === 'overall') {\n      let data1 = cloneDeep(this.state.overallCadenceData);\n      data1[index] = data;\n      this.setState({\n        overallCadenceData: data1,\n        disableSimBtn: Object.values(data[0]).includes('') ? true : false,\n      });\n    } else {\n      let data1 = cloneDeep(this.state.skuLabelCadenceData);\n      data1[index] = data;\n      this.setState({\n        skuLabelCadenceData: data1,\n      });\n    }\n    // this.setState({ disableSimBtn: false });\n  };\n  // getComparsionHeader = (header) => {\n  //   if (this.state.cadenceConstraintsVal === 'sku' && header === 'Comparison') {\n  //     let optimalData = this.state.skuLabelCadenceData[0];\n  //     let options = optimalData.map((data) => {\n  //       return { label: data.SKU_Id, value: data.SKU_Id };\n  //     });\n  //     return (\n  //       <div className=\"row skuLabelStyle\">\n  //         <label className=\"skuLabel\">SKU/SKU Group</label>\n  //         <div className=\"col-md-2\">\n  //           <Select name=\"category\" options={options} />\n  //         </div>\n  //       </div>\n  //     );\n  //   }\n  //   return (\n  //     <div className=\"add-scenario-cont\">\n  //       <div className=\"row justify-content-center skuLabelStyle\">\n  //         <label className=\"font-size-14 markdown-percentage-heading \">Markdown Percentages</label>\n  //       </div>\n  //       <div className=\"abc\">\n  //         <button className=\"btn btn-primary mr-3\" onClick={this.addScenario}>\n  //           Add Scenario\n  //         </button>\n  //       </div>\n  //     </div>\n  //   );\n  // };\n  getCadenceData = (index) => {\n    if (this.state.cadenceConstraintsVal === 'overall') return this.state.overallCadenceData[index];\n    return this.state.skuLabelCadenceData[index];\n  };\n  // getTabTag = (tabTitle, index) => {\n  //   console.log('usedgettag');\n  //   if (tabTitle === 'Comparison') {\n  //     if (this.state.cadenceConstraintsVal === 'sku') {\n  //       return (\n  //         <div>\n  //           <ComparisonMetricTable\n  //             showCheckBoxComparsionTable={true}\n  //             data={this.props.comparisonData}\n  //           />\n  //         </div>\n  //       );\n  //     } else {\n  //       return (\n  //         <div>\n  //           <Download\n  //             data={this.state.overallCadenceData[this.state.overallCadenceData.length - 1]}\n  //           />\n  //           <ComparisonTable\n  //             comparisonCheckbox={(comparisonRowVal, index) =>\n  //               this.comparisonCheckbox(comparisonRowVal, index)\n  //             }\n  //             data={this.state.overallCadenceData[index]}\n  //             updatedData={this.onComparisonInputChange}\n  //           />\n  //         </div>\n  //       );\n  //     }\n  //   } else {\n  //     return (\n  //       <div className=\"cadencetable\">\n  //         <CreateCadence\n  //           overallCadenceData={this.getCadenceData(index)}\n  //           onUpdateMarkdownPercentage={this.onUpdateMarkdownPercentage}\n  //           addScenario={this.addScenario}\n  //           selectedSku={this.state.selectedSku}\n  //           key={tabTitle}\n  //           index={index}\n  //           activeTab={this.state.defaultActiveKey}\n  //         />\n  //       </div>\n  //     );\n  //   }\n  // };\n  checkTabIsCompasionAndSkuType = (tabTitle) => {\n    return this.state.cadenceConstraintsVal === 'sku' && tabTitle === 'Comparison';\n  };\n  isSKUType = (header) => {\n    return this.state.cadenceConstraintsVal === 'sku';\n  };\n  isNotComparsionTab = (tabTitle) => {\n    return tabTitle !== 'Comparison';\n  };\n  ////////////////not using start//////////////////////\n  // getTabTable = (activeTab, index) => {\n  //   if (this.isNotComparsionTab()) {\n  //     return (\n  //       <>\n  //         <div className=\"anu\">\n  //           <button className=\"btn btn-primary mr-3 mb-3 mt-4\" onClick={this.addScenario}>\n  //             Add Scenario\n  //           </button>\n  //         </div>\n  //         <GetMarkdownPercentageHeader />\n  //         <div className=\"cadencetable\">\n  //           <CreateCadence\n  //             overallCadenceData={this.getCadenceData(index)}\n  //             onUpdateMarkdownPercentage={this.onUpdateMarkdownPercentage}\n  //             addScenario={this.addScenario}\n  //             selectedSku={this.state.selectedSku}\n  //             key={activeTab}\n  //             index={index}\n  //             activeTab={this.state.defaultActiveKey}\n  //           />\n  //         </div>\n  //       </>\n  //     );\n  //   } else {\n  //     if (this.isSKUType(activeTab)) {\n  //       let optimalData = this.state.skuLabelCadenceData[0];\n  //       let options = optimalData.map((data) => {\n  //         return { label: data.SKU_Id, value: data.SKU_Id };\n  //       });\n  //       return (\n  //         <>\n  //           <div className=\"row skuLabelStyle\">\n  //             <label className=\"skuLabel\">SKU/SKU Group</label>\n  //             <div className=\"col-md-2\">\n  //               <Select name=\"category\" options={options} />\n  //             </div>\n  //           </div>\n  //           <ComparisonMetricTable\n  //             showCheckBoxComparsionTable={true}\n  //             data={this.props.comparisonData}\n  //           />\n  //         </>\n  //       );\n  //     } else {\n  //       return (\n  //         <ComparisonTable\n  //           comparisonCheckbox={(comparisonRowVal, index) =>\n  //             this.comparisonCheckbox(comparisonRowVal, index)\n  //           }\n  //           data={this.state.overallCadenceData[index]}\n  //           updatedData={this.onComparisonInputChange}\n  //         />\n  //       );\n  //     }\n  //   }\n  // };\n  ////////////////not using end//////////////////////\n  // getTab() {\n  //   return this.state.TabTitles.map((tabTitle, index) => {\n  //     return (\n  //       <Tab eventKey={tabTitle} title={tabTitle} key={tabTitle} style={{ textAlign: 'center' }}>\n  //         {this.getTabTable(tabTitle, index)}\n  //       </Tab>\n  //     );\n  //   });\n  // }\n  getComparsionHeader = (header) => {\n    if (this.state.cadenceConstraintsVal === 'sku' && header === 'Comparison') {\n      let optimalData = this.state.skuLabelCadenceData[0];\n      let options = optimalData.map((data) => {\n        return { label: data.SKU_Id, value: data.SKU_Id };\n      });\n      return (\n        <div className=\"row skuLabelStyle\">\n          <label className=\"skuLabel\">SKU/SKU Group</label>\n          <div className=\"col-md-2\">\n            <Select name=\"category\" options={options} />\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"add-scenario-cont\">\n        <div className=\"row justify-content-center\">\n          <label className=\"font-size-14 markdown-percentage-heading \">Markdown Percentages</label>\n        </div>\n        {this.state.isEdit ? null : (\n          <div className=\"addScenario\">\n            <button className=\"btn btn-primary mr-3\" onClick={this.addScenario}>\n              Add Scenario\n            </button>\n            {this.state.defaultActiveKey === 'Comparison' ? (\n              <Download\n                data2={this.comparisonDataHandler()} //Object.values(this.props.comparisonData)}\n                data2Header={comparisonColdef()}\n                data={this.state.overallCadenceData[this.state.overallCadenceData.length - 1]}\n                xlsx={true}\n                fileName=\"Comparison Metric Table\"\n              />\n            ) : null}\n          </div>\n        )}\n      </div>\n    );\n  };\n  comparisonDataHandler = () => {\n    let { overallCadenceData } = this.state;\n    let comparisonTabs = _.map(\n      overallCadenceData[overallCadenceData.length - 1],\n      (item) => item.scenarios\n    );\n    let comparisonData = _.cloneDeep(this.props.comparisonData);\n\n    _.map(Object.keys(comparisonData), (item) => {\n      if (!comparisonTabs.includes(item)) {\n        delete comparisonData[item];\n      }\n    });\n    return comparisonData;\n  };\n  getTabTag = (tabTitle, index) => {\n    if (tabTitle === 'Comparison') {\n      if (this.state.cadenceConstraintsVal === 'sku') {\n        return (\n          <div>\n            <ComparisonMetricTable\n              showCheckBoxComparsionTable={true}\n              data={this.comparisonDataHandler()} //this.props.comparisonData}\n            />\n          </div>\n        );\n      } else {\n        return (\n          <ComparisonTable\n            comparisonCheckbox={(comparisonRowVal, index) =>\n              this.comparisonCheckbox(comparisonRowVal, index)\n            }\n            data={this.state.overallCadenceData[index]}\n            updatedData={this.onComparisonInputChange}\n          />\n        );\n      }\n    } else if (tabTitle === 'edit') {\n      return (\n        <div className=\"cadencetable\">\n          <CreateCadence\n            overallCadenceData={\n              this.state.cadenceConstraintsVal === 'overall'\n                ? this.state.overallCadenceData[index]\n                : this.state.skuLabelCadenceData[index]\n            }\n            onUpdateMarkdownPercentage={this.onUpdateMarkdownPercentage}\n            selectedSku={this.state.selectedSku}\n            key={tabTitle}\n            index={index}\n            editPlanDetails={this.props.editPlanDetails}\n            activeTab=\"edit\"\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"cadencetable\">\n          <CreateCadence\n            overallCadenceData={\n              this.state.cadenceConstraintsVal === 'overall'\n                ? this.state.overallCadenceData[index]\n                : this.state.skuLabelCadenceData[index]\n            }\n            onUpdateMarkdownPercentage={this.onUpdateMarkdownPercentage}\n            addScenario={this.addScenario}\n            selectedSku={this.state.selectedSku}\n            key={tabTitle}\n            index={index}\n            editPlanDetails={this.props.editPlanDetails}\n            activeTab={this.state.defaultActiveKey}\n          />\n        </div>\n      );\n    }\n  };\n  getTab() {\n    return this.state.TabTitles.map((tabTitle, index) => {\n      return (\n        <Tab eventKey={tabTitle} title={tabTitle} key={tabTitle} style={{ textAlign: 'center' }}>\n          {this.getComparsionHeader(tabTitle)}\n          <div>{this.getTabTag(tabTitle, index)}</div>\n        </Tab>\n      );\n    });\n  }\n  onSelectTabs = (key) => {\n    let { simulatedCadenceData } = this.state;\n    this.setState(\n      {\n        defaultActiveKey: key,\n        disableSimBtn: true,\n        isDraftDisabled: true,\n        selectedStyle: 'all',\n        selectedSkuId: null,\n        overallCadenceData: _.cloneDeep(simulatedCadenceData), //reset edited input field data\n      },\n      () => {\n        if (this.state.defaultActiveKey !== 'Comparison') {\n          this.props.updateAnalysisData(\n            this.props.analysisData[this.state.defaultActiveKey],\n            this.state.defaultActiveKey\n          );\n          // this.callAPISimulate();\n        }\n      }\n    );\n  };\n  addTitleInTabs = () => {\n    //checl comparison is there or not if yes -1\n    let TabTitles = this.state.TabTitles;\n    let comparisonTitleIndex = TabTitles.indexOf('Comparison');\n    let newSceniosIndex = TabTitles.length;\n    let defaultSceniosTitle = `Scenario 0${TabTitles.length}`;\n    if (comparisonTitleIndex !== -1) {\n      //comparsion present\n      newSceniosIndex = comparisonTitleIndex;\n      defaultSceniosTitle = `Scenario 0${newSceniosIndex}`;\n      TabTitles.splice(newSceniosIndex, 0, defaultSceniosTitle);\n    } else {\n      TabTitles.splice(newSceniosIndex, 0, defaultSceniosTitle);\n    }\n    this.setState({\n      TabTitles,\n      defaultActiveKey: defaultSceniosTitle,\n    });\n    this.addContentsInTabs(newSceniosIndex, defaultSceniosTitle);\n  };\n  addContentsInTabs = (newSceniosIndex, defaultSceniosTitle) => {\n    let data =\n      this.state.cadenceConstraintsVal === 'overall'\n        ? this.state.overallCadenceData\n        : this.state.skuLabelCadenceData;\n    // );\n    let { simulatedCadenceData } = this.state;\n    data.splice(newSceniosIndex, 0, cloneDeep(data[0]));\n    simulatedCadenceData.splice(newSceniosIndex, 0, cloneDeep(data[0]));\n    let obj = {\n      skuLabelCadenceData: data,\n    };\n    if (this.state.cadenceConstraintsVal === 'overall') {\n      obj = {\n        overallCadenceData: cloneDeep(simulatedCadenceData), //reset edited input field data\n        simulatedCadenceData,\n      };\n    }\n    this.props.updateAnalysisData(\n      this.props.analysisData['Optimal'].simulateData,\n      defaultSceniosTitle\n    );\n    this.setState(obj);\n  };\n  addScenario = () => {\n    if (this.isTotalSceniosCreatedFive()) {\n      this.setState({\n        selectedSkuId: null,\n        selectedCustomGroup: null,\n        selectedStyleColor: null,\n        selectedStyle: 'all',\n      });\n      this.addTitleInTabs();\n      this.setState({ disableSimBtn: true, isDraftDisabled: true });\n      return;\n    }\n    toast.error(`Max 5 Scenarios can be created`, {\n      autoClose: 15000,\n      hideProgressBar: true,\n    });\n  };\n  isTotalSceniosCreatedFive = () => {\n    let totalScenariosCreated = this.state.TabTitles.filter((title) =>\n      title.startsWith('Scenario')\n    );\n    return totalScenariosCreated.length < 5;\n  };\n\n  resetCadence = () => {\n    this.setState({\n      TabTitles: ['Optimal'],\n      overallCadenceData: [],\n      simulatedData: false,\n      showCadence: false,\n      defaultActiveKey: 'Optimal',\n    });\n    this.resetComp();\n  };\n\n  validateMargin = (e) => {\n    if (\n      this.state.minTS < parseInt(this.state.marginVal) &&\n      this.state.maxTS > parseInt(this.state.marginVal)\n    ) {\n      return true;\n    }\n    let msg = _.isEmpty(this.state.marginVal)\n      ? 'Please enter Margin % value'\n      : 'Margin % value should be between 0 to 100';\n    toast.error(msg, {\n      autoClose: 15000,\n      hideProgressBar: true,\n    });\n    return false;\n  };\n  validateSellThrough = (e) => {\n    if (\n      this.state.minTS < parseInt(this.state.targetSellThroughVal) &&\n      this.state.maxTS > parseInt(this.state.targetSellThroughVal)\n    ) {\n      return true;\n    }\n    let msg = _.isEmpty(this.state.targetSellThroughVal)\n      ? 'Please enter Target Sell through % value'\n      : 'Target Sell through % value should be between 0 to 100';\n    toast.error(msg, {\n      autoClose: 15000,\n      hideProgressBar: true,\n    });\n    return false;\n  };\n  checkDateRange = () => {\n    if (\n      this.state.startDate &&\n      this.state.endDate &&\n      moment(new Date()).week() + 1 <= this.state.startDate.week() &&\n      moment(new Date()).add(13, 'weeks').week() >= this.state.endDate.week()\n    ) {\n      return true;\n    }\n    let msg = _.isEmpty(this.state.startDate)\n      ? 'Please enter Start Date'\n      : _.isEmpty(this.state.endDate)\n      ? 'Please enter End Date'\n      : 'Start week should be greater than current week and end date less than 13 weeks';\n    toast.error(msg, {\n      autoClose: 15000,\n      hideProgressBar: true,\n    });\n    return false;\n  };\n\n  generateCadence = () => {\n    // if (!this.validateSellThrough() || !this.validateMargin() || !this.checkDateRange()) {\n    //   return;\n    // }\n    this.resetCadence();\n    this.setState({\n      showCadence: false,\n      simulatedData: true,\n    });\n    let startWeek = this.state.startDate.week();\n    let endWeek = this.state.endDate.week();\n\n    let weeks = this.getWeekRange(startWeek, endWeek);\n    let payloafForProductCodes = cloneDeep(this.state.filteredData);\n\n    let request = cloneDeep(this.state.filteredData);\n    request.filters['product_codes'] = [];\n\n    let inputData = {\n      cadenceData: this.state.cadenceData,\n      inventorySelected: '',\n      storeSelected: '',\n      excludeStore: this.state.excludedStores,\n      sellThrough: this.state.targetSellThroughVal || '',\n      margin: this.state.marginVal || '',\n      markdownType: this.state.markdownTypeVal || '',\n      cadenceType: this.state.cadenceConstraintsVal || 'overall',\n      startDate: this.state.startDate.format('YYYY-MM-DD'),\n      endDate: this.state.endDate.format('YYYY-MM-DD'),\n      week: weeks,\n      totalInDc: this.state.totalInDc,\n      totalOnHand: this.state.totalOnHand,\n      totalOnOrder: this.state.totalOnOrder,\n      totalInTransit: this.state.totalInTransit,\n      stores: this.state.stores,\n      md_level: this.state.md_level,\n      md_level_no_range: weeks,\n      startWeek,\n      endWeek,\n    };\n\n    let saveCadenceRequest = { ...request, ...inputData };\n    this.setState({\n      saveCadenceRequest,\n    });\n    delete payloafForProductCodes['customStoreGroup'];\n    // delete payloafForProductCodes['product_codes'];\n\n    this.props\n      .fetchStyle(payloafForProductCodes.filters)\n      .then((res) => console.log(res, 'fetchress'));\n    this.props.fetchCadence(saveCadenceRequest);\n  };\n  checkComparsionDataPresent = (data) => {\n    return data.indexOf('Comparison') !== -1 ? true : false;\n  };\n  updateComparsionDataInTab = (tabTitles, firstSimulate) => {\n    let comparsionData = [];\n    let newComparisonData = [];\n    let activeKey = this.state.defaultActiveKey;\n    let cadenceData = _.cloneDeep(this.state.overallCadenceData);\n    let spliceIndex = firstSimulate ? cadenceData.length : cadenceData.length - 1;\n    let tabTitleForComparison = firstSimulate\n      ? ['Optimal']\n      : _.map(\n          cadenceData[cadenceData.length - 1],\n          (item, index) => index < cadenceData.length && item.scenarios\n        );\n    tabTitleForComparison.splice(activeKey.charAt(activeKey.length - 1), 0, activeKey);\n    tabTitleForComparison = _.uniq(tabTitleForComparison);\n    _.map(tabTitleForComparison, (item) => {\n      let findEle = _.find(\n        cadenceData,\n        (row, idx) => (item === 'Optimal' && idx === 0) || item.charAt(item.length - 1) == idx\n      );\n      if (findEle) {\n        let newObj = {\n          scenarios: item,\n          ...findEle[0],\n        };\n        newComparisonData.push(newObj);\n      }\n    });\n    cadenceData.splice(spliceIndex, 1, newComparisonData);\n\n    for (let i = 0; i < tabTitles.length - 1; i++) {\n      if (this.state.cadenceConstraintsVal === 'overall') {\n        // comparsionData.push({\n        //   scenarios: tabTitles[i],\n        //   ...cloneDeep(this.state.overallCadenceData[i][0]),\n        // });\n      } else {\n        let rows = cloneDeep(this.state.skuLabelCadenceData[i][0]);\n        delete rows['SKU ID'];\n        delete rows['MD Status'];\n        comparsionData.push({\n          scenarios: tabTitles[i],\n          ...rows,\n        });\n      }\n    }\n    let data = [];\n    let minusIndex = 0;\n    if (this.checkComparsionDataPresent(this.state.TabTitles)) {\n      minusIndex = 1;\n    }\n    if (this.state.cadenceConstraintsVal === 'overall') {\n      // data = cloneDeep(this.state.overallCadenceData);\n      // data.splice(data.length - minusIndex, 1, comparsionData);\n      this.setState({\n        overallCadenceData: cadenceData,\n        simulatedCadenceData: _.cloneDeep(cadenceData), //reset edited input field data\n        simulatedData: true,\n      });\n    } else {\n      data = cloneDeep(this.state.skuLabelCadenceData);\n      data.splice(data.length - minusIndex, 1, comparsionData);\n      this.setState({\n        skuLabelCadenceData: data,\n        simulatedData: true,\n      });\n    }\n  };\n  resetComp = () => {\n    this.setState({\n      comparisonData: {},\n    });\n  };\n  onSimulate = async () => {\n    let res = await this.callAPISimulate();\n    if (!res.status) return;\n\n    //adding comparsion title\n    let tabTitles = cloneDeep(this.state.TabTitles);\n    let firstSimulate = false;\n    this.setState({\n      isDraftDisabled: false,\n      selectedSkuId: null,\n      selectedCustomGroup: null,\n      selectedStyleColor: null,\n    });\n    if (this.state.TabTitles.indexOf('Comparison') === -1) {\n      firstSimulate = true;\n      let array = [...this.state.TabTitles, 'Comparison'];\n      tabTitles = array;\n      this.setState({\n        TabTitles: array,\n        selectedStyle: 'all',\n        selectedSkuId: null,\n        selectedCustomGroup: null,\n        selectedStyleColor: null,\n        // isDraftDisabled: false,\n      });\n    }\n    this.updateComparsionDataInTab(tabTitles, firstSimulate);\n    // this.callAPISimulate();\n    this.setState({ disableSimBtn: true });\n    this.resetComp();\n  };\n  getStyleColorData = async (skus) => {\n    let styleGroup = skus.value.split('-');\n\n    let res = await this.props.fetchStyleColorData(\n      {\n        promo_code: this.state.planId,\n        // style_id: styleGroup[styleGroup.length - 2], //1,\n        style_group: styleGroup[styleGroup.length - 1], //65,\n        customStyleGroup: _.isEmpty(this.state.selectedCustomGroup)\n          ? ''\n          : this.state.selectedCustomGroup.value,\n        styleColor: _.isEmpty(this.state.selectedStyleColor)\n          ? ''\n          : this.state.selectedStyleColor.value,\n      },\n      this.state.defaultActiveKey\n    );\n    if (\n      !_.isEqual(this.state.simulatedCadenceData, this.state.overallCadenceData)\n      // &&\n      // skus &&\n      // skus.value &&\n      // skus.value !== this.state.selectedStyle\n    ) {\n      this.onEditSimulate(skus);\n    }\n  };\n  onEditSimulate = async (skus) => {\n    let array = this.getCadenceData(0),\n      skusCalc = skus && skus.value ? skus.value : this.state.selectedStyle;\n    let dataObj = this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj;\n    let scenario = Object.keys(dataObj.analysisData);\n    let analysisDataObj = dataObj.analysisData[scenario[0]];\n    if (_.isEmpty(dataObj)) return;\n    let startWeek = dataObj.startWeek;\n    let endWeek = dataObj.endWeek;\n    let weeks = this.getWeekRange(startWeek, endWeek);\n\n    let currentWeek = this.props.editPlanDetails[0] && this.props.editPlanDetails[0].current_week;\n    let fiscalWeekList = this.props.editPlanDetails[0] && this.props.editPlanDetails[0].weeks_list;\n\n    let scenario_data_old = {};\n    let scenario_data_new = {},\n      sell_through_old_overall = {};\n\n    _.map(Object.keys(array[0]), (item, index) => {\n      if (item.replace('W', '') <= currentWeek) {\n        scenario_data_old[item] = array[0][item];\n        sell_through_old_overall[item] =\n          dataObj.analysisData[scenario[0]].overview.sellThrough[index];\n      }\n\n      if (item.replace('W', '') > currentWeek) {\n        scenario_data_new[item] = array[0][item];\n      }\n    });\n    let sell_through_old_sku = [];\n    if (!_.isEmpty(Object.keys(scenario_data_old))) {\n      _.map(analysisDataObj.detailed.data, (item) => {\n        let newObj = {};\n        _.map(fiscalWeekList, (weekNum) => {\n          if (weekNum <= currentWeek) {\n            newObj[`W${weekNum}`] = item[`w${weekNum}sellThrough`];\n          }\n        });\n        newObj.SKU_Id = item.SKU_Id;\n        sell_through_old_sku.push(newObj);\n      });\n    }\n\n    let inputData = {\n      filters: {\n        hierarchy1: this.props.selectedHierarchy1,\n        hierarchy2: this.props.selectedHierarchy2,\n        hierarchy3: this.props.selectedHierarchy3,\n        hierarchy4: this.props.selectedHierarchy4,\n        hierarchy5: this.props.selectedHierarchy5,\n        hierarchy6: this.props.selectedHierarchy6,\n        hierarchy7: this.props.selectedHierarchy7,\n        hierarchy8: this.props.selectedHierarchy8,\n        customStyleGroup: this.props.selectedCustomStyleGroup,\n        customStoreGroup: this.props.selectedCustomStoreGroup,\n        tiers: this.props.selectedStores,\n      },\n\n      inventorySelected: '',\n      storeSelected: '',\n      sellThrough: dataObj.sellThrough || '',\n      margin: dataObj.margin || '',\n      markdownType: '',\n      cadenceType: this.state.cadenceConstraintsVal || 'overall',\n      scenario: 'true',\n      cadenceData: this.state.cadenceData,\n      startDate: dataObj.startDate,\n      endDate: dataObj.endDate,\n      week: weeks,\n\n      totalInDc: dataObj.totalInDc,\n      totalOnHand: dataObj.totalOnHand,\n      totalOnOrder: dataObj.totalOnOrder,\n      totalInTransit: dataObj.totalInTransit,\n      stores: dataObj.stores,\n      md_level: dataObj.md_level,\n      md_level_no_range: dataObj.md_level_no_range,\n      startWeek,\n      endWeek,\n      sell_through_old_sku,\n      sell_through_old_overall: _.isEmpty(Object.keys(sell_through_old_overall))\n        ? []\n        : [sell_through_old_overall],\n      scenario_data_old: _.isEmpty(Object.keys(scenario_data_old)) ? [] : [scenario_data_old],\n      scenario_data_new: [scenario_data_new],\n      styleGroup: skusCalc,\n      customStyleGroup: _.isEmpty(this.state.selectedCustomGroup)\n        ? ''\n        : this.state.selectedCustomGroup.value,\n      styleColor: _.isEmpty(this.state.selectedStyleColor)\n        ? ''\n        : this.state.selectedStyleColor.value,\n      compressedData: {\n        saveData: dataObj.simulatedData[scenario[0]],\n      },\n    };\n\n    let res = await this.props.editSimulate(inputData, this.state.defaultActiveKey);\n    if (!res.status) return;\n    if (!_.isEqual(this.state.selectedStyle, skusCalc)) {\n      this.setState({\n        selectedStyle: skusCalc,\n        selectedSkuId: skusCalc === 'all' ? null : skus,\n      });\n    }\n    this.setState({ disableSimBtn: true, isDraftDisabled: false });\n  };\n\n  callAPISimulate = async (skus = 'all') => {\n    let response = [];\n    let index = this.state.TabTitles.indexOf(this.state.defaultActiveKey);\n    let array = [];\n\n    if (this.state.defaultActiveKey === 'Comparison') {\n      let cadence =\n        this.state.cadenceConstraintsVal === 'overall'\n          ? cloneDeep(this.state.overallCadenceData)\n          : cloneDeep(this.state.skuLabelCadenceData);\n      let lastComparisonArray = cadence[cadence.length - 1];\n      _.map(lastComparisonArray, (item) => {\n        let scenios = cloneDeep(item);\n        let index =\n          item.scenarios === 'Optimal' ? 0 : item.scenarios.charAt(item.scenarios.length - 1);\n        delete scenios.scenarios;\n        cadence[index] = [scenios];\n      });\n      let data = cadence[this.state.TabTitles.indexOf('Comparison')];\n      for (let i = 1; i < data.length; i++) {\n        let row = cloneDeep(data[i]);\n        let scenarioName = row.scenarios;\n        delete row.scenarios;\n\n        let res = await this.props.simulate(\n          {\n            csv_names: this.props.csv_names,\n            // skus: 'all',\n            styleGroup: 'all',\n            customStyleGroup: '',\n            styleColor: '',\n            cadenceType: this.state.cadenceConstraintsVal,\n            scenario: 'true',\n            scenario_data: [row],\n          },\n          this.state.defaultActiveKey,\n          scenarioName\n        );\n        response = _.isEmpty(response) || response.status ? res : response;\n      }\n      if (!response.status) return response;\n\n      this.setState({\n        overallCadenceData: cadence,\n        simulatedCadenceData: _.cloneDeep(cadence), //reset edited input field data\n      });\n      return response;\n    } else {\n      // let cadence =\n      //   this.state.cadenceConstraintsVal === 'overall'\n      //     ? cloneDeep(this.state.overallCadenceData)\n      //     : cloneDeep(this.state.skuLabelCadenceData);\n\n      // // let lastComparisonArray = cadence[cadence.length - 1];\n\n      array = this.getCadenceData(index);\n      let res = await this.props.simulate(\n        {\n          csv_names: this.props.csv_names,\n          // skus,\n\n          styleGroup: skus,\n          customStyleGroup: _.isEmpty(this.state.selectedCustomGroup)\n            ? ''\n            : this.state.selectedCustomGroup.value,\n          styleColor: _.isEmpty(this.state.selectedStyleColor)\n            ? ''\n            : this.state.selectedStyleColor.value,\n          cadenceType: this.state.cadenceConstraintsVal,\n          // isEdit: this.state.isEdit && skus === 'all' ? true : false,\n          scenario: 'true',\n          scenario_data: array,\n        },\n        this.state.defaultActiveKey\n      );\n      response = res;\n    }\n    return response;\n  };\n  changedView = (view) => {\n    this.setState({ selectedView: view });\n  };\n  onExcludeStores = () => {\n    this.setState({ showExcludeStorePopup: true });\n  };\n  showPlanSavePopup = () => {\n    this.setState({ showPlanSavePopup: false });\n  };\n  excludeStoreValHandler = (selectedRowId = [], selectedRows) => {\n    let rowIds = Object.values(selectedRowId);\n    let totalStoresData = cloneDeep(this.props.inventoryInfoData.store_data);\n    let totalStoreIds = totalStoresData.map((obj) => obj.store_code);\n    let totalExcludedStores = rowIds.map((obj) => obj.store_code);\n    for (let i = 0; i < totalExcludedStores.length; i++) {\n      totalStoreIds.splice(totalStoreIds.indexOf(totalExcludedStores[i]), 1);\n    }\n    let tempObj = {\n      inDc: 0,\n      onHand: 0,\n      onOrder: 0,\n      inTransit: 0,\n      stores: 0,\n    };\n    rowIds.forEach((obj, index) => {\n      tempObj.inDc += obj.inventory_data.inventory_in_dc;\n      tempObj.onHand += obj.inventory_data.inventory_on_hand;\n      tempObj.onOrder += obj.inventory_data.inventory_on_order;\n      tempObj.inTransit += obj.inventory_data.inventory_in_transit;\n      tempObj.stores = index + 1;\n      // return a.inventory_on_hand + b.inventory_on_hand;\n    });\n    let {\n      inventory_in_dc,\n      inventory_in_transit,\n      inventory_on_hand,\n      inventory_on_order,\n    } = this.props.inventoryInfoData.totalInv;\n    // let DC = inventory_in_dc - tempObj.inDc;\n    this.setState({\n      totalInDc: inventory_in_dc,\n      totalOnHand: inventory_on_hand - tempObj.onHand,\n      totalOnOrder: inventory_on_order - tempObj.onOrder,\n      totalInTransit: inventory_in_transit - tempObj.inTransit,\n      selectedStores: this.props.inventoryInfoData.totalStore - tempObj.stores,\n      stores: totalStoreIds,\n      excludedRows: selectedRows,\n    });\n  };\n  showTablePopup = () => {\n    this.setState({ showExcludeStorePopup: false });\n  };\n  getWeekRange = (startWeek, endWeek) => {\n    let arr = [];\n    for (let i = startWeek; i <= endWeek; i++) {\n      arr.push(i);\n    }\n    return arr;\n  };\n\n  resetInvStrategy = () => {\n    this.setState({\n      targetSellThroughVal: '',\n      marginVal: '',\n      excludeStore: [],\n      markdownType: '',\n      cadenceType: 'overall',\n      startDate: null,\n      endDate: null,\n      week: '',\n      selectedStores: 0,\n      totalInDc: 0,\n      totalOnHand: 0,\n      totalOnOrder: 0,\n      totalInTransit: 0,\n      totalStores: 0,\n      stores: [],\n      md_level: this.state.md_level,\n      md_level_no_range: '',\n    });\n    this.resetCadence();\n  };\n\n  validateFilters = () => {\n    return (\n      this.props.selectedHierarchy1 &&\n      this.props.selectedHierarchy2.length &&\n      this.props.selectedHierarchy3.length &&\n      this.props.selectedHierarchy4.length &&\n      this.props.selectedHierarchy5.length &&\n      this.props.selectedStores.length\n    );\n  };\n  onReset = () => {\n    this.props.onResetInventoryInfo();\n    this.setState({ filteredData: null, excludedRows: [] }, () => {\n      this.resetInvStrategy();\n    });\n  };\n\n  onFilter = () => {\n    if (!this.validateFilters()) {\n      toast.error(`Please select mandatory filters`, {\n        autoClose: 15000,\n        hideProgressBar: true,\n      });\n      return;\n    }\n    // let startWeek = this.state.startDate.week();\n    // let endWeek = this.state.endDate.week();\n    // let weeks = this.getWeekRange(startWeek, endWeek);\n\n    let payload = {\n      filters: {\n        hierarchy1: this.props.selectedHierarchy1,\n        hierarchy2: this.props.selectedHierarchy2,\n        hierarchy3: this.props.selectedHierarchy3,\n        hierarchy4: this.props.selectedHierarchy4,\n        hierarchy5: this.props.selectedHierarchy5,\n        hierarchy6: this.props.selectedHierarchy6,\n        hierarchy7: this.props.selectedHierarchy7,\n        hierarchy8: this.props.selectedHierarchy8,\n        customStyleGroup: this.props.selectedCustomStyleGroup,\n        customStoreGroup: this.props.selectedCustomStoreGroup,\n        tiers: this.props.selectedStores,\n      },\n      inventorySelected: '',\n      storeSelected: '',\n      excludeStore: '',\n      sellThrough: '',\n      margin: '',\n      markdownType: '',\n      cadenceType: 'overall',\n      page: this.state.currentPage,\n      offset: this.state.offset,\n    };\n    if (this.state.filteredData && _.isEqual(payload.filters, this.state.filteredData.filters)) {\n      return;\n    }\n    this.resetInvStrategy();\n    this.setState({\n      filteredData: payload,\n      excludedRows: [],\n    });\n    this.props.fetchInventoryInfo(payload);\n  };\n\n  constraintsCadenceHandler = (value) => {\n    this.setState({\n      cadenceConstraintsVal: value,\n      showCadence: false,\n      TabTitles: ['Optimal'],\n      defaultActiveKey: 'Optimal',\n    });\n  };\n  markdownTypeHandler = (val) => {\n    this.setState({\n      markdownTypeVal: val,\n    });\n  };\n  targetSellThrough = (e) => {\n    this.setState({\n      targetSellThroughVal: e.target.value,\n    });\n  };\n  marginValueHandler = (e) => {\n    this.setState({\n      marginVal: e.target.value,\n    });\n  };\n  componentDidMount() {\n    this.props.updateSidebar('/vis/Markdown/create-markdown');\n    if (this.props.location.state && this.props.location.state.planId) {\n      let { isEdit, planId } = this.props.location.state;\n      this.setState({ isEdit, planId });\n      this.props.fetchEditPlanData({ promo_code: planId });\n      // .then((res) => {\n      //   let dataObj = res[0] && res[0].request_obj;\n      //   if (_.isEmpty(dataObj)) return;\n      //   let startWeek = dataObj.startWeek;\n      //   let endWeek = dataObj.endWeek;\n      //   let weeks = this.getWeekRange(startWeek, endWeek);\n      //   let inputData = {\n      //     filters: {\n      //       hierarchy1: this.props.selectedHierarchy1,\n      //       hierarchy2: this.props.selectedHierarchy2,\n      //       hierarchy3: this.props.selectedHierarchy3,\n      //       hierarchy4: this.props.selectedHierarchy4,\n      //       hierarchy5: this.props.selectedHierarchy5,\n      //       hierarchy6: this.props.selectedHierarchy6,\n      //       hierarchy7: this.props.selectedHierarchy7,\n      //       hierarchy8: this.props.selectedHierarchy8,\n      //       tiers: this.props.selectedStores,\n      //     },\n\n      //     inventorySelected: '',\n      //     storeSelected: '',\n      //     sellThrough: dataObj.sellThrough || '',\n      //     margin: dataObj.margin || '',\n      //     markdownType: '',\n      //     cadenceType: this.state.cadenceConstraintsVal || 'overall',\n      //     cadenceData: this.state.cadenceData,\n      //     startDate: dataObj.startDate,\n      //     endDate: dataObj.endDate,\n      //     week: weeks,\n\n      //     totalInDc: dataObj.totalInDc,\n      //     totalOnHand: dataObj.totalOnHand,\n      //     totalOnOrder: dataObj.totalOnOrder,\n      //     totalInTransit: dataObj.totalInTransit,\n      //     stores: dataObj.stores,\n      //     md_level: dataObj.md_level,\n      //     md_level_no_range: dataObj.md_level_no_range,\n      //     startWeek,\n      //     endWeek,\n      //   };\n      //   this.props.fetchSkuAndCsv(inputData);\n      //   console.log(inputData, 'fetchSkuAndCsv', dataObj);\n      // });\n    }\n\n    this.props.savedStatusFalse(false);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.savedStatus) {\n      this.props.updateSidebar('/vis/Markdown/draftStatus');\n      if (this.state.status === 'draft') {\n        this.props.history.push('/vis/Markdown/draftStatus');\n      } else {\n        this.props.history.push({\n          pathname: '/vis/Markdown/draftStatus',\n          state: { tab: 'status' },\n        });\n      }\n      return;\n    }\n    if (this.props.cadenceData !== prevProps.cadenceData) {\n      this.setState({\n        showCadence: true,\n        simulatedData: true,\n      });\n      this.state.cadenceConstraintsVal === 'overall' &&\n        this.setState({\n          overallCadenceData: cloneDeep(this.props.cadenceData),\n          simulatedCadenceData: cloneDeep(this.props.cadenceData), //reset edited input field data\n        });\n      this.state.cadenceConstraintsVal === 'sku' &&\n        this.setState({\n          skuLabelCadenceData: cloneDeep(this.props.cadenceData),\n        });\n    }\n\n    if (!_.isEqual(prevProps.inventoryInfoData, this.props.inventoryInfoData)) {\n      let storeIds = [];\n      if (this.props.inventoryInfoData && this.props.inventoryInfoData.store_data) {\n        storeIds = cloneDeep(this.props.inventoryInfoData.store_data).map((obj) => obj.store_code);\n      }\n      let totalInv = this.props.inventoryInfoData && this.props.inventoryInfoData.totalInv;\n      let {\n        inventory_in_dc,\n        inventory_in_transit,\n        inventory_on_hand,\n        inventory_on_order,\n      } = totalInv;\n      let totalStores = this.props.inventoryInfoData && this.props.inventoryInfoData.totalStore;\n      this.setState({\n        stores: storeIds,\n        totalInventory: totalInv,\n        currentInventory: totalInv,\n        selectedStores: totalStores,\n        totalStores: totalStores,\n        actualInv: totalInv,\n        totalInDc: inventory_in_dc < 0 ? 0 : inventory_in_dc,\n        totalOnHand: inventory_on_hand || 0,\n        totalOnOrder: inventory_on_order || 0,\n        totalInTransit: inventory_in_transit || 0,\n      });\n    }\n  }\n  componentWillUnmount() {\n    this.props.onResetEditedInfo();\n  }\n  disabledButtonHandler = (from) => {\n    let { overallCadenceData, defaultActiveKey, TabTitles } = this.state;\n\n    if (from === 'edit') {\n      return _.isEmpty(this.props.editMarkdownAnalysisGraphData) ? true : false;\n    }\n    if (defaultActiveKey !== 'Comparison') {\n      if (defaultActiveKey === 'Optimal') return false;\n      if (!TabTitles.includes('Comparison')) return true;\n      if (TabTitles.includes('Comparison')) {\n        let tabs = _.map(\n          overallCadenceData[overallCadenceData.length - 1],\n          (item) => item.scenarios\n        );\n        return tabs.includes(defaultActiveKey) ? false : true;\n      }\n    }\n    return from === 'approved'\n      ? this.state.comparisonRow.length !== 1\n      : this.state.comparisonRow.length <= 0;\n  };\n  onSaveEdit = (planName, sceniosNames) => {\n    let index = this.getActiveIndex();\n    let editDetails = this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj;\n    let startWeek = editDetails.startWeek;\n    let endWeek = editDetails.endWeek;\n    let weeks = this.getWeekRange(startWeek, endWeek);\n    let obj = {\n      filters: {\n        hierarchy1: this.props.selectedHierarchy1,\n        hierarchy2: this.props.selectedHierarchy2,\n        hierarchy3: this.props.selectedHierarchy3,\n        hierarchy4: this.props.selectedHierarchy4,\n        hierarchy5: this.props.selectedHierarchy5,\n        hierarchy6: this.props.selectedHierarchy6,\n        hierarchy7: this.props.selectedHierarchy7,\n        hierarchy8: this.props.selectedHierarchy8,\n        customStyleGroup: this.props.selectedCustomStyleGroup,\n        customStoreGroup: this.props.selectedCustomStoreGroup,\n        tiers: this.props.selectedStores,\n      },\n      title: editDetails.title,\n      status: this.state.status,\n      promo_code: this.state.planId,\n      inventorySelected: '',\n      storeSelected: '',\n      sellThrough: editDetails.sellThrough,\n      margin: editDetails.margin || '',\n      markdownType: '',\n      cadenceType: this.state.cadenceConstraintsVal || 'overall',\n      // cadenceData: this.props.editAnalysisData,\n      startDate: editDetails.startDate,\n      endDate: editDetails.endDate,\n      week: weeks,\n      totalInDc: editDetails.totalInDc,\n      totalOnHand: editDetails.totalOnHand,\n      totalOnOrder: editDetails.totalOnOrder,\n      totalInTransit: editDetails.totalInTransit,\n      stores: editDetails.stores,\n      md_level: editDetails.md_level,\n      md_level_no_range: editDetails.md_level_no_range,\n      startWeek,\n      endWeek,\n      simulatedData: {},\n      cadenceData: {},\n      analysisData: {},\n      csv_names: editDetails.csv_names,\n      skus: this.props.skuData,\n    };\n    if (this.state.defaultActiveKey === 'Comparison') {\n      sceniosNames.forEach((sceniosObject) => {\n        console.log(this.props.analysisData, 'savevev');\n        let temp = sceniosObject.value || sceniosObject.scenarios;\n        obj.simulatedData[temp] = this.props.analysisData[sceniosObject.scenarios]\n          ? this.props.analysisData[sceniosObject.scenarios].saveData\n          : [];\n        if (sceniosObject.scenarios === 'Optimal') {\n          obj.analysisData[temp] = this.props.analysisData[sceniosObject.scenarios]\n            ? this.props.analysisData[sceniosObject.scenarios].simulateData\n            : [];\n        } else {\n          const { analysisTabledata, detailed, overview } = this.props.analysisData[\n            sceniosObject.scenarios\n          ];\n          obj.analysisData[temp] = { analysisTabledata, detailed, overview };\n        }\n        delete sceniosObject.scenarios;\n        delete sceniosObject.label;\n        delete sceniosObject.value;\n        obj.cadenceData[temp] = [sceniosObject];\n      });\n    } else {\n      let key = sceniosNames[0].value || this.state.defaultActiveKey;\n      obj.simulatedData[key] = this.props.analysisData[this.state.defaultActiveKey]\n        ? this.props.analysisData[this.state.defaultActiveKey].saveData\n        : [];\n      if (this.state.defaultActiveKey === 'Optimal') {\n        obj.analysisData[key] = this.props.editMarkdownAnalysisGraphData;\n      } else {\n        const { analysisTabledata, detailed, overview } = this.props.analysisData[\n          this.state.defaultActiveKey\n        ];\n        obj.analysisData[key] = { analysisTabledata, detailed, overview };\n        console.log(obj.analysisData[key], 'obj.analysisData[key]');\n      }\n      let data =\n        this.state.cadenceConstraintsVal === 'overall'\n          ? this.state.overallCadenceData[index]\n          : this.state.skuLabelCadenceData[index];\n      obj.cadenceData[key] = data;\n    }\n    this.setState({\n      showPlanSavePopup: false,\n    });\n    this.props.saveData(obj);\n  };\n  onSave = (planName, sceniosNames) => {\n    let index = this.getActiveIndex();\n    let obj = cloneDeep(this.state.saveCadenceRequest);\n    obj.title = planName;\n    obj.status = this.state.status;\n    obj.cadenceData = {};\n    obj.simulatedData = {};\n    obj.sellThrough = this.state.targetSellThroughVal;\n    obj.analysisData = {};\n    obj.csv_names = this.props.csv_names;\n    obj.skus = this.props.skuData;\n\n    if (this.state.defaultActiveKey === 'Comparison') {\n      sceniosNames.forEach((sceniosObject) => {\n        let temp = sceniosObject.value || sceniosObject.scenarios;\n        obj.simulatedData[temp] = this.props.analysisData[sceniosObject.scenarios]\n          ? this.props.analysisData[sceniosObject.scenarios].saveData\n          : [];\n        if (sceniosObject.scenarios === 'Optimal') {\n          obj.analysisData[temp] = this.props.analysisData[sceniosObject.scenarios]\n            ? this.props.analysisData[sceniosObject.scenarios].simulateData\n            : [];\n        } else {\n          const { analysisTabledata, detailed, overview } = this.props.analysisData[\n            sceniosObject.scenarios\n          ];\n          obj.analysisData[temp] = { analysisTabledata, detailed, overview };\n        }\n        delete sceniosObject.scenarios;\n        delete sceniosObject.label;\n        delete sceniosObject.value;\n        obj.cadenceData[temp] = [sceniosObject];\n      });\n    } else {\n      // if (this.state.defaultActiveKey === 'Optimal') {\n      //   await this.props.fetchCadence(this.state.saveCadenceRequest);\n      // } else {\n      // await this.callAPISimulate();\n      // let index = this.state.TabTitles.indexOf(this.state.defaultActiveKey);\n      // let array = this.getCadenceData(index);\n      // debugger;\n      // this.props.simulate(\n      //   {\n      //     csv_names: this.props.csv_names,\n      //     skus: 'all',\n      //     cadenceType: this.state.cadenceConstraintsVal,\n      //     scenario: 'true',\n      //     scenario_data: array,\n      //   },\n      //   this.state.defaultActiveKey\n      // );\n      // }\n      let key = sceniosNames[0].value || this.state.defaultActiveKey;\n      obj.simulatedData[key] = this.props.analysisData[this.state.defaultActiveKey]\n        ? this.props.analysisData[this.state.defaultActiveKey].saveData\n        : [];\n      if (this.state.defaultActiveKey === 'Optimal') {\n        // let analysis = this.props.analysisData[this.state.defaultActiveKey];\n        obj.analysisData[key] = this.props.markdownAnalysisGraphData;\n        // ? this.props.analysisData[this.state.defaultActiveKey].simulateData\n        //   ? this.props.analysisData[this.state.defaultActiveKey].simulateData\n        //   : {\n        //       analysisTabledata: analysis.analysisTabledata,\n        //       detailed: analysis.detailed,\n        //       overview: analysis.overview,\n        //     }\n        // : [];\n      } else {\n        const { analysisTabledata, detailed, overview } = this.props.analysisData[\n          this.state.defaultActiveKey\n        ];\n        obj.analysisData[key] = { analysisTabledata, detailed, overview };\n      }\n      let data =\n        this.state.cadenceConstraintsVal === 'overall'\n          ? this.state.overallCadenceData[index]\n          : this.state.skuLabelCadenceData[index];\n      obj.cadenceData[key] = data;\n    }\n    obj.startDate = moment(this.state.startDate).format('YYYY-MM-DD');\n    obj.endDate = moment(this.state.endDate).format('YYYY-MM-DD');\n    this.setState({\n      showPlanSavePopup: false,\n    });\n\n    this.props.saveData(obj);\n  };\n  getActiveIndex = () => {\n    return this.state.TabTitles.indexOf(this.state.defaultActiveKey);\n  };\n  onDatesChange = ({ startDate, endDate }) => {\n    // let startDate = moment(dates.startDate).format('YYYY-MM-DD');\n    // let endDate = moment(dates.endDate).format('YYYY-MM-DD');\n    this.setState({\n      startDate,\n      endDate,\n    });\n  };\n  render() {\n    const { minTS, maxTS, minMargin, maxMargin } = this.state;\n    let keyName = this.state.isEdit ? 'analysistabledata' : 'analysisTabledata';\n    return (\n      <LoadingOverlay\n        loader={this.props.getOverlayLoaderState}\n        spinner\n        // text={this.props.getOverlayLoaderText}\n      >\n        <div className=\"createMd pl-2 pr-2 create-md-padding\">\n          <div className=\"card mb-4\">\n            <div>\n              <h4 className=\"font-size-14  pad-10 markdown-heading\">\n                MarkSmart /\n                <span className=\"font-bold color-blue\">\n                  {this.state.isEdit ? 'Edit' : 'Create'} Markdown\n                </span>\n              </h4>\n            </div>\n            <hr\n              className=\"mb-2\"\n              style={{\n                marginTop: '-4px',\n              }}\n            />\n            {/* <FormikFilter> */}\n            <Filters\n              customStyleGroups\n              customStoreGroup\n              hierarchy={this.state.filters}\n              onFilter={() => this.onFilter()}\n              stores\n              onReset={this.onReset}\n              allowInactiveProducts={true}\n              isEdit={this.state.isEdit}\n            />\n            {/* </FormikFilter> */}\n            {/* <Filters filters={this.state.filters} onFilter={() => this.onFilter()} /> */}\n            <hr className=\"dotted-line\"></hr>\n            <InventoryInfo\n              editPlanDetails={this.props.editPlanDetails}\n              isEdit={this.state.isEdit}\n              inventoryDc={this.state.inventoryDc}\n              onHandInventory={this.state.onHandInventory}\n              onOrderInventory={this.state.onOrderInventory}\n              inTransitInventory={this.state.inTransitInventory}\n              onExcludeStores={this.onExcludeStores}\n              totalInDc={this.state.totalInDc}\n              totalOnHand={this.state.totalOnHand}\n              totalOnOrder={this.state.totalOnOrder}\n              totalInTransit={this.state.totalInTransit}\n              // totalInventory={this.state.totalInventory}\n              // currentInventory={this.state.currentInventory}\n              totalStores={this.state.totalStores}\n              selectedStores={this.state.selectedStores}\n            />\n            <hr className=\"dotted-line\"></hr>\n            <Constraints\n              minTS={minTS}\n              maxTS={maxTS}\n              editPlanDetails={this.props.editPlanDetails}\n              // validateSellThrough={this.validateSellThrough}\n              startDate={this.state.startDate}\n              endDate={this.state.endDate}\n              minMargin={minMargin}\n              maxMargin={maxMargin}\n              marginVal={this.state.marginVal}\n              targetSellThroughVal={this.state.targetSellThroughVal}\n              markdownTypeHandler={this.markdownTypeHandler}\n              marginValueHandler={this.marginValueHandler}\n              markdownTypeVal={this.state.markdownTypeVal}\n              targetSellThrough={this.targetSellThrough}\n              onDatesChange={this.onDatesChange}\n              constraintsCadenceHandler={this.constraintsCadenceHandler}\n              cadenceConstraintsVal={this.state.cadenceConstraintsVal}\n              isEdit={this.state.isEdit}\n            />\n            {this.state.isEdit ? (\n              <div className=\"mt-4 mb-3\"></div>\n            ) : (\n              <>\n                <hr className=\"dotted-line\"></hr>\n                <div className=\"cadencebtn\">\n                  <Button disabled={!this.state.totalStores} onClick={this.generateCadence}>\n                    Generate Cadence\n                  </Button>\n                </div>{' '}\n              </>\n            )}\n          </div>\n\n          {this.state.showCadence &&\n            (!!this.state.overallCadenceData.length || !!this.state.skuLabelCadenceData.length) && (\n              <div className=\"card mb-4\">\n                {this.state.isEdit ? (\n                  <>\n                    {this.getComparsionHeader('edit')}\n                    <div>{this.getTabTag('edit', 0)}</div>\n                  </>\n                ) : (\n                  <Tabs\n                    activeKey={this.state.defaultActiveKey}\n                    transition={false}\n                    id=\"noanim-tab-example\"\n                    onSelect={this.onSelectTabs}>\n                    {this.getTab()}\n                  </Tabs>\n                )}\n\n                <div className=\"simulatebtn\">\n                  {this.state.defaultActiveKey !== 'Optimal' && (\n                    <button\n                      className=\"btn btn-primary\"\n                      disabled={this.state.disableSimBtn}\n                      onClick={this.onSimulate}>\n                      Simulate\n                    </button>\n                  )}\n                  {this.state.isEdit && (\n                    <button\n                      className=\"btn btn-primary\"\n                      disabled={this.state.disableSimBtn}\n                      onClick={() => this.onEditSimulate({ value: 'all' })}>\n                      Simulate\n                    </button>\n                  )}\n                  <button\n                    className=\"btn btn-primary ml-3 mr-3\"\n                    disabled={\n                      this.state.isEdit\n                        ? this.disabledButtonHandler('edit')\n                        : this.disabledButtonHandler('approved')\n\n                      // this.state.comparisonRow.length !== 1 &&\n                      // this.state.defaultActiveKey === 'Comparison'\n                      //   ? true\n                      //   : false\n                    }\n                    onClick={() => {\n                      // this.resetStyleValue();\n                      this.setState({\n                        showPlanSavePopup: true,\n                        status: 'pending',\n                        // disableSimBtn: true,\n                      });\n                    }}>\n                    Send for approval\n                  </button>\n                  {this.state.isEdit ? null : (\n                    <button\n                      className=\"btn btn-primary resetButton\"\n                      disabled={this.disabledButtonHandler('draft')}\n                      onClick={() => {\n                        // this.resetStyleValue();\n                        this.setState({\n                          showPlanSavePopup: true,\n                          status: 'draft',\n                          // disableSimBtn: true,\n                        });\n                      }}>\n                      Send to drafts\n                    </button>\n                  )}\n                </div>\n              </div>\n            )}\n          {this.state.cadenceConstraintsVal === 'overall' &&\n            this.state.defaultActiveKey === 'Comparison' && (\n              <div className=\"card mb-4\">\n                <div className=\"optimalheading pl-3 pt-2\">{this.state.defaultActiveKey}</div>\n                <hr />\n                <div>\n                  <ComparisonMetricTable\n                    data={this.comparisonDataHandler()}\n                    //this.props.comparisonData}\n                  />\n                </div>\n              </div>\n            )}\n          {this.state.showCadence &&\n            this.state.simulatedData &&\n            this.props.markdownAnalysisGraphData &&\n            this.props.markdownAnalysisGraphData.overview &&\n            this.state.defaultActiveKey !== 'Comparison' && (\n              <div className=\"card mb-4\">\n                {this.state.isEdit ? (\n                  <div className=\"my-3\"></div>\n                ) : (\n                  <>\n                    <div className=\"optimalheading pl-3 pt-2\">{this.state.defaultActiveKey}</div>\n                    <hr />\n                  </>\n                )}\n                {this.state.defaultActiveKey !== 'Comparison' && (\n                  <div className=\"overviewtoggle\">\n                    <button\n                      type=\"button\"\n                      style={{\n                        fontSize: '15px',\n                        border: '1px solid',\n                        borderWidth: '1px 0px 1px 1px',\n                      }}\n                      className={classNames({\n                        active: this.state.selectedView === 'Overview',\n                        btn: true,\n                        'btn-outline-primary cal-btn': true,\n                        overView: true,\n                        detailed: true,\n                      })}\n                      onClick={() => this.changedView('Overview')}>\n                      Overview\n                    </button>\n                    <button\n                      type=\"button\"\n                      className={classNames({\n                        active: this.state.selectedView === 'Detailed',\n                        ' btn': true,\n                        'btn-outline-primary cal-btn': true,\n                        overView: true,\n                        detailed: true,\n                      })}\n                      onClick={() => this.changedView('Detailed')}\n                      style={{\n                        fontSize: '15px',\n                        border: '1px solid',\n                        borderWidth: '1px 1px 1px 0px',\n                      }}>\n                      Detailed\n                    </button>\n                  </div>\n                )}\n                {this.state.showCadence &&\n                  this.state.simulatedData &&\n                  (this.state.selectedStyle === 'all'\n                    ? this.props.markdownAnalysisGraphData\n                    : this.props.markdownAnalysisGraphDataBySkus) &&\n                  (this.state.selectedStyle === 'all'\n                    ? this.props.markdownAnalysisGraphData.overview\n                    : this.props.markdownAnalysisGraphDataBySkus.overview) &&\n                  this.state.selectedView === 'Overview' &&\n                  this.state.defaultActiveKey !== 'Comparison' && (\n                    <div>\n                      <MarkdownAnalysis\n                        // anaTableData={anaTableData}\n                        // graphData={graphData}\n                        level={this.state.md_level}\n                        analysisTable={\n                          this.state.selectedStyle === 'all'\n                            ? this.props.analysisTable.analysisTabledata\n                            : this.props.analysisTableBySkus[keyName]\n                        }\n                        markdownAnalysisGraphData={\n                          this.state.selectedStyle === 'all'\n                            ? this.props.markdownAnalysisGraphData.overview\n                            : this.props.markdownAnalysisGraphDataBySkus.overview\n                        }\n                        editMarkdownAnalysisGraphData={\n                          this.state.selectedStyle === 'all'\n                            ? this.props.editMarkdownAnalysisGraphData.overview\n                            : this.props.editAnalysisTableDataBySkus.overview\n                        }\n                        editAnalysisData={\n                          this.state.selectedStyle === 'all'\n                            ? this.props.editAnalysisData.analysisTabledata\n                            : this.props.editAnalysisTableDataBySkus.analysisTabledata\n                        }\n                        selectedSku={this.state.selectedSkuId}\n                        selectedCustomGroup={this.state.selectedCustomGroup}\n                        selectedStyleColor={this.state.selectedStyleColor}\n                        optionSku={this.props.skuData}\n                        selectedSkuHandler={(val) => this.selectedSkuHandler(val)}\n                        onFilterStyles={this.onFilterStyles}\n                        selectedCustomGroupHandler={(val) => this.selectedCustomGroupHandler(val)}\n                        selectedStyleColorHandler={(val) => this.selectedStyleColorHandler(val)}\n                        isEdit={this.state.isEdit}\n                      />\n                    </div>\n                  )}\n                {this.state.selectedView === 'Detailed' &&\n                  this.state.defaultActiveKey !== 'Comparison' && (\n                    <div>\n                      {/* <ColumnSelection attributes={this.state.attributes} /> */}\n                      <div className=\"detailedTable ml-4 mr-4\" style={{ paddingBottom: '2rem' }}>\n                        <MarkdownDetailedTable\n                          data={\n                            this.state.selectedStyle === 'all'\n                              ? this.props.markdownAnalysisGraphData.detailed\n                              : this.props.markdownAnalysisGraphDataBySkus.detailed\n                          }\n                          editData={\n                            this.state.selectedStyle === 'all'\n                              ? this.props.editMarkdownAnalysisGraphData.detailed\n                              : this.props.editAnalysisTableDataBySkus.detailed\n                          }\n                          columnHeaders={this.props.columnHeaders}\n                          detailedTableDataHandler={this.detailedTableDataHandler}\n                          detailedTableData={this.state.detailedTableData}\n                          isEdit={this.state.isEdit}\n                        />\n                      </div>\n                    </div>\n                  )}{' '}\n              </div>\n            )}\n\n          <Modal\n            visible={this.state.showPlanSavePopup}\n            // effect=\"fadeInDown\"\n            effect=\"fadeInRight\"\n            width=\"30%\"\n            style={{ height: 'auto', overflow: 'auto' }}\n            onClickAway={() => this.showPlanSavePopup()}>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h6 className=\"card-title\">\n                  Enter MD Plan Details\n                  <span\n                    onClick={() => this.showPlanSavePopup()}\n                    className=\"pull-right select-store-span\">\n                    <i\n                      style={{ cursor: 'pointer' }}\n                      className=\"fa fa-times\"\n                      onClick={() => this.showPlanSavePopup()}\n                      aria-hidden=\"true\"\n                    />\n                  </span>\n                </h6>\n                <hr />\n              </div>\n\n              <div className=\"mr-3\" style={{ display: 'flex', textAlign: 'right' }}>\n                <PlanSavePopup\n                  data={\n                    this.state.cadenceConstraintsVal === 'overall'\n                      ? this.state.overallCadenceData\n                      : this.state.skuLabelCadenceData\n                  }\n                  activeIndex={this.getActiveIndex()}\n                  comparsionSelectedData={cloneDeep(this.state.comparisonRow)}\n                  activeTab={this.state.defaultActiveKey}\n                  isEdit={this.state.isEdit}\n                  editPlanDetails={this.props.editPlanDetails}\n                  onSave={(planName, sceniosNames) =>\n                    this.state.isEdit\n                      ? this.onSaveEdit(planName, sceniosNames)\n                      : this.onSave(planName, sceniosNames)\n                  }\n                />\n              </div>\n            </div>\n          </Modal>\n          <Modal\n            visible={this.state.showExcludeStorePopup}\n            effect=\"fadeInDown\"\n            width=\"75%\"\n            height=\"95%\"\n            onClickAway={() => this.showTablePopup()}>\n            {/* <div className=\"card\"> */}\n            <div className=\"card-body pb-0\">\n              <h6 className=\"card-title\" style={{ fontWeight: 'bold' }}>\n                Select stores\n                <span\n                  onClick={() => this.showTablePopup()}\n                  className=\"pull-right select-store-span\">\n                  <i\n                    style={{ cursor: 'pointer' }}\n                    className=\"fa fa-times\"\n                    onClick={() => this.showTablePopup()}\n                    aria-hidden=\"true\"\n                  />\n                </span>\n              </h6>\n              <hr />\n            </div>\n            {this.state.showExcludeStorePopup && this.props.inventoryInfoData && (\n              <div className=\"ai-pre-grid-table overflow-handler\">\n                <ExcludeStoreTable\n                  currentPage={this.state.currentPage}\n                  offset={this.state.offset}\n                  showTablePopup={this.showTablePopup}\n                  columnHeaders={this.props.inventoryInfoData.columnHeaders || []}\n                  excludeStoreValHandler={this.excludeStoreValHandler}\n                  storeData={this.props.inventoryInfoData.store_data || []}\n                  excludedRows={this.state.excludedRows}\n                />\n              </div>\n            )}\n            {/* </div> */}\n          </Modal>\n        </div>\n      </LoadingOverlay>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    getOverlayLoaderState: state.loaderReducer.overlayLoaderState,\n    getOverlayLoaderText: state.loaderReducer.loaderText,\n    inventoryInfoData: state.manuallyCreateMdData.inventoryInfoData,\n    cadenceData: state.manuallyCreateMdData.cadenceData,\n    savedStatus: state.manuallyCreateMdData.status,\n    skuData: state.manuallyCreateMdData.skus,\n    startDate: state.filtersReducer.startDate,\n    endDate: state.filtersReducer.endDate,\n    weeks: state.filtersReducer.weeks,\n    csv_names: state.manuallyCreateMdData.csv_names,\n    editPlanDetails: state.manuallyCreateMdData.editPlanDetails,\n    drops: state.filtersReducer.selectedDrops,\n    selectedHierarchy1: state.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: state.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: state.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: state.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: state.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: state.filtersReducer.selectedHierarchy6,\n    selectedHierarchy7: state.filtersReducer.selectedHierarchy7,\n    selectedHierarchy8: state.filtersReducer.selectedHierarchy8,\n    selectedStores: state.filtersReducer.selectedStores,\n    selectedCustomStyleGroup: state.filtersReducer.selectedCustomStyleGroup,\n    selectedCustomStoreGroup: state.filtersReducer.selectedCustomStoreGroup,\n    markdownAnalysisGraphData: state.markdownAnalysisData.markdownAnalysisGraphData,\n    editMarkdownAnalysisGraphData: state.markdownAnalysisData.editMarkdownAnalysisGraphData,\n    editAnalysisData: state.markdownAnalysisData.editAnalysisData,\n    markdownAnalysisGraphDataBySkus: state.markdownAnalysisData.markdownAnalysisGraphDataBySkus,\n    analysisTable: state.markdownAnalysisData.analysisTable,\n    analysisTableBySkus: state.markdownAnalysisData.analysisTableBySkus,\n    analysisDataBySkus: state.markdownAnalysisData.analysisDataBySkus,\n    comparisonData: state.markdownAnalysisData.comparisonData,\n    editMarkdownAnalysisGraphDataBySkus:\n      state.markdownAnalysisData.editMarkdownAnalysisGraphDataBySkus,\n    editAnalysisTableDataBySkus: state.markdownAnalysisData.editAnalysisTableDataBySkus,\n    analysisData: state.markdownAnalysisData.analysisData,\n    savedData: state.manuallyCreateMdData.savedData,\n    columnHeaders: state.manuallyCreateMdData.columnHeaders,\n    styleColorData: state.styleReducer.styleColorData,\n  };\n};\nconst mapActionsToProps = {\n  fetchStyle: StyleConfigActions.fetchStyle,\n\n  fetchInventoryInfo: manuallyCreateMdActions.fetchInventoryInfo,\n  fetchSkuAndCsv: manuallyCreateMdActions.fetchSkuAndCsv,\n  fetchCadence: manuallyCreateMdActions.fetchCadence,\n  simulate: manuallyCreateMdActions.simulate,\n  saveData: manuallyCreateMdActions.saveData,\n  savedStatusFalse: manuallyCreateMdActions.savedStatusFalse,\n  updateAnalysisData: manuallyCreateMdActions.updateAnalysisData,\n  onResetInventoryInfo: manuallyCreateMdActions.onResetInventoryInfo,\n  onResetEditedInfo: manuallyCreateMdActions.onResetEditedInfo,\n  updateSidebar: plannedReportsAction.updateSidebar,\n  fetchEditPlanData: manuallyCreateMdActions.fetchEditPlanData,\n  fetchStyleColorData: manuallyCreateMdActions.fetchStyleColorData,\n  editSimulate: manuallyCreateMdActions.editSimulate,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(withRouter(ManuallyCreateMD));\n"]},"metadata":{},"sourceType":"module"}