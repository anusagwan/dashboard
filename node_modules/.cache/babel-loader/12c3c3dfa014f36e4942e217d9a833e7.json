{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/draftStatus/status/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n\\n  .flexRow {\\n    display: flex;\\n    flex-direction: row;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MarkDownActions from '../../../actions/markdowns';\nimport Filters from '../../../services/filters';\nimport DataTable from '../../../services/reactTable';\nimport Modal from '../../../services/modal';\nimport ColumnSelection from '../../columnSelection';\nimport StatusListCount from './statusListCount';\nimport Select from '../../../utils/reactDropDownSelect';\nimport Coldef from './coldef';\nimport styled from 'styled-components';\nimport { cloneDeep } from 'lodash';\nimport NoData from '../../noTableData';\nimport moment from 'moment';\n\nvar Status =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Status, _Component);\n\n  function Status(props) {\n    var _this;\n\n    _classCallCheck(this, Status);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Status).call(this, props));\n\n    _this.onHandleSelect = function (selectValues) {\n      return _this.setState({\n        selectValues: selectValues\n      });\n    };\n\n    _this.onHandleStatusSelect = function (selectStatusValues) {\n      return _this.setState({\n        selectStatusValues: selectStatusValues\n      });\n    };\n\n    _this.onCellClick = function (row) {\n      if (row.value === 'Rejected') {\n        _this.setState({\n          isComment: true,\n          rowDetails: row.row.original\n        });\n      }\n    };\n\n    _this.setComment = function (e) {\n      _this.setState({\n        comment: e.target.value\n      });\n    };\n\n    _this.onCloseComment = function () {\n      _this.setState({\n        isComment: false,\n        rowDetails: {}\n      });\n    };\n\n    _this.onSaveComment = function () {\n      var tableData = cloneDeep(_this.props.getTableData);\n      tableData.forEach(function (row) {\n        if (_this.state.rowDetails.md_plan === row['md_plan'] && _this.state.rowDetails.scenario === row['scenario']) {\n          row.comment = _this.state.comment;\n        }\n      });\n\n      _this.props.setStatusData(tableData);\n\n      _this.setState({\n        isComment: false,\n        rowDetails: {}\n      });\n    };\n\n    _this.findStatusColor = function (status, color) {\n      switch (status) {\n        case 'high':\n          return color.high;\n\n        case 'medium':\n          return color.medium;\n\n        case 'low':\n          return color.low;\n\n        default:\n          break;\n      }\n    };\n\n    _this.bgmCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var bgCol = {\n        high: '#F8E8E8',\n        medium: '#FCF3D1',\n        low: '#E8F8F5'\n      };\n      return _this.findStatusColor(status, bgCol);\n    };\n\n    _this.txtCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var txtCol = {\n        high: '#D38485',\n        medium: '#F0C53A',\n        low: '#66CFBA'\n      };\n      return _this.findStatusColor(status, txtCol);\n    };\n\n    _this.onFilter = function (selectedFilters) {\n      var payload = _objectSpread({}, selectedFilters);\n\n      payload.startDate = moment(payload.startDate).format('MM-DD-YYYY');\n      payload.endDate = moment(payload.endDate).format('MM-DD-YYYY');\n      payload['week'] = '';\n      payload['status'] = 'status';\n\n      _this.props.runMarkDown(payload);\n    };\n\n    _this.onHandleCheckBox = function (e, label, index) {\n      //adding\n      if (e.target.checked) {\n        if (_this.state.selectedLabels.indexOf(label) === -1) {\n          var labels = [].concat(_toConsumableArray(_this.state.selectedLabels), [label]);\n          var tempArr = [];\n          labels.forEach(function (label) {\n            var columns = _this.props.columnHeaders[label];\n            var options = columns.map(function (label) {\n              return {\n                label: label,\n                value: label\n              };\n            });\n            tempArr.push.apply(tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selectedLabels: labels,\n            columnOptions: tempArr\n          });\n        }\n      } else {\n        //removing\n        var _index = _this.state.selectedLabels.indexOf(label);\n\n        if (_index !== -1) {\n          var selectedLabel = cloneDeep(_this.state.selectedLabels);\n          selectedLabel.splice(_index, 1);\n          var _tempArr = [];\n          selectedLabel.forEach(function (label) {\n            var columns = _this.props.columnHeaders[label];\n            var options = columns.map(function (label) {\n              return {\n                label: label,\n                value: label\n              };\n            });\n\n            _tempArr.push.apply(_tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selectedLabels: selectedLabel,\n            columnOptions: _tempArr\n          });\n        }\n      }\n    };\n\n    _this.onHandleSelect = function (data) {\n      console.log('data:', data);\n      var cols = cloneDeep(_this.state.columns);\n      var selectedOptions = _this.state.selectedOptions;\n      data.forEach(function (da) {\n        cols.push({\n          Header: da.label,\n          accessor: da.label\n        });\n      });\n\n      _this.setState({\n        columns: cols\n      });\n    };\n\n    _this.state = {\n      selectedItems: [],\n      selectStatusValues: [],\n      attributes: ['Margin', 'Sales', 'Inventory'],\n      comment: '',\n      isComment: false,\n      rowDetails: {},\n      statusCounts: {},\n      columnOptions: [],\n      selectedLabels: [],\n      columns: []\n    };\n    return _this;\n  }\n\n  _createClass(Status, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.getTableData) {\n        var tempStatusObj = {};\n        this.props.getTableData.forEach(function (row) {\n          if (tempStatusObj.hasOwnProperty(row.status)) {\n            tempStatusObj[row.status] += 1;\n          } else {\n            tempStatusObj[\"\".concat(row.status)] = 1;\n          }\n        });\n        this.setState({\n          statusCounts: tempStatusObj\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"card CalendarMain promoCalendarDiv1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"promoCal-brdcrm mb-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Markdown Optimization /\", React.createElement(\"span\", {\n        className: \"font-bold color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Status\")), React.createElement(\"hr\", {\n        style: {\n          marginTop: '1px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(Filters, {\n        drop: true,\n        onFilter: this.onFilter,\n        hierarchy: ['hierarchy1', 'hierarchy2', 'hierarchy3', 'hierarchy4', 'hierarchy5', 'hierarchy6', 'hierarchy7'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      })), this.props.getMarkDowns && this.props.getMarkDowns.length ? React.createElement(\"div\", {\n        className: \"card CalendarMain promoCalendarDiv1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(ColSelBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, this.props.getColumnHeaders && Object.keys(this.props.getColumnHeaders).length && React.createElement(ColumnSelection, {\n        onHandleCheckBox: this.onHandleCheckBox,\n        columnHeaders: this.props.getColumnHeaders,\n        onHandleSelect: this.onHandleSelect,\n        columnOptions: this.state.columnOptions,\n        selectedItems: this.state.selectedItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          padding: '1rem'\n        },\n        className: \"flexRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Status\"), \" \\xA0\", React.createElement(Select, {\n        multi: true,\n        clearable: true,\n        onHandleSelect: this.onHandleStatusSelect,\n        options: this.props.getStatusOptions,\n        selectedItems: this.state.selectStatusValues,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }))), this.state.statusCounts && Object.keys(this.state.statusCounts).length ? React.createElement(StatusListCount, {\n        statusCounts: this.state.statusCounts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }) : '', React.createElement(DataTable, {\n        columns: Coldef(),\n        data: this.props.getMarkDowns,\n        visibleColumns: \"markDownStatus\",\n        getColumnProps: function getColumnProps(column) {\n          return {// onClick: () => this.onColumnClick(column),\n          };\n        },\n        getCellProps: function getCellProps(cellInfo) {\n          return {\n            onClick: function onClick() {\n              return _this2.onCellClick(cellInfo);\n            },\n            style: {\n              backgroundColor: _this2.bgmCol(cellInfo),\n              color: _this2.txtCol(cellInfo),\n              margin: '4px 4px',\n              borderRadius: '2px'\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      })) : React.createElement(NoData, {\n        description: \"Please select filters to show Markdown plans.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        size: \"sm\",\n        show: this.state.isComment,\n        header: \"Add Comment\",\n        onHide: this.onCloseComment,\n        onSaveComment: this.onSaveComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"commentTextArea\",\n        rows: \"2\",\n        cols: \"20\",\n        onChange: this.setComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Status;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    getMarkDowns: store.markDownReducers.markDowns,\n    getStatusOptions: store.draftStatusReducer.statusOptions,\n    getMetricOptions: store.draftStatusReducer.metricOptions.status\n  };\n};\n\nvar mapActionToProps = {\n  runMarkDown: MarkDownActions.runMarkDown\n};\nexport default connect(mapStateToProps, mapActionToProps)(Status);\nvar ColSelBtn = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/draftStatus/status/index.js"],"names":["React","Component","connect","MarkDownActions","Filters","DataTable","Modal","ColumnSelection","StatusListCount","Select","Coldef","styled","cloneDeep","NoData","moment","Status","props","onHandleSelect","selectValues","setState","onHandleStatusSelect","selectStatusValues","onCellClick","row","value","isComment","rowDetails","original","setComment","e","comment","target","onCloseComment","onSaveComment","tableData","getTableData","forEach","state","md_plan","scenario","setStatusData","findStatusColor","status","color","high","medium","low","bgmCol","cellInfo","column","id","md_status","bgCol","txtCol","onFilter","selectedFilters","payload","startDate","format","endDate","runMarkDown","onHandleCheckBox","label","index","checked","selectedLabels","indexOf","labels","tempArr","columns","columnHeaders","options","map","push","columnOptions","selectedLabel","splice","data","console","log","cols","selectedOptions","da","Header","accessor","selectedItems","attributes","statusCounts","tempStatusObj","hasOwnProperty","marginTop","getMarkDowns","length","getColumnHeaders","Object","keys","padding","getStatusOptions","onClick","style","backgroundColor","margin","borderRadius","mapStateToProps","store","markDownReducers","markDowns","draftStatusReducer","statusOptions","getMetricOptions","metricOptions","mapActionToProps","ColSelBtn","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MarkDownActions from '../../../actions/markdowns';\nimport Filters from '../../../services/filters';\nimport DataTable from '../../../services/reactTable';\nimport Modal from '../../../services/modal';\nimport ColumnSelection from '../../columnSelection';\nimport StatusListCount from './statusListCount';\nimport Select from '../../../utils/reactDropDownSelect';\nimport Coldef from './coldef';\nimport styled from 'styled-components';\nimport { cloneDeep } from 'lodash';\nimport NoData from '../../noTableData';\nimport moment from 'moment';\n\nclass Status extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedItems: [],\n      selectStatusValues: [],\n      attributes: ['Margin', 'Sales', 'Inventory'],\n      comment: '',\n      isComment: false,\n      rowDetails: {},\n      statusCounts: {},\n      columnOptions: [],\n      selectedLabels: [],\n      columns: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.getTableData) {\n      let tempStatusObj = {};\n      this.props.getTableData.forEach((row) => {\n        if (tempStatusObj.hasOwnProperty(row.status)) {\n          tempStatusObj[row.status] += 1;\n        } else {\n          tempStatusObj[`${row.status}`] = 1;\n        }\n      });\n      this.setState({\n        statusCounts: tempStatusObj,\n      });\n    }\n  }\n\n  onHandleSelect = (selectValues) => this.setState({ selectValues });\n  onHandleStatusSelect = (selectStatusValues) => this.setState({ selectStatusValues });\n  onCellClick = (row) => {\n    if (row.value === 'Rejected') {\n      this.setState({\n        isComment: true,\n        rowDetails: row.row.original,\n      });\n    }\n  };\n  setComment = (e) => {\n    this.setState({\n      comment: e.target.value,\n    });\n  };\n\n  onCloseComment = () => {\n    this.setState({\n      isComment: false,\n      rowDetails: {},\n    });\n  };\n  onSaveComment = () => {\n    let tableData = cloneDeep(this.props.getTableData);\n    tableData.forEach((row) => {\n      if (\n        this.state.rowDetails.md_plan === row['md_plan'] &&\n        this.state.rowDetails.scenario === row['scenario']\n      ) {\n        row.comment = this.state.comment;\n      }\n    });\n    this.props.setStatusData(tableData);\n    this.setState({\n      isComment: false,\n      rowDetails: {},\n    });\n  };\n\n  findStatusColor = (status, color) => {\n    switch (status) {\n      case 'high':\n        return color.high;\n      case 'medium':\n        return color.medium;\n      case 'low':\n        return color.low;\n      default:\n        break;\n    }\n  };\n\n  bgmCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let bgCol = {\n      high: '#F8E8E8',\n      medium: '#FCF3D1',\n      low: '#E8F8F5',\n    };\n    return this.findStatusColor(status, bgCol);\n  };\n  txtCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let txtCol = {\n      high: '#D38485',\n      medium: '#F0C53A',\n      low: '#66CFBA',\n    };\n    return this.findStatusColor(status, txtCol);\n  };\n  onFilter = (selectedFilters) => {\n    let payload = { ...selectedFilters };\n    payload.startDate = moment(payload.startDate).format('MM-DD-YYYY');\n    payload.endDate = moment(payload.endDate).format('MM-DD-YYYY');\n    payload['week'] = '';\n    payload['status'] = 'status';\n    this.props.runMarkDown(payload);\n  };\n\n  onHandleCheckBox = (e, label, index) => {\n    //adding\n    if (e.target.checked) {\n      if (this.state.selectedLabels.indexOf(label) === -1) {\n        let labels = [...this.state.selectedLabels, label];\n        let tempArr = [];\n        labels.forEach((label) => {\n          let columns = this.props.columnHeaders[label];\n          let options = columns.map((label) => {\n            return {\n              label: label,\n              value: label,\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selectedLabels: labels,\n          columnOptions: tempArr,\n        });\n      }\n    } else {\n      //removing\n      let index = this.state.selectedLabels.indexOf(label);\n      if (index !== -1) {\n        let selectedLabel = cloneDeep(this.state.selectedLabels);\n        selectedLabel.splice(index, 1);\n        let tempArr = [];\n        selectedLabel.forEach((label) => {\n          let columns = this.props.columnHeaders[label];\n          let options = columns.map((label) => {\n            return {\n              label: label,\n              value: label,\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selectedLabels: selectedLabel,\n          columnOptions: tempArr,\n        });\n      }\n    }\n  };\n  onHandleSelect = (data) => {\n    console.log('data:', data);\n    let cols = cloneDeep(this.state.columns);\n    let selectedOptions = this.state.selectedOptions;\n    data.forEach((da) => {\n      cols.push({\n        Header: da.label,\n        accessor: da.label,\n      });\n    });\n    this.setState({\n      columns: cols,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"card CalendarMain promoCalendarDiv1 mt-3\">\n          <h4 className=\"promoCal-brdcrm mb-10\">\n            Markdown Optimization /<span className=\"font-bold color-blue\">Status</span>\n          </h4>\n          <hr style={{ marginTop: '1px' }} />\n          <Filters\n            drop\n            onFilter={this.onFilter}\n            hierarchy={[\n              'hierarchy1',\n              'hierarchy2',\n              'hierarchy3',\n              'hierarchy4',\n              'hierarchy5',\n              'hierarchy6',\n              'hierarchy7',\n            ]}\n          />\n        </div>\n        {this.props.getMarkDowns && this.props.getMarkDowns.length ? (\n          <div className=\"card CalendarMain promoCalendarDiv1 mt-3\">\n            <ColSelBtn>\n              {this.props.getColumnHeaders && Object.keys(this.props.getColumnHeaders).length && (\n                <ColumnSelection\n                  onHandleCheckBox={this.onHandleCheckBox}\n                  columnHeaders={this.props.getColumnHeaders}\n                  onHandleSelect={this.onHandleSelect}\n                  columnOptions={this.state.columnOptions}\n                  selectedItems={this.state.selectedItems}\n                />\n              )}\n              <div style={{ padding: '1rem' }} className=\"flexRow\">\n                <label>Status</label> &nbsp;\n                <Select\n                  multi={true}\n                  clearable={true}\n                  onHandleSelect={this.onHandleStatusSelect}\n                  options={this.props.getStatusOptions}\n                  selectedItems={this.state.selectStatusValues}\n                />\n              </div>\n            </ColSelBtn>\n            {this.state.statusCounts && Object.keys(this.state.statusCounts).length ? (\n              <StatusListCount statusCounts={this.state.statusCounts} />\n            ) : (\n              ''\n            )}\n            <DataTable\n              columns={Coldef()}\n              data={this.props.getMarkDowns}\n              visibleColumns=\"markDownStatus\"\n              getColumnProps={(column) => ({\n                // onClick: () => this.onColumnClick(column),\n              })}\n              getCellProps={(cellInfo) => ({\n                onClick: () => this.onCellClick(cellInfo),\n                style: {\n                  backgroundColor: this.bgmCol(cellInfo),\n                  color: this.txtCol(cellInfo),\n                  margin: '4px 4px',\n                  borderRadius: '2px',\n                },\n              })}\n            />\n          </div>\n        ) : (\n          <NoData description=\"Please select filters to show Markdown plans.\" />\n        )}\n        <Modal\n          size=\"sm\"\n          show={this.state.isComment}\n          header=\"Add Comment\"\n          onHide={this.onCloseComment}\n          onSaveComment={this.onSaveComment}>\n          <textarea id=\"commentTextArea\" rows=\"2\" cols=\"20\" onChange={this.setComment}></textarea>\n        </Modal>\n      </>\n    );\n  }\n}\nconst mapStateToProps = (store) => {\n  return {\n    getMarkDowns: store.markDownReducers.markDowns,\n    getStatusOptions: store.draftStatusReducer.statusOptions,\n    getMetricOptions: store.draftStatusReducer.metricOptions.status,\n  };\n};\n\nconst mapActionToProps = {\n  runMarkDown: MarkDownActions.runMarkDown,\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(Status);\n\nconst ColSelBtn = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  .flexRow {\n    display: flex;\n    flex-direction: row;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}