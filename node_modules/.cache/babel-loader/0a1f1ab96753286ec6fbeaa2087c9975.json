{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Finalize/FinalizeMarkdown.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Filters from '../../services/filters';\nimport './finalizeMarkdownStyle.css';\nimport styled from 'styled-components';\nimport LoadingOverlay from '../../utils/Loader';\nimport { toast } from 'react-toastify';\nimport NoData from '../noTableData';\nimport FinalizeAction from '../../actions/draftStausFinalizeAction';\nimport plannedReportsAction from '../../actions/plannedReportsAction'; // import Coldef from './coldef';\n\nimport Coldef from '../draftStatus/draft/coldef';\nimport _ from 'lodash';\nimport cloneDeep from 'clone-deep';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport AlertWarning from '../../utils/AlertMessage/alertDanger';\nimport AlertSuccess from '../../utils/AlertMessage/alertSuccess';\nimport moment from 'moment';\nimport card1Image from '../../images/card1Image.png';\nimport card2Image from '../../images/card2Image.png';\nimport card3Image from '../../images/card3Image.png';\nimport card4Image from '../../images/card4Image.png';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox';\nimport { toPercentage, toDollarWithlDraft, toUnitDraft } from '../../helper/formatter';\nimport Switch from '../../services/toggleSwitch';\nimport EditMDModal from '../editMDModal';\nimport withClearCache from '../../ClearCache';\n\nfunction FormatterStyling(props, value, val) {\n  var val1 = val || val == 0 ? val : props.value;\n  var props1 = val || val == 0 ? {\n    value: val\n  } : props;\n\n  if (value == 'pvh_units' || value == 'markdown_units' || value == 'overall_pvh_units' || value == 'overall_markdown_units') {\n    return val1 || val1 == 0 ? toUnitDraft(props1) : '-';\n  } else if (value == 'margin_perc' || value == 'overall_margin_perc') {\n    return val1 || val1 == 0 ? toPercentage(props1) : '-';\n  } else if (value == 'revenue$' || value == 'aur' || value == 'margin$' || value == 'aum' || value == 'overall_aum' || value == 'overall_revenue$' || value == 'overall_aur' || value == 'overall_margin$') {\n    return val1 || val1 == 0 ? toDollarWithlDraft(props1) : '-';\n  }\n\n  return '-';\n}\n\nvar FinalizeMarkdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FinalizeMarkdown, _Component);\n\n  function FinalizeMarkdown(_props) {\n    var _this;\n\n    _classCallCheck(this, FinalizeMarkdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FinalizeMarkdown).call(this, _props));\n\n    _this.updateTableData = function (isEdited) {\n      var finalizeMarkdownData = _this.props.finalizeMarkdownData;\n\n      var newTableData = _.filter(finalizeMarkdownData, function (item) {\n        return item.is_edited === isEdited;\n      });\n\n      if (!_.isEqual(_this.state.tableData, newTableData)) _this.setState({\n        tableData: newTableData\n      });\n    };\n\n    _this.findStatusColor = function (status, color) {\n      switch (status) {\n        case 'high':\n          return color.high;\n\n        case 'medium':\n          return color.medium;\n\n        case 'low':\n          return color.low;\n\n        default:\n          break;\n      }\n    };\n\n    _this.bgmCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var bgCol = {\n        high: '#F8E8E8',\n        medium: '#FCF3D1',\n        low: '#E8F8F5'\n      };\n      return _this.findStatusColor(status, bgCol);\n    };\n\n    _this.txtCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var txtCol = {\n        high: '#D38485',\n        medium: '#F0C53A',\n        low: '#66CFBA'\n      };\n      return _this.findStatusColor(status, txtCol);\n    };\n\n    _this.sendForReject = function () {\n      var msg = [];\n      var payload = {\n        markdown_data: _this.state.selectedRows.map(function (item, i) {\n          var arrLength = _this.state.selectedRows.length;\n          var msgStr = \"Scenario '\".concat(item.scenario, \"' of Plan '\").concat(item.md_plan, \"'\").concat(i === arrLength - 2 ? ' and ' : i === arrLength - 1 ? '' : ', ');\n          msg.push(msgStr);\n          return {\n            id: item.markdown_id,\n            scenario: item.scenario\n          };\n        }),\n        update_status: 'rejected'\n      };\n\n      _this.props.sendForApproval(payload).then(function (resp) {\n        if (resp && resp.data.status == true) {\n          var successMsg = \"\".concat(msg.join(''), \" has been Rejected\");\n          toast.info(successMsg, {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n          var req = {\n            filters: {\n              hierarchy1: _this.props.selectedHierarchy1,\n              hierarchy2: _this.props.selectedHierarchy2,\n              hierarchy3: _this.props.selectedHierarchy3,\n              hierarchy4: _this.props.selectedHierarchy4,\n              hierarchy5: _this.props.selectedHierarchy5,\n              hierarchy7: _this.props.selectedHierarchy7,\n              hierarchy9: _this.props.selectedHierarchy9,\n              hierarchy10: _this.props.selectedHierarchy10,\n              hierarchy11: _this.props.selectedHierarchy11,\n              hierarchy12: _this.props.selectedHierarchy12,\n              store: _this.props.selectedStores // customStyleGroup: this.props.selectedCustomStyleGroup,\n              // customStoreGroup: this.props.selectedCustomStoreGroup,\n              // tiers: this.props.selectedStores,\n\n            },\n            startDate: _this.props.startDate ? moment(_this.props.startDate).format('YYYY-MM-DD') : null,\n            endDate: _this.props.endDate ? moment(_this.props.endDate).format('YYYY-MM-DD') : null,\n            status: 'pending'\n          }; // if (this.props.selectedChannel[0] === 'Web') req.filters['ecom_flag'] = [1];\n          // if (this.props.selectedChannel[0] === 'Outlet') req.filters['retail_flag'] = [1];\n\n          _this.props.getMarkdowns(req);\n\n          _this.setState({\n            selectedRows: []\n          });\n        }\n      }).catch(function (err) {\n        toast.error(err.message, {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n      });\n    };\n\n    _this.sendForApprove = function () {\n      var msg = [];\n      var payload = {\n        markdown_data: _this.state.selectedRows.map(function (item, i) {\n          var arrLength = _this.state.selectedRows.length;\n          var msgStr = \"Scenario '\".concat(item.scenario, \"' of Plan '\").concat(item.md_plan, \"'\").concat(i === arrLength - 2 ? ' and ' : i === arrLength - 1 ? '' : ', ');\n          msg.push(msgStr);\n          return {\n            id: item.markdown_id,\n            scenario: item.scenario\n          };\n        }),\n        update_status: 'approved'\n      };\n\n      _this.props.sendForApproval(payload).then(function (resp) {\n        if (resp && resp.data.status == true) {\n          var successMsg = \"\".concat(msg.join(''), \" has been Finalized Successfully\");\n          toast.info(successMsg, {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n          var req = {\n            filters: {\n              hierarchy1: _this.props.selectedHierarchy1,\n              hierarchy2: _this.props.selectedHierarchy2,\n              hierarchy3: _this.props.selectedHierarchy3,\n              hierarchy4: _this.props.selectedHierarchy4,\n              hierarchy5: _this.props.selectedHierarchy5,\n              hierarchy7: _this.props.selectedHierarchy7,\n              hierarchy9: _this.props.selectedHierarchy9,\n              hierarchy10: _this.props.selectedHierarchy10,\n              hierarchy11: _this.props.selectedHierarchy11,\n              hierarchy12: _this.props.selectedHierarchy12,\n              // customStyleGroup: this.props.selectedCustomStyleGroup,\n              // customStoreGroup: this.props.selectedCustomStoreGroup,\n              store: _this.props.selectedStores\n            },\n            startDate: _this.props.startDate ? moment(_this.props.startDate).format('YYYY-MM-DD') : null,\n            endDate: _this.props.endDate ? moment(_this.props.endDate).format('YYYY-MM-DD') : null,\n            status: 'pending'\n          };\n          if (_this.props.selectedChannel[0] === 'Web') req.filters['ecom_flag'] = [1];\n          if (_this.props.selectedChannel[0] === 'Outlet') req.filters['retail_flag'] = [1];\n\n          _this.props.getMarkdowns(req);\n\n          _this.setState({\n            selectedRows: []\n          });\n        }\n      }).catch(function (err) {\n        toast.error(err.message, {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n      });\n    };\n\n    _this.onActionSelection = function (rowData) {\n      var selectedRows = _this.state.selectedRows;\n\n      var foundEle = _.find(selectedRows, {\n        markdown_id: rowData.original.markdown_id\n      });\n\n      if (foundEle) {\n        _.remove(selectedRows, function (item) {\n          return item.markdown_id === rowData.original.markdown_id;\n        });\n      } else {\n        selectedRows.push(rowData.original);\n      }\n\n      _this.setState({\n        selectedRows: selectedRows\n      });\n    };\n\n    _this.onScenarioSelection = function (rowData) {\n      var selectedRows = _this.state.selectedRows;\n\n      var foundEle = _.find(selectedRows, {\n        markdown_id: rowData.original.markdown_id\n      });\n\n      if (foundEle) {\n        _.remove(selectedRows, function (item) {\n          return item.markdown_id === rowData.original.markdown_id;\n        });\n      } else {\n        selectedRows.push(rowData.original);\n      }\n\n      _this.setState({\n        selectedRows: selectedRows\n      });\n    };\n\n    _this.onHandleSelect = function (selOptions) {\n      var headers = _.cloneDeep(_this.state.columns);\n\n      _.remove(headers, function (item) {\n        return item.metric;\n      });\n\n      selOptions.forEach(function (item) {\n        var newTableCols = headers.filter(function (a) {\n          return a.accessor === item.value;\n        });\n\n        if (newTableCols.length == 0) {\n          var spliceAt = headers.length - 1;\n          headers.splice(spliceAt, 0, {\n            Header: item.label,\n            accessor: item.value,\n            Aggregated: function Aggregated(props) {\n              var accessorName = \"overall_\".concat(item.value);\n              var val = props.row.original[accessorName];\n              return FormatterStyling(props, accessorName, val);\n            },\n            Cell: function Cell(props) {\n              var parentId = Math.floor(props.row.id);\n\n              var parentRow = _.find(props.rows, {\n                id: parentId.toString()\n              });\n\n              return FormatterStyling(props, item.value);\n            },\n            metric: true\n          });\n        }\n      });\n\n      _this.setState({\n        columns: headers,\n        selectedItems: selOptions\n      });\n    };\n\n    _this.onHandleCheckBox = function (e, label, index) {\n      //adding\n      if (e.target.checked) {\n        if (_this.state.selLabels.indexOf(label) === -1) {\n          var labels = [].concat(_toConsumableArray(_this.state.selLabels), [label]);\n          var tempArr = [];\n          labels.forEach(function (label) {\n            var columns = _this.props.getColumnHeaders[label];\n            var labelColumns = Object.keys(columns);\n            var options = labelColumns.map(function (label) {\n              return {\n                label: label,\n                value: columns[label]\n              };\n            });\n            tempArr.push.apply(tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selLabels: labels,\n            columnOptions: tempArr\n          });\n        }\n      } else {\n        //removing\n        var _index = _this.state.selLabels.indexOf(label);\n\n        if (_index !== -1) {\n          var selectedLabel = _.cloneDeep(_this.state.selLabels);\n\n          selectedLabel.splice(_index, 1);\n          var _tempArr = [];\n          selectedLabel.forEach(function (label) {\n            var columns = _this.props.getColumnHeaders[label];\n            var labelColumns = Object.keys(columns);\n            var options = labelColumns.map(function (label) {\n              return {\n                label: label,\n                value: columns[label]\n              };\n            });\n\n            _tempArr.push.apply(_tempArr, _toConsumableArray(options));\n          });\n\n          var selectedItemsClone = _.cloneDeep(_this.state.selectedItems);\n\n          var newSelectedItems = [];\n          var labelArr = Object.keys(_this.props.getColumnHeaders[label]);\n          selectedItemsClone.forEach(function (item) {\n            if (!labelArr.includes(item.label)) {\n              newSelectedItems.push(item);\n            }\n          });\n\n          _this.onHandleSelect(newSelectedItems);\n\n          _this.setState({\n            selLabels: selectedLabel,\n            columnOptions: _tempArr,\n            selectedItems: newSelectedItems\n          });\n        }\n      }\n    };\n\n    _this.mandatoryFiltersVal = function () {\n      return _this.props.selectedHierarchy1 && _this.props.selectedHierarchy2.length && _this.props.startDate && _this.props.endDate;\n    };\n\n    _this.isSwitchedPaln = function (val) {\n      _this.updateTableData(val);\n\n      _this.setState({\n        switchedPlans: val\n      });\n    };\n\n    _this.onFilter = function (_ref) {\n      var filters = _ref.filters,\n          startDate = _ref.startDate,\n          endDate = _ref.endDate;\n      // if (!this.mandatoryFiltersVal()) {\n      //   toast.error(`Please select mandatory filters`, {\n      //     autoClose: 15000,\n      //     hideProgressBar: true,\n      //   });\n      //   return;\n      // }\n      var payload = {\n        filters: {\n          hierarchy1: filters.hierarchy1,\n          hierarchy2: filters.hierarchy2,\n          hierarchy3: filters.hierarchy3,\n          hierarchy4: filters.hierarchy4,\n          hierarchy5: filters.hierarchy5,\n          // ? filters.hierarchy5 : [],\n          hierarchy7: filters.hierarchy7,\n          hierarchy9: filters.hierarchy9,\n          hierarchy10: filters.hierarchy10,\n          hierarchy11: filters.hierarchy11,\n          hierarchy12: filters.hierarchy12,\n          store: _this.props.selectedStores // customStyleGroup: this.props.selectedCustomStyleGroup,\n          // customStoreGroup: this.props.selectedCustomStoreGroup,\n\n        },\n        startDate: _this.props.startDate ? moment(_this.props.startDate).format('YYYY-MM-DD') : null,\n        endDate: _this.props.endDate ? moment(_this.props.endDate).format('YYYY-MM-DD') : null,\n        status: 'pending'\n      }; // if (this.props.selectedChannel[0] === 'Web') payload.filters['ecom_flag'] = [1];\n      // if (this.props.selectedChannel[0] === 'Outlet') payload.filters['retail_flag'] = [1];\n\n      _this.getMarkdowns(payload);\n    };\n\n    _this.getMarkdowns = function (payload) {\n      _this.props.getMarkdowns(payload).then(function (resp) {\n        if (resp && resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n          (function () {\n            var defaultHeader = Object.keys(resp.columnHeaders.default);\n            var setDefaultColDef = Coldef().filter(function (col) {\n              return defaultHeader.includes(col.Header) || col.Header === 'Time Period' || col.Header === 'Actions' || col.id === 'expander' || // col.accessor === 'sell_through' ||\n              _this.state.toggle && col.accessor === 'status';\n            });\n            var setDefaultLabel = [];\n            var setDefaultColumnOptions = [];\n            var setDefaultColumnOptions1 = [];\n            var setDefaultItems = [];\n\n            var colHeaders = _.cloneDeep(resp.columnHeaders);\n\n            var labels = Object.keys(colHeaders);\n            labels.splice(labels.indexOf('fixed'), 1);\n            labels.splice(labels.indexOf('default'), 1);\n\n            var _loop = function _loop() {\n              var label = _labels[_i];\n              var labelArray = Object.keys(resp.columnHeaders[label]);\n\n              function diff() {\n                var A = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : labelArray;\n                var B = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultHeader;\n                return A.filter(function (a) {\n                  return B.indexOf(a) !== -1;\n                });\n              }\n\n              if (diff().length) {\n                setDefaultColumnOptions.push.apply(setDefaultColumnOptions, _toConsumableArray(Object.keys(resp.columnHeaders[label])));\n                setDefaultColumnOptions1.push(resp.columnHeaders[label]);\n                setDefaultItems.push.apply(setDefaultItems, _toConsumableArray(diff()));\n                setDefaultLabel.push(label);\n              }\n            };\n\n            for (var _i = 0, _labels = labels; _i < _labels.length; _i++) {\n              _loop();\n            }\n\n            var options = setDefaultColumnOptions.map(function (label) {\n              var find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n              return {\n                label: label,\n                value: find\n              };\n            });\n            var selectedItems = setDefaultItems.map(function (label) {\n              var find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n              return {\n                label: label,\n                value: find\n              };\n            });\n            setDefaultColDef.push({\n              id: 'selection',\n              groupByBoundary: true,\n              Header: 'Actions',\n              // fixed: 'left',\n              Cell: function Cell(props) {\n                var row = props.row,\n                    rows = props.rows;\n\n                var mdPlan = row.original.markdown_id,\n                    mainGrp = _.find(rows, {\n                  isSelected: true,\n                  original: {\n                    markdown_id: mdPlan\n                  }\n                }),\n                    checkboxDisabled = mainGrp && !row.isSelected ? true : false;\n\n                return row.canExpand ? React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 497\n                  },\n                  __self: this\n                }, React.createElement(IndeterminateCheckbox, Object.assign({\n                  row: row.id,\n                  onClick: function onClick() {\n                    _this.onScenarioSelection(row);\n                  },\n                  disabled: checkboxDisabled\n                }, row.getToggleRowSelectedProps(), {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 498\n                  },\n                  __self: this\n                }))) : null;\n              }\n            });\n            setDefaultColDef.splice(0, 0, {\n              Header: 'MD Plan',\n              accessor: 'md_plan',\n              disableGroupBy: true,\n              enableRowSpan: 'markdown_id',\n              filter: function filter(rows, id, filterType) {\n                return rows.filter(function (row) {\n                  return row.original.md_plan ? row.original.md_plan.startsWith(filterType) : null;\n                });\n              },\n              Cell: function Cell(_ref2) {\n                var row = _ref2.row;\n                return React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 528\n                  },\n                  __self: this\n                }, React.createElement(\"span\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 529\n                  },\n                  __self: this\n                }, row.original.md_plan ? row.original.md_plan : null), React.createElement(\"div\", {\n                  className: \"mt-1 mb-2\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 530\n                  },\n                  __self: this\n                }, row.original.md_plan ? React.createElement(\"button\", {\n                  className: \"btn btn-secondary\",\n                  onClick: function onClick() {\n                    // this.props.updateSidebar('/vis/Markdown/create-markdown');\n                    // this.props.history.push({\n                    //   pathname: `/vis/Markdown/create-markdown`,\n                    //   state: { isEdit: true, planId: row.original.markdown_id },\n                    // });\n                    _this.setState({\n                      showEditModal: true,\n                      selectedPlanDetails: row.original\n                    });\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 532\n                  },\n                  __self: this\n                }, React.createElement(\"span\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 542\n                  },\n                  __self: this\n                }, React.createElement(\"i\", {\n                  className: \"fa fa-pencil color-blue\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 543\n                  },\n                  __self: this\n                }, \"Edit\"))) : ''));\n              },\n              align: 'center',\n              downloadValue: 'plan'\n            });\n\n            _this.setState({\n              columns: setDefaultColDef,\n              selLabels: setDefaultLabel,\n              selectedItems: selectedItems,\n              columnOptions: options\n            });\n          })();\n        }\n\n        if (resp && !resp.markdown_data.length) {\n          _this.setState({\n            textStr: 'No data found. Please try with different filters.'\n          });\n        }\n      });\n    };\n\n    _this.showEditModalHandler = function (val) {\n      if (!val) document.body.setAttribute('style', '');\n\n      _this.setState({\n        showEditModal: val\n      });\n    };\n\n    _this.state = {\n      switchedPlans: false,\n      textStr: 'Please select filters to show Markdown plans',\n      firstCardText: 'KPIs to be decided',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month',\n      selectedItems: [],\n      columnOptions: [],\n      selLabels: [],\n      columns: [],\n      selectedRows: [],\n      tableData: [],\n      showEditModal: false,\n      selectedPlanDetails: null\n    };\n    return _this;\n  }\n\n  _createClass(FinalizeMarkdown, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.setMarkDowns([]);\n      this.props.setMDColumnHeaders({});\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateTableData(this.state.switchedPlans);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var finalizeMarkdownData = this.props.finalizeMarkdownData;\n\n      if (!_.isEmpty(finalizeMarkdownData) && !_.isEqual(finalizeMarkdownData, prevProps.finalizeMarkdownData)) {\n        this.updateTableData(this.state.switchedPlans);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(LoadingOverlay, {\n        loader: this.props.getOverlayLoaderState,\n        spinner: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"createMd pl-2 pr-2 finalize-comp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card CalendarMain promoCalendarDiv1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"font-size-14  pad-10 markdown-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }, \"MarkSmart /\", React.createElement(\"span\", {\n        className: \"font-bold color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, \"Finalize\"))), React.createElement(\"hr\", {\n        className: \"mb-2\",\n        style: {\n          marginTop: '-4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"filterCol mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        },\n        __self: this\n      }, React.createElement(Filters, {\n        onReset: function onReset(e) {\n          _this2.setState({\n            textStr: 'Please select filters to show Markdown plans'\n          });\n\n          _this2.props.onResetFinalizeTable(e);\n        },\n        hierarchy: this.state.filters,\n        onFilter: this.onFilter,\n        dateRange: true,\n        filtersOptions: [{\n          type: 'hierarchy1',\n          isMandatory: true,\n          isMultiple: false,\n          isHierarchy: true\n        }, {\n          type: 'hierarchy2',\n          isMandatory: true,\n          isMultiple: true,\n          isHierarchy: true\n        }, {\n          type: 'hierarchy3',\n          isMandatory: false,\n          isMultiple: true,\n          isHierarchy: true\n        }, {\n          type: 'hierarchy4',\n          isMandatory: false,\n          isMultiple: true,\n          isHierarchy: true\n        }, {\n          type: 'hierarchy5',\n          isMandatory: false,\n          isMultiple: true,\n          isHierarchy: true\n        }, {\n          type: 'hierarchy7',\n          isMandatory: false,\n          isMultiple: true,\n          isHierarchy: true\n        }, {\n          type: 'hierarchy9',\n          isMandatory: false,\n          isMultiple: true,\n          isHierarchy: true\n        }, {\n          type: 'hierarchy10',\n          isMandatory: false,\n          isMultiple: true,\n          isHierarchy: true\n        }, {\n          type: 'hierarchy11',\n          isMandatory: false,\n          isMultiple: true,\n          isHierarchy: true\n        }, {\n          type: 'hierarchy12',\n          isMandatory: false,\n          isMultiple: true,\n          isHierarchy: true\n        }, {\n          type: 'stores',\n          isMandatory: false,\n          isMultiple: true\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }))), this.props.finalizeMarkdownData && this.props.finalizeMarkdownData.length ? React.createElement(\"div\", {\n        className: \"card pl-3 pr-3 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715\n        },\n        __self: this\n      }, React.createElement(ColSelBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716\n        },\n        __self: this\n      }, this.props.getColumnHeaders && Object.keys(this.props.getColumnHeaders).length && React.createElement(ColumnSelection, {\n        onHandleCheckBox: this.onHandleCheckBox,\n        columnHeaders: this.props.getColumnHeaders,\n        onHandleSelect: this.onHandleSelect,\n        columnOptions: this.state.columnOptions,\n        selectedItems: this.state.selectedItems,\n        selLabels: this.state.selLabels,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"switchCss\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        checked: this.state.switchedPlans,\n        onSwitchHandler: this.isSwitchedPaln,\n        leftLabel: \"Unedited Plans\",\n        rightLabel: \"Edited Plans\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          padding: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        disabled: !this.state.selectedRows.length,\n        onClick: this.sendForApprove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736\n        },\n        __self: this\n      }, \"Approve\"), \"\\xA0\", React.createElement(\"button\", {\n        disabled: !this.state.selectedRows.length,\n        className: \"btn btn-primary\",\n        onClick: this.sendForReject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743\n        },\n        __self: this\n      }, \"Reject\"))), React.createElement(DataTable, {\n        columns: this.state.columns,\n        isSort: true // isColumnFilter={true}\n        ,\n        data: this.state.tableData //this.props.finalizeMarkdownData}\n        ,\n        updateMyData: this.updateMyData,\n        isPagination: true,\n        getColumnProps: function getColumnProps(column) {\n          return {// onClick: () => this.onColumnClick(column),\n          };\n        },\n        getCellProps: function getCellProps(cellInfo) {\n          return {\n            style: {\n              backgroundColor: _this2.bgmCol(cellInfo),\n              color: _this2.txtCol(cellInfo),\n              // textAlign: \"center\",\n              margin: '4px 4px',\n              borderRadius: '2px'\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751\n        },\n        __self: this\n      })) : React.createElement(NoData, {\n        description: this.state.textStr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773\n        },\n        __self: this\n      })), this.state.showEditModal ? React.createElement(EditMDModal, {\n        showEditModalHandler: this.showEditModalHandler,\n        selectedPlanDetails: this.state.selectedPlanDetails,\n        from: \"finalize\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return FinalizeMarkdown;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    finalizeMarkdownData: store.draftStatusReducer.markdowns,\n    getOverlayLoaderState: store.loaderReducer.overlayLoaderState,\n    getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    getMetricOptions: store.finalizeReducer.metricOptions,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    selectedHierarchy9: store.filtersReducer.selectedHierarchy9,\n    selectedHierarchy10: store.filtersReducer.selectedHierarchy10,\n    selectedHierarchy11: store.filtersReducer.selectedHierarchy11,\n    selectedHierarchy12: store.filtersReducer.selectedHierarchy12,\n    selectedCustomStyleGroup: store.filtersReducer.selectedCustomStyleGroup,\n    selectedCustomStoreGroup: store.filtersReducer.selectedCustomStoreGroup,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    selectedStores: store.filtersReducer.selectedStores\n  };\n};\n\nvar mapActionToProps = {\n  getMarkdowns: FinalizeAction.getMarkdowns,\n  setMarkDowns: FinalizeAction.setMarkDowns,\n  setMDColumnHeaders: FinalizeAction.setMDColumnHeaders,\n  sendForApproval: FinalizeAction.sendForApproval,\n  onResetFinalizeTable: FinalizeAction.onResetFinalizeTable,\n  updateSidebar: plannedReportsAction.updateSidebar\n};\nexport default connect(mapStateToProps, mapActionToProps)(withRouter(withClearCache(FinalizeMarkdown)));\nvar ColSelBtn = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Finalize/FinalizeMarkdown.js"],"names":["React","Component","connect","withRouter","Filters","styled","LoadingOverlay","toast","NoData","FinalizeAction","plannedReportsAction","Coldef","_","cloneDeep","DataTable","ColumnSelection","AlertWarning","AlertSuccess","moment","card1Image","card2Image","card3Image","card4Image","IndeterminateCheckbox","toPercentage","toDollarWithlDraft","toUnitDraft","Switch","EditMDModal","withClearCache","FormatterStyling","props","value","val","val1","props1","FinalizeMarkdown","updateTableData","isEdited","finalizeMarkdownData","newTableData","filter","item","is_edited","isEqual","state","tableData","setState","findStatusColor","status","color","high","medium","low","bgmCol","cellInfo","column","id","row","original","md_status","bgCol","txtCol","sendForReject","msg","payload","markdown_data","selectedRows","map","i","arrLength","length","msgStr","scenario","md_plan","push","markdown_id","update_status","sendForApproval","then","resp","data","successMsg","join","info","autoClose","hideProgressBar","req","filters","hierarchy1","selectedHierarchy1","hierarchy2","selectedHierarchy2","hierarchy3","selectedHierarchy3","hierarchy4","selectedHierarchy4","hierarchy5","selectedHierarchy5","hierarchy7","selectedHierarchy7","hierarchy9","selectedHierarchy9","hierarchy10","selectedHierarchy10","hierarchy11","selectedHierarchy11","hierarchy12","selectedHierarchy12","store","selectedStores","startDate","format","endDate","getMarkdowns","catch","err","error","message","sendForApprove","selectedChannel","onActionSelection","rowData","foundEle","find","remove","onScenarioSelection","onHandleSelect","selOptions","headers","columns","metric","forEach","newTableCols","a","accessor","spliceAt","splice","Header","label","Aggregated","accessorName","Cell","parentId","Math","floor","parentRow","rows","toString","selectedItems","onHandleCheckBox","e","index","target","checked","selLabels","indexOf","labels","tempArr","getColumnHeaders","labelColumns","Object","keys","options","columnOptions","selectedLabel","selectedItemsClone","newSelectedItems","labelArr","includes","mandatoryFiltersVal","isSwitchedPaln","switchedPlans","onFilter","columnHeaders","defaultHeader","default","setDefaultColDef","col","toggle","setDefaultLabel","setDefaultColumnOptions","setDefaultColumnOptions1","setDefaultItems","colHeaders","labelArray","diff","A","B","groupByBoundary","mdPlan","mainGrp","isSelected","checkboxDisabled","canExpand","getToggleRowSelectedProps","disableGroupBy","enableRowSpan","filterType","startsWith","showEditModal","selectedPlanDetails","align","downloadValue","textStr","showEditModalHandler","document","body","setAttribute","firstCardText","firstCardFirstValue","firstCardSecondValue","secondCardFirstValue","secondCardSecondValue","thirdCardFirstValue","thirdCardSecondValue","fourthCardFirstValue","fourthCardSecondValue","cardWeekText","cardMonthText","setMarkDowns","setMDColumnHeaders","prevProps","isEmpty","getOverlayLoaderState","marginTop","onResetFinalizeTable","type","isMandatory","isMultiple","isHierarchy","padding","updateMyData","style","backgroundColor","margin","borderRadius","mapStateToProps","draftStatusReducer","markdowns","loaderReducer","overlayLoaderState","getMetricOptions","finalizeReducer","metricOptions","filtersReducer","selectedCustomStyleGroup","selectedCustomStoreGroup","mapActionToProps","updateSidebar","ColSelBtn","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Filters from '../../services/filters';\nimport './finalizeMarkdownStyle.css';\nimport styled from 'styled-components';\nimport LoadingOverlay from '../../utils/Loader';\nimport { toast } from 'react-toastify';\nimport NoData from '../noTableData';\nimport FinalizeAction from '../../actions/draftStausFinalizeAction';\nimport plannedReportsAction from '../../actions/plannedReportsAction';\n// import Coldef from './coldef';\nimport Coldef from '../draftStatus/draft/coldef';\nimport _ from 'lodash';\nimport cloneDeep from 'clone-deep';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport AlertWarning from '../../utils/AlertMessage/alertDanger';\nimport AlertSuccess from '../../utils/AlertMessage/alertSuccess';\nimport moment from 'moment';\nimport card1Image from '../../images/card1Image.png';\nimport card2Image from '../../images/card2Image.png';\nimport card3Image from '../../images/card3Image.png';\nimport card4Image from '../../images/card4Image.png';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox';\nimport { toPercentage, toDollarWithlDraft, toUnitDraft } from '../../helper/formatter';\nimport Switch from '../../services/toggleSwitch';\nimport EditMDModal from '../editMDModal';\nimport withClearCache from '../../ClearCache';\n\nfunction FormatterStyling(props, value, val) {\n  let val1 = val || val == 0 ? val : props.value;\n  let props1 = val || val == 0 ? { value: val } : props;\n  if (\n    value == 'pvh_units' ||\n    value == 'markdown_units' ||\n    value == 'overall_pvh_units' ||\n    value == 'overall_markdown_units'\n  ) {\n    return val1 || val1 == 0 ? toUnitDraft(props1) : '-';\n  } else if (value == 'margin_perc' || value == 'overall_margin_perc') {\n    return val1 || val1 == 0 ? toPercentage(props1) : '-';\n  } else if (\n    value == 'revenue$' ||\n    value == 'aur' ||\n    value == 'margin$' ||\n    value == 'aum' ||\n    value == 'overall_aum' ||\n    value == 'overall_revenue$' ||\n    value == 'overall_aur' ||\n    value == 'overall_margin$'\n  ) {\n    return val1 || val1 == 0 ? toDollarWithlDraft(props1) : '-';\n  }\n  return '-';\n}\nclass FinalizeMarkdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      switchedPlans: false,\n      textStr: 'Please select filters to show Markdown plans',\n      firstCardText: 'KPIs to be decided',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month',\n      selectedItems: [],\n      columnOptions: [],\n      selLabels: [],\n      columns: [],\n      selectedRows: [],\n      tableData: [],\n      showEditModal: false,\n      selectedPlanDetails: null,\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.setMarkDowns([]);\n    this.props.setMDColumnHeaders({});\n  }\n  componentDidMount() {\n    this.updateTableData(this.state.switchedPlans);\n  }\n  componentDidUpdate(prevProps) {\n    let { finalizeMarkdownData } = this.props;\n    if (\n      !_.isEmpty(finalizeMarkdownData) &&\n      !_.isEqual(finalizeMarkdownData, prevProps.finalizeMarkdownData)\n    ) {\n      this.updateTableData(this.state.switchedPlans);\n    }\n  }\n  updateTableData = (isEdited) => {\n    let { finalizeMarkdownData } = this.props;\n    let newTableData = _.filter(finalizeMarkdownData, (item) => item.is_edited === isEdited);\n\n    if (!_.isEqual(this.state.tableData, newTableData)) this.setState({ tableData: newTableData });\n  };\n  findStatusColor = (status, color) => {\n    switch (status) {\n      case 'high':\n        return color.high;\n      case 'medium':\n        return color.medium;\n      case 'low':\n        return color.low;\n      default:\n        break;\n    }\n  };\n\n  bgmCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let bgCol = {\n      high: '#F8E8E8',\n      medium: '#FCF3D1',\n      low: '#E8F8F5',\n    };\n    return this.findStatusColor(status, bgCol);\n  };\n  txtCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let txtCol = {\n      high: '#D38485',\n      medium: '#F0C53A',\n      low: '#66CFBA',\n    };\n    return this.findStatusColor(status, txtCol);\n  };\n  sendForReject = () => {\n    let msg = [];\n    let payload = {\n      markdown_data: this.state.selectedRows.map((item, i) => {\n        let arrLength = this.state.selectedRows.length;\n        let msgStr = `Scenario '${item.scenario}' of Plan '${item.md_plan}'${\n          i === arrLength - 2 ? ' and ' : i === arrLength - 1 ? '' : ', '\n        }`;\n        msg.push(msgStr);\n        return {\n          id: item.markdown_id,\n          scenario: item.scenario,\n        };\n      }),\n      update_status: 'rejected',\n    };\n    this.props\n      .sendForApproval(payload)\n      .then((resp) => {\n        if (resp && resp.data.status == true) {\n          let successMsg = `${msg.join('')} has been Rejected`;\n          toast.info(successMsg, {\n            autoClose: 15000,\n            hideProgressBar: true,\n          });\n          let req = {\n            filters: {\n              hierarchy1: this.props.selectedHierarchy1,\n              hierarchy2: this.props.selectedHierarchy2,\n              hierarchy3: this.props.selectedHierarchy3,\n              hierarchy4: this.props.selectedHierarchy4,\n              hierarchy5: this.props.selectedHierarchy5,\n              hierarchy7: this.props.selectedHierarchy7,\n              hierarchy9: this.props.selectedHierarchy9,\n              hierarchy10: this.props.selectedHierarchy10,\n              hierarchy11: this.props.selectedHierarchy11,\n              hierarchy12: this.props.selectedHierarchy12,\n              store: this.props.selectedStores,\n              // customStyleGroup: this.props.selectedCustomStyleGroup,\n              // customStoreGroup: this.props.selectedCustomStoreGroup,\n              // tiers: this.props.selectedStores,\n            },\n            startDate: this.props.startDate\n              ? moment(this.props.startDate).format('YYYY-MM-DD')\n              : null,\n            endDate: this.props.endDate ? moment(this.props.endDate).format('YYYY-MM-DD') : null,\n            status: 'pending',\n          };\n          // if (this.props.selectedChannel[0] === 'Web') req.filters['ecom_flag'] = [1];\n          // if (this.props.selectedChannel[0] === 'Outlet') req.filters['retail_flag'] = [1];\n\n          this.props.getMarkdowns(req);\n          this.setState({\n            selectedRows: [],\n          });\n        }\n      })\n      .catch((err) => {\n        toast.error(err.message, {\n          autoClose: 15000,\n          hideProgressBar: true,\n        });\n      });\n  };\n  sendForApprove = () => {\n    let msg = [];\n    let payload = {\n      markdown_data: this.state.selectedRows.map((item, i) => {\n        let arrLength = this.state.selectedRows.length;\n        let msgStr = `Scenario '${item.scenario}' of Plan '${item.md_plan}'${\n          i === arrLength - 2 ? ' and ' : i === arrLength - 1 ? '' : ', '\n        }`;\n        msg.push(msgStr);\n        return {\n          id: item.markdown_id,\n          scenario: item.scenario,\n        };\n      }),\n      update_status: 'approved',\n    };\n\n    this.props\n      .sendForApproval(payload)\n      .then((resp) => {\n        if (resp && resp.data.status == true) {\n          let successMsg = `${msg.join('')} has been Finalized Successfully`;\n          toast.info(successMsg, {\n            autoClose: 15000,\n            hideProgressBar: true,\n          });\n          let req = {\n            filters: {\n              hierarchy1: this.props.selectedHierarchy1,\n              hierarchy2: this.props.selectedHierarchy2,\n              hierarchy3: this.props.selectedHierarchy3,\n              hierarchy4: this.props.selectedHierarchy4,\n              hierarchy5: this.props.selectedHierarchy5,\n              hierarchy7: this.props.selectedHierarchy7,\n              hierarchy9: this.props.selectedHierarchy9,\n              hierarchy10: this.props.selectedHierarchy10,\n              hierarchy11: this.props.selectedHierarchy11,\n              hierarchy12: this.props.selectedHierarchy12,\n              // customStyleGroup: this.props.selectedCustomStyleGroup,\n              // customStoreGroup: this.props.selectedCustomStoreGroup,\n              store: this.props.selectedStores,\n            },\n            startDate: this.props.startDate\n              ? moment(this.props.startDate).format('YYYY-MM-DD')\n              : null,\n            endDate: this.props.endDate ? moment(this.props.endDate).format('YYYY-MM-DD') : null,\n            status: 'pending',\n          };\n          if (this.props.selectedChannel[0] === 'Web') req.filters['ecom_flag'] = [1];\n          if (this.props.selectedChannel[0] === 'Outlet') req.filters['retail_flag'] = [1];\n\n          this.props.getMarkdowns(req);\n          this.setState({\n            selectedRows: [],\n          });\n        }\n      })\n      .catch((err) => {\n        toast.error(err.message, {\n          autoClose: 15000,\n          hideProgressBar: true,\n        });\n      });\n  };\n  onActionSelection = (rowData) => {\n    let { selectedRows } = this.state;\n    let foundEle = _.find(selectedRows, { markdown_id: rowData.original.markdown_id });\n    if (foundEle) {\n      _.remove(selectedRows, (item) => item.markdown_id === rowData.original.markdown_id);\n    } else {\n      selectedRows.push(rowData.original);\n    }\n    this.setState({\n      selectedRows,\n    });\n  };\n\n  onScenarioSelection = (rowData) => {\n    let { selectedRows } = this.state;\n    let foundEle = _.find(selectedRows, { markdown_id: rowData.original.markdown_id });\n    if (foundEle) {\n      _.remove(selectedRows, (item) => item.markdown_id === rowData.original.markdown_id);\n    } else {\n      selectedRows.push(rowData.original);\n    }\n    this.setState({\n      selectedRows,\n    });\n  };\n  onHandleSelect = (selOptions) => {\n    let headers = _.cloneDeep(this.state.columns);\n    _.remove(headers, (item) => item.metric);\n    selOptions.forEach((item) => {\n      let newTableCols = headers.filter((a) => {\n        return a.accessor === item.value;\n      });\n      if (newTableCols.length == 0) {\n        let spliceAt = headers.length - 1;\n        headers.splice(spliceAt, 0, {\n          Header: item.label,\n          accessor: item.value,\n          Aggregated: (props) => {\n            let accessorName = `overall_${item.value}`;\n            let val = props.row.original[accessorName];\n            return FormatterStyling(props, accessorName, val);\n          },\n\n          Cell: (props) => {\n            let parentId = Math.floor(props.row.id);\n            let parentRow = _.find(props.rows, { id: parentId.toString() });\n            return FormatterStyling(props, item.value);\n          },\n          metric: true,\n        });\n      }\n    });\n    this.setState({\n      columns: headers,\n      selectedItems: selOptions,\n    });\n  };\n\n  onHandleCheckBox = (e, label, index) => {\n    //adding\n    if (e.target.checked) {\n      if (this.state.selLabels.indexOf(label) === -1) {\n        let labels = [...this.state.selLabels, label];\n        let tempArr = [];\n        labels.forEach((label) => {\n          let columns = this.props.getColumnHeaders[label];\n          let labelColumns = Object.keys(columns);\n          let options = labelColumns.map((label) => {\n            return {\n              label: label,\n              value: columns[label],\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selLabels: labels,\n          columnOptions: tempArr,\n        });\n      }\n    } else {\n      //removing\n      let index = this.state.selLabels.indexOf(label);\n      if (index !== -1) {\n        let selectedLabel = _.cloneDeep(this.state.selLabels);\n        selectedLabel.splice(index, 1);\n        let tempArr = [];\n        selectedLabel.forEach((label) => {\n          let columns = this.props.getColumnHeaders[label];\n          let labelColumns = Object.keys(columns);\n          let options = labelColumns.map((label) => {\n            return {\n              label: label,\n              value: columns[label],\n            };\n          });\n          tempArr.push(...options);\n        });\n\n        let selectedItemsClone = _.cloneDeep(this.state.selectedItems);\n        let newSelectedItems = [];\n        let labelArr = Object.keys(this.props.getColumnHeaders[label]);\n        selectedItemsClone.forEach((item) => {\n          if (!labelArr.includes(item.label)) {\n            newSelectedItems.push(item);\n          }\n        });\n\n        this.onHandleSelect(newSelectedItems);\n        this.setState({\n          selLabels: selectedLabel,\n          columnOptions: tempArr,\n          selectedItems: newSelectedItems,\n        });\n      }\n    }\n  };\n  mandatoryFiltersVal = () => {\n    return (\n      this.props.selectedHierarchy1 &&\n      this.props.selectedHierarchy2.length &&\n      this.props.startDate &&\n      this.props.endDate\n    );\n  };\n  isSwitchedPaln = (val) => {\n    this.updateTableData(val);\n    this.setState({\n      switchedPlans: val,\n    });\n  };\n  onFilter = ({ filters, startDate, endDate }) => {\n    // if (!this.mandatoryFiltersVal()) {\n    //   toast.error(`Please select mandatory filters`, {\n    //     autoClose: 15000,\n    //     hideProgressBar: true,\n    //   });\n    //   return;\n    // }\n    let payload = {\n      filters: {\n        hierarchy1: filters.hierarchy1,\n        hierarchy2: filters.hierarchy2,\n        hierarchy3: filters.hierarchy3,\n        hierarchy4: filters.hierarchy4,\n        hierarchy5: filters.hierarchy5, // ? filters.hierarchy5 : [],\n        hierarchy7: filters.hierarchy7,\n        hierarchy9: filters.hierarchy9,\n        hierarchy10: filters.hierarchy10,\n        hierarchy11: filters.hierarchy11,\n        hierarchy12: filters.hierarchy12,\n        store: this.props.selectedStores,\n\n        // customStyleGroup: this.props.selectedCustomStyleGroup,\n        // customStoreGroup: this.props.selectedCustomStoreGroup,\n      },\n      startDate: this.props.startDate ? moment(this.props.startDate).format('YYYY-MM-DD') : null,\n      endDate: this.props.endDate ? moment(this.props.endDate).format('YYYY-MM-DD') : null,\n      status: 'pending',\n    };\n    // if (this.props.selectedChannel[0] === 'Web') payload.filters['ecom_flag'] = [1];\n    // if (this.props.selectedChannel[0] === 'Outlet') payload.filters['retail_flag'] = [1];\n    this.getMarkdowns(payload);\n  };\n\n  getMarkdowns = (payload) => {\n    this.props.getMarkdowns(payload).then((resp) => {\n      if (resp && resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n        let defaultHeader = Object.keys(resp.columnHeaders.default);\n\n        let setDefaultColDef = Coldef().filter(\n          (col) =>\n            defaultHeader.includes(col.Header) ||\n            col.Header === 'Time Period' ||\n            col.Header === 'Actions' ||\n            col.id === 'expander' ||\n            // col.accessor === 'sell_through' ||\n            (this.state.toggle && col.accessor === 'status')\n        );\n        let setDefaultLabel = [];\n        let setDefaultColumnOptions = [];\n        let setDefaultColumnOptions1 = [];\n        let setDefaultItems = [];\n        let colHeaders = _.cloneDeep(resp.columnHeaders);\n        let labels = Object.keys(colHeaders);\n        labels.splice(labels.indexOf('fixed'), 1);\n        labels.splice(labels.indexOf('default'), 1);\n        for (const label of labels) {\n          let labelArray = Object.keys(resp.columnHeaders[label]);\n          function diff(A = labelArray, B = defaultHeader) {\n            return A.filter(function (a) {\n              return B.indexOf(a) !== -1;\n            });\n          }\n\n          if (diff().length) {\n            setDefaultColumnOptions.push(...Object.keys(resp.columnHeaders[label]));\n            setDefaultColumnOptions1.push(resp.columnHeaders[label]);\n            setDefaultItems.push(...diff());\n            setDefaultLabel.push(label);\n          }\n        }\n        let options = setDefaultColumnOptions.map((label) => {\n          let find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n          return {\n            label: label,\n            value: find,\n          };\n        });\n        let selectedItems = setDefaultItems.map((label) => {\n          let find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n          return {\n            label: label,\n            value: find,\n          };\n        });\n        setDefaultColDef.push({\n          id: 'selection',\n          groupByBoundary: true,\n          Header: 'Actions',\n          // fixed: 'left',\n          Cell: (props) => {\n            let { row, rows } = props;\n            let mdPlan = row.original.markdown_id,\n              mainGrp = _.find(rows, {\n                isSelected: true,\n                original: { markdown_id: mdPlan },\n              }),\n              checkboxDisabled = mainGrp && !row.isSelected ? true : false;\n\n            return row.canExpand ? (\n              <div>\n                <IndeterminateCheckbox\n                  row={row.id}\n                  onClick={() => {\n                    this.onScenarioSelection(row);\n                  }}\n                  disabled={checkboxDisabled}\n                  {...row.getToggleRowSelectedProps()}\n                />\n                {/* <span className=\"ml-3 align-top\">\n                  <i\n                    onClick={() =>\n                      this.setState({ showEditModal: true, selectedPlanDetails: row.original })\n                    }\n                    className=\"fa fa-pencil color-blue\"\n                  />\n                </span> */}\n              </div>\n            ) : null;\n          },\n        });\n        setDefaultColDef.splice(0, 0, {\n          Header: 'MD Plan',\n          accessor: 'md_plan',\n          disableGroupBy: true,\n          enableRowSpan: 'markdown_id',\n          filter: (rows, id, filterType) =>\n            rows.filter((row) => {\n              return row.original.md_plan ? row.original.md_plan.startsWith(filterType) : null;\n            }),\n          Cell: ({ row }) => (\n            <div>\n              <span>{row.original.md_plan ? row.original.md_plan : null}</span>\n              <div className=\"mt-1 mb-2\">\n                {row.original.md_plan ? (\n                  <button\n                    className=\"btn btn-secondary\"\n                    onClick={() => {\n                      // this.props.updateSidebar('/vis/Markdown/create-markdown');\n                      // this.props.history.push({\n                      //   pathname: `/vis/Markdown/create-markdown`,\n                      //   state: { isEdit: true, planId: row.original.markdown_id },\n                      // });\n                      this.setState({ showEditModal: true, selectedPlanDetails: row.original });\n                    }}>\n                    <span>\n                      <i className=\"fa fa-pencil color-blue\">Edit</i>\n                    </span>\n                  </button>\n                ) : (\n                  ''\n                )}\n              </div>\n            </div>\n          ),\n          align: 'center',\n          downloadValue: 'plan',\n        });\n        this.setState({\n          columns: setDefaultColDef,\n          selLabels: setDefaultLabel,\n          selectedItems: selectedItems,\n          columnOptions: options,\n        });\n      }\n\n      if (resp && !resp.markdown_data.length) {\n        this.setState({\n          textStr: 'No data found. Please try with different filters.',\n        });\n      }\n    });\n  };\n\n  showEditModalHandler = (val) => {\n    if (!val) document.body.setAttribute('style', '');\n    this.setState({ showEditModal: val });\n  };\n\n  render() {\n    return (\n      <LoadingOverlay loader={this.props.getOverlayLoaderState} spinner>\n        <div className=\"createMd pl-2 pr-2 finalize-comp\">\n          <div className=\"card CalendarMain promoCalendarDiv1 mt-3\">\n            <div>\n              <h4 className=\"font-size-14  pad-10 markdown-heading\">\n                MarkSmart /<span className=\"font-bold color-blue\">Finalize</span>\n              </h4>\n            </div>\n            <hr\n              className=\"mb-2\"\n              style={{\n                marginTop: '-4px',\n              }}\n            />\n\n            <div className=\"filterCol mb-4\">\n              <Filters\n                onReset={(e) => {\n                  this.setState({\n                    textStr: 'Please select filters to show Markdown plans',\n                  });\n                  this.props.onResetFinalizeTable(e);\n                }}\n                hierarchy={this.state.filters}\n                onFilter={this.onFilter}\n                dateRange\n                filtersOptions={[\n                  {\n                    type: 'hierarchy1',\n                    isMandatory: true,\n                    isMultiple: false,\n                    isHierarchy: true,\n                  },\n                  {\n                    type: 'hierarchy2',\n                    isMandatory: true,\n                    isMultiple: true,\n                    isHierarchy: true,\n                  },\n                  {\n                    type: 'hierarchy3',\n                    isMandatory: false,\n                    isMultiple: true,\n                    isHierarchy: true,\n                  },\n                  {\n                    type: 'hierarchy4',\n                    isMandatory: false,\n                    isMultiple: true,\n                    isHierarchy: true,\n                  },\n                  {\n                    type: 'hierarchy5',\n                    isMandatory: false,\n                    isMultiple: true,\n                    isHierarchy: true,\n                  },\n                  { type: 'hierarchy7', isMandatory: false, isMultiple: true, isHierarchy: true },\n\n                  { type: 'hierarchy9', isMandatory: false, isMultiple: true, isHierarchy: true },\n                  { type: 'hierarchy10', isMandatory: false, isMultiple: true, isHierarchy: true },\n                  { type: 'hierarchy11', isMandatory: false, isMultiple: true, isHierarchy: true },\n                  { type: 'hierarchy12', isMandatory: false, isMultiple: true, isHierarchy: true },\n                  { type: 'stores', isMandatory: false, isMultiple: true },\n                ]}\n              />\n            </div>\n          </div>\n          {/* <div className=\"row\" style={{ marginTop: '15px' }}>\n          <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n            <CardComponent\n              cardImage={card1Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.firstCardFirstValue}\n              cardValueSecond={this.state.firstCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border1',\n                cardValue: 'card1-value',\n                cardImg: 'card1-img',\n                cardValueSecond: 'card-value-second',\n                cardSubHeading: 'card-subHeading',\n              }}\n            />\n          </div>\n          <div className=\"col-md-3 col-sm-3 col-xs-6\">\n            <CardComponent\n              cardImage={card2Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.secondCardFirstValue}\n              cardValueSecond={this.state.secondCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border2',\n                cardValue: 'card1-value',\n                cardImg: 'card2-img',\n                cardValueSecond: 'card-value-second',\n                cardSubHeading: 'card-subHeading',\n              }}\n            />\n          </div>\n          <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n            <CardComponent\n              cardImage={card3Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.thirdCardFirstValue}\n              cardValueSecond={this.state.thirdCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border3',\n                cardValue: 'card1-value',\n                cardImg: 'card3-img',\n                cardValueSecond: 'card-value-second',\n                cardSubHeading: 'card-subHeading',\n              }}\n            />\n          </div>\n          <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n            <CardComponent\n              cardImage={card4Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.fourthCardFirstValue}\n              cardValueSecond={this.state.fourthCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border4',\n                cardValue: 'card1-value',\n                cardImg: 'card4-img',\n              }}\n            />\n          </div>\n        </div> */}\n          {this.props.finalizeMarkdownData && this.props.finalizeMarkdownData.length ? (\n            <div className=\"card pl-3 pr-3 mt-3\">\n              <ColSelBtn>\n                {this.props.getColumnHeaders && Object.keys(this.props.getColumnHeaders).length && (\n                  <ColumnSelection\n                    onHandleCheckBox={this.onHandleCheckBox}\n                    columnHeaders={this.props.getColumnHeaders}\n                    onHandleSelect={this.onHandleSelect}\n                    columnOptions={this.state.columnOptions}\n                    selectedItems={this.state.selectedItems}\n                    selLabels={this.state.selLabels}\n                  />\n                )}\n                <div className=\"switchCss\">\n                  <Switch\n                    checked={this.state.switchedPlans}\n                    onSwitchHandler={this.isSwitchedPaln}\n                    leftLabel=\"Unedited Plans\"\n                    rightLabel=\"Edited Plans\"\n                  />\n                </div>\n                <div style={{ padding: '1rem' }}>\n                  <button\n                    className=\"btn btn-primary\"\n                    disabled={!this.state.selectedRows.length}\n                    onClick={this.sendForApprove}>\n                    Approve\n                  </button>\n                  &nbsp;\n                  <button\n                    disabled={!this.state.selectedRows.length}\n                    className=\"btn btn-primary\"\n                    onClick={this.sendForReject}>\n                    Reject\n                  </button>\n                </div>\n              </ColSelBtn>\n              <DataTable\n                columns={this.state.columns}\n                isSort={true}\n                // isColumnFilter={true}\n                data={this.state.tableData} //this.props.finalizeMarkdownData}\n                updateMyData={this.updateMyData}\n                isPagination={true}\n                getColumnProps={(column) => ({\n                  // onClick: () => this.onColumnClick(column),\n                })}\n                getCellProps={(cellInfo) => ({\n                  style: {\n                    backgroundColor: this.bgmCol(cellInfo),\n                    color: this.txtCol(cellInfo),\n                    // textAlign: \"center\",\n                    margin: '4px 4px',\n                    borderRadius: '2px',\n                  },\n                })}\n              />\n            </div>\n          ) : (\n            <NoData description={this.state.textStr} />\n          )}\n        </div>\n\n        {this.state.showEditModal ? (\n          <EditMDModal\n            showEditModalHandler={this.showEditModalHandler}\n            selectedPlanDetails={this.state.selectedPlanDetails}\n            from=\"finalize\"\n          />\n        ) : null}\n      </LoadingOverlay>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    finalizeMarkdownData: store.draftStatusReducer.markdowns,\n    getOverlayLoaderState: store.loaderReducer.overlayLoaderState,\n    getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    getMetricOptions: store.finalizeReducer.metricOptions,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    selectedHierarchy9: store.filtersReducer.selectedHierarchy9,\n    selectedHierarchy10: store.filtersReducer.selectedHierarchy10,\n    selectedHierarchy11: store.filtersReducer.selectedHierarchy11,\n    selectedHierarchy12: store.filtersReducer.selectedHierarchy12,\n    selectedCustomStyleGroup: store.filtersReducer.selectedCustomStyleGroup,\n    selectedCustomStoreGroup: store.filtersReducer.selectedCustomStoreGroup,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    selectedStores: store.filtersReducer.selectedStores,\n  };\n};\n\nconst mapActionToProps = {\n  getMarkdowns: FinalizeAction.getMarkdowns,\n  setMarkDowns: FinalizeAction.setMarkDowns,\n  setMDColumnHeaders: FinalizeAction.setMDColumnHeaders,\n  sendForApproval: FinalizeAction.sendForApproval,\n  onResetFinalizeTable: FinalizeAction.onResetFinalizeTable,\n  updateSidebar: plannedReportsAction.updateSidebar,\n};\nexport default connect(\n  mapStateToProps,\n  mapActionToProps\n)(withRouter(withClearCache(FinalizeMarkdown)));\nconst ColSelBtn = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n"]},"metadata":{},"sourceType":"module"}