{"ast":null,"code":"import _slicedToArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/InputWithPercentageTag.js\";\nimport React, { useState, useEffect } from 'react';\n\nvar InputWithPercentageTag = function InputWithPercentageTag(rowObj, props) {\n  var _useState = useState({\n    col: rowObj.col,\n    value: rowObj.value\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1]; // useEffect(() => {\n  //   rowObj.changedRow(state);\n  // });\n\n\n  useEffect(function () {\n    if (rowObj.value !== state.value) {\n      var obj = {\n        col: rowObj.col,\n        value: rowObj.value\n      };\n      setState(obj);\n    }\n  });\n\n  var handleChange = function handleChange(event) {\n    var obj = {\n      col: event.target.name,\n      value: event.target.value\n    };\n    setState(obj);\n    obj.rowNumber = rowObj.rowNumber;\n    rowObj.changedRow(obj);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"col \".concat(props.offerType ? 'ppWidth' : 'percenWidth'),\n    key: rowObj.rowNumber + 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group\",\n    style: {\n      width: '90%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, console.log(props.offerType, 'anuuu'), props.offerType == 'pp' ? React.createElement(\"div\", {\n    class: \"input-group-prepend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    class: \"input-group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"$\")) : null, React.createElement(\"input\", {\n    type: \"number\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    name: state.col,\n    step: \"5\" // onChange={(e) => this.onComparisonInputChange(e, col, row, rowNumber, index, i)}\n    ,\n    className: \"form-control border-style\",\n    value: state.value,\n    disabled: true // disabled={rowObj.row.scenarios == 'Optimal' ? true : false}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, props.offerType == 'pp' ? React.createElement(\"button\", {\n    className: \"btn btn-side-percent\",\n    type: \"button\",\n    style: {\n      zIndex: 'unset'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"PP\") : React.createElement(\"button\", {\n    className: \"btn btn-side-percent\",\n    type: \"button\",\n    style: {\n      zIndex: 'unset'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-percent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })))));\n};\n\nexport default InputWithPercentageTag;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/InputWithPercentageTag.js"],"names":["React","useState","useEffect","InputWithPercentageTag","rowObj","props","col","value","state","setState","obj","handleChange","event","target","name","rowNumber","changedRow","offerType","width","console","log","e","zIndex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst InputWithPercentageTag = (rowObj, props) => {\n  const [state, setState] = useState({\n    col: rowObj.col,\n    value: rowObj.value,\n  });\n  // useEffect(() => {\n  //   rowObj.changedRow(state);\n  // });\n  useEffect(() => {\n    if (rowObj.value !== state.value) {\n      let obj = {\n        col: rowObj.col,\n        value: rowObj.value,\n      };\n      setState(obj);\n    }\n  });\n  const handleChange = (event) => {\n    let obj = {\n      col: event.target.name,\n      value: event.target.value,\n    };\n    setState(obj);\n    obj.rowNumber = rowObj.rowNumber;\n    rowObj.changedRow(obj);\n  };\n  return (\n    <div\n      className={`col ${props.offerType ? 'ppWidth' : 'percenWidth'}`}\n      key={rowObj.rowNumber + 1}>\n      <div className=\"input-group\" style={{ width: '90%' }}>\n        {console.log(props.offerType, 'anuuu')}\n        {props.offerType == 'pp' ? (\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">$</span>\n          </div>\n        ) : null}\n\n        <input\n          type=\"number\"\n          onChange={(e) => handleChange(e)}\n          name={state.col}\n          step=\"5\"\n          // onChange={(e) => this.onComparisonInputChange(e, col, row, rowNumber, index, i)}\n          className=\"form-control border-style\"\n          value={state.value}\n          disabled\n          // disabled={rowObj.row.scenarios == 'Optimal' ? true : false}\n        />\n        <div className=\"input-group-append\">\n          {props.offerType == 'pp' ? (\n            <button className=\"btn btn-side-percent\" type=\"button\" style={{ zIndex: 'unset' }}>\n              PP\n            </button>\n          ) : (\n            <button className=\"btn btn-side-percent\" type=\"button\" style={{ zIndex: 'unset' }}>\n              <i className=\"fa fa-percent\" />\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InputWithPercentageTag;\n"]},"metadata":{},"sourceType":"module"}