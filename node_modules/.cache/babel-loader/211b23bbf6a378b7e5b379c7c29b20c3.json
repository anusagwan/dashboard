{"ast":null,"code":"import _regeneratorRuntime from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/services/filters/index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { labels, filterType } from './config';\nimport Select from '../select';\nimport './index.css';\nimport { connect } from 'react-redux';\nimport DateRangePicker from '../RetailCalendarDatePicker';\nimport FilterActions from '../../actions/filtersAction';\nimport _ from 'lodash';\n\nvar Filters =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Filters, _Component);\n\n  function Filters(props) {\n    var _this;\n\n    _classCallCheck(this, Filters);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filters).call(this, props));\n\n    _this.handleInputChange = function (name, value, action) {\n      var inputs = _objectSpread({}, _this.state.inputs);\n\n      inputs[name] = value;\n\n      if (action.action === 'input-blur' || action.action === 'input-change') {\n        _this.setState({\n          inputs: inputs\n        });\n      }\n    };\n\n    _this.validateFilters = function (filterIndex, dateRange) {\n      var filtersOptions = _this.props.filtersOptions;\n\n      for (var i = 0; i < filterIndex; i++) {\n        var type = filtersOptions[i] && filtersOptions[i].type;\n        var nameCapitalized = type && type.charAt(0).toUpperCase() + type.slice(1); //capitalizing the name to match action/reducer name\n\n        if (filtersOptions[i] && filtersOptions[i].isMandatory && _.isEmpty(_this.props[\"selected\".concat(nameCapitalized)])) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    _this.actionCallHandler = function (func, isHierarchyNext, nextFilterName, req) {\n      var typeName = filterType[nextFilterName];\n      var reqObj = {\n        filters: req,\n        allowInactiveProducts: _this.props.allowInactiveProducts || false\n      };\n      if (isHierarchyNext) reqObj.hierarchyType = typeName;\n      if (!isHierarchyNext) reqObj.filterType = typeName;\n\n      _this.props[func](reqObj);\n    };\n\n    _this.filterOnFocusHandler = function (filterIndex, filterName, isHierarchy) {\n      var options = _this.props[filterName];\n      if (filterName && options && !_.isEmpty(_this.props[filterName]) || !_this.validateFilters(filterIndex)) //if filter options already exists or if all of the mandatory filters that comes before this filter is not selected , return\n        return;\n      var func = filterName !== 'stores' ? \"getHierarchyOptions\" : \"getStores\";\n      var req = {};\n\n      _.map(_this.props.filtersOptions, function (item, index) {\n        if (index < filterIndex) {\n          var nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n\n          var selected = _this.props[\"selected\".concat(nameCapitalized)]; // if (_.isEmpty(selected)) return; //uncomment if u want empty filters removed\n\n\n          req[item.type] = selected; //this goes as filters req obj in api calls\n        }\n      });\n\n      if (filterName && _this.props[func]) {\n        _this.actionCallHandler(func, isHierarchy, filterName, req); //calles next filters action, to get it's options\n\n      }\n    };\n\n    _this.getHierarchyOptions =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(val, filterIndex, currFilterName) {\n        var hierarchy, nameCapitalized, resetHierachies;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                !Array.isArray(val) && (val = [val]);\n                hierarchy = _.cloneDeep(_this.props.filtersOptions);\n                nameCapitalized = currFilterName && currFilterName.charAt(0).toUpperCase() + currFilterName.slice(1); //capitalizing the name to match action/reducer name\n\n                resetHierachies = {};\n\n                _.map(hierarchy, function (item, index) {\n                  if (index > filterIndex) {\n                    //&& index < 5) {\n                    resetHierachies[item.type] = null; //all fiters value, which comes after selected filter becomes null(reset)\n                  }\n                });\n\n                _this.setState(_objectSpread(_defineProperty({}, currFilterName, val), resetHierachies),\n                /*#__PURE__*/\n                _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee() {\n                  var actionName, req;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          actionName = \"setSelected\".concat(nameCapitalized);\n                          _context.next = 3;\n                          return _this.props[actionName](val.map(function (e) {\n                            return e.label;\n                          }));\n\n                        case 3:\n                          //handles setSelected action calls\n                          req = {};\n\n                          _.map(hierarchy, function (item, index) {\n                            if (index <= filterIndex) {\n                              var _nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n                              // if (_.isEmpty(this.props[`selected${nameCapitalized}`])) return; //uncomment if u want empty filters removed\n\n\n                              req[item.type] = _this.props[\"selected\".concat(_nameCapitalized)]; //this goes as filters req obj in api calls\n                            }\n                          });\n\n                          _this.setState({\n                            filters: _objectSpread({}, req)\n                          });\n\n                        case 6:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                })));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.setDrop = function (val) {\n      var req = {};\n      var selItems = val.map(function (item) {\n        return item.label;\n      });\n      req['drop'] = selItems;\n\n      _this.setState({\n        filters: _objectSpread({}, req),\n        drops: val\n      }, function () {\n        _this.props.setSelectedDrops(val.map(function (v) {\n          return v.value;\n        }));\n      });\n    };\n\n    _this.setStores = function (val) {\n      // let req = {};\n      var selItems = val.map(function (item) {\n        return item.label;\n      }); // req['stores'] = selItems;\n\n      var newFilters = _objectSpread({}, _this.state.filters, {\n        stores: selItems\n      });\n\n      _this.setState({\n        filters: newFilters,\n        stores: val\n      }, function () {\n        _this.props.setSelectedStores(val.map(function (v) {\n          return v.value;\n        }));\n      });\n    };\n\n    _this.reset = function () {\n      _this.setState({\n        drops: null,\n        startDate: null,\n        endDate: null,\n        hierarchy1: null,\n        hierarchy2: null,\n        hierarchy3: null,\n        hierarchy4: null,\n        hierarchy5: null,\n        hierarchy6: null,\n        hierarchy7: null,\n        hierarchy8: null,\n        hierarchy9: null,\n        hierarchy10: null,\n        stores: null\n      }, function () {\n        if (_this.props.from !== 'draft/status') _this.props.resetFilters(); ////////// handling reset issues rising bcs of tabs, only reset this component state, not reducer\n\n        _this.props.onReset && _this.props.onReset();\n      });\n    };\n\n    _this.onDatesChange = function (_ref3) {\n      var startDate = _ref3.startDate,\n          endDate = _ref3.endDate;\n\n      _this.setState({\n        startDate: startDate,\n        endDate: endDate\n      }, function () {\n        var weeks = [];\n\n        if (endDate) {\n          for (var i = startDate.clone(); i <= endDate; i = i.add(7, 'd')) {\n            weeks.push(i.week());\n          }\n        }\n\n        _this.props.setDateRange({\n          startDate: startDate && startDate.format('YYYY-MM-DD'),\n          endDate: endDate && endDate.format('YYYY-MM-DD'),\n          weeks: weeks\n        });\n      });\n    };\n\n    _this.state = {\n      inputs: {},\n      filters: {},\n      startDate: null,\n      endDate: null,\n      hierarchy1: props.retainFilters && props.selectedHierarchy1 ? props.selectedHierarchy1.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy2: props.retainFilters && props.selectedHierarchy2 ? props.selectedHierarchy2.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy3: props.retainFilters && props.selectedHierarchy3 ? props.selectedHierarchy3.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy4: props.retainFilters && props.selectedHierarchy4 ? props.selectedHierarchy4.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy5: props.retainFilters && props.selectedHierarchy5 ? props.selectedHierarchy5.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy6: props.retainFilters && props.selectedHierarchy6 ? props.selectedHierarchy6.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy7: props.retainFilters && props.selectedStyle ? props.selectedHierarchy7.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy8: props.retainFilters && props.selectedHierarchy8 && props.location.state ? props.location.state.styles.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy9: props.retainFilters && props.selectedHierarchy9 ? props.selectedHierarchy9.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy10: props.retainFilters && props.selectedHierarchy10 ? props.selectedHierarchy10.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      stores: props.retainFilters && props.selectedStores ? props.selectedStores.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null\n    };\n    !props.isEdit && props.getHierarchyOptions({\n      filters: {},\n      hierarchyType: 'HIERARCHY1',\n      allowInactiveProducts: _this.props.allowInactiveProducts || false\n    });\n    props.getStores({\n      filters: {\n        hierarchy1: [],\n        hierarchy2: [],\n        hierarchy3: [],\n        hierarchy4: [],\n        hierarchy5: [],\n        hierarchy6: [],\n        hierarchy7: [],\n        hierarchy8: [],\n        hierarchy9: [],\n        hierarchy10: []\n      }\n    });\n\n    if (props.retainFilters && props.location.state) {\n      props.setSelectedHierarchy8(props.location.state.styles, true);\n      props.setSelectedStores(_this.state.stores.map(function (e) {\n        return e.label;\n      }));\n    }\n\n    props.setRetainFilters(false);\n    return _this;\n  }\n\n  _createClass(Filters, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.filterReset) {\n        this.props.filterResetHandler(false);\n        this.reset(); // reset filters from configFilters\n      }\n\n      if (this.props.isEdit && _.isEmpty(this.state.hierarchy1) && this.props.editPlanDetails[0] && !_.isEmpty(this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj)) {\n        var _this$props$editPlanD = this.props.editPlanDetails[0].request_obj.filters,\n            hierarchy1 = _this$props$editPlanD.hierarchy1,\n            hierarchy2 = _this$props$editPlanD.hierarchy2,\n            hierarchy3 = _this$props$editPlanD.hierarchy3,\n            hierarchy4 = _this$props$editPlanD.hierarchy4,\n            hierarchy5 = _this$props$editPlanD.hierarchy5,\n            hierarchy6 = _this$props$editPlanD.hierarchy6,\n            hierarchy7 = _this$props$editPlanD.hierarchy7,\n            hierarchy8 = _this$props$editPlanD.hierarchy8,\n            hierarchy9 = _this$props$editPlanD.hierarchy9,\n            hierarchy10 = _this$props$editPlanD.hierarchy10,\n            tiers = _this$props$editPlanD.tiers;\n        this.props.presetFilters([hierarchy1, hierarchy2, hierarchy3, hierarchy4, hierarchy5, hierarchy6, hierarchy7, hierarchy8, hierarchy9, hierarchy10, tiers]);\n        this.setState({\n          hierarchy1: _.map(hierarchy1, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy2: _.map(hierarchy2, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy3: _.map(hierarchy3, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy4: _.map(hierarchy4, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy5: _.map(hierarchy5, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy6: _.map(hierarchy6, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy7: _.map(hierarchy7, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy8: _.map(hierarchy8, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy9: _.map(hierarchy9, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy10: _.map(hierarchy10, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          stores: _.map(tiers, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          })\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: this.props.isEdit ? 'row ml-4 mr-4 edit-markdown-filters' : 'row ml-4 mr-4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, this.props.drop && labels.drop && React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"mb-1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, labels.drop), React.createElement(Select, {\n        options: this.props.drops,\n        onChange: function onChange(option) {\n          return _this2.setDrop(option);\n        },\n        getOptionLabel: function getOptionLabel(option) {\n          return option.label + (option.year ? option.year : '');\n        },\n        value: this.state.drops,\n        isMulti: true // isDisabled={!this.props.drops || !this.props.drops.length}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      })), this.props.filtersOptions && this.props.filtersOptions.map(function (filter, i) {\n        return labels[filter.type] && React.createElement(\"div\", {\n          className: \"col-md-2 \",\n          key: filter.type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"mb-1 mt-3\",\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405\n          },\n          __self: this\n        }, labels[filter.type], filter.isMandatory ? React.createElement(\"span\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407\n          },\n          __self: this\n        }, \" * \") : null), React.createElement(Select, {\n          name: filter.type,\n          options: _this2.props[filter.type],\n          onFocus: function onFocus(e) {\n            return _this2.filterOnFocusHandler(i, filter.type, filter.isHierarchy);\n          },\n          onChange: function onChange(option) {\n            return _this2.getHierarchyOptions(option, i, filter.type);\n          },\n          value: _this2.state[filter.type],\n          isMulti: filter.isMultiple,\n          isDisabled: i === 0 && _this2.props.disableDivision ? true : false,\n          closeMenuOnSelect: false,\n          onInputChange: _this2.handleInputChange.bind(_this2, filter.type),\n          inputValue: _this2.state.inputs[filter.type] ? _this2.state.inputs[filter.type] : '' // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409\n          },\n          __self: this\n        }));\n      }), this.props.stores && labels.store && !this.props.hideStoreCluster && React.createElement(\"div\", {\n        className: \"col-md-2 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"mb-1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, labels.store, !this.props.storeIsNotMandatory ? React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, \" * \") : null), React.createElement(Select, {\n        options: this.props.stores,\n        onChange: function onChange(option) {\n          return _this2.setStores(option);\n        },\n        value: this.state.stores,\n        isMulti: true // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      })), this.props.dateRange && React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"mb-1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, \"Date range \", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, \" * \")), React.createElement(DateRangePicker, {\n        startDate: this.state.startDate,\n        startDateId: \"startDate_11\",\n        endDate: this.state.endDate,\n        endDateId: \"endDate_11\",\n        onDatesChange: this.onDatesChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      })), !this.props.hidefilterButton && React.createElement(\"div\", {\n        className: this.props.from === 'styleGroupConfig' ? 'col-md-2 mt-5 px-0 text-center' : 'col-md-3 mt-5',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        disabled: this.props.isEdit,\n        onClick: function onClick() {\n          return _this2.props.onFilter({\n            filters: _this2.state.filters,\n            startDate: _this2.state.startDate,\n            endDate: _this2.state.endDate\n          });\n        },\n        className: this.props.from === 'styleGroupConfig' ? 'btn btn-primary btn-filter' : 'col-md-4 btn btn-primary btn-filter',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }), \"\\xA0 Filter\")), React.createElement(\"button\", {\n        disabled: this.props.isEdit,\n        className: this.props.from === 'styleGroupConfig' ? 'offset-1 btn btn-primary btn-filter btn-filter-reset' : 'col-md-4 offset-1 btn btn-primary btn-filter btn-filter-reset',\n        onClick: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-repeat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }), \"\\xA0 Reset\")))));\n    }\n  }]);\n\n  return Filters;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    drops: store.filtersReducer.drops,\n    selectedDrops: store.filtersReducer.selectedDrops,\n    hierarchy1: store.filtersReducer.hierarchy1,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    hierarchy2: store.filtersReducer.hierarchy2,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    hierarchy3: store.filtersReducer.hierarchy3,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    hierarchy4: store.filtersReducer.hierarchy4,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    hierarchy5: store.filtersReducer.hierarchy5,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    hierarchy6: store.filtersReducer.hierarchy6,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    hierarchy7: store.filtersReducer.hierarchy7,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    hierarchy8: store.filtersReducer.hierarchy8,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    hierarchy9: store.filtersReducer.hierarchy9,\n    selectedHierarchy9: store.filtersReducer.selectedHierarchy9,\n    hierarchy10: store.filtersReducer.hierarchy10,\n    selectedHierarchy10: store.filtersReducer.selectedHierarchy10,\n    stores: store.filtersReducer.stores,\n    selectedStores: store.filtersReducer.selectedStores,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks,\n    retainFilters: store.filtersReducer.retainFilters,\n    editPlanDetails: store.manuallyCreateMdData.editPlanDetails\n  };\n};\n\nvar mapDispatchToProps = {\n  getHierarchyOptions: FilterActions.getHierarchyOptions,\n  getStores: FilterActions.getStores,\n  setSelectedDrops: FilterActions.setSelectedDrops,\n  setSelectedHierarchy1: FilterActions.setSelectedHierarchy1,\n  setSelectedHierarchy2: FilterActions.setSelectedHierarchy2,\n  setSelectedHierarchy3: FilterActions.setSelectedHierarchy3,\n  setSelectedHierarchy4: FilterActions.setSelectedHierarchy4,\n  setSelectedHierarchy5: FilterActions.setSelectedHierarchy5,\n  setSelectedHierarchy6: FilterActions.setSelectedHierarchy6,\n  setSelectedHierarchy7: FilterActions.setSelectedHierarchy7,\n  setSelectedHierarchy8: FilterActions.setSelectedHierarchy8,\n  setSelectedHierarchy9: FilterActions.setSelectedHierarchy9,\n  setSelectedHierarchy10: FilterActions.setSelectedHierarchy10,\n  setSelectedStores: FilterActions.setSelectedStores,\n  setDateRange: FilterActions.setDateRange,\n  resetFilters: FilterActions.resetFilters,\n  setRetainFilters: FilterActions.setRetainFilters,\n  presetFilters: FilterActions.presetFilters\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Filters));","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/services/filters/index.js"],"names":["React","Component","withRouter","labels","filterType","Select","connect","DateRangePicker","FilterActions","_","Filters","props","handleInputChange","name","value","action","inputs","state","setState","validateFilters","filterIndex","dateRange","filtersOptions","i","type","nameCapitalized","charAt","toUpperCase","slice","isMandatory","isEmpty","actionCallHandler","func","isHierarchyNext","nextFilterName","req","typeName","reqObj","filters","allowInactiveProducts","hierarchyType","filterOnFocusHandler","filterName","isHierarchy","options","map","item","index","selected","getHierarchyOptions","val","currFilterName","Array","isArray","hierarchy","cloneDeep","resetHierachies","actionName","e","label","setDrop","selItems","drops","setSelectedDrops","v","setStores","newFilters","stores","setSelectedStores","reset","startDate","endDate","hierarchy1","hierarchy2","hierarchy3","hierarchy4","hierarchy5","hierarchy6","hierarchy7","hierarchy8","hierarchy9","hierarchy10","from","resetFilters","onReset","onDatesChange","weeks","clone","add","push","week","setDateRange","format","retainFilters","selectedHierarchy1","selectedHierarchy2","selectedHierarchy3","selectedHierarchy4","selectedHierarchy5","selectedHierarchy6","selectedStyle","selectedHierarchy7","selectedHierarchy8","location","styles","selectedHierarchy9","selectedHierarchy10","selectedStores","isEdit","getStores","setSelectedHierarchy8","setRetainFilters","prevProps","prevState","filterReset","filterResetHandler","editPlanDetails","request_obj","tiers","presetFilters","drop","option","year","filter","whiteSpace","color","isMultiple","disableDivision","bind","store","hideStoreCluster","storeIsNotMandatory","hidefilterButton","onFilter","mapStateToProps","filtersReducer","selectedDrops","manuallyCreateMdData","mapDispatchToProps","setSelectedHierarchy1","setSelectedHierarchy2","setSelectedHierarchy3","setSelectedHierarchy4","setSelectedHierarchy5","setSelectedHierarchy6","setSelectedHierarchy7","setSelectedHierarchy9","setSelectedHierarchy10"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { labels, filterType } from './config';\nimport Select from '../select';\nimport './index.css';\nimport { connect } from 'react-redux';\nimport DateRangePicker from '../RetailCalendarDatePicker';\nimport FilterActions from '../../actions/filtersAction';\nimport _ from 'lodash';\n\nclass Filters extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputs: {},\n      filters: {},\n      startDate: null,\n      endDate: null,\n      hierarchy1:\n        props.retainFilters && props.selectedHierarchy1\n          ? props.selectedHierarchy1.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy2:\n        props.retainFilters && props.selectedHierarchy2\n          ? props.selectedHierarchy2.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy3:\n        props.retainFilters && props.selectedHierarchy3\n          ? props.selectedHierarchy3.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy4:\n        props.retainFilters && props.selectedHierarchy4\n          ? props.selectedHierarchy4.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy5:\n        props.retainFilters && props.selectedHierarchy5\n          ? props.selectedHierarchy5.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy6:\n        props.retainFilters && props.selectedHierarchy6\n          ? props.selectedHierarchy6.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy7:\n        props.retainFilters && props.selectedStyle\n          ? props.selectedHierarchy7.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n\n      hierarchy8:\n        props.retainFilters && props.selectedHierarchy8 && props.location.state\n          ? props.location.state.styles.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy9:\n        props.retainFilters && props.selectedHierarchy9\n          ? props.selectedHierarchy9.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy10:\n        props.retainFilters && props.selectedHierarchy10\n          ? props.selectedHierarchy10.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      stores:\n        props.retainFilters && props.selectedStores\n          ? props.selectedStores.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n    };\n    !props.isEdit &&\n      props.getHierarchyOptions({\n        filters: {},\n        hierarchyType: 'HIERARCHY1',\n        allowInactiveProducts: this.props.allowInactiveProducts || false,\n      });\n    props.getStores({\n      filters: {\n        hierarchy1: [],\n        hierarchy2: [],\n        hierarchy3: [],\n        hierarchy4: [],\n        hierarchy5: [],\n        hierarchy6: [],\n        hierarchy7: [],\n        hierarchy8: [],\n        hierarchy9: [],\n        hierarchy10: [],\n      },\n    });\n    if (props.retainFilters && props.location.state) {\n      props.setSelectedHierarchy8(props.location.state.styles, true);\n      props.setSelectedStores(this.state.stores.map((e) => e.label));\n    }\n    props.setRetainFilters(false);\n  }\n  handleInputChange = (name, value, action) => {\n    const inputs = { ...this.state.inputs };\n    inputs[name] = value;\n    if (action.action === 'input-blur' || action.action === 'input-change') {\n      this.setState({ inputs });\n    }\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.filterReset) {\n      this.props.filterResetHandler(false);\n      this.reset(); // reset filters from configFilters\n    }\n    if (\n      this.props.isEdit &&\n      _.isEmpty(this.state.hierarchy1) &&\n      this.props.editPlanDetails[0] &&\n      !_.isEmpty(this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj)\n    ) {\n      let {\n        hierarchy1,\n        hierarchy2,\n        hierarchy3,\n        hierarchy4,\n        hierarchy5,\n        hierarchy6,\n        hierarchy7,\n        hierarchy8,\n        hierarchy9,\n        hierarchy10,\n        tiers,\n      } = this.props.editPlanDetails[0].request_obj.filters;\n\n      this.props.presetFilters([\n        hierarchy1,\n        hierarchy2,\n        hierarchy3,\n        hierarchy4,\n        hierarchy5,\n        hierarchy6,\n        hierarchy7,\n        hierarchy8,\n        hierarchy9,\n        hierarchy10,\n        tiers,\n      ]);\n      this.setState({\n        hierarchy1: _.map(hierarchy1, (item) => ({ value: item, label: item })),\n        hierarchy2: _.map(hierarchy2, (item) => ({ value: item, label: item })),\n        hierarchy3: _.map(hierarchy3, (item) => ({ value: item, label: item })),\n        hierarchy4: _.map(hierarchy4, (item) => ({ value: item, label: item })),\n        hierarchy5: _.map(hierarchy5, (item) => ({ value: item, label: item })),\n        hierarchy6: _.map(hierarchy6, (item) => ({ value: item, label: item })),\n        hierarchy7: _.map(hierarchy7, (item) => ({ value: item, label: item })),\n        hierarchy8: _.map(hierarchy8, (item) => ({ value: item, label: item })),\n        hierarchy9: _.map(hierarchy9, (item) => ({ value: item, label: item })),\n        hierarchy10: _.map(hierarchy10, (item) => ({ value: item, label: item })),\n        stores: _.map(tiers, (item) => ({ value: item, label: item })),\n      });\n    }\n  }\n  validateFilters = (filterIndex, dateRange) => {\n    let { filtersOptions } = this.props;\n    for (let i = 0; i < filterIndex; i++) {\n      let type = filtersOptions[i] && filtersOptions[i].type;\n\n      let nameCapitalized = type && type.charAt(0).toUpperCase() + type.slice(1); //capitalizing the name to match action/reducer name\n\n      if (\n        filtersOptions[i] &&\n        filtersOptions[i].isMandatory &&\n        _.isEmpty(this.props[`selected${nameCapitalized}`])\n      ) {\n        return false;\n      }\n    }\n    return true;\n  };\n  actionCallHandler = (func, isHierarchyNext, nextFilterName, req) => {\n    let typeName = filterType[nextFilterName];\n    let reqObj = {\n      filters: req,\n      allowInactiveProducts: this.props.allowInactiveProducts || false,\n    };\n    if (isHierarchyNext) reqObj.hierarchyType = typeName;\n    if (!isHierarchyNext) reqObj.filterType = typeName;\n\n    this.props[func](reqObj);\n  };\n\n  filterOnFocusHandler = (filterIndex, filterName, isHierarchy) => {\n    let options = this.props[filterName];\n    if (\n      (filterName && options && !_.isEmpty(this.props[filterName])) ||\n      !this.validateFilters(filterIndex)\n    )\n      //if filter options already exists or if all of the mandatory filters that comes before this filter is not selected , return\n      return;\n\n    let func = filterName !== 'stores' ? `getHierarchyOptions` : `getStores`;\n    let req = {};\n    _.map(this.props.filtersOptions, (item, index) => {\n      if (index < filterIndex) {\n        let nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n        let selected = this.props[`selected${nameCapitalized}`];\n        // if (_.isEmpty(selected)) return; //uncomment if u want empty filters removed\n\n        req[item.type] = selected; //this goes as filters req obj in api calls\n      }\n    });\n    if (filterName && this.props[func]) {\n      this.actionCallHandler(func, isHierarchy, filterName, req); //calles next filters action, to get it's options\n    }\n  };\n  getHierarchyOptions = async (val, filterIndex, currFilterName) => {\n    !Array.isArray(val) && (val = [val]);\n    let hierarchy = _.cloneDeep(this.props.filtersOptions);\n\n    let nameCapitalized =\n      currFilterName && currFilterName.charAt(0).toUpperCase() + currFilterName.slice(1); //capitalizing the name to match action/reducer name\n    let resetHierachies = {};\n    _.map(hierarchy, (item, index) => {\n      if (index > filterIndex) {\n        //&& index < 5) {\n        resetHierachies[item.type] = null; //all fiters value, which comes after selected filter becomes null(reset)\n      }\n    });\n    this.setState({ [currFilterName]: val, ...resetHierachies }, async () => {\n      let actionName = `setSelected${nameCapitalized}`;\n      await this.props[actionName](val.map((e) => e.label)); //handles setSelected action calls\n\n      let req = {};\n      _.map(hierarchy, (item, index) => {\n        if (index <= filterIndex) {\n          let nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n          // if (_.isEmpty(this.props[`selected${nameCapitalized}`])) return; //uncomment if u want empty filters removed\n\n          req[item.type] = this.props[`selected${nameCapitalized}`]; //this goes as filters req obj in api calls\n        }\n      });\n      this.setState({ filters: { ...req } });\n    });\n  };\n  // getHierarchyOptions = (val, hierarchy) => {\n  //   !Array.isArray(val) && (val = [val]);\n  //   let resetHierachies = { stores: null };\n  //   for (let i = hierarchy + 1; i <= this.props.hierarchy.length; i++) {\n  //     resetHierachies[`hierarchy${i}`] = null;\n  //   }\n  //   this.setState({ [`hierarchy${hierarchy}`]: val, ...resetHierachies }, async () => {\n  //     await this.props[`setSelectedHierarchy${hierarchy}`](val.map((e) => e.label));\n  //     let func = hierarchy === 8 ? `getStores` : `getHierarchyOptions`;\n  //     let req = {};\n\n  //     for (let i = 1; i <= hierarchy; i++) {\n  //       req[`hierarchy${i}`] = this.props[`selectedHierarchy${i}`];\n  //     }\n  //     if (this.props[func]) {\n  //       if (Object.keys(req).length) {\n  //         this.props[func]({\n  //           filters: req,\n  //           hierarchyType: ('hierarchy' + (hierarchy + 1)).toUpperCase(),\n  //           allowInactiveProducts: this.props.allowInactiveProducts || false,\n  //         });\n  //       } else {\n  //         this.props[func]();\n  //       }\n  //     }\n  //     this.setState({ filters: { ...req } });\n  //   });\n  // };\n  setDrop = (val) => {\n    let req = {};\n    let selItems = val.map((item) => item.label);\n    req['drop'] = selItems;\n    this.setState({ filters: { ...req }, drops: val }, () => {\n      this.props.setSelectedDrops(val.map((v) => v.value));\n    });\n  };\n  setStores = (val) => {\n    // let req = {};\n    let selItems = val.map((item) => item.label);\n    // req['stores'] = selItems;\n    let newFilters = { ...this.state.filters, stores: selItems };\n    this.setState({ filters: newFilters, stores: val }, () => {\n      this.props.setSelectedStores(val.map((v) => v.value));\n    });\n  };\n  reset = () => {\n    this.setState(\n      {\n        drops: null,\n        startDate: null,\n        endDate: null,\n        hierarchy1: null,\n        hierarchy2: null,\n        hierarchy3: null,\n        hierarchy4: null,\n        hierarchy5: null,\n        hierarchy6: null,\n        hierarchy7: null,\n        hierarchy8: null,\n        hierarchy9: null,\n        hierarchy10: null,\n        stores: null,\n      },\n      () => {\n        if (this.props.from !== 'draft/status') this.props.resetFilters(); ////////// handling reset issues rising bcs of tabs, only reset this component state, not reducer\n        this.props.onReset && this.props.onReset();\n      }\n    );\n  };\n  onDatesChange = ({ startDate, endDate }) => {\n    this.setState(\n      {\n        startDate,\n        endDate,\n      },\n      () => {\n        let weeks = [];\n        if (endDate) {\n          for (let i = startDate.clone(); i <= endDate; i = i.add(7, 'd')) {\n            weeks.push(i.week());\n          }\n        }\n\n        this.props.setDateRange({\n          startDate: startDate && startDate.format('YYYY-MM-DD'),\n          endDate: endDate && endDate.format('YYYY-MM-DD'),\n          weeks,\n        });\n      }\n    );\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div\n          className={this.props.isEdit ? 'row ml-4 mr-4 edit-markdown-filters' : 'row ml-4 mr-4'}>\n          {this.props.drop && labels.drop && (\n            <div className=\"col-md-2\">\n              <label className=\"mb-1 mt-3\">{labels.drop}</label>\n              <Select\n                options={this.props.drops}\n                onChange={(option) => this.setDrop(option)}\n                getOptionLabel={(option) => option.label + (option.year ? option.year : '')}\n                value={this.state.drops}\n                isMulti\n                // isDisabled={!this.props.drops || !this.props.drops.length}\n              />\n            </div>\n          )}\n          {/* {this.props.hierarchy.map(\n            (filter, i) =>\n              labels[filter] && (\n                <div className=\"col-md-2 \" key={filter}>\n                  <label className=\"mb-1 mt-3\">{labels[filter]}</label>\n                  <Select\n                    options={this.props[filter]}\n                    onChange={(option) => this.getHierarchyOptions(option, i + 1)}\n                    value={this.state[`hierarchy${i + 1}`]}\n                    isMulti\n                    allowSelectAll\n                    // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n                  />\n                </div>\n              )\n          )} */}\n          {/* {this.props.hierarchy.map(\n            (filter, i) =>\n              labels[filter.type] && (\n                <div className=\"col-md-2 \" key={filter.type}>\n                  <label className=\"mb-1 mt-3\">\n                    {labels[filter.type]}\n                    {filter.isMandatory ? <span style={{ color: 'red' }}> * </span> : null}\n                  </label>\n                  <Select\n                    name={`hierarchy${i + 1}`}\n                    options={this.props[filter.type]}\n                    onChange={(option) => this.getHierarchyOptions(option, i + 1)}\n                    value={this.state[`hierarchy${i + 1}`]}\n                    isMulti={filter.isMultiple}\n                    isDisabled={i === 0 && this.props.disableDivision ? true : false}\n                    // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n                  />\n                </div>\n              )\n          )} */}\n          {this.props.filtersOptions &&\n            this.props.filtersOptions.map(\n              (filter, i) =>\n                labels[filter.type] && (\n                  <div className=\"col-md-2 \" key={filter.type}>\n                    <label className=\"mb-1 mt-3\" style={{ whiteSpace: 'nowrap' }}>\n                      {labels[filter.type]}\n                      {filter.isMandatory ? <span style={{ color: 'red' }}> * </span> : null}\n                    </label>\n                    <Select\n                      name={filter.type}\n                      options={this.props[filter.type]}\n                      onFocus={(e) => this.filterOnFocusHandler(i, filter.type, filter.isHierarchy)}\n                      onChange={(option) => this.getHierarchyOptions(option, i, filter.type)}\n                      value={this.state[filter.type]}\n                      isMulti={filter.isMultiple}\n                      isDisabled={i === 0 && this.props.disableDivision ? true : false}\n                      closeMenuOnSelect={false}\n                      onInputChange={this.handleInputChange.bind(this, filter.type)}\n                      inputValue={\n                        this.state.inputs[filter.type] ? this.state.inputs[filter.type] : ''\n                      }\n                      // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n                    />\n                  </div>\n                )\n            )}\n          {this.props.stores && labels.store && !this.props.hideStoreCluster && (\n            <div className=\"col-md-2 \">\n              <label className=\"mb-1 mt-3\">\n                {labels.store}\n                {!this.props.storeIsNotMandatory ? <span style={{ color: 'red' }}> * </span> : null}\n              </label>\n              <Select\n                options={this.props.stores}\n                onChange={(option) => this.setStores(option)}\n                value={this.state.stores}\n                isMulti\n                // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n              />\n            </div>\n          )}\n          {this.props.dateRange && (\n            <div className=\"col-md-3\">\n              <label className=\"mb-1 mt-3\">\n                Date range <span style={{ color: 'red' }}> * </span>\n              </label>\n              <DateRangePicker\n                startDate={this.state.startDate}\n                startDateId=\"startDate_11\"\n                endDate={this.state.endDate}\n                endDateId=\"endDate_11\"\n                onDatesChange={this.onDatesChange}\n              />\n            </div>\n          )}\n          {!this.props.hidefilterButton && (\n            <div\n              className={\n                this.props.from === 'styleGroupConfig'\n                  ? 'col-md-2 mt-5 px-0 text-center'\n                  : 'col-md-3 mt-5'\n              }>\n              <button\n                disabled={this.props.isEdit}\n                onClick={() =>\n                  this.props.onFilter({\n                    filters: this.state.filters,\n                    startDate: this.state.startDate,\n                    endDate: this.state.endDate,\n                  })\n                }\n                className={\n                  this.props.from === 'styleGroupConfig'\n                    ? 'btn btn-primary btn-filter'\n                    : 'col-md-4 btn btn-primary btn-filter'\n                }>\n                <span>\n                  <i className=\"fa fa-filter\"></i>&nbsp; Filter\n                </span>\n              </button>\n              <button\n                disabled={this.props.isEdit}\n                className={\n                  this.props.from === 'styleGroupConfig'\n                    ? 'offset-1 btn btn-primary btn-filter btn-filter-reset'\n                    : 'col-md-4 offset-1 btn btn-primary btn-filter btn-filter-reset'\n                }\n                onClick={this.reset}>\n                <span>\n                  <i className=\"fa fa-repeat\"></i>&nbsp; Reset\n                </span>\n              </button>\n            </div>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    drops: store.filtersReducer.drops,\n    selectedDrops: store.filtersReducer.selectedDrops,\n    hierarchy1: store.filtersReducer.hierarchy1,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    hierarchy2: store.filtersReducer.hierarchy2,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    hierarchy3: store.filtersReducer.hierarchy3,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    hierarchy4: store.filtersReducer.hierarchy4,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    hierarchy5: store.filtersReducer.hierarchy5,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    hierarchy6: store.filtersReducer.hierarchy6,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    hierarchy7: store.filtersReducer.hierarchy7,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    hierarchy8: store.filtersReducer.hierarchy8,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    hierarchy9: store.filtersReducer.hierarchy9,\n    selectedHierarchy9: store.filtersReducer.selectedHierarchy9,\n    hierarchy10: store.filtersReducer.hierarchy10,\n    selectedHierarchy10: store.filtersReducer.selectedHierarchy10,\n    stores: store.filtersReducer.stores,\n    selectedStores: store.filtersReducer.selectedStores,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks,\n    retainFilters: store.filtersReducer.retainFilters,\n    editPlanDetails: store.manuallyCreateMdData.editPlanDetails,\n  };\n};\nconst mapDispatchToProps = {\n  getHierarchyOptions: FilterActions.getHierarchyOptions,\n  getStores: FilterActions.getStores,\n  setSelectedDrops: FilterActions.setSelectedDrops,\n  setSelectedHierarchy1: FilterActions.setSelectedHierarchy1,\n  setSelectedHierarchy2: FilterActions.setSelectedHierarchy2,\n  setSelectedHierarchy3: FilterActions.setSelectedHierarchy3,\n  setSelectedHierarchy4: FilterActions.setSelectedHierarchy4,\n  setSelectedHierarchy5: FilterActions.setSelectedHierarchy5,\n  setSelectedHierarchy6: FilterActions.setSelectedHierarchy6,\n  setSelectedHierarchy7: FilterActions.setSelectedHierarchy7,\n  setSelectedHierarchy8: FilterActions.setSelectedHierarchy8,\n  setSelectedHierarchy9: FilterActions.setSelectedHierarchy9,\n  setSelectedHierarchy10: FilterActions.setSelectedHierarchy10,\n  setSelectedStores: FilterActions.setSelectedStores,\n  setDateRange: FilterActions.setDateRange,\n  resetFilters: FilterActions.resetFilters,\n  setRetainFilters: FilterActions.setRetainFilters,\n  presetFilters: FilterActions.presetFilters,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Filters));\n"]},"metadata":{},"sourceType":"module"}