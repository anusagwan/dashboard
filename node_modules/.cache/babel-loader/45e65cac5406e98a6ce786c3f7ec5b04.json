{"ast":null,"code":"var _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/draftStatus/draft/coldef.js\";\nimport React from 'react';\nimport { toPercentage, toPercentageWithDecimalDraft, toDollarWithlDraft, toUnitDraft, toFixedToTwoDraft } from '../../../helper/formatter';\nimport _ from 'lodash';\nimport moment from 'moment';\nexport default (function () {\n  var colDef = [{\n    Header: 'MD Plan',\n    accessor: 'md_plan',\n    disableGroupBy: true,\n    showFilter: true,\n    width: 50,\n    align: 'left',\n    enableRowSpan: true\n  }, {\n    Header: 'Scenario',\n    accessor: 'scenario',\n    showFilter: true,\n    disableGroupBy: true,\n    enableRowSpan: true,\n    width: 50 // Cell: ({ row, rows }) => {\n    //   console.log('vzsmdfhweowepppppppp', row, rows);\n    //   return row.original.scenario ? row.original.scenario : null;\n    // },\n\n  }, {\n    // Build our expander column\n    id: 'expander',\n    // Make sure it has an ID\n    // Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n    //   <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}</span>\n    // ),\n    Header: 'Date Range',\n    width: 15,\n    Cell: function Cell(_ref) {\n      var row = _ref.row;\n      // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n      // to build the toggle for expanding a row\n      console.log('czseferuuuuuuu', row);\n      return row.canExpand ? React.createElement(\"span\", Object.assign({}, row.getToggleRowExpandedProps({\n        style: {\n          // We can even use the row.depth property\n          // and paddingLeft to indicate the depth\n          // of the row\n          paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n        }\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), moment(row.original.start_date).format('YYYY/MM/DD'), \" -\", ' ', moment(row.original.end_date).format('YYYY/MM/DD'), \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n        class: \"fa fa-angle-down expanded-icon-size color-blue\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }) : React.createElement(\"i\", {\n        class: \"fa fa-angle-right expanded-icon-size color-blue\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })) : null;\n    }\n  }, {\n    Header: 'Time Period',\n    accessor: 'week_num',\n    disableGroupBy: false,\n    isGroupBy: false,\n    width: 50,\n    Aggregated: function Aggregated(_ref2) {\n      var value = _ref2.value,\n          row = _ref2.row;\n      return \"weeks (\".concat(row.subRows.length, \")\");\n    }\n  }, {\n    Header: 'Sell through %',\n    accessor: 'sell_through',\n    disableGroupBy: true,\n    width: 50,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    },\n    Aggregated: function Aggregated(row) {\n      var val = row.row.original.overall_sell_through;\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, val ? parseFloat(val).toFixed(2) : '-');\n    }\n  }, {\n    Header: 'Markdown %',\n    accessor: 'markdown_perc',\n    disableGroupBy: true,\n    width: 70,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    },\n    aggregate: 'average',\n    Aggregated: function Aggregated(_ref3) {\n      var row = _ref3.row;\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, row.original.overall_markdown_perc ? Math.round(row.original.overall_markdown_perc) : '-');\n    }\n  }, // {\n  //   Header: 'Margin %',\n  //   accessor: 'margin_perc',\n  //   disableGroupBy: true,\n  //   width: 70,\n  //   Cell: (props) => <div> {toPercentageWithDecimalDraft(props)} </div>,\n  //   Aggregated: (row) => {\n  //     let val = row.row.original.overall_margin;\n  //     return <span>{val ? Number(val).toFixed(2) : '-'}</span>;\n  //   },\n  // },\n  {\n    Header: 'Status',\n    accessor: 'status',\n    disableGroupBy: true,\n    showFilter: true,\n    Cell: StatusCellStyling\n  }];\n  return colDef;\n});\n\nfunction StatusCellStyling(_ref4) {\n  var value = _ref4.value;\n\n  switch (value) {\n    case 'rejected':\n      return React.createElement(\"span\", {\n        style: {\n          textTransform: 'capitalize'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-ban fa-lg\",\n        \"aria-hidden\": \"true\",\n        style: {\n          color: '#D84039'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), ' ', value, \" \\xA0 \\xA0\", ' ', React.createElement(\"i\", {\n        className: \"fa fa-commenting fa-lg\",\n        \"aria-hidden\": \"true\",\n        style: {\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }));\n\n    case 'draft':\n      return React.createElement(\"span\", {\n        style: {\n          textTransform: 'capitalize'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, value, \" \\xA0 \\xA0\", ' ');\n\n    case 'pending':\n      return React.createElement(\"span\", {\n        style: {\n          textTransform: 'capitalize'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-exclamation-circle fa-lg\",\n        style: {\n          color: '#E0D337'\n        },\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), ' ', value);\n\n    case 'approved':\n      return React.createElement(\"span\", {\n        style: {\n          textTransform: 'capitalize'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-check-circle fa-lg\",\n        \"aria-hidden\": \"true\",\n        style: {\n          color: '#59C770'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), ' ', value);\n\n    default:\n      return '';\n  }\n}","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/draftStatus/draft/coldef.js"],"names":["React","toPercentage","toPercentageWithDecimalDraft","toDollarWithlDraft","toUnitDraft","toFixedToTwoDraft","_","moment","colDef","Header","accessor","disableGroupBy","showFilter","width","align","enableRowSpan","id","Cell","row","console","log","canExpand","getToggleRowExpandedProps","style","paddingLeft","depth","original","start_date","format","end_date","isExpanded","isGroupBy","Aggregated","value","subRows","length","props","val","overall_sell_through","parseFloat","toFixed","aggregate","overall_markdown_perc","Math","round","StatusCellStyling","textTransform","color","cursor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  toPercentage,\n  toPercentageWithDecimalDraft,\n  toDollarWithlDraft,\n  toUnitDraft,\n  toFixedToTwoDraft,\n} from '../../../helper/formatter';\nimport _ from 'lodash';\n\nimport moment from 'moment';\n\nexport default () => {\n  const colDef = [\n    {\n      Header: 'MD Plan',\n      accessor: 'md_plan',\n      disableGroupBy: true,\n      showFilter: true,\n      width: 50,\n      align: 'left',\n      enableRowSpan: true,\n    },\n    {\n      Header: 'Scenario',\n      accessor: 'scenario',\n      showFilter: true,\n      disableGroupBy: true,\n      enableRowSpan: true,\n      width: 50,\n      // Cell: ({ row, rows }) => {\n      //   console.log('vzsmdfhweowepppppppp', row, rows);\n\n      //   return row.original.scenario ? row.original.scenario : null;\n      // },\n    },\n    {\n      // Build our expander column\n      id: 'expander', // Make sure it has an ID\n      // Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n      //   <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}</span>\n      // ),\n      Header: 'Date Range',\n      width: 15,\n      Cell: ({ row }) => {\n        // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n        // to build the toggle for expanding a row\n        console.log('czseferuuuuuuu', row);\n\n        return row.canExpand ? (\n          <span\n            {...row.getToggleRowExpandedProps({\n              style: {\n                // We can even use the row.depth property\n                // and paddingLeft to indicate the depth\n                // of the row\n                paddingLeft: `${row.depth * 2}rem`,\n              },\n            })}>\n            {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n            {moment(row.original.end_date).format('YYYY/MM/DD')}&nbsp;&nbsp;&nbsp;\n            {row.isExpanded ? (\n              <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n            ) : (\n              <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n            )}\n          </span>\n        ) : null;\n      },\n    },\n    {\n      Header: 'Time Period',\n      accessor: 'week_num',\n      disableGroupBy: false,\n      isGroupBy: false,\n      width: 50,\n      Aggregated: ({ value, row }) => `weeks (${row.subRows.length})`,\n    },\n    {\n      Header: 'Sell through %',\n      accessor: 'sell_through',\n      disableGroupBy: true,\n      width: 50,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n      Aggregated: (row) => {\n        let val = row.row.original.overall_sell_through;\n        return <span>{val ? parseFloat(val).toFixed(2) : '-'}</span>;\n      },\n    },\n    {\n      Header: 'Markdown %',\n      accessor: 'markdown_perc',\n      disableGroupBy: true,\n      width: 70,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n      aggregate: 'average',\n      Aggregated: ({ row }) => (\n        <span>\n          {row.original.overall_markdown_perc\n            ? Math.round(row.original.overall_markdown_perc)\n            : '-'}\n        </span>\n      ),\n    },\n    // {\n    //   Header: 'Margin %',\n    //   accessor: 'margin_perc',\n    //   disableGroupBy: true,\n    //   width: 70,\n    //   Cell: (props) => <div> {toPercentageWithDecimalDraft(props)} </div>,\n    //   Aggregated: (row) => {\n    //     let val = row.row.original.overall_margin;\n\n    //     return <span>{val ? Number(val).toFixed(2) : '-'}</span>;\n    //   },\n    // },\n    {\n      Header: 'Status',\n      accessor: 'status',\n      disableGroupBy: true,\n      showFilter: true,\n      Cell: StatusCellStyling,\n    },\n\n    // {\n    //   Header: 'AUM',\n    //   accessor: 'aum',\n    //   disableGroupBy: true,\n    //   Cell: (props) => <div>{toFixedToTwoDraft(props)}</div>,\n    //   Aggregated: (row) => {\n    //     let val = row.row.original.overall_aum;\n    //     return <span>{val ? Number(val).toFixed(2) : '-'}</span>;\n    //   },\n    // },\n    // {\n    //   Header: 'AUR',\n    //   accessor: 'aur',\n    //   disableGroupBy: true,\n    //   Cell: (props) => <div>{toFixedToTwoDraft(props)}</div>,\n    //   Aggregated: (row) => {\n    //     let val = row.row.original.overall_aur;\n    //     return <span>{val ? Number(val).toFixed(2) : '-'}</span>;\n    //   },\n    // },\n    // {\n    //   Header: 'Planned Units',\n    //   accessor: 'plannedUnits',\n    //   Cell: (props) => <div>{toUnitDraft(props)}</div>,\n\n    //   disableGroupBy: true,\n    //   Aggregated: (row) => {\n    //     let val = row.row.original.overall_planned_units;\n    //     return <span>{val ? Number(val).toLocaleString('en') : '-'}</span>;\n    //   },\n    // },\n    // {\n    //   Header: 'Actual Units',\n    //   accessor: 'actualUnits',\n    //   Cell: (props) => <div>{toUnitDraft(props)}</div>,\n    //   disableGroupBy: true,\n    //   Aggregated: (row) => {\n    //     let val = row.row.original.overall_units;\n    //     return <span>{val ? Number(val).toLocaleString('en') : '-'}</span>;\n    //   },\n    // },\n    // {\n    //   Header: 'Revenue $',\n    //   accessor: 'revenue$',\n    //   Aggregated: (row) => {\n    //     let val = row.row.original.overall_revenue$;\n    //     console.log(val.toFixed(2), 'fixed');\n    //     console.log(parseFloat(val).toFixed(2), 'valalala');\n    //     console.log(Number(val).toFixed(2), 'nu,ber');\n    //     return <span>{val ? parseInt(val).toLocaleString('en') : '-'}</span>;\n    //   },\n    //   disableGroupBy: true,\n    //   Cell: (props) => <div> {toDollarWithlDraft(props)} </div>,\n    // },\n  ];\n  return colDef;\n};\n\nfunction StatusCellStyling({ value }) {\n  switch (value) {\n    case 'rejected':\n      return (\n        <span style={{ textTransform: 'capitalize' }}>\n          <i className=\"fa fa-ban fa-lg\" aria-hidden=\"true\" style={{ color: '#D84039' }}></i>{' '}\n          {value} &nbsp; &nbsp;{' '}\n          <i\n            className=\"fa fa-commenting fa-lg\"\n            aria-hidden=\"true\"\n            style={{ cursor: 'pointer' }}></i>\n        </span>\n      );\n    case 'draft':\n      return (\n        <span style={{ textTransform: 'capitalize' }}>\n          {/* <i className=\"fa fa-ban fa-lg\" aria-hidden=\"true\" style={{ color: '#D84039' }}></i>{' '} */}\n          {value} &nbsp; &nbsp;{' '}\n        </span>\n      );\n    case 'pending':\n      return (\n        <span style={{ textTransform: 'capitalize' }}>\n          <i\n            className=\"fa fa-exclamation-circle fa-lg\"\n            style={{ color: '#E0D337' }}\n            aria-hidden=\"true\"></i>{' '}\n          {value}\n        </span>\n      );\n    case 'approved':\n      return (\n        <span style={{ textTransform: 'capitalize' }}>\n          <i\n            className=\"fa fa-check-circle fa-lg\"\n            aria-hidden=\"true\"\n            style={{ color: '#59C770' }}></i>{' '}\n          {value}\n        </span>\n      );\n\n    default:\n      return '';\n  }\n}\n"]},"metadata":{},"sourceType":"module"}