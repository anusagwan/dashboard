{"ast":null,"code":"import axios from '../utils/axios';\nimport { config } from '../utils/config';\nexport var dataLoadStatusCheck = function dataLoadStatusCheck() {\n  return function (dispatch) {\n    return axios({\n      url: \"\".concat(config.createMarkdownURL, \"/getBatchProcessStatus/\"),\n      method: 'GET'\n    }).then(function (resp) {\n      dispatch({\n        type: 'DATA_LOAD_STATUS',\n        payload: resp.data && resp.data.data && resp.data.data[0] ? resp.data.data[0].status : 0\n      });\n      return resp.data && resp.data.data;\n    }).catch(function (err) {\n      console.log('dataLoadStatusCheck', err);\n      return 0;\n    });\n  };\n};","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/dataLoadProcess.js"],"names":["axios","config","dataLoadStatusCheck","dispatch","url","createMarkdownURL","method","then","resp","type","payload","data","status","catch","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,SAAM,UAACC,QAAD,EAAc;AACrD,WAAOH,KAAK,CAAC;AACXI,MAAAA,GAAG,YAAKH,MAAM,CAACI,iBAAZ,4BADQ;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAD,CAAL,CAIJC,IAJI,CAIC,UAACC,IAAD,EAAU;AACdL,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAE,kBADC;AAEPC,QAAAA,OAAO,EAAEF,IAAI,CAACG,IAAL,IAAaH,IAAI,CAACG,IAAL,CAAUA,IAAvB,IAA+BH,IAAI,CAACG,IAAL,CAAUA,IAAV,CAAe,CAAf,CAA/B,GAAmDH,IAAI,CAACG,IAAL,CAAUA,IAAV,CAAe,CAAf,EAAkBC,MAArE,GAA8E;AAFhF,OAAD,CAAR;AAIA,aAAOJ,IAAI,CAACG,IAAL,IAAaH,IAAI,CAACG,IAAL,CAAUA,IAA9B;AACD,KAVI,EAWJE,KAXI,CAWE,UAACC,GAAD,EAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,GAAnC;AACA,aAAO,CAAP;AACD,KAdI,CAAP;AAeD,GAhBkC;AAAA,CAA5B","sourcesContent":["import axios from '../utils/axios';\nimport { config } from '../utils/config';\n\nexport const dataLoadStatusCheck = () => (dispatch) => {\n  return axios({\n    url: `${config.createMarkdownURL}/getBatchProcessStatus/`,\n    method: 'GET',\n  })\n    .then((resp) => {\n      dispatch({\n        type: 'DATA_LOAD_STATUS',\n        payload: resp.data && resp.data.data && resp.data.data[0] ? resp.data.data[0].status : 0,\n      });\n      return resp.data && resp.data.data;\n    })\n    .catch((err) => {\n      console.log('dataLoadStatusCheck', err);\n      return 0;\n    });\n};\n"]},"metadata":{},"sourceType":"module"}