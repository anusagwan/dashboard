{"ast":null,"code":"import _slicedToArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Charts/barNew.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport Modal from 'react-awesome-modal';\nimport { getChartData } from '../../actions/chart';\nimport Popover from '../Content/popover';\nimport Chart from 'chart.js';\nimport moment from 'moment';\nimport { Tabs } from 'antd';\nimport Table from '../Charts/table';\nimport Stackedbar from '../Charts/stackedbarNew';\nvar TabPane = Tabs.TabPane;\n\nvar BarChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BarChart, _Component);\n\n  function BarChart(props) {\n    var _this;\n\n    _classCallCheck(this, BarChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BarChart).call(this));\n\n    _this.checkDollar = function (label) {\n      //  console.log(label)\n      if (label.includes(\"$\")) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    _this.state = {\n      visible: false\n    };\n    return _this;\n  }\n\n  _createClass(BarChart, [{\n    key: \"openModal\",\n    value: function openModal() {\n      this.setState({\n        visible: true\n      });\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState({\n        visible: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var backgroundColor;\n      var chartData = this.props.data; // console.log('chartData', chartData)\n\n      var labelsData = chartData.labels;\n      var labels = [];\n      var datasets = []; // var colourPicker = [\"#2685CB\", \"#FDC81A\", \"#4B4ADA\",\"#FC3026\", \"#CD36E7\", \"#FD8E13\"];\n\n      var colors = [];\n      colors.push({\n        backgroundColor: '#2685CB'\n      });\n      colors.push({\n        backgroundColor: '#EC932F'\n      });\n      colors.push({\n        backgroundColor: '#4B4ADA'\n      });\n      colors.push({\n        backgroundColor: '#FC3026'\n      });\n      colors.push({\n        backgroundColor: '#CD36E7'\n      });\n      var object = chartData.data; // console.log(object)\n\n      var labelsKey = Object.keys(labelsData); // console.log(labelsKey)\n\n      var x_labelData = chartData.x_label;\n      var showDollars = false;\n\n      for (var key in object) {\n        if (this.checkDollar(key)) {\n          console.log('$ present ', this.checkDollar(key));\n          showDollars = true;\n        }\n\n        var index = Object.keys(object).indexOf(key);\n\n        if (key == \"Yellow\" || key == \"Red\" || key == \"Green\") {\n          backgroundColor = key; // console.log('background color in yellow green red', backgroundColor);\n        } else {\n          // backgroundColor = selectedColour[0] ;\n          // console.log('background color not  in yellow green red', backgroundColor, selectedColour);\n          backgroundColor = colors[index % 4].backgroundColor;\n        }\n\n        datasets.push({\n          label: key,\n          backgroundColor: backgroundColor,\n          hoverBackgroundColor: backgroundColor,\n          data: object[key]\n        });\n      } //change the sequence to red, yellow, green\n\n\n      datasets.reverse(); // console.log('dats sets pushed data', datasets)\n\n      for (var key in labelsData) {\n        labelsData[key].map(function (label) {\n          labels.push(label);\n        });\n      }\n\n      var barData = {\n        labels: labels,\n        datasets: datasets\n      };\n      var chartOptions = {\n        plugins: {\n          datalabels: {\n            display: false\n          },\n          labels: false\n        },\n        hover: {\n          mode: \"nearest\"\n        },\n        tooltips: {\n          mode: 'nearest',\n          callbacks: {\n            title: function title(_ref, data) {\n              var _ref2 = _slicedToArray(_ref, 1),\n                  tooltipItems = _ref2[0];\n\n              // console.log('tooltip title',data ,tooltipItems)\n              return x_labelData + ' : ' + tooltipItems.xLabel;\n            },\n            beforeLabel: function beforeLabel(tooltipItem, data) {\n              var ranges = [{\n                divider: 1e9,\n                suffix: 'B'\n              }, {\n                divider: 1e6,\n                suffix: 'M'\n              }, {\n                divider: 1e3,\n                suffix: 'k'\n              }];\n\n              function formatNumber(n) {\n                for (var i = 0; i < ranges.length; i++) {\n                  if (n >= ranges[i].divider) {\n                    var newNumber = (n / ranges[i].divider).toFixed(2);\n                    return newNumber.toString() + ranges[i].suffix;\n                  }\n                }\n\n                return n;\n              } // console.log(typeof tooltipItem.yLabel,tooltipItem.yLabel)\n\n\n              return data.datasets[tooltipItem.datasetIndex].label + ': ' + '\\n' + formatNumber(tooltipItem.yLabel);\n            },\n            label: function label(tooltipItem) {\n              return;\n            }\n          },\n          tooltipFontStyle: \"bold\"\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              display: false\n            },\n            ticks: {\n              fontSize: 10,\n              opacity: 0.7\n            },\n            barPercentage: 1.0,\n            scaleLabel: {\n              display: true,\n              labelString: chartData.x_label,\n              fontWeight: 900,\n              fontStyle: \"bold\"\n            }\n          }],\n          yAxes: [{\n            gridLines: {\n              display: false // drawBorder: false,\n\n            },\n            ticks: {\n              // stepSize: 100000,\n              callback: function callback(value) {\n                var ranges = [{\n                  divider: 1e9,\n                  suffix: 'B'\n                }, {\n                  divider: 1e6,\n                  suffix: 'M'\n                }, {\n                  divider: 1e3,\n                  suffix: 'k'\n                }];\n\n                function formatNumber(n) {\n                  for (var i = 0; i < ranges.length; i++) {\n                    if (n >= ranges[i].divider) {\n                      return (n / ranges[i].divider).toString() + ranges[i].suffix;\n                    }\n                  }\n\n                  return n;\n                }\n\n                if (showDollars) {\n                  return \"$\" + formatNumber(value);\n                } else {\n                  return formatNumber(value);\n                }\n              }\n            },\n            scaleLabel: {\n              display: true,\n              labelString: chartData.y_label,\n              fontStyle: \"bold\"\n            }\n          }]\n        },\n        legend: {\n          display: true,\n          position: 'bottom',\n          labels: {\n            boxWidth: 12\n          },\n          fontFamily: \"Helvetica\",\n          fontSize: \"12px\"\n        },\n        responsive: true,\n        maintainAspectRatio: true\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: barData,\n        options: chartOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BarChart;\n}(Component);\n\nBarChart.propTypes = {\n  chartData: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  success: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    chartData: state.chartData,\n    errors: state.errors,\n    success: state.success\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getChartData: getChartData\n})(withRouter(BarChart));","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Charts/barNew.js"],"names":["React","Component","PropTypes","connect","withRouter","Line","Bar","Pie","Modal","getChartData","Popover","Chart","moment","Tabs","Table","Stackedbar","TabPane","BarChart","props","checkDollar","label","includes","state","visible","setState","backgroundColor","chartData","data","labelsData","labels","datasets","colors","push","object","labelsKey","Object","keys","x_labelData","x_label","showDollars","key","console","log","index","indexOf","hoverBackgroundColor","reverse","map","barData","chartOptions","plugins","datalabels","display","hover","mode","tooltips","callbacks","title","tooltipItems","xLabel","beforeLabel","tooltipItem","ranges","divider","suffix","formatNumber","n","i","length","newNumber","toFixed","toString","datasetIndex","yLabel","tooltipFontStyle","scales","xAxes","gridLines","ticks","fontSize","opacity","barPercentage","scaleLabel","labelString","fontWeight","fontStyle","yAxes","callback","value","y_label","legend","position","boxWidth","fontFamily","responsive","maintainAspectRatio","propTypes","func","isRequired","errors","success","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport Modal from 'react-awesome-modal';\nimport { getChartData } from '../../actions/chart';\nimport Popover from '../Content/popover';\nimport Chart from 'chart.js';\nimport moment from 'moment'\nimport { Tabs } from 'antd';\nimport Table from '../Charts/table'\nimport Stackedbar from '../Charts/stackedbarNew'\n\nconst TabPane = Tabs.TabPane;\n\n\nclass BarChart extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      visible: false\n    };\n  }\n\n  openModal() {\n    this.setState({\n      visible: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      visible: false\n    });\n  }\n\n  checkDollar = (label)=>{\n    //  console.log(label)\n    if(label.includes(\"$\")){\n      return true;\n    }else{\n      return false;\n    }\n   }\n\n  render() {\n    let backgroundColor;\n    var chartData = this.props.data;\n    // console.log('chartData', chartData)\n    let labelsData = chartData.labels;\n    let labels = [];\n    let datasets = [];\n\n    // var colourPicker = [\"#2685CB\", \"#FDC81A\", \"#4B4ADA\",\"#FC3026\", \"#CD36E7\", \"#FD8E13\"];\n    var colors = []\n       colors.push({\n         backgroundColor: '#2685CB'\n       })\n       colors.push({\n         backgroundColor: '#EC932F'\n       })\n       colors.push({\n         backgroundColor: '#4B4ADA'\n       })\n       colors.push({\n         backgroundColor: '#FC3026'\n       })\n       colors.push({\n         backgroundColor: '#CD36E7'\n       })\n    var object = chartData.data;\n    // console.log(object)\n    let labelsKey = Object.keys(labelsData)\n    // console.log(labelsKey)\n    var x_labelData = chartData.x_label;\n    var showDollars = false;\n\n    for (var key in object) {\n      if(this.checkDollar(key)){\n        console.log('$ present ',this.checkDollar(key))\n         showDollars = true \n      }\n      var index = Object.keys(object).indexOf(key);\n      if(key == \"Yellow\" || key == \"Red\" || key == \"Green\"){\n        backgroundColor = key ;\n        // console.log('background color in yellow green red', backgroundColor);\n      }else{\n        // backgroundColor = selectedColour[0] ;\n        // console.log('background color not  in yellow green red', backgroundColor, selectedColour);\n        backgroundColor = colors[index % 4].backgroundColor ;\n\n      }\n      datasets.push(\n        {\n          label: key, \n          backgroundColor: backgroundColor,\n          hoverBackgroundColor:backgroundColor,\n          data: object[key]\n        }\n      )\n    }\n    //change the sequence to red, yellow, green\n    datasets.reverse();\n\n    // console.log('dats sets pushed data', datasets)\n\n    for (var key in labelsData) {\n      labelsData[key].map((label)=>{\n      labels.push(label);\n   })\n   }\n\n\n   let barData = {\n    labels: labels,\n    datasets: datasets\n  }\n\n  let chartOptions = {\n    plugins: {\n      datalabels: {\n         display: false\n      },\n      labels:false\n   },\n    hover: {\n      mode: \"nearest\",\n    },\n    tooltips: {\n      mode: 'nearest',\n      callbacks: {\n        title: function([tooltipItems],data) {\n          // console.log('tooltip title',data ,tooltipItems)\n            return x_labelData + ' : ' + tooltipItems.xLabel;\n          },\n\n          beforeLabel: function(tooltipItem,data) {\n            var ranges = [\n              { divider: 1e9, suffix: 'B' },\n                        { divider: 1e6, suffix: 'M' },\n                        { divider: 1e3, suffix: 'k' }\n                     ];\n                     function formatNumber(n) {\n                          for (var i = 0; i < ranges.length; i++) {\n                             if (n >= (ranges[i].divider)) {\n                               let newNumber = (n / ranges[i].divider).toFixed(2)\n                                return newNumber.toString() + ranges[i].suffix;\n                             }\n                          }\n                          return n;\n                       }\n            // console.log(typeof tooltipItem.yLabel,tooltipItem.yLabel)\n          return data.datasets[tooltipItem.datasetIndex].label + ': '  + '\\n' + formatNumber(tooltipItem.yLabel);\n        },\n        label: function(tooltipItem) {\n          return ;\n        }\n\n      },\n      tooltipFontStyle:\"bold\"\n    },\n    \n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n\n          },\n          ticks: {\n            fontSize: 10,\n            opacity: 0.7,\n           },\n\n          barPercentage: 1.0,\n          scaleLabel: {\n            display: true,\n            labelString: chartData.x_label,\n            fontWeight: 900,\n            fontStyle: \"bold\",\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            display: false,\n            // drawBorder: false,\n          },\n          ticks: {\n            // stepSize: 100000,\n            callback: function(value) {\n              var ranges = [\n                { divider: 1e9, suffix: 'B' },\n                { divider: 1e6, suffix: 'M' },\n                { divider: 1e3, suffix: 'k' }\n             ];\n             function formatNumber(n) {\n                  for (var i = 0; i < ranges.length; i++) {\n                     if (n >= ranges[i].divider) {\n                        return (n / ranges[i].divider).toString() + ranges[i].suffix;\n                     }\n                  }\n                  return n;\n               }\n\n              if(showDollars){\n                return \"$\" + formatNumber(value)\n              }else{\n                return  formatNumber(value)\n\n              }\n               \n            }\n         },\n          scaleLabel: {\n            display: true,\n            labelString: chartData.y_label,\n            fontStyle: \"bold\",\n          },\n        }\n      ]\n    },\n    legend: {\n      display: true,\n      position: 'bottom',\n      labels: {\n        boxWidth: 12\n    },\n      fontFamily: \"Helvetica\",\n      fontSize: \"12px\",\n      \n    },\n    responsive: true,\n    maintainAspectRatio: true,\n  }\n\n    return (\n      <div>\n        <Bar data={barData} options={chartOptions} />\n      </div>\n    )\n  }\n}\n\n\nBarChart.propTypes = {\n  chartData: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  success: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  chartData: state.chartData,\n  errors: state.errors,\n  success: state.success\n});\n\nexport default connect(mapStateToProps, { getChartData })(withRouter(BarChart));\n"]},"metadata":{},"sourceType":"module"}