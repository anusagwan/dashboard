{"ast":null,"code":"import _regeneratorRuntime from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Configuration/StoreConfigContainers/StoreConfig.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Select from 'react-select';\nimport '../../Configuration/StoreConfigContainers/StoreConfig.css';\nimport '../../../index.css';\nimport DataTable from '../../../services/reactTable';\nimport { connect } from 'react-redux';\nimport StoreConfigRowData from '../StoreConfigContainers/StoreConfigRowData';\nimport StoreConfigActions from '../../../actions/storeConfigActions';\nimport _ from 'lodash';\nvar deptData = [{\n  value: 3,\n  label: 'testing create api for edit'\n}, {\n  value: 2,\n  label: 'testing create api'\n}, {\n  value: 4,\n  label: 'testing create api for edit 1'\n}, {\n  value: 1,\n  label: 'test'\n}];\nexport var StoreConfig =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StoreConfig, _Component);\n\n  function StoreConfig() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StoreConfig);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StoreConfig)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      storeGroup: '',\n      tableData: [],\n      filtered: []\n    };\n    _this.header = [{\n      Header: 'Store Number',\n      accessor: 'store_code'\n    }, {\n      Header: 'Store Name',\n      accessor: 'store_name'\n    }, {\n      Header: 'Chain Description',\n      accessor: 'chain_description'\n    }, {\n      Header: 'Region Description',\n      accessor: 'region_description'\n    }];\n\n    _this.onStoreGroupChangeHandler = function (val) {\n      _this.setState({\n        storeGroup: val\n      });\n    };\n\n    _this.handleFilter =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var storeGroup, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              storeGroup = _this.state && _this.state.storeGroup && _this.state.storeGroup.value;\n              _context.next = 3;\n              return _this.props.getStoreGroupTableData({\n                Stores_groups_Id: [storeGroup]\n              });\n\n            case 3:\n              res = _context.sent;\n\n              _this.setState({\n                tableData: res\n              });\n\n              console.log(storeGroup, 'storegrr');\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.clearStoreFilter = function () {\n      _this.setState({\n        storeGroup: '',\n        tableData: []\n      });\n    };\n\n    _this.onFilteredChangeCustom = function (value, accessor) {\n      var filtered = _this.state.filtered;\n      var insertNewFilter = 1;\n\n      if (filtered.length) {\n        filtered.forEach(function (filter, i) {\n          if (filter['id'] === accessor) {\n            if (value === '' || !value.length) filtered.splice(i, 1);else filter['value'] = value;\n            insertNewFilter = 0;\n          }\n        });\n      }\n\n      if (insertNewFilter) {\n        filtered.push({\n          id: accessor,\n          value: value\n        });\n      }\n\n      _this.setState({\n        filtered: filtered\n      });\n    };\n\n    _this.onCreateStoreGroupHandler = function () {\n      var isEditStoreGroup = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var data = arguments.length > 1 ? arguments[1] : undefined;\n\n      if (isEditStoreGroup) {\n        _this.props.history.push(\"/vis/Markdown/configuration/store/group/edit/\".concat(data));\n      } else {\n        _this.props.history.push(\"/vis/Markdown/configuration/store/group/create\");\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(StoreConfig, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStoreGroups();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.storeGroups, this.props.storeGroupTableData, 'storeGroupsstoreGroups');\n      var tableData = this.state.tableData;\n      return React.createElement(\"div\", {\n        className: \"card p-2 mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row mt-3 mb-2\",\n        style: {\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-3\",\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Store Group\"), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Select, {\n        id: \"store-group-select\",\n        placeholder: \"Select Store Group\",\n        options: this.props.storeGroups,\n        value: this.state.storeGroup,\n        onChange: this.onStoreGroupChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-4 pt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.handleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), \"\\xA0 Filter\")), React.createElement(\"button\", {\n        onClick: this.clearStoreFilter,\n        className: \"btn btn-primary  btn-filter-reset ml-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-repeat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), \"\\xA0 Reset\"))))), this.props.userRole !== 'Admin' && React.createElement(\"div\", {\n        className: \"col-md-2 pt-1 mr-3 text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: function onClick() {\n          return _this2.onCreateStoreGroupHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Create store group\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), !_.isEmpty(tableData) ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-2 offset-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"No of stores: 190\"), this.props.userRole !== 'Admin' && React.createElement(\"div\", {\n        className: \"col-md-7 text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: function onClick() {\n          return _this2.onCreateStoreGroupHandler(true, _this2.state && _this2.state.storeGroup && _this2.state.storeGroup.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Edit store group\"))), React.createElement(\"div\", {\n        style: {\n          height: '370px',\n          width: '65%',\n          margin: '1.5rem auto',\n          overflow: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        filtered: this.state.filtered,\n        filterable: true,\n        onFilteredChange: function onFilteredChange(filtered, column, value) {\n          _this2.onFilteredChangeCustom(value, column.id || column.accessor);\n        },\n        defaultFilterMethod: function defaultFilterMethod(filter, row, column) {\n          var id = filter.pivotId || filter.id;\n\n          if (typeof filter.value === 'object') {\n            return row[id] !== undefined ? filter.value.indexOf(row[id]) > -1 : true;\n          } else {\n            return row[id] !== undefined ? String(row[id]).indexOf(filter.value) > -1 : true;\n          }\n        },\n        columns: this.header,\n        data: tableData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }))) : null);\n    }\n  }]);\n\n  return StoreConfig;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    getOverlayLoaderState: store.loaderReducer.overlayLoaderState,\n    getOverlayLoaderText: store.loaderReducer.loaderText,\n    storeGroups: store.storeConfigReducer.storeGroups,\n    storeGroupTableData: store.storeConfigReducer.storeGroupTableData\n  };\n};\n\nvar mapDispatchToProps = {\n  fetchStoreGroups: StoreConfigActions.fetchStoreGroups,\n  getStoreGroupTableData: StoreConfigActions.getStoreGroupTableData,\n  createStoreGroup: StoreConfigActions.createStoreGroup\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(StoreConfig));","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Configuration/StoreConfigContainers/StoreConfig.jsx"],"names":["React","Component","withRouter","Select","DataTable","connect","StoreConfigRowData","StoreConfigActions","_","deptData","value","label","StoreConfig","state","storeGroup","tableData","filtered","header","Header","accessor","onStoreGroupChangeHandler","val","setState","handleFilter","props","getStoreGroupTableData","Stores_groups_Id","res","console","log","clearStoreFilter","onFilteredChangeCustom","insertNewFilter","length","forEach","filter","i","splice","push","id","onCreateStoreGroupHandler","isEditStoreGroup","data","history","fetchStoreGroups","storeGroups","storeGroupTableData","justifyContent","textAlign","userRole","isEmpty","height","width","margin","overflow","column","row","pivotId","undefined","indexOf","String","mapStateToProps","store","getOverlayLoaderState","loaderReducer","overlayLoaderState","getOverlayLoaderText","loaderText","storeConfigReducer","mapDispatchToProps","createStoreGroup"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Select from 'react-select';\nimport '../../Configuration/StoreConfigContainers/StoreConfig.css';\nimport '../../../index.css';\nimport DataTable from '../../../services/reactTable';\nimport { connect } from 'react-redux';\nimport StoreConfigRowData from '../StoreConfigContainers/StoreConfigRowData';\nimport StoreConfigActions from '../../../actions/storeConfigActions';\nimport _ from 'lodash';\n\nconst deptData = [\n  {\n    value: 3,\n    label: 'testing create api for edit',\n  },\n  {\n    value: 2,\n    label: 'testing create api',\n  },\n  {\n    value: 4,\n    label: 'testing create api for edit 1',\n  },\n  {\n    value: 1,\n    label: 'test',\n  },\n];\nexport class StoreConfig extends Component {\n  state = {\n    storeGroup: '',\n    tableData: [],\n    filtered: [],\n  };\n  header = [\n    {\n      Header: 'Store Number',\n      accessor: 'store_code',\n    },\n    {\n      Header: 'Store Name',\n      accessor: 'store_name',\n    },\n    {\n      Header: 'Chain Description',\n      accessor: 'chain_description',\n    },\n    {\n      Header: 'Region Description',\n      accessor: 'region_description',\n    },\n  ];\n  componentDidMount() {\n    this.props.fetchStoreGroups();\n  }\n  onStoreGroupChangeHandler = (val) => {\n    this.setState({\n      storeGroup: val,\n    });\n  };\n  handleFilter = async () => {\n    let storeGroup = this.state && this.state.storeGroup && this.state.storeGroup.value;\n    let res = await this.props.getStoreGroupTableData({ Stores_groups_Id: [storeGroup] });\n    this.setState({ tableData: res });\n    console.log(storeGroup, 'storegrr');\n  };\n\n  clearStoreFilter = () => {\n    this.setState({\n      storeGroup: '',\n      tableData: [],\n    });\n  };\n  onFilteredChangeCustom = (value, accessor) => {\n    let filtered = this.state.filtered;\n    let insertNewFilter = 1;\n\n    if (filtered.length) {\n      filtered.forEach((filter, i) => {\n        if (filter['id'] === accessor) {\n          if (value === '' || !value.length) filtered.splice(i, 1);\n          else filter['value'] = value;\n\n          insertNewFilter = 0;\n        }\n      });\n    }\n\n    if (insertNewFilter) {\n      filtered.push({ id: accessor, value: value });\n    }\n\n    this.setState({ filtered: filtered });\n  };\n  onCreateStoreGroupHandler = (isEditStoreGroup = false, data) => {\n    if (isEditStoreGroup) {\n      this.props.history.push(`/vis/Markdown/configuration/store/group/edit/${data}`);\n    } else {\n      this.props.history.push(`/vis/Markdown/configuration/store/group/create`);\n    }\n  };\n  render() {\n    console.log(this.props.storeGroups, this.props.storeGroupTableData, 'storeGroupsstoreGroups');\n    let { tableData } = this.state;\n    return (\n      <div className=\"card p-2 mt-4\">\n        <div className=\"row mt-3 mb-2\" style={{ justifyContent: 'space-between' }}>\n          <div className=\"col-md-6\">\n            <div className=\"row\">\n              <div className=\"col-md-3\" style={{ textAlign: 'right' }}>\n                Store Group\n              </div>\n              <div className=\"col-md-4\">\n                <Select\n                  id=\"store-group-select\"\n                  placeholder=\"Select Store Group\"\n                  options={this.props.storeGroups}\n                  value={this.state.storeGroup}\n                  onChange={this.onStoreGroupChangeHandler}\n                />\n              </div>\n              <div className=\"col-md-4 pt-1\">\n                <button className=\"btn btn-primary\" onClick={this.handleFilter}>\n                  <span>\n                    <i className=\"fa fa-filter\"></i>&nbsp; Filter\n                  </span>\n                </button>\n                <button\n                  onClick={this.clearStoreFilter}\n                  className=\"btn btn-primary  btn-filter-reset ml-2\">\n                  <span>\n                    <i className=\"fa fa-repeat\"></i>&nbsp; Reset\n                  </span>\n                </button>\n              </div>\n            </div>\n          </div>\n          {this.props.userRole !== 'Admin' && (\n            <div className=\"col-md-2 pt-1 mr-3 text-right\">\n              <button className=\"btn btn-primary\" onClick={() => this.onCreateStoreGroupHandler()}>\n                Create store group\n              </button>\n            </div>\n          )}\n        </div>\n        <hr />\n        {!_.isEmpty(tableData) ? (\n          <>\n            <div className=\"row\">\n              <div className=\"col-md-2 offset-md-2\">No of stores: 190</div>\n              {this.props.userRole !== 'Admin' && (\n                <div className=\"col-md-7 text-right\">\n                  <button\n                    className=\"btn btn-primary\"\n                    onClick={() =>\n                      this.onCreateStoreGroupHandler(\n                        true,\n                        this.state && this.state.storeGroup && this.state.storeGroup.value\n                      )\n                    }>\n                    Edit store group\n                  </button>\n                </div>\n              )}\n            </div>\n            <div\n              style={{\n                height: '370px',\n                width: '65%',\n                margin: '1.5rem auto',\n                overflow: 'auto',\n              }}>\n              <DataTable\n                filtered={this.state.filtered}\n                filterable\n                onFilteredChange={(filtered, column, value) => {\n                  this.onFilteredChangeCustom(value, column.id || column.accessor);\n                }}\n                defaultFilterMethod={(filter, row, column) => {\n                  const id = filter.pivotId || filter.id;\n                  if (typeof filter.value === 'object') {\n                    return row[id] !== undefined ? filter.value.indexOf(row[id]) > -1 : true;\n                  } else {\n                    return row[id] !== undefined\n                      ? String(row[id]).indexOf(filter.value) > -1\n                      : true;\n                  }\n                }}\n                columns={this.header}\n                data={tableData}\n              />\n            </div>\n          </>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    getOverlayLoaderState: store.loaderReducer.overlayLoaderState,\n    getOverlayLoaderText: store.loaderReducer.loaderText,\n    storeGroups: store.storeConfigReducer.storeGroups,\n    storeGroupTableData: store.storeConfigReducer.storeGroupTableData,\n  };\n};\nconst mapDispatchToProps = {\n  fetchStoreGroups: StoreConfigActions.fetchStoreGroups,\n  getStoreGroupTableData: StoreConfigActions.getStoreGroupTableData,\n  createStoreGroup: StoreConfigActions.createStoreGroup,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(StoreConfig));\n"]},"metadata":{},"sourceType":"module"}