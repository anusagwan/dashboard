{"ast":null,"code":"var _jsxFileName = \"/home/user/generic-markdown-frontend/src/lib/Calendar/Components/CalendarEventsList.js\";\nimport React from 'react';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport moment from 'moment';\nimport LazyLoad from 'react-lazyload';\nimport { getEventLeftSpace, getEventWidth, getEventTitleLeftSpace, getEventTitleWidth, getCurrQtrFrmWK, getEventStatus } from '../helpers';\nimport { eventStatusColors } from '../constants';\n\nfunction dataTip(event, qtrWkMapping) {\n  var stDt = moment(event.start_date);\n  var enDt = moment(event.end_date);\n  var stWkNo = stDt.week();\n  var enWkNo = enDt.week();\n  var stQtr = getCurrQtrFrmWK(qtrWkMapping, stWkNo) + 1;\n  var enQtr = getCurrQtrFrmWK(qtrWkMapping, enWkNo) + 1;\n  return React.createElement(\"div\", {\n    style: {\n      textAlign: 'left',\n      padding: '8px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Title: \"), event.md_plan), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Date: \"), \"\".concat(stDt.format('MMM/DD'), \" - \").concat(enDt.format('MMM/DD'))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Week: \"), \"\".concat(stWkNo, \" - \").concat(enWkNo)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Quarter: \"), \"Q\".concat(stQtr).concat(stQtr !== enQtr ? \" - Q\".concat(enQtr) : '')));\n}\n\nfunction CalendarEvent(_ref) {\n  var event = _ref.event,\n      mapping = _ref.mapping,\n      left = _ref.left,\n      titleLeft = _ref.titleLeft,\n      width = _ref.width,\n      titleWidth = _ref.titleWidth,\n      onCalEventClick = _ref.onCalEventClick,\n      qtrWkMapping = _ref.qtrWkMapping;\n  var eventStatus = getEventStatus(event);\n  return React.createElement(\"div\", {\n    className: \"cal-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, mapping.map(function () {\n    return React.createElement(\"div\", {\n      className: \"cal-cell\",\n      style: {\n        width: \"\".concat(100 / mapping.length, \"%\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    });\n  }), React.createElement(\"div\", {\n    className: \"event\",\n    style: {\n      left: \"\".concat(left, \"%\"),\n      width: \"\".concat(width, \"%\"),\n      backgroundImage: \"linear-gradient(to right, \".concat(eventStatusColors[eventStatus].from, \", \").concat(eventStatusColors[eventStatus].to, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(OverlayTrigger, {\n    key: \"top\",\n    placement: \"top\",\n    overlay: React.createElement(Tooltip, {\n      id: \"tooltip-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, dataTip(event, qtrWkMapping)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: function onClick() {\n      onCalEventClick(event);\n    },\n    className: \"event-title-div\",\n    style: {\n      left: \"\".concat(titleLeft, \"%\"),\n      width: \"\".concat(titleWidth, \"%\"),\n      cursor: 'pointer'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"event-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, event.md_plan))));\n}\n\nexport default function CalendarEventsList(_ref2) {\n  var mapping = _ref2.mapping,\n      filteredEvents = _ref2.filteredEvents,\n      calStDt = _ref2.calStDt,\n      calEnDt = _ref2.calEnDt,\n      onCalEventClick = _ref2.onCalEventClick,\n      qtrWkMapping = _ref2.qtrWkMapping;\n  var noOfDaysInCal = calEnDt.diff(calStDt, 'days') + 1;\n  return React.createElement(\"div\", {\n    className: \"event-list-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, filteredEvents.map(function (event, index) {\n    var eventStDt = event.start_date,\n        eventEnDt = event.end_date;\n    return React.createElement(LazyLoad, {\n      key: index,\n      scrollContainer: \".event-list-container\",\n      height: 67,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(CalendarEvent, {\n      key: index,\n      event: event,\n      onCalEventClick: onCalEventClick,\n      mapping: mapping,\n      qtrWkMapping: qtrWkMapping,\n      left: getEventLeftSpace({\n        eventStDt: eventStDt,\n        calStDt: calStDt,\n        noOfDaysInCal: noOfDaysInCal\n      }),\n      titleLeft: getEventTitleLeftSpace({\n        eventStDt: eventStDt,\n        calStDt: calStDt,\n        noOfDaysInCal: noOfDaysInCal\n      }),\n      width: getEventWidth({\n        eventStDt: eventStDt,\n        eventEnDt: eventEnDt,\n        calStDt: calStDt,\n        calEnDt: calEnDt,\n        noOfDaysInCal: noOfDaysInCal\n      }),\n      titleWidth: getEventTitleWidth({\n        eventStDt: eventStDt,\n        eventEnDt: eventEnDt,\n        calStDt: calStDt,\n        calEnDt: calEnDt,\n        noOfDaysInCal: noOfDaysInCal\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }), filteredEvents.length === 0 && React.createElement(\"div\", {\n    className: \"cal-row flex-c-a\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"No Events here to Show up\"));\n}","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/lib/Calendar/Components/CalendarEventsList.js"],"names":["React","OverlayTrigger","Tooltip","moment","LazyLoad","getEventLeftSpace","getEventWidth","getEventTitleLeftSpace","getEventTitleWidth","getCurrQtrFrmWK","getEventStatus","eventStatusColors","dataTip","event","qtrWkMapping","stDt","start_date","enDt","end_date","stWkNo","week","enWkNo","stQtr","enQtr","textAlign","padding","md_plan","format","CalendarEvent","mapping","left","titleLeft","width","titleWidth","onCalEventClick","eventStatus","map","length","backgroundImage","from","to","cursor","CalendarEventsList","filteredEvents","calStDt","calEnDt","noOfDaysInCal","diff","index","eventStDt","eventEnDt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport moment from 'moment';\nimport LazyLoad from 'react-lazyload';\nimport {\n  getEventLeftSpace,\n  getEventWidth,\n  getEventTitleLeftSpace,\n  getEventTitleWidth,\n  getCurrQtrFrmWK,\n  getEventStatus,\n} from '../helpers';\n\nimport { eventStatusColors } from '../constants';\n\nfunction dataTip(event, qtrWkMapping) {\n  const stDt = moment(event.start_date);\n  const enDt = moment(event.end_date);\n  const stWkNo = stDt.week();\n  const enWkNo = enDt.week();\n  const stQtr = getCurrQtrFrmWK(qtrWkMapping, stWkNo) + 1;\n  const enQtr = getCurrQtrFrmWK(qtrWkMapping, enWkNo) + 1;\n  return (\n    <div style={{ textAlign: 'left', padding: '8px' }}>\n      <div>\n        <strong>Title: </strong>\n        {event.md_plan}\n      </div>\n      <div>\n        <strong>Date: </strong>\n        {`${stDt.format('MMM/DD')} - ${enDt.format('MMM/DD')}`}\n      </div>\n      <div>\n        <strong>Week: </strong>\n        {`${stWkNo} - ${enWkNo}`}\n      </div>\n      <div>\n        <strong>Quarter: </strong>\n        {`Q${stQtr}${stQtr !== enQtr ? ` - Q${enQtr}` : ''}`}\n      </div>\n    </div>\n  );\n}\nfunction CalendarEvent({\n  event,\n  mapping,\n  left,\n  titleLeft,\n  width,\n  titleWidth,\n  onCalEventClick,\n  qtrWkMapping,\n}) {\n  const eventStatus = getEventStatus(event);\n  return (\n    <div className=\"cal-row\">\n      {mapping.map(() => {\n        return <div className=\"cal-cell\" style={{ width: `${100 / mapping.length}%` }}></div>;\n      })}\n      <div\n        className=\"event\"\n        style={{\n          left: `${left}%`,\n          width: `${width}%`,\n          backgroundImage: `linear-gradient(to right, ${eventStatusColors[eventStatus].from}, ${eventStatusColors[eventStatus].to})`,\n        }}></div>\n      <OverlayTrigger\n        key=\"top\"\n        placement=\"top\"\n        overlay={<Tooltip id={`tooltip-top`}>{dataTip(event, qtrWkMapping)}</Tooltip>}>\n        <div\n          onClick={() => {\n            onCalEventClick(event);\n          }}\n          className=\"event-title-div\"\n          style={{ left: `${titleLeft}%`, width: `${titleWidth}%`, cursor: 'pointer' }}>\n          <span className=\"event-title\">{event.md_plan}</span>\n        </div>\n      </OverlayTrigger>\n    </div>\n  );\n}\n\nexport default function CalendarEventsList({\n  mapping,\n  filteredEvents,\n  calStDt,\n  calEnDt,\n  onCalEventClick,\n  qtrWkMapping,\n}) {\n  const noOfDaysInCal = calEnDt.diff(calStDt, 'days') + 1;\n  return (\n    <div className=\"event-list-container\">\n      {filteredEvents.map((event, index) => {\n        const { start_date: eventStDt, end_date: eventEnDt } = event;\n        return (\n          <LazyLoad key={index} scrollContainer=\".event-list-container\" height={67}>\n            <CalendarEvent\n              key={index}\n              event={event}\n              onCalEventClick={onCalEventClick}\n              mapping={mapping}\n              qtrWkMapping={qtrWkMapping}\n              left={getEventLeftSpace({ eventStDt, calStDt, noOfDaysInCal })}\n              titleLeft={getEventTitleLeftSpace({ eventStDt, calStDt, noOfDaysInCal })}\n              width={getEventWidth({ eventStDt, eventEnDt, calStDt, calEnDt, noOfDaysInCal })}\n              titleWidth={getEventTitleWidth({\n                eventStDt,\n                eventEnDt,\n                calStDt,\n                calEnDt,\n                noOfDaysInCal,\n              })}\n            />\n          </LazyLoad>\n        );\n      })}\n      {filteredEvents.length === 0 && (\n        <div className=\"cal-row flex-c-a\">No Events here to Show up</div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}