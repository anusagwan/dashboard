{"ast":null,"code":"var _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Summary/aggColdef.js\";\nimport React from 'react';\nimport { toPercentage, toPercentageWithDecimalDraft, toUnit, toDollar, toDollarWithDecimal, toPercWithOneDecimal } from '../../helper/formatter';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport numeral from 'numeral';\n\nvar onChangeFct = function onChangeFct() {\n  return console.log('onChange usually handled by redux');\n};\n\nfunction renderEditable(cellInfo) {\n  // let value = !_.isEmpty(row.subRows)\n  //   ? row.original.overall_week_offer_value\n  //   : row.original.offer_value;\n  // let type = !_.isEmpty(row.subRows)\n  //   ? row.original.overall_week_offer_type\n  //   : row.original.offer_type;\n  // return <span>{value ? unitCheck(value, type) : '-'}</span>;\n  // const cellValue = row.original.overall_week_offer_type;\n  console.log(cellInfo.rows, 'gggggg');\n  return React.createElement(\"input\", {\n    placeholder: \"type here\",\n    name: \"input\",\n    type: \"text\",\n    onChange: this.props.handleInputChange(cellInfo) // value={cellValue}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n} //cellClassName must be same for aggColDef, binToWeekColDef and weekToBinColDef\n\n/********************************************************************* */\n//*******WHILE ADDING NEW COLUMNS ADD A UNIQUE CELLCLASSNAME************/\n\n/********ADD THE COLUMN TO ALL OF THREE COLDEFS*************************/\n\n/********************************************************************* */\n//aggColDef is aggregate level parent table coldef,\n//in this level user can expand both dateRange and Bins cols(when one is expanded the other will disable)\n\n\nexport var aggColDef = [// {\n//   Header: 'MD Plan',\n//   accessor: 'md_plan',\n//   cellClassName: 'summary_md_plan',\n// },\n{\n  Header: 'Plan Level',\n  accessor: 'level',\n  cellClassName: 'summary_cadence_type'\n}, {\n  id: 'expander',\n  cellClassName: 'summary_expander',\n  Header: 'Date Range',\n  Cell: function Cell(_ref) {\n    var row = _ref.row;\n    var startWeek = row.original && row.original.week_level_data && row.original.week_level_data[0];\n    var endWeek = row.original && row.original.week_level_data && row.original.week_level_data[row.original.week_level_data.length - 1];\n    var SDate = startWeek && moment().year(startWeek.year).week(startWeek.week).day('monday').format('YYYY/MM/DD');\n    var EDate = endWeek && moment().year(endWeek.year).week(endWeek.week + 1).day('sunday').format('YYYY/MM/DD');\n    return row.original.md_plan ? React.createElement(\"span\", Object.assign({\n      className: \"summary-table-icon\"\n    }, row.getToggleRowExpandedProps({\n      style: {\n        paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n      }\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), SDate, \" - \", EDate, \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n      class: \"fa fa-angle-down expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      class: \"fa fa-angle-right expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), \"\\xA0\\xA0\\xA0\") : null;\n  }\n}, {\n  id: 'expander1',\n  cellClassName: 'summary_expander1',\n  Header: 'Bins',\n  Cell: function Cell(_ref2) {\n    var row = _ref2.row;\n    return row.original.md_plan ? React.createElement(\"span\", Object.assign({\n      className: \"summary-table-icon\"\n    }, row.getToggleRowExpandedProps({\n      style: {\n        paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n      }\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), row.original.bin_level_data ? row.original.bin_level_data.length : row.original.week_level_data && row.original.week_level_data[0] && row.original.week_level_data[0].bin_level_data ? row.original.week_level_data[0].bin_level_data.length : row.original.week_level_data && row.original.week_level_data[0] && row.original.week_level_data[0].subRows ? row.original.week_level_data[0].subRows.length : '-', \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n      class: \"fa fa-angle-down expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      class: \"fa fa-angle-right expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), \"\\xA0\\xA0\\xA0\") : null;\n  }\n}, {\n  Header: '#Products',\n  // Cell: renderEditable,\n  accessor: 'overall_product_count',\n  cellClassName: 'summary_product_code',\n  Cell: function Cell(props) {\n    // renderEditable;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \" \", toUnit(props), \" \");\n  }\n}, // {\n//   Header: 'Next week MD',\n//   accessor: 'overall_next_week',\n//   cellClassName: 'summary_next_week',\n//   Cell: ({ row, rows }) => {\n//     return '-';\n//   },\n// },\n{\n  Header: 'Current running MD',\n  accessor: 'overall_next_week',\n  cellClassName: 'summary_current_md',\n  Cell: function Cell(_ref3) {\n    var row = _ref3.row,\n        rows = _ref3.rows;\n    return '-';\n  }\n}, {\n  Header: 'Planned MD',\n  accessor: 'overall_offer_value',\n  cellClassName: 'summary_planned_md',\n  Cell: function Cell(_ref4) {\n    var row = _ref4.row;\n    var value = row.original.overall_offer_value;\n    var type = row.original.overall_offer_type;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, value ? unitCheck(value, type) : '-');\n  }\n}, {\n  Header: 'Refreshed MD',\n  accessor: 'refreshed_md',\n  cellClassName: 'summary_refreshed_md',\n  Cell: function Cell(_ref5) {\n    var row = _ref5.row;\n    var value = row.original.overall_refreshed_md;\n    var type = row.original.overall_offer_type;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, value ? unitCheck(value, type) : '-');\n  }\n}, {\n  Header: 'MD Difference',\n  accessor: 'overall_md_diff',\n  cellClassName: 'summary_difference',\n  Cell: function Cell(_ref6) {\n    var row = _ref6.row;\n    return row.original.overall_md_diff ? row.original.overall_md_diff : '-';\n  }\n}, {\n  Header: 'Sell through %',\n  accessor: 'overall_sell_through',\n  cellClassName: 'summary_sell_through',\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \" \", toPercentageWithDecimalDraft(props), \" \");\n  }\n}, // {\n//   Header: 'Markdown %',\n//   accessor: 'overall_markdown_perc',\n//   cellClassName: 'summary_markdown_perc',\n//   Cell: (props) => <div> {toPercentage(props)} </div>,\n// },\n{\n  Header: 'Margin %',\n  accessor: 'overall_margin_perc',\n  cellClassName: 'summary_margin_perc',\n  metric: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \" \", toPercWithOneDecimal(props), \" \");\n  }\n}, {\n  Header: 'Margin $',\n  accessor: 'overall_margin$',\n  cellClassName: 'summary_margin',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \" \", toDollar(props), \" \");\n  }\n}, {\n  Header: 'AUM $',\n  accessor: 'overall_aum',\n  cellClassName: 'summary_aum',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \" \", toDollarWithDecimal(props), \" \");\n  }\n}, {\n  Header: 'Revenue $',\n  accessor: 'overall_revenue$',\n  cellClassName: 'summary_revenue',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \" \", toDollar(props), \" \");\n  }\n}, // {\n//   Header: 'Planned units',\n//   accessor: 'overall_planned_units',\n//   cellClassName: 'summary_pvh_units',\n//   hideColumn: true,\n//   Cell: (props) => <div> {toUnit(props)} </div>,\n// },\n{\n  Header: 'Markdown units',\n  accessor: 'overall_markdown_units',\n  cellClassName: 'summary_markdown_units',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \" \", toUnit(props), \" \");\n  }\n}, {\n  Header: 'AUR $',\n  accessor: 'overall_aur',\n  cellClassName: 'summary_aur',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \" \", toDollarWithDecimal(props), \" \");\n  }\n}]; //weekToBinColDef contains accessor in granular level,\n//in Cell method have added a condition to display aggregated level data\n//if u add a new column make sure to copy the same\n//only bins will be expandable\n\nexport var weekToBinColDef = [{\n  Header: 'MD Plan',\n  accessor: 'md_plan',\n  cellClassName: 'summary_md_plan',\n  Cell: function Cell(_ref7) {\n    var row = _ref7.row;\n    return null;\n  }\n}, {\n  Header: 'Plan Level',\n  accessor: 'level',\n  cellClassName: 'summary_cadence_type'\n}, {\n  Header: 'Date Range',\n  id: 'expander',\n  cellClassName: 'summary_expander',\n  Cell: function Cell(_ref8) {\n    var row = _ref8.row;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, row.original.week ? 'W' + row.original.week : '');\n  }\n}, {\n  id: 'expander1',\n  cellClassName: 'summary_expander1',\n  Header: 'Bins',\n  Cell: function Cell(_ref9) {\n    var row = _ref9.row;\n    return row.original.subRows ? React.createElement(\"span\", Object.assign({\n      className: \"summary-table-icon\"\n    }, row.getToggleRowExpandedProps({\n      style: {\n        // We can even use the row.depth property\n        // and paddingLeft to indicate the depth\n        // of the row\n        paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n      }\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), row.original.subRows ? row.original.subRows.length : '-', \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n      class: \"fa fa-angle-down expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      class: \"fa fa-angle-right expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), \"\\xA0\\xA0\\xA0\") : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, row.original.bin_num ? 'Bin ' + row.original.bin_num : null);\n  }\n}, {\n  Header: '#Products',\n  accessor: 'product_count',\n  cellClassName: 'summary_product_code',\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_product_count : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \" \", toUnit({\n      value: value\n    }), \" \");\n  }\n}, // {\n//   Header: 'Next week MD',\n//   accessor: 'next_week',\n//   cellClassName: 'summary_next_week',\n//   Cell: ({ row, rows }) => {\n//     let typeAccessor = !_.isEmpty(row.subRows) ? 'overall_week_offer_type' : 'offer_type';\n//     let value = findNextWeek(row, rows);\n//     return <span>{value ? unitCheck(value, row.original[typeAccessor]) : '-'}</span>;\n//   },\n// },\n{\n  Header: 'Current running MD',\n  accessor: 'next_week',\n  cellClassName: 'summary_current_md',\n  Aggregated: function Aggregated(_ref10) {\n    var row = _ref10.row,\n        rows = _ref10.rows;\n    if (_.isEmpty(row.subRows)) return '-';\n    var value = null,\n        subRows = row.subRows;\n\n    for (var i = 0; i < subRows.length; i++) {\n      var newValue = currentRunningMd(subRows[i], rows);\n      value = newValue ? value + newValue : value;\n    }\n\n    return value || value === 0 ? unitCheck(value / subRows.length, row.original.overall_week_offer_type) : '-';\n  },\n  Cell: function Cell(_ref11) {\n    var row = _ref11.row,\n        rows = _ref11.rows;\n    if (!_.isEmpty(row.subRows)) return '-';\n    var value = currentRunningMd(row, rows);\n    return value || value === 0 ? unitCheck(value, row.original.offer_type) : '-';\n  }\n}, {\n  Header: 'Planned MD',\n  accessor: 'offer_value',\n  cellClassName: 'summary_planned_md',\n  Cell: renderEditable // Cell: ({ row }) => {\n  //   let value = !_.isEmpty(row.subRows)\n  //     ? row.original.overall_week_offer_value\n  //     : row.original.offer_value;\n  //   let type = !_.isEmpty(row.subRows)\n  //     ? row.original.overall_week_offer_type\n  //     : row.original.offer_type;\n  //   return <span>{value ? unitCheck(value, type) : '-'}</span>;\n  // },\n\n}, {\n  Header: 'Refreshed MD',\n  accessor: 'refreshed_md',\n  cellClassName: 'summary_refreshed_md',\n  Cell: function Cell(_ref12) {\n    var row = _ref12.row;\n    var value = !_.isEmpty(row.subRows) ? row.original.overall_week_refreshed_md : row.original.refreshed_md;\n    var type = !_.isEmpty(row.subRows) ? row.original.overall_week_offer_type : row.original.offer_type;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, value ? unitCheck(value, type) : '-');\n  }\n}, {\n  Header: 'MD Difference',\n  accessor: 'md_diff',\n  cellClassName: 'summary_difference',\n  Cell: function Cell(_ref13) {\n    var row = _ref13.row,\n        rows = _ref13.rows;\n    var accessor = !_.isEmpty(row.subRows) ? 'overall_week_offer_value' : 'offer_value';\n    var type = !_.isEmpty(row.subRows) ? 'overall_week_offer_type' : 'offer_type';\n    var nextWeek,\n        currentWeek = row.original[accessor] ? parseFloat(row.original[accessor]) : 0;\n    var value = findNextWeek(row, rows);\n    nextWeek = value ? parseFloat(value) : 0;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, currentWeek ? unitCheck(nextWeek - currentWeek, row.original[type]) : '-');\n  }\n}, {\n  Header: 'Sell through %',\n  accessor: 'sell_through',\n  cellClassName: 'summary_sell_through',\n  Cell: function Cell(_ref14) {\n    var row = _ref14.row,\n        rows = _ref14.rows;\n    var id = row.id.split('.');\n    var value = 0;\n\n    if (_.isEmpty(row.subRows) && (row.original.sell_through || row.original.sell_through === 0)) {\n      for (var i = 0; i <= parseInt(id[0]); i++) {\n        var found = _.find(rows, {\n          id: \"\".concat(i)\n        });\n\n        var data = found && found.originalSubRows && found.originalSubRows[parseInt(id[1])] && found.originalSubRows[parseInt(id[1])].sell_through ? found.originalSubRows[parseInt(id[1])].sell_through : 0;\n        value = value + data;\n      }\n    }\n\n    if (!_.isEmpty(row.subRows) && row.original.overall_week_sell_through) {\n      for (var _i = 0; _i <= parseInt(id[0]); _i++) {\n        var _found = _.find(rows, {\n          id: \"\".concat(_i)\n        });\n\n        var _data = _found && _found.original && _found.original.overall_week_sell_through ? _found.original.overall_week_sell_through : 0;\n\n        value = value + _data;\n      }\n    }\n\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, value || value === 0 ? toPercentageWithDecimalDraft({\n      value: value\n    }) : '-');\n  }\n}, // {\n//   Header: 'Markdown %',\n//   accessor: 'markdown_perc',\n//   cellClassName: 'summary_markdown_perc',\n//   Cell: (props) => {\n//     let value = props.row.original.subRows\n//       ? props.row.original.overall_week_markdown_perc\n//       : props.value;\n//     return <div> {toPercentage({ value })} </div>;\n//   },\n// },\n{\n  Header: 'Margin %',\n  accessor: 'margin_perc',\n  cellClassName: 'summary_margin_perc',\n  metric: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_margin_perc : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, \" \", toPercWithOneDecimal({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'Margin $',\n  accessor: 'margin$',\n  cellClassName: 'summary_margin',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_margin$ : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }, \" \", toDollar(value), \" \");\n  }\n}, {\n  Header: 'AUM $',\n  accessor: 'aum',\n  cellClassName: 'summary_aum',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_aum : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }, \" \", toDollarWithDecimal({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'Revenue $',\n  accessor: 'revenue$',\n  cellClassName: 'summary_revenue',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_revenue$ : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, \" \", toDollar({\n      value: value\n    }), \" \");\n  }\n}, // {\n//   Header: 'Planned units',\n//   accessor: 'planned_units',\n//   cellClassName: 'summary_pvh_units',\n//   hideColumn: true,\n//   Cell: (props) => {\n//     let value = props.row.original.subRows\n//       ? props.row.original.overall_week_planned_units\n//       : props.value;\n//     return <div> {toUnit({ value })} </div>;\n//   },\n// },\n{\n  Header: 'Markdown units',\n  accessor: 'markdown_units',\n  cellClassName: 'summary_markdown_units',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_markdown_units : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, \" \", toUnit({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'AUR $',\n  accessor: 'aur',\n  cellClassName: 'summary_aur',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_aur : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, \" \", toDollarWithDecimal({\n      value: value\n    }), \" \");\n  }\n}]; //same as weekToBinColDef, but bin to week level\n//only date range will be expandable\n\nexport var binToWeekColDef = [{\n  Header: 'MD Plan',\n  accessor: 'md_plan',\n  cellClassName: 'summary_md_plan',\n  Cell: function Cell(_ref15) {\n    var row = _ref15.row;\n    return null;\n  }\n}, {\n  Header: 'Plan Level',\n  accessor: 'level',\n  cellClassName: 'summary_cadence_type'\n}, {\n  Header: 'Date Range',\n  id: 'expander',\n  cellClassName: 'summary_expander',\n  Cell: function Cell(_ref16) {\n    var row = _ref16.row;\n    var startWeek = row.originalSubRows && row.originalSubRows[0];\n    var endWeek = row.originalSubRows && row.originalSubRows[row.originalSubRows.length - 1];\n    var SDate = startWeek && moment().year(startWeek.year).week(startWeek.week_num).day('monday').format('YYYY/MM/DD');\n    var EDate = endWeek && moment().year(endWeek.year).week(endWeek.week_num + 1).day('sunday').format('YYYY/MM/DD');\n    return row.original.subRows ? React.createElement(\"span\", Object.assign({\n      className: \"summary-table-icon\"\n    }, row.getToggleRowExpandedProps({\n      style: {\n        paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n      }\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }), SDate, \" - \", EDate, \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n      class: \"fa fa-angle-down expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      class: \"fa fa-angle-right expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    }), \"\\xA0\\xA0\\xA0\") : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }, row.original.week_num ? 'W' + row.original.week_num : '');\n  }\n}, {\n  id: 'expander1',\n  cellClassName: 'summary_expander1',\n  Header: 'Bins',\n  Cell: function Cell(_ref17) {\n    var row = _ref17.row;\n    return row.original.bin ? 'Bin ' + row.original.bin : null;\n  }\n}, {\n  Header: '#Products',\n  accessor: 'product_count',\n  cellClassName: 'summary_product_code',\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_product_count : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609\n      },\n      __self: this\n    }, \" \", toUnit({\n      value: value\n    }), \" \");\n  }\n}, // {\n//   Header: 'Next week MD',\n//   accessor: 'next_week',\n//   cellClassName: 'summary_next_week',\n//   Cell: ({ row, rows }) => {\n//     let id, value;\n//     let accessor = !_.isEmpty(row.subRows) ? 'overall_bin_offer_value' : 'offer_value';\n//     let typeAccessor = !_.isEmpty(row.subRows)\n//       ? row.original.overall_bin_offer_type\n//       : row.original.offer_type;\n//     if (row.original[accessor]) {\n//       id = row.id.split('.');\n//       let find = _.find(rows, { id: id[0] });\n//       value =\n//         find.originalSubRows &&\n//         find.originalSubRows[parseInt(id[1]) + 1] &&\n//         find.originalSubRows[parseInt(id[1]) + 1][accessor];\n//     }\n//     return <span>{value ? unitCheck(value, typeAccessor) : '-'}</span>;\n//   },\n// },\n{\n  Header: 'Current running MD',\n  accessor: 'next_week',\n  cellClassName: 'summary_current_md',\n  Aggregated: function Aggregated(_ref18) {\n    var row = _ref18.row,\n        rows = _ref18.rows;\n    if (_.isEmpty(row.subRows)) return '-';\n    var value = null,\n        subRows = row.subRows;\n\n    for (var i = 0; i < subRows.length; i++) {\n      var newValue = currentRunningMdBin(subRows[i], rows);\n      value = newValue ? value + newValue : value;\n    }\n\n    return value || value === 0 ? unitCheck(value / subRows.length, row.original.overall_bin_offer_type) : '-';\n  },\n  Cell: function Cell(_ref19) {\n    var row = _ref19.row,\n        rows = _ref19.rows;\n    if (!_.isEmpty(row.subRows)) return '-';\n    var value = currentRunningMdBin(row, rows);\n    return value || value === 0 ? unitCheck(value, row.original.offer_type) : '-';\n  }\n}, {\n  Header: 'Planned MD',\n  accessor: 'offer_value',\n  cellClassName: 'summary_planned_md',\n  Cell: function Cell(_ref20) {\n    var row = _ref20.row;\n    var value = !_.isEmpty(row.subRows) ? row.original.overall_bin_offer_value : row.original.offer_value;\n    var type = !_.isEmpty(row.subRows) ? row.original.overall_bin_offer_type : row.original.offer_type;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668\n      },\n      __self: this\n    }, value ? unitCheck(value, type) : '-');\n  }\n}, {\n  Header: 'Refreshed MD',\n  accessor: 'refreshed_md',\n  cellClassName: 'summary_refreshed_md',\n  Cell: function Cell(_ref21) {\n    var row = _ref21.row;\n    var value = !_.isEmpty(row.subRows) ? row.original.overall_bin_refreshed_md : row.original.refreshed_md;\n    var type = !_.isEmpty(row.subRows) ? row.original.overall_bin_offer_type : row.original.offer_type;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683\n      },\n      __self: this\n    }, value ? unitCheck(value, type) : '-');\n  }\n}, {\n  Header: 'MD Difference',\n  accessor: 'md_diff',\n  cellClassName: 'summary_difference',\n  Cell: function Cell(_ref22) {\n    var row = _ref22.row,\n        rows = _ref22.rows;\n    var accessor = !_.isEmpty(row.subRows) ? 'overall_bin_offer_value' : 'offer_value';\n    var type = !_.isEmpty(row.subRows) ? 'overall_bin_offer_type' : 'offer_type';\n    var id,\n        nextWeek,\n        currentWeek = row.original[[accessor]] ? parseFloat(row.original[[accessor]]) : 0;\n\n    if (row.original[[accessor]]) {\n      id = row.id.split('.');\n\n      var find = _.find(rows, {\n        id: id[0]\n      });\n\n      var value = find.originalSubRows && find.originalSubRows[parseInt(id[1]) + 1] && find.originalSubRows[parseInt(id[1]) + 1][[accessor]];\n      nextWeek = value ? parseFloat(value) : 0;\n    }\n\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707\n      },\n      __self: this\n    }, currentWeek ? unitCheck(nextWeek - currentWeek, row.original[type]) : '-');\n  }\n}, {\n  Header: 'Sell through %',\n  accessor: 'sell_through',\n  cellClassName: 'summary_sell_through',\n  Cell: function Cell(_ref23) {\n    var row = _ref23.row,\n        rows = _ref23.rows;\n    var id = row.id.split('.');\n    var value = 0;\n\n    if (_.isEmpty(row.subRows) && (row.original.sell_through || row.original.sell_through === 0)) {\n      var found = _.find(rows, {\n        id: id[0]\n      });\n\n      for (var i = 0; i <= parseInt(id[1]); i++) {\n        var data = found && found.originalSubRows && found.originalSubRows[i] && found.originalSubRows[i].sell_through ? found.originalSubRows[i].sell_through : 0;\n        value = value + data;\n      }\n    }\n\n    if (!_.isEmpty(row.subRows) && row.original.overall_bin_sell_through) {\n      for (var _i2 = 0; _i2 <= parseInt(id[0]); _i2++) {\n        var _found2 = _.find(rows, {\n          id: \"\".concat(_i2)\n        });\n\n        var _data2 = _found2 && _found2.original && _found2.original.overall_bin_sell_through ? _found2.original.overall_bin_sell_through : 0;\n\n        value = value + _data2;\n      }\n    }\n\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746\n      },\n      __self: this\n    }, value || value === 0 ? toPercentageWithDecimalDraft({\n      value: value\n    }) : '-');\n  }\n}, // {\n//   Header: 'Markdown %',\n//   accessor: 'markdown_perc',\n//   cellClassName: 'summary_markdown_perc',\n//   Cell: (props) => {\n//     let value = props.row.original.subRows\n//       ? props.row.original.overall_bin_markdown_perc\n//       : props.value;\n//     return <div> {toPercentage({ value })} </div>;\n//   },\n// },\n{\n  Header: 'Margin %',\n  accessor: 'margin_perc',\n  cellClassName: 'summary_margin_perc',\n  metric: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_margin_perc : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770\n      },\n      __self: this\n    }, \" \", toPercWithOneDecimal({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'Margin $',\n  accessor: 'margin$',\n  cellClassName: 'summary_margin',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_margin$ : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780\n      },\n      __self: this\n    }, \" \", toDollar({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'AUM $',\n  accessor: 'aum',\n  cellClassName: 'summary_aum',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_aum : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 790\n      },\n      __self: this\n    }, \" \", toDollarWithDecimal({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'Revenue $',\n  accessor: 'revenue$',\n  cellClassName: 'summary_revenue',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_revenue$ : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802\n      },\n      __self: this\n    }, \" \", toDollar({\n      value: value\n    }), \" \");\n  }\n}, // {\n//   Header: 'Planned units',\n//   accessor: 'planned_units',\n//   cellClassName: 'summary_pvh_units',\n//   hideColumn: true,\n//   Cell: (props) => {\n//     let value = props.row.original.subRows\n//       ? props.row.original.overall_bin_planned_units\n//       : props.value;\n//     return <div> {toUnit({ value })} </div>;\n//   },\n// },\n{\n  Header: 'Markdown units',\n  accessor: 'markdown_units',\n  cellClassName: 'summary_markdown_units',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_markdown_units : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 826\n      },\n      __self: this\n    }, \" \", toUnit({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'AUR $',\n  accessor: 'aur',\n  cellClassName: 'summary_aur',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_aur : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836\n      },\n      __self: this\n    }, \" \", toDollarWithDecimal({\n      value: value\n    }), \" \");\n  }\n}]; /////detailed table coldefs\n\nexport var detailedColDef = [{\n  Header: 'MD Plan',\n  accessor: 'title'\n}, {\n  Header: 'Plan Level',\n  accessor: 'level'\n}, // {\n//   accessor: 'date',\n//   Header: 'Date Range',\n//   Cell: ({ row }) => {\n//     return (\n//       <span>\n//         {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n//         {moment(row.original.end_date).format('YYYY/MM/DD')}\n//       </span>\n//     );\n//   },\n// },\n{\n  accessor: 'week',\n  Header: 'Week Number',\n  Cell: function Cell(_ref24) {\n    var row = _ref24.row;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 867\n      },\n      __self: this\n    }, row.original.week ? \"W\".concat(row.original.week) : null);\n  }\n}, {\n  accessor: 'bins',\n  Header: 'Bins',\n  Cell: function Cell(_ref25) {\n    var row = _ref25.row;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875\n      },\n      __self: this\n    }, \"Bin \", row.original.bins);\n  }\n}, {\n  Header: 'Product code',\n  accessor: 'product_code'\n}, // {\n//   Header: 'Next week MD',\n//   accessor: 'overall_next_week',\n// },\n{\n  Header: 'Current running MD',\n  accessor: 'week_level_runnig_value',\n  Cell: function Cell(_ref26) {\n    var data = _ref26.data,\n        row = _ref26.row;\n    var original = row.original;\n    var lastWeekNum = moment().subtract(1, 'week').week();\n\n    var isLastWeek = _.find(data, {\n      promo_code: original.promo_code,\n      product_code: original.product_code,\n      week: lastWeekNum\n    });\n\n    var date = moment().year(original.year).week(original.week).day('monday').format('YYYY-MM-DD');\n    if (_.isEmpty(isLastWeek) || !moment().isSameOrBefore(date, 'week')) return '-';\n    return isLastWeek.week_level_refreshed_md ? unitCheck(isLastWeek.week_level_refreshed_md, isLastWeek.offer_type) : '-';\n  }\n}, {\n  Header: 'Planned MD',\n  accessor: 'week_level_offer_value',\n  Cell: function Cell(_ref27) {\n    var row = _ref27.row;\n    return row.original.week_level_offer_value ? unitCheck(row.original.week_level_offer_value, row.original.offer_type) : '-';\n  }\n}, {\n  Header: 'Refreshed MD',\n  accessor: 'week_level_refreshed_md',\n  Cell: function Cell(_ref28) {\n    var row = _ref28.row;\n    return row.original.week_level_refreshed_md ? unitCheck(row.original.week_level_refreshed_md, row.original.offer_type) : '-';\n  }\n}, // {\n//   Header: 'MD Difference',\n//   accessor: 'overall_md_diff',\n//   Cell: ({ row }) => {\n//     return row.original.overall_md_diff ? row.original.overall_md_diff : '-';\n//   },\n// },\n{\n  Header: 'Sell through %',\n  accessor: 'week_level_sell_through',\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 938\n      },\n      __self: this\n    }, \" \", toPercentageWithDecimalDraft(props), \" \");\n  }\n}, // {\n//   Header: 'Markdown %',\n//   accessor: 'week_level_markdown_perc',\n//   Cell: (props) => <div> {toPercentage(props)} </div>,\n// },\n{\n  Header: 'Margin %',\n  accessor: 'week_level_margin_perc',\n  metric: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 950\n      },\n      __self: this\n    }, \" \", toPercWithOneDecimal(props), \" \");\n  }\n}, {\n  Header: 'Margin $',\n  accessor: 'week_level_margin$',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 956\n      },\n      __self: this\n    }, \" \", toDollar(props), \" \");\n  }\n}, {\n  Header: 'AUM $',\n  accessor: 'week_level_aum',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 962\n      },\n      __self: this\n    }, \" \", toDollarWithDecimal(props), \" \");\n  }\n}, {\n  Header: 'Revenue $',\n  accessor: 'week_level_revenue$',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 968\n      },\n      __self: this\n    }, \" \", toDollar(props), \" \");\n  }\n}, // {\n//   Header: 'Planned units',\n//   accessor: 'week_level_planned_units',\n//   hideColumn: true,\n//   Cell: (props) => <div> {toUnit(props)} </div>,\n// },\n{\n  Header: 'Markdown units',\n  accessor: 'week_level_markdown_units',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 980\n      },\n      __self: this\n    }, \" \", toUnit(props), \" \");\n  }\n}, {\n  Header: 'AUR $',\n  accessor: 'week_level_aur',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 986\n      },\n      __self: this\n    }, \" \", toDollarWithDecimal(props), \" \");\n  }\n}];\n\nfunction unitCheck(value, type) {\n  if (!value && value !== 0 || !type) return '-';\n  if (type === 'percent_off') return toPercentage({\n    value: value\n  });\n  if (type === 'fixed_price') return toDollar({\n    value: value\n  });\n}\n\nfunction findNextWeek(row, rows) {\n  var value;\n  var id = row.id.split('.');\n\n  var found = _.find(rows, {\n    id: \"\".concat(parseInt(id[0]) + 1)\n  });\n\n  if (!_.isEmpty(found) && _.isEmpty(row.subRows) && row.original.offer_value) {\n    value = found.originalSubRows && found.originalSubRows[parseInt(id[1])] && found.originalSubRows[parseInt(id[1])].offer_value;\n  }\n\n  if (!_.isEmpty(found) && !_.isEmpty(row.subRows) && row.original.overall_week_offer_value) {\n    value = found.original && found.original.overall_week_offer_value;\n  }\n\n  return value;\n}\n\nfunction currentRunningMd(row, rows) {\n  var value = null;\n  var date = moment().year(row.original.year).week(row.original.week_num).day('monday').format('YYYY-MM-DD');\n\n  if (moment().isSameOrBefore(date, 'week')) {\n    var lastWeekNum = moment().subtract(1, 'week').week();\n\n    var found = _.find(rows, {\n      original: {\n        week: lastWeekNum\n      }\n    });\n\n    var found1 = _.find(found && found.originalSubRows && found.originalSubRows, {\n      bin_num: row.original.bin_num\n    });\n\n    value = found1 && found1.refreshed_md ? found1.refreshed_md : null;\n  }\n\n  return value;\n}\n\nfunction currentRunningMdBin(row, rows) {\n  var value = null;\n  var date = moment().year(row.original.year).week(row.original.week_num).day('monday').format('YYYY-MM-DD');\n\n  if (moment().isSameOrBefore(date, 'week')) {\n    var id = row.id.split('.');\n\n    var found = _.find(rows, {\n      id: id[0]\n    });\n\n    if (!_.isEmpty(found) && found.originalSubRows.length) {\n      var lastWeekNum = moment().subtract(1, 'week').week();\n\n      var find = _.find(found.originalSubRows, {\n        week_num: lastWeekNum\n      });\n\n      if (!find) return null;\n      value = find.refreshed_md;\n    }\n  }\n\n  return value;\n}","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Summary/aggColdef.js"],"names":["React","toPercentage","toPercentageWithDecimalDraft","toUnit","toDollar","toDollarWithDecimal","toPercWithOneDecimal","_","moment","numeral","onChangeFct","console","log","renderEditable","cellInfo","rows","props","handleInputChange","aggColDef","Header","accessor","cellClassName","id","Cell","row","startWeek","original","week_level_data","endWeek","length","SDate","year","week","day","format","EDate","md_plan","getToggleRowExpandedProps","style","paddingLeft","depth","isExpanded","bin_level_data","subRows","value","overall_offer_value","type","overall_offer_type","unitCheck","overall_refreshed_md","overall_md_diff","metric","hideColumn","weekToBinColDef","bin_num","overall_week_product_count","Aggregated","isEmpty","i","newValue","currentRunningMd","overall_week_offer_type","offer_type","overall_week_refreshed_md","refreshed_md","nextWeek","currentWeek","parseFloat","findNextWeek","split","sell_through","parseInt","found","find","data","originalSubRows","overall_week_sell_through","overall_week_margin_perc","overall_week_margin$","overall_week_aum","overall_week_revenue$","overall_week_markdown_units","overall_week_aur","binToWeekColDef","week_num","bin","overall_bin_product_count","currentRunningMdBin","overall_bin_offer_type","overall_bin_offer_value","offer_value","overall_bin_refreshed_md","overall_bin_sell_through","overall_bin_margin_perc","overall_bin_margin$","overall_bin_aum","overall_bin_revenue$","overall_bin_markdown_units","overall_bin_aur","detailedColDef","bins","lastWeekNum","subtract","isLastWeek","promo_code","product_code","date","isSameOrBefore","week_level_refreshed_md","week_level_offer_value","overall_week_offer_value","found1"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  toPercentage,\n  toPercentageWithDecimalDraft,\n  toUnit,\n  toDollar,\n  toDollarWithDecimal,\n  toPercWithOneDecimal,\n} from '../../helper/formatter';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport numeral from 'numeral';\n\nconst onChangeFct = () => console.log('onChange usually handled by redux');\nfunction renderEditable(cellInfo) {\n  // let value = !_.isEmpty(row.subRows)\n  //   ? row.original.overall_week_offer_value\n  //   : row.original.offer_value;\n  // let type = !_.isEmpty(row.subRows)\n  //   ? row.original.overall_week_offer_type\n  //   : row.original.offer_type;\n  // return <span>{value ? unitCheck(value, type) : '-'}</span>;\n\n  // const cellValue = row.original.overall_week_offer_type;\n  console.log(cellInfo.rows, 'gggggg');\n\n  return (\n    <input\n      placeholder=\"type here\"\n      name=\"input\"\n      type=\"text\"\n      onChange={this.props.handleInputChange(cellInfo)}\n      // value={cellValue}\n    />\n  );\n}\n\n//cellClassName must be same for aggColDef, binToWeekColDef and weekToBinColDef\n/********************************************************************* */\n//*******WHILE ADDING NEW COLUMNS ADD A UNIQUE CELLCLASSNAME************/\n/********ADD THE COLUMN TO ALL OF THREE COLDEFS*************************/\n/********************************************************************* */\n//aggColDef is aggregate level parent table coldef,\n//in this level user can expand both dateRange and Bins cols(when one is expanded the other will disable)\nexport const aggColDef = [\n  // {\n  //   Header: 'MD Plan',\n  //   accessor: 'md_plan',\n  //   cellClassName: 'summary_md_plan',\n  // },\n  {\n    Header: 'Plan Level',\n    accessor: 'level',\n    cellClassName: 'summary_cadence_type',\n  },\n  {\n    id: 'expander',\n    cellClassName: 'summary_expander',\n    Header: 'Date Range',\n    Cell: ({ row }) => {\n      let startWeek =\n        row.original && row.original.week_level_data && row.original.week_level_data[0];\n      let endWeek =\n        row.original &&\n        row.original.week_level_data &&\n        row.original.week_level_data[row.original.week_level_data.length - 1];\n      let SDate =\n        startWeek &&\n        moment().year(startWeek.year).week(startWeek.week).day('monday').format('YYYY/MM/DD');\n      let EDate =\n        endWeek &&\n        moment()\n          .year(endWeek.year)\n          .week(endWeek.week + 1)\n          .day('sunday')\n          .format('YYYY/MM/DD');\n      return row.original.md_plan ? (\n        <span\n          className=\"summary-table-icon\"\n          {...row.getToggleRowExpandedProps({\n            style: {\n              paddingLeft: `${row.depth * 2}rem`,\n            },\n          })}>\n          {/* ******************************************* */}\n          {/* bcs need to show date range visible in summary table not plan date range */}\n          {/* ******************************************* */}\n          {SDate} - {EDate}\n          {/* {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n          {moment(row.original.end_date).format('YYYY/MM/DD')} */}\n          &nbsp;&nbsp;&nbsp;\n          {row.isExpanded ? (\n            <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          ) : (\n            <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          )}\n          &nbsp;&nbsp;&nbsp;\n        </span>\n      ) : null;\n    },\n  },\n\n  {\n    id: 'expander1',\n    cellClassName: 'summary_expander1',\n    Header: 'Bins',\n    Cell: ({ row }) => {\n      return row.original.md_plan ? (\n        <span\n          className=\"summary-table-icon\"\n          {...row.getToggleRowExpandedProps({\n            style: {\n              paddingLeft: `${row.depth * 2}rem`,\n            },\n          })}>\n          {row.original.bin_level_data\n            ? row.original.bin_level_data.length\n            : row.original.week_level_data &&\n              row.original.week_level_data[0] &&\n              row.original.week_level_data[0].bin_level_data\n            ? row.original.week_level_data[0].bin_level_data.length\n            : row.original.week_level_data &&\n              row.original.week_level_data[0] &&\n              row.original.week_level_data[0].subRows\n            ? row.original.week_level_data[0].subRows.length\n            : '-'}\n          &nbsp;&nbsp;&nbsp;\n          {row.isExpanded ? (\n            <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          ) : (\n            <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          )}\n          &nbsp;&nbsp;&nbsp;\n        </span>\n      ) : null;\n    },\n  },\n\n  {\n    Header: '#Products',\n    // Cell: renderEditable,\n    accessor: 'overall_product_count',\n    cellClassName: 'summary_product_code',\n    Cell: (props) => {\n      // renderEditable;\n      return <div> {toUnit(props)} </div>;\n    },\n  },\n  // {\n  //   Header: 'Next week MD',\n  //   accessor: 'overall_next_week',\n  //   cellClassName: 'summary_next_week',\n  //   Cell: ({ row, rows }) => {\n  //     return '-';\n  //   },\n  // },\n  {\n    Header: 'Current running MD',\n    accessor: 'overall_next_week',\n    cellClassName: 'summary_current_md',\n    Cell: ({ row, rows }) => {\n      return '-';\n    },\n  },\n  {\n    Header: 'Planned MD',\n    accessor: 'overall_offer_value',\n    cellClassName: 'summary_planned_md',\n    Cell: ({ row }) => {\n      let value = row.original.overall_offer_value;\n      let type = row.original.overall_offer_type;\n      return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    },\n  },\n  {\n    Header: 'Refreshed MD',\n    accessor: 'refreshed_md',\n    cellClassName: 'summary_refreshed_md',\n    Cell: ({ row }) => {\n      let value = row.original.overall_refreshed_md;\n      let type = row.original.overall_offer_type;\n      return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    },\n  },\n  {\n    Header: 'MD Difference',\n    accessor: 'overall_md_diff',\n    cellClassName: 'summary_difference',\n    Cell: ({ row }) => {\n      return row.original.overall_md_diff ? row.original.overall_md_diff : '-';\n    },\n  },\n  {\n    Header: 'Sell through %',\n    accessor: 'overall_sell_through',\n    cellClassName: 'summary_sell_through',\n    Cell: (props) => <div> {toPercentageWithDecimalDraft(props)} </div>,\n  },\n\n  // {\n  //   Header: 'Markdown %',\n  //   accessor: 'overall_markdown_perc',\n  //   cellClassName: 'summary_markdown_perc',\n  //   Cell: (props) => <div> {toPercentage(props)} </div>,\n  // },\n  {\n    Header: 'Margin %',\n    accessor: 'overall_margin_perc',\n    cellClassName: 'summary_margin_perc',\n    metric: true,\n    Cell: (props) => <div> {toPercWithOneDecimal(props)} </div>,\n  },\n  {\n    Header: 'Margin $',\n    accessor: 'overall_margin$',\n    cellClassName: 'summary_margin',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollar(props)} </div>,\n  },\n  {\n    Header: 'AUM $',\n    accessor: 'overall_aum',\n    cellClassName: 'summary_aum',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n  },\n  {\n    Header: 'Revenue $',\n    accessor: 'overall_revenue$',\n    cellClassName: 'summary_revenue',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollar(props)} </div>,\n  },\n  // {\n  //   Header: 'Planned units',\n  //   accessor: 'overall_planned_units',\n  //   cellClassName: 'summary_pvh_units',\n  //   hideColumn: true,\n  //   Cell: (props) => <div> {toUnit(props)} </div>,\n  // },\n  {\n    Header: 'Markdown units',\n    accessor: 'overall_markdown_units',\n    cellClassName: 'summary_markdown_units',\n    hideColumn: true,\n    Cell: (props) => <div> {toUnit(props)} </div>,\n  },\n  {\n    Header: 'AUR $',\n    accessor: 'overall_aur',\n    cellClassName: 'summary_aur',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n  },\n];\n//weekToBinColDef contains accessor in granular level,\n//in Cell method have added a condition to display aggregated level data\n//if u add a new column make sure to copy the same\n//only bins will be expandable\nexport const weekToBinColDef = [\n  {\n    Header: 'MD Plan',\n    accessor: 'md_plan',\n    cellClassName: 'summary_md_plan',\n    Cell: ({ row }) => null,\n  },\n  {\n    Header: 'Plan Level',\n    accessor: 'level',\n    cellClassName: 'summary_cadence_type',\n  },\n  {\n    Header: 'Date Range',\n    id: 'expander',\n    cellClassName: 'summary_expander',\n    Cell: ({ row }) => {\n      return <span>{row.original.week ? 'W' + row.original.week : ''}</span>;\n    },\n  },\n\n  {\n    id: 'expander1',\n    cellClassName: 'summary_expander1',\n    Header: 'Bins',\n    Cell: ({ row }) => {\n      return row.original.subRows ? (\n        <span\n          className=\"summary-table-icon\"\n          {...row.getToggleRowExpandedProps({\n            style: {\n              // We can even use the row.depth property\n              // and paddingLeft to indicate the depth\n              // of the row\n              paddingLeft: `${row.depth * 2}rem`,\n            },\n          })}>\n          {row.original.subRows ? row.original.subRows.length : '-'}\n          &nbsp;&nbsp;&nbsp;\n          {row.isExpanded ? (\n            <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          ) : (\n            <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          )}\n          &nbsp;&nbsp;&nbsp;\n        </span>\n      ) : (\n        <span>{row.original.bin_num ? 'Bin ' + row.original.bin_num : null}</span>\n      );\n    },\n  },\n\n  {\n    Header: '#Products',\n    accessor: 'product_count',\n    cellClassName: 'summary_product_code',\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_week_product_count\n        : props.value;\n      return <div> {toUnit({ value: value })} </div>;\n    },\n  },\n  // {\n  //   Header: 'Next week MD',\n  //   accessor: 'next_week',\n  //   cellClassName: 'summary_next_week',\n  //   Cell: ({ row, rows }) => {\n  //     let typeAccessor = !_.isEmpty(row.subRows) ? 'overall_week_offer_type' : 'offer_type';\n  //     let value = findNextWeek(row, rows);\n\n  //     return <span>{value ? unitCheck(value, row.original[typeAccessor]) : '-'}</span>;\n  //   },\n  // },\n  {\n    Header: 'Current running MD',\n    accessor: 'next_week',\n    cellClassName: 'summary_current_md',\n    Aggregated: ({ row, rows }) => {\n      if (_.isEmpty(row.subRows)) return '-';\n      let value = null,\n        { subRows } = row;\n      for (let i = 0; i < subRows.length; i++) {\n        let newValue = currentRunningMd(subRows[i], rows);\n        value = newValue ? value + newValue : value;\n      }\n      return value || value === 0\n        ? unitCheck(value / subRows.length, row.original.overall_week_offer_type)\n        : '-';\n    },\n    Cell: ({ row, rows }) => {\n      if (!_.isEmpty(row.subRows)) return '-';\n      let value = currentRunningMd(row, rows);\n      return value || value === 0 ? unitCheck(value, row.original.offer_type) : '-';\n    },\n  },\n  {\n    Header: 'Planned MD',\n    accessor: 'offer_value',\n    cellClassName: 'summary_planned_md',\n    Cell: renderEditable,\n\n    // Cell: ({ row }) => {\n    //   let value = !_.isEmpty(row.subRows)\n    //     ? row.original.overall_week_offer_value\n    //     : row.original.offer_value;\n    //   let type = !_.isEmpty(row.subRows)\n    //     ? row.original.overall_week_offer_type\n    //     : row.original.offer_type;\n    //   return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    // },\n  },\n  {\n    Header: 'Refreshed MD',\n    accessor: 'refreshed_md',\n    cellClassName: 'summary_refreshed_md',\n    Cell: ({ row }) => {\n      let value = !_.isEmpty(row.subRows)\n        ? row.original.overall_week_refreshed_md\n        : row.original.refreshed_md;\n      let type = !_.isEmpty(row.subRows)\n        ? row.original.overall_week_offer_type\n        : row.original.offer_type;\n      return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    },\n  },\n  {\n    Header: 'MD Difference',\n    accessor: 'md_diff',\n    cellClassName: 'summary_difference',\n    Cell: ({ row, rows }) => {\n      let accessor = !_.isEmpty(row.subRows) ? 'overall_week_offer_value' : 'offer_value';\n      let type = !_.isEmpty(row.subRows) ? 'overall_week_offer_type' : 'offer_type';\n\n      let nextWeek,\n        currentWeek = row.original[accessor] ? parseFloat(row.original[accessor]) : 0;\n      let value = findNextWeek(row, rows);\n      nextWeek = value ? parseFloat(value) : 0;\n      return (\n        <span>{currentWeek ? unitCheck(nextWeek - currentWeek, row.original[type]) : '-'}</span>\n      );\n    },\n  },\n  {\n    Header: 'Sell through %',\n    accessor: 'sell_through',\n    cellClassName: 'summary_sell_through',\n    Cell: ({ row, rows }) => {\n      let id = row.id.split('.');\n      let value = 0;\n\n      if (\n        _.isEmpty(row.subRows) &&\n        (row.original.sell_through || row.original.sell_through === 0)\n      ) {\n        for (let i = 0; i <= parseInt(id[0]); i++) {\n          let found = _.find(rows, { id: `${i}` });\n          let data =\n            found &&\n            found.originalSubRows &&\n            found.originalSubRows[parseInt(id[1])] &&\n            found.originalSubRows[parseInt(id[1])].sell_through\n              ? found.originalSubRows[parseInt(id[1])].sell_through\n              : 0;\n          value = value + data;\n        }\n      }\n      if (!_.isEmpty(row.subRows) && row.original.overall_week_sell_through) {\n        for (let i = 0; i <= parseInt(id[0]); i++) {\n          let found = _.find(rows, { id: `${i}` });\n          let data =\n            found && found.original && found.original.overall_week_sell_through\n              ? found.original.overall_week_sell_through\n              : 0;\n          value = value + data;\n        }\n      }\n      return (\n        <span>{value || value === 0 ? toPercentageWithDecimalDraft({ value: value }) : '-'}</span>\n      );\n    },\n  },\n  // {\n  //   Header: 'Markdown %',\n  //   accessor: 'markdown_perc',\n  //   cellClassName: 'summary_markdown_perc',\n  //   Cell: (props) => {\n  //     let value = props.row.original.subRows\n  //       ? props.row.original.overall_week_markdown_perc\n  //       : props.value;\n  //     return <div> {toPercentage({ value })} </div>;\n  //   },\n  // },\n\n  {\n    Header: 'Margin %',\n    accessor: 'margin_perc',\n    cellClassName: 'summary_margin_perc',\n    metric: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_week_margin_perc\n        : props.value;\n      return <div> {toPercWithOneDecimal({ value })} </div>;\n    },\n  },\n  {\n    Header: 'Margin $',\n    accessor: 'margin$',\n    cellClassName: 'summary_margin',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_week_margin$\n        : props.value;\n      return <div> {toDollar(value)} </div>;\n    },\n  },\n  {\n    Header: 'AUM $',\n    accessor: 'aum',\n    cellClassName: 'summary_aum',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows ? props.row.original.overall_week_aum : props.value;\n      return <div> {toDollarWithDecimal({ value })} </div>;\n    },\n  },\n  {\n    Header: 'Revenue $',\n    accessor: 'revenue$',\n    cellClassName: 'summary_revenue',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_week_revenue$\n        : props.value;\n      return <div> {toDollar({ value })} </div>;\n    },\n  },\n  // {\n  //   Header: 'Planned units',\n  //   accessor: 'planned_units',\n  //   cellClassName: 'summary_pvh_units',\n  //   hideColumn: true,\n  //   Cell: (props) => {\n  //     let value = props.row.original.subRows\n  //       ? props.row.original.overall_week_planned_units\n  //       : props.value;\n  //     return <div> {toUnit({ value })} </div>;\n  //   },\n  // },\n  {\n    Header: 'Markdown units',\n    accessor: 'markdown_units',\n    cellClassName: 'summary_markdown_units',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_week_markdown_units\n        : props.value;\n      return <div> {toUnit({ value })} </div>;\n    },\n  },\n  {\n    Header: 'AUR $',\n    accessor: 'aur',\n    cellClassName: 'summary_aur',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows ? props.row.original.overall_week_aur : props.value;\n      return <div> {toDollarWithDecimal({ value })} </div>;\n    },\n  },\n];\n//same as weekToBinColDef, but bin to week level\n//only date range will be expandable\nexport const binToWeekColDef = [\n  {\n    Header: 'MD Plan',\n    accessor: 'md_plan',\n    cellClassName: 'summary_md_plan',\n    Cell: ({ row }) => null,\n  },\n  {\n    Header: 'Plan Level',\n    accessor: 'level',\n    cellClassName: 'summary_cadence_type',\n  },\n  {\n    Header: 'Date Range',\n    id: 'expander',\n    cellClassName: 'summary_expander',\n    Cell: ({ row }) => {\n      let startWeek = row.originalSubRows && row.originalSubRows[0];\n      let endWeek = row.originalSubRows && row.originalSubRows[row.originalSubRows.length - 1];\n      let SDate =\n        startWeek &&\n        moment().year(startWeek.year).week(startWeek.week_num).day('monday').format('YYYY/MM/DD');\n      let EDate =\n        endWeek &&\n        moment()\n          .year(endWeek.year)\n          .week(endWeek.week_num + 1)\n          .day('sunday')\n          .format('YYYY/MM/DD');\n\n      return row.original.subRows ? (\n        <span\n          className=\"summary-table-icon\"\n          {...row.getToggleRowExpandedProps({\n            style: {\n              paddingLeft: `${row.depth * 2}rem`,\n            },\n          })}>\n          {SDate} - {EDate}\n          {/* {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n          {moment(row.original.end_date).format('YYYY/MM/DD')} */}\n          &nbsp;&nbsp;&nbsp;\n          {row.isExpanded ? (\n            <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          ) : (\n            <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          )}\n          &nbsp;&nbsp;&nbsp;\n        </span>\n      ) : (\n        <span>{row.original.week_num ? 'W' + row.original.week_num : ''}</span>\n      );\n    },\n  },\n\n  {\n    id: 'expander1',\n    cellClassName: 'summary_expander1',\n    Header: 'Bins',\n    Cell: ({ row }) => {\n      return row.original.bin ? 'Bin ' + row.original.bin : null;\n    },\n  },\n\n  {\n    Header: '#Products',\n    accessor: 'product_count',\n    cellClassName: 'summary_product_code',\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_bin_product_count\n        : props.value;\n      return <div> {toUnit({ value: value })} </div>;\n    },\n  },\n  // {\n  //   Header: 'Next week MD',\n  //   accessor: 'next_week',\n  //   cellClassName: 'summary_next_week',\n  //   Cell: ({ row, rows }) => {\n  //     let id, value;\n  //     let accessor = !_.isEmpty(row.subRows) ? 'overall_bin_offer_value' : 'offer_value';\n  //     let typeAccessor = !_.isEmpty(row.subRows)\n  //       ? row.original.overall_bin_offer_type\n  //       : row.original.offer_type;\n\n  //     if (row.original[accessor]) {\n  //       id = row.id.split('.');\n  //       let find = _.find(rows, { id: id[0] });\n  //       value =\n  //         find.originalSubRows &&\n  //         find.originalSubRows[parseInt(id[1]) + 1] &&\n  //         find.originalSubRows[parseInt(id[1]) + 1][accessor];\n  //     }\n  //     return <span>{value ? unitCheck(value, typeAccessor) : '-'}</span>;\n  //   },\n  // },\n\n  {\n    Header: 'Current running MD',\n    accessor: 'next_week',\n    cellClassName: 'summary_current_md',\n    Aggregated: ({ row, rows }) => {\n      if (_.isEmpty(row.subRows)) return '-';\n      let value = null,\n        { subRows } = row;\n      for (let i = 0; i < subRows.length; i++) {\n        let newValue = currentRunningMdBin(subRows[i], rows);\n        value = newValue ? value + newValue : value;\n      }\n      return value || value === 0\n        ? unitCheck(value / subRows.length, row.original.overall_bin_offer_type)\n        : '-';\n    },\n    Cell: ({ row, rows }) => {\n      if (!_.isEmpty(row.subRows)) return '-';\n      let value = currentRunningMdBin(row, rows);\n      return value || value === 0 ? unitCheck(value, row.original.offer_type) : '-';\n    },\n  },\n  {\n    Header: 'Planned MD',\n    accessor: 'offer_value',\n    cellClassName: 'summary_planned_md',\n    Cell: ({ row }) => {\n      let value = !_.isEmpty(row.subRows)\n        ? row.original.overall_bin_offer_value\n        : row.original.offer_value;\n      let type = !_.isEmpty(row.subRows)\n        ? row.original.overall_bin_offer_type\n        : row.original.offer_type;\n      return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    },\n  },\n\n  {\n    Header: 'Refreshed MD',\n    accessor: 'refreshed_md',\n    cellClassName: 'summary_refreshed_md',\n    Cell: ({ row }) => {\n      let value = !_.isEmpty(row.subRows)\n        ? row.original.overall_bin_refreshed_md\n        : row.original.refreshed_md;\n      let type = !_.isEmpty(row.subRows)\n        ? row.original.overall_bin_offer_type\n        : row.original.offer_type;\n      return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    },\n  },\n  {\n    Header: 'MD Difference',\n    accessor: 'md_diff',\n    cellClassName: 'summary_difference',\n    Cell: ({ row, rows }) => {\n      let accessor = !_.isEmpty(row.subRows) ? 'overall_bin_offer_value' : 'offer_value';\n      let type = !_.isEmpty(row.subRows) ? 'overall_bin_offer_type' : 'offer_type';\n\n      let id,\n        nextWeek,\n        currentWeek = row.original[[accessor]] ? parseFloat(row.original[[accessor]]) : 0;\n      if (row.original[[accessor]]) {\n        id = row.id.split('.');\n        let find = _.find(rows, { id: id[0] });\n        let value =\n          find.originalSubRows &&\n          find.originalSubRows[parseInt(id[1]) + 1] &&\n          find.originalSubRows[parseInt(id[1]) + 1][[accessor]];\n        nextWeek = value ? parseFloat(value) : 0;\n      }\n      return (\n        <span>{currentWeek ? unitCheck(nextWeek - currentWeek, row.original[type]) : '-'}</span>\n      );\n    },\n  },\n  {\n    Header: 'Sell through %',\n    accessor: 'sell_through',\n    cellClassName: 'summary_sell_through',\n    Cell: ({ row, rows }) => {\n      let id = row.id.split('.');\n      let value = 0;\n\n      if (\n        _.isEmpty(row.subRows) &&\n        (row.original.sell_through || row.original.sell_through === 0)\n      ) {\n        let found = _.find(rows, { id: id[0] });\n        for (let i = 0; i <= parseInt(id[1]); i++) {\n          let data =\n            found &&\n            found.originalSubRows &&\n            found.originalSubRows[i] &&\n            found.originalSubRows[i].sell_through\n              ? found.originalSubRows[i].sell_through\n              : 0;\n          value = value + data;\n        }\n      }\n      if (!_.isEmpty(row.subRows) && row.original.overall_bin_sell_through) {\n        for (let i = 0; i <= parseInt(id[0]); i++) {\n          let found = _.find(rows, { id: `${i}` });\n          let data =\n            found && found.original && found.original.overall_bin_sell_through\n              ? found.original.overall_bin_sell_through\n              : 0;\n          value = value + data;\n        }\n      }\n      return (\n        <span>{value || value === 0 ? toPercentageWithDecimalDraft({ value: value }) : '-'}</span>\n      );\n    },\n  },\n  // {\n  //   Header: 'Markdown %',\n  //   accessor: 'markdown_perc',\n  //   cellClassName: 'summary_markdown_perc',\n  //   Cell: (props) => {\n  //     let value = props.row.original.subRows\n  //       ? props.row.original.overall_bin_markdown_perc\n  //       : props.value;\n  //     return <div> {toPercentage({ value })} </div>;\n  //   },\n  // },\n  {\n    Header: 'Margin %',\n    accessor: 'margin_perc',\n    cellClassName: 'summary_margin_perc',\n    metric: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_bin_margin_perc\n        : props.value;\n      return <div> {toPercWithOneDecimal({ value })} </div>;\n    },\n  },\n  {\n    Header: 'Margin $',\n    accessor: 'margin$',\n    cellClassName: 'summary_margin',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows ? props.row.original.overall_bin_margin$ : props.value;\n      return <div> {toDollar({ value })} </div>;\n    },\n  },\n  {\n    Header: 'AUM $',\n    accessor: 'aum',\n    cellClassName: 'summary_aum',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows ? props.row.original.overall_bin_aum : props.value;\n      return <div> {toDollarWithDecimal({ value })} </div>;\n    },\n  },\n  {\n    Header: 'Revenue $',\n    accessor: 'revenue$',\n    cellClassName: 'summary_revenue',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_bin_revenue$\n        : props.value;\n      return <div> {toDollar({ value })} </div>;\n    },\n  },\n  // {\n  //   Header: 'Planned units',\n  //   accessor: 'planned_units',\n  //   cellClassName: 'summary_pvh_units',\n  //   hideColumn: true,\n  //   Cell: (props) => {\n  //     let value = props.row.original.subRows\n  //       ? props.row.original.overall_bin_planned_units\n  //       : props.value;\n  //     return <div> {toUnit({ value })} </div>;\n  //   },\n  // },\n  {\n    Header: 'Markdown units',\n    accessor: 'markdown_units',\n    cellClassName: 'summary_markdown_units',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_bin_markdown_units\n        : props.value;\n      return <div> {toUnit({ value })} </div>;\n    },\n  },\n  {\n    Header: 'AUR $',\n    accessor: 'aur',\n    cellClassName: 'summary_aur',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows ? props.row.original.overall_bin_aur : props.value;\n      return <div> {toDollarWithDecimal({ value })} </div>;\n    },\n  },\n];\n\n/////detailed table coldefs\nexport const detailedColDef = [\n  {\n    Header: 'MD Plan',\n    accessor: 'title',\n  },\n  {\n    Header: 'Plan Level',\n    accessor: 'level',\n  },\n  // {\n  //   accessor: 'date',\n  //   Header: 'Date Range',\n  //   Cell: ({ row }) => {\n  //     return (\n  //       <span>\n  //         {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n  //         {moment(row.original.end_date).format('YYYY/MM/DD')}\n  //       </span>\n  //     );\n  //   },\n  // },\n  {\n    accessor: 'week',\n    Header: 'Week Number',\n    Cell: ({ row }) => {\n      return <span>{row.original.week ? `W${row.original.week}` : null}</span>;\n    },\n  },\n\n  {\n    accessor: 'bins',\n    Header: 'Bins',\n    Cell: ({ row }) => {\n      return <span>Bin {row.original.bins}</span>;\n    },\n  },\n\n  {\n    Header: 'Product code',\n    accessor: 'product_code',\n  },\n  // {\n  //   Header: 'Next week MD',\n  //   accessor: 'overall_next_week',\n  // },\n  {\n    Header: 'Current running MD',\n    accessor: 'week_level_runnig_value',\n    Cell: ({ data, row }) => {\n      let { original } = row;\n      let lastWeekNum = moment().subtract(1, 'week').week();\n      let isLastWeek = _.find(data, {\n        promo_code: original.promo_code,\n        product_code: original.product_code,\n        week: lastWeekNum,\n      });\n      let date = moment()\n        .year(original.year)\n        .week(original.week)\n        .day('monday')\n        .format('YYYY-MM-DD');\n      if (_.isEmpty(isLastWeek) || !moment().isSameOrBefore(date, 'week')) return '-';\n      return isLastWeek.week_level_refreshed_md\n        ? unitCheck(isLastWeek.week_level_refreshed_md, isLastWeek.offer_type)\n        : '-';\n    },\n  },\n  {\n    Header: 'Planned MD',\n    accessor: 'week_level_offer_value',\n    Cell: ({ row }) => {\n      return row.original.week_level_offer_value\n        ? unitCheck(row.original.week_level_offer_value, row.original.offer_type)\n        : '-';\n    },\n  },\n\n  {\n    Header: 'Refreshed MD',\n    accessor: 'week_level_refreshed_md',\n    Cell: ({ row }) => {\n      return row.original.week_level_refreshed_md\n        ? unitCheck(row.original.week_level_refreshed_md, row.original.offer_type)\n        : '-';\n    },\n  },\n  // {\n  //   Header: 'MD Difference',\n  //   accessor: 'overall_md_diff',\n  //   Cell: ({ row }) => {\n  //     return row.original.overall_md_diff ? row.original.overall_md_diff : '-';\n  //   },\n  // },\n  {\n    Header: 'Sell through %',\n    accessor: 'week_level_sell_through',\n    Cell: (props) => <div> {toPercentageWithDecimalDraft(props)} </div>,\n  },\n\n  // {\n  //   Header: 'Markdown %',\n  //   accessor: 'week_level_markdown_perc',\n  //   Cell: (props) => <div> {toPercentage(props)} </div>,\n  // },\n  {\n    Header: 'Margin %',\n    accessor: 'week_level_margin_perc',\n    metric: true,\n    Cell: (props) => <div> {toPercWithOneDecimal(props)} </div>,\n  },\n  {\n    Header: 'Margin $',\n    accessor: 'week_level_margin$',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollar(props)} </div>,\n  },\n  {\n    Header: 'AUM $',\n    accessor: 'week_level_aum',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n  },\n  {\n    Header: 'Revenue $',\n    accessor: 'week_level_revenue$',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollar(props)} </div>,\n  },\n  // {\n  //   Header: 'Planned units',\n  //   accessor: 'week_level_planned_units',\n  //   hideColumn: true,\n  //   Cell: (props) => <div> {toUnit(props)} </div>,\n  // },\n  {\n    Header: 'Markdown units',\n    accessor: 'week_level_markdown_units',\n    hideColumn: true,\n    Cell: (props) => <div> {toUnit(props)} </div>,\n  },\n  {\n    Header: 'AUR $',\n    accessor: 'week_level_aur',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n  },\n];\n\nfunction unitCheck(value, type) {\n  if ((!value && value !== 0) || !type) return '-';\n  if (type === 'percent_off') return toPercentage({ value });\n  if (type === 'fixed_price') return toDollar({ value });\n}\nfunction findNextWeek(row, rows) {\n  let value;\n  let id = row.id.split('.');\n  let found = _.find(rows, { id: `${parseInt(id[0]) + 1}` });\n\n  if (!_.isEmpty(found) && _.isEmpty(row.subRows) && row.original.offer_value) {\n    value =\n      found.originalSubRows &&\n      found.originalSubRows[parseInt(id[1])] &&\n      found.originalSubRows[parseInt(id[1])].offer_value;\n  }\n  if (!_.isEmpty(found) && !_.isEmpty(row.subRows) && row.original.overall_week_offer_value) {\n    value = found.original && found.original.overall_week_offer_value;\n  }\n  return value;\n}\n\nfunction currentRunningMd(row, rows) {\n  let value = null;\n  let date = moment()\n    .year(row.original.year)\n    .week(row.original.week_num)\n    .day('monday')\n    .format('YYYY-MM-DD');\n  if (moment().isSameOrBefore(date, 'week')) {\n    let lastWeekNum = moment().subtract(1, 'week').week();\n    let found = _.find(rows, { original: { week: lastWeekNum } });\n    let found1 = _.find(found && found.originalSubRows && found.originalSubRows, {\n      bin_num: row.original.bin_num,\n    });\n    value = found1 && found1.refreshed_md ? found1.refreshed_md : null;\n  }\n  return value;\n}\nfunction currentRunningMdBin(row, rows) {\n  let value = null;\n  let date = moment()\n    .year(row.original.year)\n    .week(row.original.week_num)\n    .day('monday')\n    .format('YYYY-MM-DD');\n  if (moment().isSameOrBefore(date, 'week')) {\n    let id = row.id.split('.');\n    let found = _.find(rows, { id: id[0] });\n    if (!_.isEmpty(found) && found.originalSubRows.length) {\n      let lastWeekNum = moment().subtract(1, 'week').week();\n      let find = _.find(found.originalSubRows, { week_num: lastWeekNum });\n      if (!find) return null;\n      value = find.refreshed_md;\n    }\n  }\n  return value;\n}\n"]},"metadata":{},"sourceType":"module"}