{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER, FLUSH_COCKPIT_DATA, LOADER } from \"../../actions/types\";\nimport { config } from \"../../utils/config\";\nexport var getCockpitData = function getCockpitData(params) {\n  return function (dispatch) {\n    dispatch({\n      type: LOADER,\n      payload: true\n    });\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: localStorage.getItem(\"token\")\n    });\n    var url = config.markDownUrl + \"/markdown/cockpitData\";\n\n    if (params) {\n      url += params;\n    }\n\n    axios.get(url).then(function (res) {\n      dispatch({\n        type: \"GET_SKU_COCKPIT\",\n        payload: res.data\n      });\n      dispatch({\n        type: LOADER,\n        payload: false\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n  };\n};\nexport var flushCockpit = function flushCockpit() {\n  return function (dispatch) {\n    dispatch({\n      type: FLUSH_COCKPIT_DATA\n    });\n  };\n};","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/Markdown/actions/cockpitAction.js"],"names":["axios","GET_ERRORS","SET_CURRENT_USER","FLUSH_COCKPIT_DATA","LOADER","config","getCockpitData","params","dispatch","type","payload","localStorage","getItem","url","markDownUrl","get","then","res","data","catch","err","flushCockpit"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,UADF,EAEEC,gBAFF,EAGEC,kBAHF,EAIEC,MAJF,QAKO,qBALP;AAMA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,MAAM;AAAA,SAAI,UAAAC,QAAQ,EAAI;AAClDA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,MADC;AAEPM,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAIAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,gBADC;AAEPQ,MAAAA,OAAO,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFF,KAAD,CAAR;AAIA,QAAIC,GAAG,GAAGR,MAAM,CAACS,WAAP,GAAqB,uBAA/B;;AACA,QAAIP,MAAJ,EAAY;AACVM,MAAAA,GAAG,IAAIN,MAAP;AACD;;AACDP,IAAAA,KAAK,CACFe,GADH,CACOF,GADP,EAEGG,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACXT,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,iBADC;AAEPC,QAAAA,OAAO,EAAEO,GAAG,CAACC;AAFN,OAAD,CAAR;AAIAV,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL,MADC;AAEPM,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID,KAXH,EAYGS,KAZH,CAYS,UAAAC,GAAG,EAAI;AACZZ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAER,UADC;AAEPS,QAAAA,OAAO,EAAEU;AAFF,OAAD,CAAR;AAID,KAjBH;AAkBD,GA/BmC;AAAA,CAA7B;AAiCP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAM,UAAAb,QAAQ,EAAI;AAC5CA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACD,GAF2B;AAAA,CAArB","sourcesContent":["import axios from \"axios\";\n\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  FLUSH_COCKPIT_DATA,\n  LOADER\n} from \"../../actions/types\";\nimport { config } from \"../../utils/config\";\n\nexport const getCockpitData = params => dispatch => {\n  dispatch({\n    type: LOADER,\n    payload: true\n  });\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: localStorage.getItem(\"token\")\n  });\n  var url = config.markDownUrl + \"/markdown/cockpitData\";\n  if (params) {\n    url += params;\n  }\n  axios\n    .get(url)\n    .then(res => {\n      dispatch({\n        type: \"GET_SKU_COCKPIT\",\n        payload: res.data\n      });\n      dispatch({\n        type: LOADER,\n        payload: false\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n};\n\nexport const flushCockpit = () => dispatch => {\n  dispatch({ type: FLUSH_COCKPIT_DATA });\n};\n"]},"metadata":{},"sourceType":"module"}