{"ast":null,"code":"import _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Configuration/StoreConfigContainers/CreateStoreGroup.jsx\";\nimport React, { Component } from 'react';\nimport { InputGroup, FormControl } from 'react-bootstrap';\nimport '../StoreConfigContainers/StoreConfig';\nimport DataTable from '../../../services/reactTable';\nimport '../../Configuration/StoreConfigContainers/StoreConfig.css';\nimport StoreConfigRowData from '../StoreConfigContainers/StoreConfigRowData';\nimport { cloneDeep, differenceBy } from 'lodash';\nimport excelIcon from \"../../../images/leftPanel/status.svg\";\nimport _ from 'lodash';\nexport var CreateStoreGroup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateStoreGroup, _Component);\n\n  function CreateStoreGroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateStoreGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateStoreGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      storeGroupName: '',\n      allStores: _this.props.allStoreTableData,\n      editAllstoreData: [],\n      currentStores: [],\n      selectedAllStores: [],\n      selectedCurrentStores: [],\n      storeTableEditData: []\n    };\n\n    _this.setTableData = function () {// let editAllstoreData = cloneDeep(this.state.editAllstoreData);\n      // let storeTableEditData = this.props.storeTableEditData;\n      // const newAllStores = differenceBy(editAllstoreData, storeTableEditData, 'store_code');\n      // this.setState({\n      //   storeTableEditData: storeTableEditData,\n      //   editAllstoreData: newAllStores,\n      // });\n    };\n\n    _this.setGroupName = function () {\n      var id = _this.props.match.params.id; // let storeName =\n      //   this.props && this.props.storeName && this.props.storeName.filter((el) => el.value == id);\n      // let name = storeName[0].label;\n\n      _this.setState({// storeGroupName: name,\n      });\n    };\n\n    _this.onStoreGroupNameChangeHandler = function (e) {\n      _this.setState({\n        storeGroupName: e.target.value\n      });\n    };\n\n    _this.header = [{\n      Header: 'Store Number',\n      accessor: 'store_code'\n    }, {\n      Header: 'Store Name',\n      accessor: 'store_name'\n    }, {\n      Header: 'Chain Description',\n      accessor: 'chain_description'\n    }, {\n      Header: 'Region Description',\n      accessor: 'region_description'\n    }];\n\n    _this.onCurrentStoresSelectionChangeHandler = function (rowInfo) {\n      var selectedCurrentStores = _this.state.selectedCurrentStores;\n\n      var foundEle = _.find(selectedCurrentStores, {\n        store_code: rowInfo.original.store_code\n      });\n\n      console.log(rowInfo, 'rowinfooo');\n\n      if (foundEle) {\n        _.remove(selectedCurrentStores, function (item) {\n          return item.store_code === rowInfo.original.store_code;\n        });\n      } else {\n        selectedCurrentStores.push(rowInfo.original);\n      }\n\n      _this.setState({\n        selectedCurrentStores: selectedCurrentStores\n      });\n    };\n\n    _this.onAddClickHandler = function () {\n      var allStores = cloneDeep(_this.state.allStores);\n      var currentStores = cloneDeep(_this.state.currentStores); // currentStores.push(...this.state.selectedAllStores);\n\n      var newcurrentStores = _.unionWith(currentStores, _this.state.selectedAllStores, _.isEqual);\n\n      var newAllStores = differenceBy(allStores, _this.state.selectedAllStores, 'store_code');\n      console.log('asfasdf', _this.state.selectedAllStores);\n      console.log('newAllStores', newAllStores);\n\n      _this.setState({\n        allStores: newAllStores,\n        currentStores: newcurrentStores,\n        selectedAllStores: []\n      });\n    };\n\n    _this.onAllStoresSelectionChangeHandler = function (rowInfo) {\n      var selectedAllStores = _this.state.selectedAllStores;\n\n      var foundEle = _.find(selectedAllStores, {\n        store_code: rowInfo.original.store_code\n      });\n\n      console.log(rowInfo, 'rowinfooo', foundEle);\n\n      if (foundEle) {\n        _.remove(selectedAllStores, function (item) {\n          return item.store_code === rowInfo.original.store_code;\n        });\n      } else {\n        selectedAllStores.push(rowInfo.original);\n      }\n\n      _this.setState({\n        selectedAllStores: selectedAllStores\n      });\n    };\n\n    _this.onCreateStoreGroup = function () {\n      if (_this.props.isEditStoreGroup) {// let { id } = this.props.match.params;\n        // let storeCodes = this.state.storeTableEditData.map((ele) => ele.store_code);\n        // let { storeGroupName } = this.state;\n        // this.props.fetchStoreConfigEditStoreData({\n        //   Stores_groups_NAME: storeGroupName,\n        //   Stores_Codes: storeCodes,\n        //   Stores_groups_Id: id,\n        // });\n      } else {\n        var storeCodes = _this.state.currentStores.map(function (ele) {\n          return ele.store_code;\n        });\n\n        var storeGroupName = _this.state.storeGroupName;\n\n        _this.props.createStoreGroup({\n          Stores_groups_NAME: storeGroupName,\n          Stores_Codes: storeCodes\n        });\n      }\n    };\n\n    _this.onCancelButtonHandler = function () {\n      _this.setState({\n        allStores: [],\n        editAllstoreData: []\n      });\n\n      _this.props.history.goBack();\n    };\n\n    _this.onRemoveClickHandler = function () {\n      var currentStores = cloneDeep(_this.state.currentStores);\n      var allStores = cloneDeep(_this.state.allStores);\n      var newCurrentStStores = differenceBy(currentStores, _this.state.selectedCurrentStores, 'store_code'); // allStores.push(...this.state.selectedCurrentStores);\n\n      var newallStores = _.unionWith(allStores, _this.state.selectedCurrentStores, _.isEqual);\n\n      _this.setState({\n        allStores: newallStores,\n        currentStores: newCurrentStStores,\n        selectedCurrentStores: []\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateStoreGroup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// let { id } = this.props.match.params;\n      // this.props.fetchStoreConfigStoreTableData(); allstoresdata api\n      // this.props.fetchStoreConfigStoreTableEditData({ Stores_groups_Id: [id] }); edit storedata api\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {// if (prevProps.storeTableData !== this.props.storeTableData) {\n      //   this.setState(\n      //     {\n      //       allStores: this.props.storeTableData,\n      //     },\n      //     () => this.setTableData()\n      //   );\n      // }\n      // if (prevProps.storeName !== this.props.storeName) {\n      //   this.setGroupName();\n      // }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          storeGroupName = _this$state.storeGroupName,\n          currentStores = _this$state.currentStores,\n          allStores = _this$state.allStores,\n          storeTableEditData = _this$state.storeTableEditData,\n          editAllstoreData = _this$state.editAllstoreData;\n      console.log(this.state.currentStores, 'curr');\n      return React.createElement(\"div\", {\n        className: \"card p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"font-size-14  pad-10 markdown-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Store Configuration/\", React.createElement(\"span\", {\n        className: \"font-bold color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Create Store Group\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.props.onCancelButtonHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Back\"))), React.createElement(\"hr\", {\n        className: \"mb-3\",\n        style: {\n          marginTop: '-4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"mr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"*\"), \"Store group name:\"), this.props.isEditStoreGroup ? React.createElement(\"input\", {\n        style: {\n          background: '#dddddd',\n          border: '1px solid #CCC'\n        },\n        className: \"inputText\",\n        disabled: true,\n        type: \"text\",\n        value: storeGroupName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }) : // <span className=\"store-name\">{storeGroupName}</span>\n      React.createElement(\"input\", {\n        className: \"inputText\",\n        type: \"text\",\n        onChange: this.onStoreGroupNameChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row mx-2 create-store-grp-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"All Stores\"), React.createElement(\"div\", {\n        style: {\n          height: '370px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        visibleColumns: \"onlyRowSelection\",\n        getRowProps: function getRowProps(rowInfo) {\n          return {\n            onClick: function onClick() {\n              return _this2.onAllStoresSelectionChangeHandler(rowInfo);\n            }\n          };\n        },\n        columns: this.header,\n        data: allStores,\n        isPagination: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btnStyle btn btn-primary\",\n        onClick: this.onAddClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Add\"))), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Current Stores : \", currentStores && currentStores.length)), React.createElement(\"div\", {\n        style: {\n          height: '370px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        visibleColumns: \"onlyRowSelection\",\n        getRowProps: function getRowProps(rowInfo) {\n          return {\n            onClick: function onClick() {\n              return _this2.onCurrentStoresSelectionChangeHandler(rowInfo);\n            }\n          };\n        },\n        columns: this.header,\n        data: currentStores,\n        isPagination: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btnStyle btn btn-primary\",\n        onClick: this.onRemoveClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Remove\")))), React.createElement(\"div\", {\n        className: \"mb-3 mt-4\",\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          width: '7%'\n        },\n        className: \" btn btn-primary\",\n        onClick: this.onCreateStoreGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, this.props.isEditStoreGroup ? 'Update' : 'Create'), React.createElement(\"button\", {\n        className: \" btn ml-1 cancel-button\",\n        style: {\n          width: '7%'\n        },\n        onClick: this.props.onCancelButtonHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return CreateStoreGroup;\n}(Component);\nexport default CreateStoreGroup;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Configuration/StoreConfigContainers/CreateStoreGroup.jsx"],"names":["React","Component","InputGroup","FormControl","DataTable","StoreConfigRowData","cloneDeep","differenceBy","_","CreateStoreGroup","state","storeGroupName","allStores","props","allStoreTableData","editAllstoreData","currentStores","selectedAllStores","selectedCurrentStores","storeTableEditData","setTableData","setGroupName","id","match","params","setState","onStoreGroupNameChangeHandler","e","target","value","header","Header","accessor","onCurrentStoresSelectionChangeHandler","rowInfo","foundEle","find","store_code","original","console","log","remove","item","push","onAddClickHandler","newcurrentStores","unionWith","isEqual","newAllStores","onAllStoresSelectionChangeHandler","onCreateStoreGroup","isEditStoreGroup","storeCodes","map","ele","createStoreGroup","Stores_groups_NAME","Stores_Codes","onCancelButtonHandler","history","goBack","onRemoveClickHandler","newCurrentStStores","newallStores","prevProps","prevState","display","justifyContent","marginTop","color","background","border","height","onClick","length","textAlign","width"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,iBAAxC;AACA,OAAO,sCAAP;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAO,2DAAP;AACA,OAAOC,kBAAP,MAA+B,6CAA/B;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,QAAxC;;AAEA,OAAOC,CAAP,MAAc,QAAd;AAEA,WAAaC,gBAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACEC,KADF,GACU;AACNC,MAAAA,cAAc,EAAE,EADV;AAENC,MAAAA,SAAS,EAAE,MAAKC,KAAL,CAAWC,iBAFhB;AAGNC,MAAAA,gBAAgB,EAAE,EAHZ;AAINC,MAAAA,aAAa,EAAE,EAJT;AAKNC,MAAAA,iBAAiB,EAAE,EALb;AAMNC,MAAAA,qBAAqB,EAAE,EANjB;AAONC,MAAAA,kBAAkB,EAAE;AAPd,KADV;;AAAA,UA6BEC,YA7BF,GA6BiB,YAAM,CACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KArCH;;AAAA,UAsCEC,YAtCF,GAsCiB,YAAM;AAAA,UACbC,EADa,GACN,MAAKT,KAAL,CAAWU,KAAX,CAAiBC,MADX,CACbF,EADa,EAEnB;AACA;AACA;;AACA,YAAKG,QAAL,CAAc,CACZ;AADY,OAAd;AAGD,KA9CH;;AAAA,UA+CEC,6BA/CF,GA+CkC,UAACC,CAAD,EAAO;AACrC,YAAKF,QAAL,CAAc;AACZd,QAAAA,cAAc,EAAEgB,CAAC,CAACC,MAAF,CAASC;AADb,OAAd;AAGD,KAnDH;;AAAA,UAqDEC,MArDF,GAqDW,CACP;AACEC,MAAAA,MAAM,EAAE,cADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KADO,EAKP;AACED,MAAAA,MAAM,EAAE,YADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KALO,EASP;AACED,MAAAA,MAAM,EAAE,mBADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KATO,EAaP;AACED,MAAAA,MAAM,EAAE,oBADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KAbO,CArDX;;AAAA,UAwEEC,qCAxEF,GAwE0C,UAACC,OAAD,EAAa;AAAA,UAC7ChB,qBAD6C,GACnB,MAAKR,KADc,CAC7CQ,qBAD6C;;AAEnD,UAAIiB,QAAQ,GAAG3B,CAAC,CAAC4B,IAAF,CAAOlB,qBAAP,EAA8B;AAC3CmB,QAAAA,UAAU,EAAEH,OAAO,CAACI,QAAR,CAAiBD;AADc,OAA9B,CAAf;;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ,EAAqB,WAArB;;AACA,UAAIC,QAAJ,EAAc;AACZ3B,QAAAA,CAAC,CAACiC,MAAF,CAASvB,qBAAT,EAAgC,UAACwB,IAAD;AAAA,iBAAUA,IAAI,CAACL,UAAL,KAAoBH,OAAO,CAACI,QAAR,CAAiBD,UAA/C;AAAA,SAAhC;AACD,OAFD,MAEO;AACLnB,QAAAA,qBAAqB,CAACyB,IAAtB,CAA2BT,OAAO,CAACI,QAAnC;AACD;;AACD,YAAKb,QAAL,CAAc;AACZP,QAAAA,qBAAqB,EAArBA;AADY,OAAd;AAGD,KAtFH;;AAAA,UAwFE0B,iBAxFF,GAwFsB,YAAM;AACxB,UAAMhC,SAAS,GAAGN,SAAS,CAAC,MAAKI,KAAL,CAAWE,SAAZ,CAA3B;AACA,UAAMI,aAAa,GAAGV,SAAS,CAAC,MAAKI,KAAL,CAAWM,aAAZ,CAA/B,CAFwB,CAGxB;;AACA,UAAI6B,gBAAgB,GAAGrC,CAAC,CAACsC,SAAF,CAAY9B,aAAZ,EAA2B,MAAKN,KAAL,CAAWO,iBAAtC,EAAyDT,CAAC,CAACuC,OAA3D,CAAvB;;AACA,UAAMC,YAAY,GAAGzC,YAAY,CAACK,SAAD,EAAY,MAAKF,KAAL,CAAWO,iBAAvB,EAA0C,YAA1C,CAAjC;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,MAAK9B,KAAL,CAAWO,iBAAlC;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BQ,YAA5B;;AACA,YAAKvB,QAAL,CAAc;AACZb,QAAAA,SAAS,EAAEoC,YADC;AAEZhC,QAAAA,aAAa,EAAE6B,gBAFH;AAGZ5B,QAAAA,iBAAiB,EAAE;AAHP,OAAd;AAKD,KArGH;;AAAA,UAsGEgC,iCAtGF,GAsGsC,UAACf,OAAD,EAAa;AAAA,UACzCjB,iBADyC,GACnB,MAAKP,KADc,CACzCO,iBADyC;;AAE/C,UAAIkB,QAAQ,GAAG3B,CAAC,CAAC4B,IAAF,CAAOnB,iBAAP,EAA0B;AAAEoB,QAAAA,UAAU,EAAEH,OAAO,CAACI,QAAR,CAAiBD;AAA/B,OAA1B,CAAf;;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ,EAAqB,WAArB,EAAkCC,QAAlC;;AACA,UAAIA,QAAJ,EAAc;AACZ3B,QAAAA,CAAC,CAACiC,MAAF,CAASxB,iBAAT,EAA4B,UAACyB,IAAD;AAAA,iBAAUA,IAAI,CAACL,UAAL,KAAoBH,OAAO,CAACI,QAAR,CAAiBD,UAA/C;AAAA,SAA5B;AACD,OAFD,MAEO;AACLpB,QAAAA,iBAAiB,CAAC0B,IAAlB,CAAuBT,OAAO,CAACI,QAA/B;AACD;;AAED,YAAKb,QAAL,CAAc;AACZR,QAAAA,iBAAiB,EAAjBA;AADY,OAAd;AAGD,KAnHH;;AAAA,UAoHEiC,kBApHF,GAoHuB,YAAM;AACzB,UAAI,MAAKrC,KAAL,CAAWsC,gBAAf,EAAiC,CAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,OATD,MASO;AACL,YAAIC,UAAU,GAAG,MAAK1C,KAAL,CAAWM,aAAX,CAAyBqC,GAAzB,CAA6B,UAACC,GAAD;AAAA,iBAASA,GAAG,CAACjB,UAAb;AAAA,SAA7B,CAAjB;;AADK,YAEC1B,cAFD,GAEoB,MAAKD,KAFzB,CAECC,cAFD;;AAGL,cAAKE,KAAL,CAAW0C,gBAAX,CAA4B;AAC1BC,UAAAA,kBAAkB,EAAE7C,cADM;AAE1B8C,UAAAA,YAAY,EAAEL;AAFY,SAA5B;AAID;AACF,KAtIH;;AAAA,UAuIEM,qBAvIF,GAuI0B,YAAM;AAC5B,YAAKjC,QAAL,CAAc;AAAEb,QAAAA,SAAS,EAAE,EAAb;AAAiBG,QAAAA,gBAAgB,EAAE;AAAnC,OAAd;;AACA,YAAKF,KAAL,CAAW8C,OAAX,CAAmBC,MAAnB;AACD,KA1IH;;AAAA,UA2IEC,oBA3IF,GA2IyB,YAAM;AAC3B,UAAM7C,aAAa,GAAGV,SAAS,CAAC,MAAKI,KAAL,CAAWM,aAAZ,CAA/B;AACA,UAAMJ,SAAS,GAAGN,SAAS,CAAC,MAAKI,KAAL,CAAWE,SAAZ,CAA3B;AACA,UAAMkD,kBAAkB,GAAGvD,YAAY,CACrCS,aADqC,EAErC,MAAKN,KAAL,CAAWQ,qBAF0B,EAGrC,YAHqC,CAAvC,CAH2B,CAQ3B;;AACA,UAAI6C,YAAY,GAAGvD,CAAC,CAACsC,SAAF,CAAYlC,SAAZ,EAAuB,MAAKF,KAAL,CAAWQ,qBAAlC,EAAyDV,CAAC,CAACuC,OAA3D,CAAnB;;AAEA,YAAKtB,QAAL,CAAc;AACZb,QAAAA,SAAS,EAAEmD,YADC;AAEZ/C,QAAAA,aAAa,EAAE8C,kBAFH;AAGZ5C,QAAAA,qBAAqB,EAAE;AAHX,OAAd;AAKD,KA3JH;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAUsB,CAClB;AACA;AACA;AACD;AAdH;AAAA;AAAA,uCAeqB8C,SAfrB,EAegCC,SAfhC,EAe2C,CACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AA3BH;AAAA;AAAA,6BA6JW;AAAA;;AAAA,wBAOH,KAAKvD,KAPF;AAAA,UAELC,cAFK,eAELA,cAFK;AAAA,UAGLK,aAHK,eAGLA,aAHK;AAAA,UAILJ,SAJK,eAILA,SAJK;AAAA,UAKLO,kBALK,eAKLA,kBALK;AAAA,UAMLJ,gBANK,eAMLA,gBANK;AAQPwB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK9B,KAAL,CAAWM,aAAvB,EAAsC,MAAtC;AACA,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAE;AAAEkD,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,cAAc,EAAE;AAAnC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,uCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEE;AAAM,QAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKtD,KAAL,CAAW6C,qBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CALF,CADF,EAYE;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,KAAK,EAAE;AACLU,UAAAA,SAAS,EAAE;AADN,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,EAkBE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,sBADF,EAIG,KAAKxD,KAAL,CAAWsC,gBAAX,GACC;AACE,QAAA,KAAK,EAAE;AAAEmB,UAAAA,UAAU,EAAE,SAAd;AAAyBC,UAAAA,MAAM,EAAE;AAAjC,SADT;AAEE,QAAA,SAAS,EAAC,WAFZ;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,KAAK,EAAE5D,cALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GASC;AACA;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAE,KAAKe,6BAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,CADF,EAsBE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBF,CAlBF,EAiDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjDF,EAkDE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAK,QAAA,KAAK,EAAE;AAAE8C,UAAAA,MAAM,EAAE;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,cAAc,EAAC,kBADjB;AAEE,QAAA,WAAW,EAAE,qBAACtC,OAAD;AAAA,iBAAc;AACzBuC,YAAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACxB,iCAAL,CAAuCf,OAAvC,CAAN;AAAA;AADgB,WAAd;AAAA,SAFf;AAKE,QAAA,OAAO,EAAE,KAAKJ,MALhB;AAME,QAAA,IAAI,EAAElB,SANR;AAOE,QAAA,YAAY,EAAE,IAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAA6C,QAAA,OAAO,EAAE,KAAKgC,iBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAbF,CADF,EAoBE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAyC5B,aAAa,IAAIA,aAAa,CAAC0D,MAAxE,CADF,CADF,EAIE;AAAK,QAAA,KAAK,EAAE;AAAEF,UAAAA,MAAM,EAAE;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,cAAc,EAAC,kBADjB;AAEE,QAAA,WAAW,EAAE,qBAACtC,OAAD;AAAA,iBAAc;AACzBuC,YAAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACxC,qCAAL,CAA2CC,OAA3C,CAAN;AAAA;AADgB,WAAd;AAAA,SAFf;AAKE,QAAA,OAAO,EAAE,KAAKJ,MALhB;AAME,QAAA,IAAI,EAAEd,aANR;AAOE,QAAA,YAAY,EAAE,IAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAA6C,QAAA,OAAO,EAAE,KAAK6C,oBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAfF,CApBF,CAlDF,EA4FE;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAAEc,UAAAA,SAAS,EAAE;AAAb,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SADT;AAEE,QAAA,SAAS,EAAC,kBAFZ;AAGE,QAAA,OAAO,EAAE,KAAK1B,kBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,KAAKrC,KAAL,CAAWsC,gBAAX,GAA8B,QAA9B,GAAyC,QAJ5C,CADF,EAOE;AACE,QAAA,SAAS,EAAC,yBADZ;AAEE,QAAA,KAAK,EAAE;AAAEyB,UAAAA,KAAK,EAAE;AAAT,SAFT;AAGE,QAAA,OAAO,EAAE,KAAK/D,KAAL,CAAW6C,qBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,CA5FF,CADF;AA6GD;AAnRH;;AAAA;AAAA,EAAsCzD,SAAtC;AAsRA,eAAeQ,gBAAf","sourcesContent":["import React, { Component } from 'react';\nimport { InputGroup, FormControl } from 'react-bootstrap';\nimport '../StoreConfigContainers/StoreConfig';\nimport DataTable from '../../../services/reactTable';\nimport '../../Configuration/StoreConfigContainers/StoreConfig.css';\nimport StoreConfigRowData from '../StoreConfigContainers/StoreConfigRowData';\nimport { cloneDeep, differenceBy } from 'lodash';\nimport excelIcon from '../../../images/leftPanel/status.svg';\nimport _ from 'lodash';\n\nexport class CreateStoreGroup extends Component {\n  state = {\n    storeGroupName: '',\n    allStores: this.props.allStoreTableData,\n    editAllstoreData: [],\n    currentStores: [],\n    selectedAllStores: [],\n    selectedCurrentStores: [],\n    storeTableEditData: [],\n  };\n  componentDidMount() {\n    // let { id } = this.props.match.params;\n    // this.props.fetchStoreConfigStoreTableData(); allstoresdata api\n    // this.props.fetchStoreConfigStoreTableEditData({ Stores_groups_Id: [id] }); edit storedata api\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // if (prevProps.storeTableData !== this.props.storeTableData) {\n    //   this.setState(\n    //     {\n    //       allStores: this.props.storeTableData,\n    //     },\n    //     () => this.setTableData()\n    //   );\n    // }\n    // if (prevProps.storeName !== this.props.storeName) {\n    //   this.setGroupName();\n    // }\n  }\n\n  setTableData = () => {\n    // let editAllstoreData = cloneDeep(this.state.editAllstoreData);\n    // let storeTableEditData = this.props.storeTableEditData;\n    // const newAllStores = differenceBy(editAllstoreData, storeTableEditData, 'store_code');\n    // this.setState({\n    //   storeTableEditData: storeTableEditData,\n    //   editAllstoreData: newAllStores,\n    // });\n  };\n  setGroupName = () => {\n    let { id } = this.props.match.params;\n    // let storeName =\n    //   this.props && this.props.storeName && this.props.storeName.filter((el) => el.value == id);\n    // let name = storeName[0].label;\n    this.setState({\n      // storeGroupName: name,\n    });\n  };\n  onStoreGroupNameChangeHandler = (e) => {\n    this.setState({\n      storeGroupName: e.target.value,\n    });\n  };\n\n  header = [\n    {\n      Header: 'Store Number',\n      accessor: 'store_code',\n    },\n    {\n      Header: 'Store Name',\n      accessor: 'store_name',\n    },\n    {\n      Header: 'Chain Description',\n      accessor: 'chain_description',\n    },\n    {\n      Header: 'Region Description',\n      accessor: 'region_description',\n    },\n  ];\n\n  onCurrentStoresSelectionChangeHandler = (rowInfo) => {\n    let { selectedCurrentStores } = this.state;\n    let foundEle = _.find(selectedCurrentStores, {\n      store_code: rowInfo.original.store_code,\n    });\n    console.log(rowInfo, 'rowinfooo');\n    if (foundEle) {\n      _.remove(selectedCurrentStores, (item) => item.store_code === rowInfo.original.store_code);\n    } else {\n      selectedCurrentStores.push(rowInfo.original);\n    }\n    this.setState({\n      selectedCurrentStores,\n    });\n  };\n\n  onAddClickHandler = () => {\n    const allStores = cloneDeep(this.state.allStores);\n    const currentStores = cloneDeep(this.state.currentStores);\n    // currentStores.push(...this.state.selectedAllStores);\n    let newcurrentStores = _.unionWith(currentStores, this.state.selectedAllStores, _.isEqual);\n    const newAllStores = differenceBy(allStores, this.state.selectedAllStores, 'store_code');\n    console.log('asfasdf', this.state.selectedAllStores);\n    console.log('newAllStores', newAllStores);\n    this.setState({\n      allStores: newAllStores,\n      currentStores: newcurrentStores,\n      selectedAllStores: [],\n    });\n  };\n  onAllStoresSelectionChangeHandler = (rowInfo) => {\n    let { selectedAllStores } = this.state;\n    let foundEle = _.find(selectedAllStores, { store_code: rowInfo.original.store_code });\n    console.log(rowInfo, 'rowinfooo', foundEle);\n    if (foundEle) {\n      _.remove(selectedAllStores, (item) => item.store_code === rowInfo.original.store_code);\n    } else {\n      selectedAllStores.push(rowInfo.original);\n    }\n\n    this.setState({\n      selectedAllStores,\n    });\n  };\n  onCreateStoreGroup = () => {\n    if (this.props.isEditStoreGroup) {\n      // let { id } = this.props.match.params;\n      // let storeCodes = this.state.storeTableEditData.map((ele) => ele.store_code);\n      // let { storeGroupName } = this.state;\n      // this.props.fetchStoreConfigEditStoreData({\n      //   Stores_groups_NAME: storeGroupName,\n      //   Stores_Codes: storeCodes,\n      //   Stores_groups_Id: id,\n      // });\n    } else {\n      let storeCodes = this.state.currentStores.map((ele) => ele.store_code);\n      let { storeGroupName } = this.state;\n      this.props.createStoreGroup({\n        Stores_groups_NAME: storeGroupName,\n        Stores_Codes: storeCodes,\n      });\n    }\n  };\n  onCancelButtonHandler = () => {\n    this.setState({ allStores: [], editAllstoreData: [] });\n    this.props.history.goBack();\n  };\n  onRemoveClickHandler = () => {\n    const currentStores = cloneDeep(this.state.currentStores);\n    const allStores = cloneDeep(this.state.allStores);\n    const newCurrentStStores = differenceBy(\n      currentStores,\n      this.state.selectedCurrentStores,\n      'store_code'\n    );\n    // allStores.push(...this.state.selectedCurrentStores);\n    let newallStores = _.unionWith(allStores, this.state.selectedCurrentStores, _.isEqual);\n\n    this.setState({\n      allStores: newallStores,\n      currentStores: newCurrentStStores,\n      selectedCurrentStores: [],\n    });\n  };\n\n  render() {\n    let {\n      storeGroupName,\n      currentStores,\n      allStores,\n      storeTableEditData,\n      editAllstoreData,\n    } = this.state;\n    console.log(this.state.currentStores, 'curr');\n    return (\n      <div className=\"card p-2\">\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <h4 className=\"font-size-14  pad-10 markdown-heading\">\n            Store Configuration/\n            <span className=\"font-bold color-blue\">Create Store Group</span>\n          </h4>\n          <div>\n            <button className=\"btn btn-primary\" onClick={this.props.onCancelButtonHandler}>\n              Back\n            </button>\n          </div>\n        </div>\n        <hr\n          className=\"mb-3\"\n          style={{\n            marginTop: '-4px',\n          }}\n        />\n        <div className=\"row justify-content-between\">\n          <div className=\"col-md-6\">\n            <label className=\"mr-1\">\n              <span style={{ color: 'red' }}>*</span>Store group name:\n            </label>\n            {this.props.isEditStoreGroup ? (\n              <input\n                style={{ background: '#dddddd', border: '1px solid #CCC' }}\n                className=\"inputText\"\n                disabled\n                type=\"text\"\n                value={storeGroupName}\n              />\n            ) : (\n              // <span className=\"store-name\">{storeGroupName}</span>\n              <input\n                className=\"inputText\"\n                type=\"text\"\n                onChange={this.onStoreGroupNameChangeHandler}\n              />\n            )}\n          </div>\n          <div className=\"col-md-2\">\n            {/* <button className=\"col-md-5 btn btn-primary\" onClick={() => {}}>\n              Upload &nbsp;&nbsp;\n              <span>\n                <img className=\"img-icons-create-promo\" src={excelIcon} alt=\"\" />\n              </span>\n            </button> */}\n          </div>\n        </div>\n        <hr />\n        <div className=\"row mx-2 create-store-grp-table\">\n          <div className=\"col-md-6\">\n            <div>All Stores</div>\n            <div style={{ height: '370px' }}>\n              <DataTable\n                visibleColumns=\"onlyRowSelection\"\n                getRowProps={(rowInfo) => ({\n                  onClick: () => this.onAllStoresSelectionChangeHandler(rowInfo),\n                })}\n                columns={this.header}\n                data={allStores}\n                isPagination={true}\n              />\n            </div>\n            <div>\n              <button className=\"btnStyle btn btn-primary\" onClick={this.onAddClickHandler}>\n                Add\n              </button>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div>\n              <span className=\"mr-2\">Current Stores : {currentStores && currentStores.length}</span>\n            </div>\n            <div style={{ height: '370px' }}>\n              <DataTable\n                visibleColumns=\"onlyRowSelection\"\n                getRowProps={(rowInfo) => ({\n                  onClick: () => this.onCurrentStoresSelectionChangeHandler(rowInfo),\n                })}\n                columns={this.header}\n                data={currentStores}\n                isPagination={true}\n              />\n            </div>\n            <div>\n              <button className=\"btnStyle btn btn-primary\" onClick={this.onRemoveClickHandler}>\n                Remove\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"mb-3 mt-4\" style={{ textAlign: 'center' }}>\n          <button\n            style={{ width: '7%' }}\n            className=\" btn btn-primary\"\n            onClick={this.onCreateStoreGroup}>\n            {this.props.isEditStoreGroup ? 'Update' : 'Create'}\n          </button>\n          <button\n            className=\" btn ml-1 cancel-button\"\n            style={{ width: '7%' }}\n            onClick={this.props.onCancelButtonHandler}>\n            Cancel\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CreateStoreGroup;\n"]},"metadata":{},"sourceType":"module"}