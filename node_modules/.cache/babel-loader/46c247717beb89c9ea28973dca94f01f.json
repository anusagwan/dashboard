{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/MarkdownAnalysis/AnalysisTable.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-family: arial, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%;\\n\\n  td,\\n  th {\\n    border: 1px solid #dddddd;\\n    text-align: center;\\n    padding: 8px;\\n  }\\n  tr {\\n    font-size: 15px;\\n    line-height: 4rem;\\n    font-size: 15px;\\n    color: #3c4148;\\n    font-weight: 500;\\n    // background-color: #e8eef2;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport numeral from 'numeral';\n\nvar AnalysisTable = function AnalysisTable(_ref) {\n  var tableData = _ref.tableData,\n      tableData2 = _ref.tableData2,\n      isEdit = _ref.isEdit;\n\n  var getHeader = function getHeader() {\n    if (isEdit && !_.isEmpty(tableData2)) {\n      var headers = ['', 'Previous', 'Edited'];\n      console.log(headers, 'headers');\n      return headers.map(function (header, index) {\n        return React.createElement(\"th\", {\n          key: index,\n          style: {\n            backgroundColor: '#e8eef2'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, header);\n      });\n    }\n  };\n\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, getHeader()), tableData.length && tableData.length > 0 ? tableData.map(function (cell, index) {\n    var styleDesc = cell.style_desc;\n    var sellThroughVal = tableData[0].style_desc.toString();\n\n    if (!sellThroughVal.includes('%')) {\n      var value = index < 4 ? numeral(cell.style_desc).format('0.00') : numeral(cell.style_desc).format('0,0');\n      styleDesc = cell.style_id.includes('%') ? \"\".concat(value, \"%\") : cell.style_id.includes('$') ? \"$\".concat(value) : value;\n    }\n\n    return React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"cellAlign\",\n      style: {\n        backgroundColor: '#e8eef2'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, cell.style_id), React.createElement(\"td\", {\n      className: \"cellData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, styleDesc), isEdit && !_.isEmpty(tableData2) ? React.createElement(\"td\", {\n      className: \"cellData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, tableData2[index].style_desc) : null);\n  }) : React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    colSpan: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Loading...\")))));\n};\n\nexport default AnalysisTable;\nvar Styles = styled.table(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/MarkdownAnalysis/AnalysisTable.js"],"names":["React","styled","_","numeral","AnalysisTable","tableData","tableData2","isEdit","getHeader","isEmpty","headers","console","log","map","header","index","backgroundColor","length","cell","styleDesc","style_desc","sellThroughVal","toString","includes","value","format","style_id","Styles","table"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport numeral from 'numeral';\n\nconst AnalysisTable = ({ tableData, tableData2, isEdit }) => {\n  const getHeader = () => {\n    if (isEdit && !_.isEmpty(tableData2)) {\n      let headers = ['', 'Previous', 'Edited'];\n      console.log(headers, 'headers');\n      return headers.map((header, index) => {\n        return (\n          <th key={index} style={{ backgroundColor: '#e8eef2' }}>\n            {header}\n          </th>\n        );\n      });\n    }\n  };\n\n  return (\n    <Styles>\n      <table>\n        <tbody>\n          <tr>{getHeader()}</tr>\n          {tableData.length && tableData.length > 0 ? (\n            tableData.map((cell, index) => {\n              let styleDesc = cell.style_desc;\n              let sellThroughVal = tableData[0].style_desc.toString();\n              if (!sellThroughVal.includes('%')) {\n                let value =\n                  index < 4\n                    ? numeral(cell.style_desc).format('0.00')\n                    : numeral(cell.style_desc).format('0,0');\n                styleDesc = cell.style_id.includes('%')\n                  ? `${value}%`\n                  : cell.style_id.includes('$')\n                  ? `$${value}`\n                  : value;\n              }\n\n              return (\n                <tr key={index}>\n                  <td className=\"cellAlign\" style={{ backgroundColor: '#e8eef2' }}>\n                    {cell.style_id}\n                  </td>\n                  <td className=\"cellData\">{styleDesc}</td>\n                  {isEdit && !_.isEmpty(tableData2) ? (\n                    <td className=\"cellData\">{tableData2[index].style_desc}</td>\n                  ) : null}\n                </tr>\n              );\n            })\n          ) : (\n            <tr>\n              <td colSpan=\"5\">Loading...</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </Styles>\n  );\n};\n\nexport default AnalysisTable;\n\nconst Styles = styled.table`\n  font-family: arial, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n\n  td,\n  th {\n    border: 1px solid #dddddd;\n    text-align: center;\n    padding: 8px;\n  }\n  tr {\n    font-size: 15px;\n    line-height: 4rem;\n    font-size: 15px;\n    color: #3c4148;\n    font-weight: 500;\n    // background-color: #e8eef2;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}