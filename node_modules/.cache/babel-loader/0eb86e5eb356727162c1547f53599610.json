{"ast":null,"code":"import _objectSpread from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  markdownAnalysisGraphData: [],\n  analysisTable: [],\n  // comparisonDataTemp: {\n  //   scenario: '',\n  //   sellthrough: '',\n  //   \"margin%\": '',\n  //   aur: '',\n  //   aum: '',\n  //   budgetUtilised: '',\n  //   leftOverInventory: '',\n  //   revenue: '',\n  //   margin$: '',\n  //   units: '',\n  // },\n  comparisonData: {}\n}; // const getComparsionTableData = (payload) => {\n// }\n\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GET_MARKDOWNANALYSIS_GRAPH_DATA':\n      return _objectSpread({}, state, {\n        markdownAnalysisGraphData: action.payload\n      });\n\n    case 'SET_ANALYSIS_TABLE_DATA':\n      var obj = {};\n      action.payload.analysisTabledata.forEach(function (ob) {\n        obj[ob.style_id] = ob.style_desc;\n      });\n      obj.scenario = action.cadenceType;\n      var data = state.comparisonData;\n\n      if (action.cadenceType !== 'Comparison') {\n        data[action.cadenceType] = obj;\n      }\n\n      return _objectSpread({}, state, {\n        analysisTable: action.payload,\n        comparisonData: data\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n}","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/reducers/markdownAnalysisReducer.js"],"names":["initialState","markdownAnalysisGraphData","analysisTable","comparisonData","state","action","type","payload","obj","analysisTabledata","forEach","ob","style_id","style_desc","scenario","cadenceType","data"],"mappings":";AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,yBAAyB,EAAE,EADR;AAEnBC,EAAAA,aAAa,EAAE,EAFI;AAGnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,cAAc,EAAE;AAfG,CAArB,C,CAkBA;AAEA;;AAEA,eAAe,YAAwC;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iCAAL;AACE,+BACKF,KADL;AAEEH,QAAAA,yBAAyB,EAAEI,MAAM,CAACE;AAFpC;;AAIF,SAAK,yBAAL;AACE,UAAIC,GAAG,GAAG,EAAV;AACAH,MAAAA,MAAM,CAACE,OAAP,CAAeE,iBAAf,CAAiCC,OAAjC,CAAyC,UAACC,EAAD,EAAQ;AAC/CH,QAAAA,GAAG,CAACG,EAAE,CAACC,QAAJ,CAAH,GAAmBD,EAAE,CAACE,UAAtB;AACD,OAFD;AAGAL,MAAAA,GAAG,CAACM,QAAJ,GAAeT,MAAM,CAACU,WAAtB;AACA,UAAIC,IAAI,GAAGZ,KAAK,CAACD,cAAjB;;AACA,UAAIE,MAAM,CAACU,WAAP,KAAuB,YAA3B,EAAyC;AACvCC,QAAAA,IAAI,CAACX,MAAM,CAACU,WAAR,CAAJ,GAA2BP,GAA3B;AACD;;AACD,+BACKJ,KADL;AAEEF,QAAAA,aAAa,EAAEG,MAAM,CAACE,OAFxB;AAGIJ,QAAAA,cAAc,EAAEa;AAHpB;;AAKF;AACE,+BACKZ,KADL;AAtBJ;AA0BD","sourcesContent":["const initialState = {\n  markdownAnalysisGraphData: [],\n  analysisTable: [],\n  // comparisonDataTemp: {\n  //   scenario: '',\n  //   sellthrough: '',\n  //   \"margin%\": '',\n  //   aur: '',\n  //   aum: '',\n  //   budgetUtilised: '',\n  //   leftOverInventory: '',\n  //   revenue: '',\n  //   margin$: '',\n  //   units: '',\n  // },\n  comparisonData: {}\n};\n\n// const getComparsionTableData = (payload) => {\n\n// }\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case 'GET_MARKDOWNANALYSIS_GRAPH_DATA':\n      return {\n        ...state,\n        markdownAnalysisGraphData: action.payload,\n      };\n    case 'SET_ANALYSIS_TABLE_DATA':\n      let obj = {};\n      action.payload.analysisTabledata.forEach((ob) => {\n        obj[ob.style_id] = ob.style_desc\n      })\n      obj.scenario = action.cadenceType\n      let data = state.comparisonData\n      if (action.cadenceType !== 'Comparison') {\n        data[action.cadenceType] = obj\n      }\n      return {\n        ...state,\n        analysisTable: action.payload,\n          comparisonData: data\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n}"]},"metadata":{},"sourceType":"module"}