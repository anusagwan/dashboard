{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/MarkdownAnalysis/AnalysisTable.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-family: arial, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%;\\n\\n  td,\\n  th {\\n    border: 1px solid #dddddd;\\n    text-align: center;\\n    padding: 8px;\\n  }\\n  tr {\\n    font-size: 15px;\\n    line-height: 4rem;\\n    font-size: 15px;\\n    color: #3c4148;\\n    font-weight: 500;\\n    // background-color: #e8eef2;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport numeral from 'numeral';\n\nvar AnalysisTable = function AnalysisTable(_ref) {\n  var tableData = _ref.tableData,\n      tableData2 = _ref.tableData2,\n      isEdit = _ref.isEdit,\n      editFrom = _ref.editFrom;\n  tableData = tableData || [];\n  tableData2 = tableData2 || [];\n\n  var getHeader = function getHeader() {\n    if (isEdit && !_.isEmpty(tableData2)) {\n      var headers = ['', 'Previous', 'Edited'];\n      console.log(headers, 'headers');\n      return headers.map(function (header, index) {\n        return React.createElement(\"th\", {\n          key: index,\n          style: {\n            backgroundColor: '#e8eef2'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, header);\n      });\n    }\n  };\n\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, editFrom && editFrom !== 'notEditModal' ? // horizontal table for edit popup\n  React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, isEdit && !_.isEmpty(tableData) && !_.isEmpty(tableData2) && React.createElement(\"th\", {\n    className: \"cellAlign\",\n    style: {\n      backgroundColor: '#e8eef2'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), tableData.length && tableData.length > 0 ? tableData.map(function (cell, index) {\n    return React.createElement(\"th\", {\n      className: \"cellAlign\",\n      style: {\n        backgroundColor: '#e8eef2'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, cell.style_id);\n  }) : null), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, isEdit && !_.isEmpty(tableData) && !_.isEmpty(tableData2) && React.createElement(\"td\", {\n    className: \"cellData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Previous\"), tableData.length && tableData.length > 0 ? tableData.map(function (cell, index) {\n    var styleDesc = cell.style_desc;\n    var sellThroughVal = tableData[0].style_desc.toString();\n\n    if (!sellThroughVal.includes('%')) {\n      var value = index < 4 ? numeral(cell.style_desc).format('0.00') : numeral(cell.style_desc).format('0,0');\n      styleDesc = cell.style_id.includes('%') ? \"\".concat(value, \"%\") : cell.style_id.includes('$') ? \"$\".concat(value) : value;\n    }\n\n    return React.createElement(\"td\", {\n      className: \"cellData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, styleDesc);\n  }) : null), isEdit && !_.isEmpty(tableData2) ? React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, isEdit && !_.isEmpty(tableData) && !_.isEmpty(tableData2) && React.createElement(\"td\", {\n    className: \"cellData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Edited\"), tableData.length && tableData.length > 0 ? tableData.map(function (cell, index) {\n    return React.createElement(\"td\", {\n      className: \"cellData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, tableData2[index].style_desc);\n  }) : null) : null) : React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, getHeader()), tableData.length && tableData.length > 0 ? tableData.map(function (cell, index) {\n    var styleDesc = cell.style_desc;\n    var sellThroughVal = tableData[0].style_desc.toString();\n\n    if (!sellThroughVal.includes('%')) {\n      var value = index < 4 ? numeral(cell.style_desc).format('0.00') : numeral(cell.style_desc).format('0,0');\n      styleDesc = cell.style_id.includes('%') ? \"\".concat(value, \"%\") : cell.style_id.includes('$') ? \"$\".concat(value) : value;\n    }\n\n    return React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"cellAlign\",\n      style: {\n        backgroundColor: '#e8eef2'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, cell.style_id), React.createElement(\"td\", {\n      className: \"cellData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, styleDesc), isEdit && !_.isEmpty(tableData2) ? React.createElement(\"td\", {\n      className: \"cellData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, tableData2[index].style_desc) : null);\n  }) : React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    colSpan: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Loading...\")))));\n};\n\nexport default AnalysisTable;\nvar Styles = styled.table(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/MarkdownAnalysis/AnalysisTable.js"],"names":["React","styled","_","numeral","AnalysisTable","tableData","tableData2","isEdit","editFrom","getHeader","isEmpty","headers","console","log","map","header","index","backgroundColor","length","cell","style_id","styleDesc","style_desc","sellThroughVal","toString","includes","value","format","Styles","table"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport numeral from 'numeral';\n\nconst AnalysisTable = ({ tableData, tableData2, isEdit, editFrom }) => {\n  tableData = tableData || [];\n  tableData2 = tableData2 || [];\n  const getHeader = () => {\n    if (isEdit && !_.isEmpty(tableData2)) {\n      let headers = ['', 'Previous', 'Edited'];\n      console.log(headers, 'headers');\n      return headers.map((header, index) => {\n        return (\n          <th key={index} style={{ backgroundColor: '#e8eef2' }}>\n            {header}\n          </th>\n        );\n      });\n    }\n  };\n\n  return (\n    <Styles>\n      <table>\n        {editFrom && editFrom !== 'notEditModal' ? ( // horizontal table for edit popup\n          <tbody>\n            <tr>\n              {isEdit && !_.isEmpty(tableData) && !_.isEmpty(tableData2) && (\n                <th className=\"cellAlign\" style={{ backgroundColor: '#e8eef2' }} />\n              )}\n              {tableData.length && tableData.length > 0\n                ? tableData.map((cell, index) => {\n                    return (\n                      <th className=\"cellAlign\" style={{ backgroundColor: '#e8eef2' }}>\n                        {cell.style_id}\n                      </th>\n                    );\n                  })\n                : null}\n            </tr>\n            <tr>\n              {isEdit && !_.isEmpty(tableData) && !_.isEmpty(tableData2) && (\n                <td className=\"cellData\">Previous</td>\n              )}\n              {tableData.length && tableData.length > 0\n                ? tableData.map((cell, index) => {\n                    let styleDesc = cell.style_desc;\n                    let sellThroughVal = tableData[0].style_desc.toString();\n                    if (!sellThroughVal.includes('%')) {\n                      let value =\n                        index < 4\n                          ? numeral(cell.style_desc).format('0.00')\n                          : numeral(cell.style_desc).format('0,0');\n                      styleDesc = cell.style_id.includes('%')\n                        ? `${value}%`\n                        : cell.style_id.includes('$')\n                        ? `$${value}`\n                        : value;\n                    }\n                    return <td className=\"cellData\">{styleDesc}</td>;\n                  })\n                : null}\n              {/* <td colSpan=\"5\">No data found</td> */}\n            </tr>\n            {isEdit && !_.isEmpty(tableData2) ? (\n              <tr>\n                {isEdit && !_.isEmpty(tableData) && !_.isEmpty(tableData2) && (\n                  <td className=\"cellData\">Edited</td>\n                )}\n                {tableData.length && tableData.length > 0\n                  ? tableData.map((cell, index) => {\n                      return <td className=\"cellData\">{tableData2[index].style_desc}</td>;\n                    })\n                  : null}\n              </tr>\n            ) : null}\n          </tbody>\n        ) : (\n          <tbody>\n            <tr>{getHeader()}</tr>\n            {tableData.length && tableData.length > 0 ? (\n              tableData.map((cell, index) => {\n                let styleDesc = cell.style_desc;\n                let sellThroughVal = tableData[0].style_desc.toString();\n                if (!sellThroughVal.includes('%')) {\n                  let value =\n                    index < 4\n                      ? numeral(cell.style_desc).format('0.00')\n                      : numeral(cell.style_desc).format('0,0');\n                  styleDesc = cell.style_id.includes('%')\n                    ? `${value}%`\n                    : cell.style_id.includes('$')\n                    ? `$${value}`\n                    : value;\n                }\n\n                return (\n                  <tr key={index}>\n                    <td className=\"cellAlign\" style={{ backgroundColor: '#e8eef2' }}>\n                      {cell.style_id}\n                    </td>\n                    <td className=\"cellData\">{styleDesc}</td>\n                    {isEdit && !_.isEmpty(tableData2) ? (\n                      <td className=\"cellData\">{tableData2[index].style_desc}</td>\n                    ) : null}\n                  </tr>\n                );\n              })\n            ) : (\n              <tr>\n                <td colSpan=\"5\">Loading...</td>\n              </tr>\n            )}\n          </tbody>\n        )}\n      </table>\n    </Styles>\n  );\n};\n\nexport default AnalysisTable;\n\nconst Styles = styled.table`\n  font-family: arial, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n\n  td,\n  th {\n    border: 1px solid #dddddd;\n    text-align: center;\n    padding: 8px;\n  }\n  tr {\n    font-size: 15px;\n    line-height: 4rem;\n    font-size: 15px;\n    color: #3c4148;\n    font-weight: 500;\n    // background-color: #e8eef2;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}