{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _defineProperty from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Finalize/FinalizeMarkdown.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Filters from '../../services/filters';\nimport './finalizeMarkdownStyle.css';\nimport styled from 'styled-components';\nimport LoadingOverlay from '../../utils/Loader';\nimport { toast } from 'react-toastify';\nimport NoData from '../noTableData';\nimport FinalizeAction from '../../actions/draftStausFinalizeAction'; // import Coldef from './coldef';\n\nimport Coldef from '../draftStatus/draft/coldef';\nimport _ from 'lodash';\nimport cloneDeep from 'clone-deep';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport AlertWarning from '../../utils/AlertMessage/alertDanger';\nimport AlertSuccess from '../../utils/AlertMessage/alertSuccess';\nimport moment from 'moment';\nimport card1Image from '../../images/card1Image.png';\nimport card2Image from '../../images/card2Image.png';\nimport card3Image from '../../images/card3Image.png';\nimport card4Image from '../../images/card4Image.png';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox';\nimport { toPercentage, toDollarWithlDraft, toUnitDraft } from '../../helper/formatter';\n\nfunction FormatterStyling(props, value, val) {\n  var val1 = val || val == 0 ? val : props.value;\n  var props1 = val || val == 0 ? {\n    value: val\n  } : props;\n\n  if (value == 'pvh_units' || value == 'markdown_units' || value == 'overall_pvh_units' || value == 'overall_markdown_units') {\n    return val1 || val1 == 0 ? toUnitDraft(props1) : '-';\n  } else if (value == 'margin_perc' || value == 'overall_margin_perc') {\n    return val1 || val1 == 0 ? toPercentage(props1) : '-';\n  } else if (value == 'revenue$' || value == 'aur' || value == 'margin$' || value == 'aum' || value == 'overall_aum' || value == 'overall_revenue$' || value == 'overall_aur' || value == 'overall_margin$') {\n    return val1 || val1 == 0 ? toDollarWithlDraft(props1) : '-';\n  }\n\n  return '-';\n}\n\nvar FinalizeMarkdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FinalizeMarkdown, _Component);\n\n  function FinalizeMarkdown(_props) {\n    var _this;\n\n    _classCallCheck(this, FinalizeMarkdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FinalizeMarkdown).call(this, _props));\n\n    _this.findStatusColor = function (status, color) {\n      switch (status) {\n        case 'high':\n          return color.high;\n\n        case 'medium':\n          return color.medium;\n\n        case 'low':\n          return color.low;\n\n        default:\n          break;\n      }\n    };\n\n    _this.bgmCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var bgCol = {\n        high: '#F8E8E8',\n        medium: '#FCF3D1',\n        low: '#E8F8F5'\n      };\n      return _this.findStatusColor(status, bgCol);\n    };\n\n    _this.txtCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var txtCol = {\n        high: '#D38485',\n        medium: '#F0C53A',\n        low: '#66CFBA'\n      };\n      return _this.findStatusColor(status, txtCol);\n    };\n\n    _this.sendForReject = function () {\n      var msg = [];\n      var payload = {\n        markdown_data: _this.state.selectedRows.map(function (item, i) {\n          var arrLength = _this.state.selectedRows.length;\n          var msgStr = \"Scenario '\".concat(item.scenario, \"' of Plan '\").concat(item.md_plan, \"'\").concat(i === arrLength - 2 ? ' and ' : i === arrLength - 1 ? '' : ', ');\n          msg.push(msgStr);\n          return {\n            id: item.markdown_id,\n            scenario: item.scenario\n          };\n        }),\n        update_status: 'rejected'\n      };\n\n      _this.props.sendForApproval(payload).then(function (resp) {\n        if (resp && resp.data.status == true) {\n          var successMsg = \"\".concat(msg.join(''), \" has been Rejected\");\n          toast.info(successMsg, {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n\n          _this.props.getMarkdowns({\n            status: 'pending'\n          });\n\n          _this.setState({\n            selectedRows: []\n          });\n        }\n      }).catch(function (err) {\n        toast.error(err.message, {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n      });\n    };\n\n    _this.sendForApprove = function () {\n      var msg = [];\n      var payload = {\n        markdown_data: _this.state.selectedRows.map(function (item, i) {\n          var arrLength = _this.state.selectedRows.length;\n          var msgStr = \"Scenario '\".concat(item.scenario, \"' of Plan '\").concat(item.md_plan, \"'\").concat(i === arrLength - 2 ? ' and ' : i === arrLength - 1 ? '' : ', ');\n          msg.push(msgStr);\n          return {\n            id: item.markdown_id,\n            scenario: item.scenario\n          };\n        }),\n        update_status: 'approved'\n      };\n\n      _this.props.sendForApproval(payload).then(function (resp) {\n        if (resp && resp.data.status == true) {\n          var successMsg = \"\".concat(msg.join(''), \" has been Finalized Successfully\");\n          toast.info(successMsg, {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n\n          _this.props.getMarkdowns({\n            status: 'pending'\n          });\n\n          _this.setState({\n            selectedRows: []\n          });\n        }\n      }).catch(function (err) {\n        toast.error(err.message, {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n      });\n    };\n\n    _this.onActionSelection = function (rowData) {\n      var selectedRows = _this.state.selectedRows;\n\n      var foundEle = _.find(selectedRows, {\n        markdown_id: rowData.original.markdown_id\n      });\n\n      if (foundEle) {\n        _.remove(selectedRows, function (item) {\n          return item.markdown_id === rowData.original.markdown_id;\n        });\n      } else {\n        selectedRows.push(rowData.original);\n      }\n\n      _this.setState({\n        selectedRows: selectedRows\n      });\n    };\n\n    _this.onScenarioSelection = function (rowData) {\n      var selectedRows = _this.state.selectedRows;\n\n      var foundEle = _.find(selectedRows, {\n        markdown_id: rowData.original.markdown_id\n      });\n\n      if (foundEle) {\n        _.remove(selectedRows, function (item) {\n          return item.markdown_id === rowData.original.markdown_id;\n        });\n      } else {\n        selectedRows.push(rowData.original);\n      }\n\n      _this.setState({\n        selectedRows: selectedRows\n      });\n    };\n\n    _this.onHandleSelect = function (selOptions) {\n      var headers = _.cloneDeep(_this.state.columns);\n\n      _.remove(headers, function (item) {\n        return item.metric;\n      });\n\n      selOptions.forEach(function (item) {\n        var newTableCols = headers.filter(function (a) {\n          return a.accessor === item.value;\n        });\n\n        if (newTableCols.length == 0) {\n          var spliceAt = headers.length - 1;\n          headers.splice(spliceAt, 0, {\n            Header: item.label,\n            accessor: item.value,\n            Aggregated: function Aggregated(props) {\n              var accessorName = \"overall_\".concat(item.value);\n              var val = props.row.original[accessorName];\n              return FormatterStyling(props, accessorName, val);\n            },\n            Cell: function Cell(props) {\n              var parentId = Math.floor(props.row.id);\n\n              var parentRow = _.find(props.rows, {\n                id: parentId.toString()\n              });\n\n              return FormatterStyling(props, item.value);\n            },\n            metric: true\n          });\n        }\n      });\n\n      _this.setState({\n        columns: headers,\n        selectedItems: selOptions\n      });\n    };\n\n    _this.onHandleCheckBox = function (e, label, index) {\n      //adding\n      if (e.target.checked) {\n        if (_this.state.selLabels.indexOf(label) === -1) {\n          var labels = [].concat(_toConsumableArray(_this.state.selLabels), [label]);\n          var tempArr = [];\n          labels.forEach(function (label) {\n            var columns = _this.props.getColumnHeaders[label];\n            var labelColumns = Object.keys(columns);\n            var options = labelColumns.map(function (label) {\n              return {\n                label: label,\n                value: columns[label]\n              };\n            });\n            tempArr.push.apply(tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selLabels: labels,\n            columnOptions: tempArr\n          });\n        }\n      } else {\n        //removing\n        var _index = _this.state.selLabels.indexOf(label);\n\n        if (_index !== -1) {\n          var selectedLabel = _.cloneDeep(_this.state.selLabels);\n\n          selectedLabel.splice(_index, 1);\n          var _tempArr = [];\n          selectedLabel.forEach(function (label) {\n            var columns = _this.props.getColumnHeaders[label];\n            var labelColumns = Object.keys(columns);\n            var options = labelColumns.map(function (label) {\n              return {\n                label: label,\n                value: columns[label]\n              };\n            });\n\n            _tempArr.push.apply(_tempArr, _toConsumableArray(options));\n          });\n\n          var selectedItemsClone = _.cloneDeep(_this.state.selectedItems);\n\n          var newSelectedItems = [];\n          var labelArr = Object.keys(_this.props.getColumnHeaders[label]);\n          selectedItemsClone.forEach(function (item) {\n            if (!labelArr.includes(item.label)) {\n              newSelectedItems.push(item);\n            }\n          });\n\n          _this.onHandleSelect(newSelectedItems);\n\n          _this.setState({\n            selLabels: selectedLabel,\n            columnOptions: _tempArr,\n            selectedItems: newSelectedItems\n          });\n        }\n      }\n    };\n\n    _this.mandatoryFiltersVal = function () {\n      return _this.props.selectedHierarchy1 && _this.props.selectedHierarchy2.length && _this.props.startDate && _this.props.endDate;\n    };\n\n    _this.onFilter = function () {\n      if (!_this.mandatoryFiltersVal()) {\n        toast.error(\"Please select mandatory filters\", {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        return;\n      }\n\n      var payload = {\n        filters: {\n          hierarchy1: _this.props.selectedHierarchy1,\n          hierarchy2: _this.props.selectedHierarchy2,\n          hierarchy3: _this.props.selectedHierarchy3,\n          hierarchy4: _this.props.selectedHierarchy4,\n          hierarchy5: _this.props.selectedHierarchy5,\n          hierarchy6: _this.props.selectedHierarchy6,\n          hierarchy7: _this.props.selectedHierarchy7,\n          hierarchy8: _this.props.selectedHierarchy8,\n          tiers: _this.props.selectedStores\n        },\n        startDate: _this.props.startDate ? moment(_this.props.startDate).format('YYYY-MM-DD') : null,\n        endDate: _this.props.endDate ? moment(_this.props.endDate).format('YYYY-MM-DD') : null,\n        status: 'pending'\n      };\n\n      _this.getMarkdowns(payload);\n    };\n\n    _this.getMarkdowns = function (payload) {\n      _this.props.getMarkdowns(payload).then(function (resp) {\n        if (resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n          (function () {\n            var defaultHeader = Object.keys(resp.columnHeaders.default);\n            var setDefaultColDef = Coldef().filter(function (col) {\n              return defaultHeader.includes(col.Header) || col.Header === 'Time Period' || col.Header === 'Actions' || col.id === 'expander' || // col.accessor === 'sell_through' ||\n              _this.state.toggle && col.accessor === 'status';\n            });\n            var setDefaultLabel = [];\n            var setDefaultColumnOptions = [];\n            var setDefaultColumnOptions1 = [];\n            var setDefaultItems = [];\n\n            var colHeaders = _.cloneDeep(resp.columnHeaders);\n\n            var labels = Object.keys(colHeaders);\n            labels.splice(labels.indexOf('fixed'), 1);\n            labels.splice(labels.indexOf('default'), 1);\n\n            var _loop = function _loop() {\n              var label = _labels[_i];\n              var labelArray = Object.keys(resp.columnHeaders[label]);\n\n              function diff() {\n                var A = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : labelArray;\n                var B = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultHeader;\n                return A.filter(function (a) {\n                  return B.indexOf(a) !== -1;\n                });\n              }\n\n              if (diff().length) {\n                setDefaultColumnOptions.push.apply(setDefaultColumnOptions, _toConsumableArray(Object.keys(resp.columnHeaders[label])));\n                setDefaultColumnOptions1.push(resp.columnHeaders[label]);\n                setDefaultItems.push.apply(setDefaultItems, _toConsumableArray(diff()));\n                setDefaultLabel.push(label);\n              }\n            };\n\n            for (var _i = 0, _labels = labels; _i < _labels.length; _i++) {\n              _loop();\n            }\n\n            var options = setDefaultColumnOptions.map(function (label) {\n              var find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n              return {\n                label: label,\n                value: find\n              };\n            });\n            var selectedItems = setDefaultItems.map(function (label) {\n              var find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n              return {\n                label: label,\n                value: find\n              };\n            });\n            setDefaultColDef.push({\n              id: 'selection',\n              groupByBoundary: true,\n              Header: 'Actions',\n              // fixed: 'left',\n              Cell: function Cell(props) {\n                var row = props.row,\n                    rows = props.rows;\n\n                var mdPlan = row.original.markdown_id,\n                    mainGrp = _.find(rows, {\n                  isSelected: true,\n                  original: {\n                    markdown_id: mdPlan\n                  }\n                }),\n                    checkboxDisabled = mainGrp && !row.isSelected ? true : false;\n\n                return row.canExpand ? React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 408\n                  },\n                  __self: this\n                }, React.createElement(IndeterminateCheckbox, Object.assign({\n                  row: row.id,\n                  onClick: function onClick() {\n                    _this.onScenarioSelection(row);\n                  },\n                  disabled: checkboxDisabled\n                }, row.getToggleRowSelectedProps(), {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 409\n                  },\n                  __self: this\n                }))) : null;\n              }\n            });\n\n            _this.setState({\n              columns: setDefaultColDef,\n              selLabels: setDefaultLabel,\n              selectedItems: selectedItems,\n              columnOptions: options\n            });\n          })();\n        }\n      });\n    };\n\n    _this.state = {\n      attributes: ['Margin', 'Sales', 'Inventory'],\n      firstCardText: 'KPIs to be decided',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month',\n      selectedItems: [],\n      columnOptions: [],\n      selLabels: [],\n      columns: [],\n      selectedRows: []\n    };\n    return _this;\n  }\n\n  _createClass(FinalizeMarkdown, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.setMarkDowns([]);\n      this.props.setMDColumnHeaders({});\n    }\n  }, {\n    key: \"render\",\n    // onFilter = (selectedFilters) => {\n    //   let payload = { ...selectedFilters };\n    //   payload.startDate = moment(payload.startDate).format('MM-DD-YYYY');\n    //   payload.endDate = moment(payload.endDate).format('MM-DD-YYYY');\n    //   payload['week'] = '';\n    //   payload['status'] = 'draft';\n    //   this.props.getMarkDowns(payload).then((resp) => {\n    //     console.log(resp, 'aaaaaaaaaa');\n    //     if (resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n    //       let setDefaultColDef = Coldef().filter((col) =>\n    //         resp.columnHeaders.default.includes(col.Header)\n    //       );\n    //       let setDefaultLabel = [];\n    //       let setDefaultColumnOptions = [];\n    //       let setDefaultItems = [];\n    //       let colHeaders = _.cloneDeep(resp.columnHeaders);\n    //       let labels = Object.keys(colHeaders);\n    //       labels.splice(labels.indexOf('fixed'), 1);\n    //       labels.splice(labels.indexOf('default'), 1);\n    //       for (const label of labels) {\n    //         function diff(A = resp.columnHeaders[label], B = resp.columnHeaders.default) {\n    //           return A.filter(function (a) {\n    //             return B.indexOf(a) !== -1;\n    //           });\n    //         }\n    //         if (diff().length) {\n    //           setDefaultColumnOptions.push(...resp.columnHeaders[label]);\n    //           setDefaultItems.push(...diff());\n    //           setDefaultLabel.push(label);\n    //         }\n    //       }\n    //       let options = setDefaultColumnOptions.map((label) => {\n    //         return {\n    //           label: label,\n    //           value: label,\n    //         };\n    //       });\n    //       let selectedItems = setDefaultItems.map((label) => {\n    //         return {\n    //           label: label,\n    //           value: label,\n    //         };\n    //       });\n    //       this.setState({\n    //         columns: setDefaultColDef,\n    //         selLabels: setDefaultLabel,\n    //         selectedItems: selectedItems,\n    //         columnOptions: options,\n    //       });\n    //     }\n    //   });\n    // };\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(LoadingOverlay, {\n        loader: this.props.getOverlayLoaderState,\n        spinner: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"createMd pl-2 pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"alertDivs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, this.state.showAlertWarning ? React.createElement(AlertWarning, {\n        message: \"Markdown Finalization Failed!\",\n        show: this.state.showAlertWarning,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }) : null, this.state.showAlertSuccess ? React.createElement(AlertSuccess, {\n        message: 'Markdown(s) are ' + this.state.message,\n        show: this.state.showAlertSuccess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }) : null), React.createElement(\"div\", {\n        className: \"card CalendarMain promoCalendarDiv1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"font-size-14  pad-10 markdown-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, \"Markdown Optimization /\", React.createElement(\"span\", {\n        className: \"font-bold color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, \"Finalize\"))), React.createElement(\"hr\", {\n        className: \"mb-2\",\n        style: {\n          marginTop: '-4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"filterCol mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, React.createElement(Filters, {\n        onFilter: this.onFilter,\n        stores: true,\n        dateRange: true,\n        hierarchy: [_defineProperty({\n          type: 'hierarchy1',\n          isMandatory: true,\n          isMultiple: false\n        }, \"isMandatory\", true), {\n          type: 'hierarchy2',\n          isMultiple: true,\n          isMandatory: true\n        }, {\n          type: 'hierarchy3',\n          isMultiple: true\n        }, {\n          type: 'hierarchy4',\n          isMultiple: true\n        }, {\n          type: 'hierarchy5',\n          isMultiple: true\n        }, {\n          type: 'hierarchy6',\n          isMultiple: true\n        }, {\n          type: 'hierarchy7',\n          isMultiple: true\n        }, {\n          type: 'hierarchy8',\n          isMultiple: true\n        }],\n        storeIsNotMandatory: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }))), this.props.finalizeMarkdownData && this.props.finalizeMarkdownData.length ? React.createElement(\"div\", {\n        className: \"card pl-3 pr-3 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630\n        },\n        __self: this\n      }, React.createElement(ColSelBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631\n        },\n        __self: this\n      }, this.props.getColumnHeaders && Object.keys(this.props.getColumnHeaders).length && React.createElement(ColumnSelection, {\n        onHandleCheckBox: this.onHandleCheckBox,\n        columnHeaders: this.props.getColumnHeaders,\n        onHandleSelect: this.onHandleSelect,\n        columnOptions: this.state.columnOptions,\n        selectedItems: this.state.selectedItems,\n        selLabels: this.state.selLabels,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          padding: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        disabled: !this.state.selectedRows.length,\n        onClick: this.sendForApprove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }, \"Approve\"), \"\\xA0\", React.createElement(\"button\", {\n        disabled: !this.state.selectedRows.length,\n        className: \"btn btn-primary\",\n        onClick: this.sendForReject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650\n        },\n        __self: this\n      }, \"Reject\"))), React.createElement(DataTable, {\n        columns: this.state.columns,\n        isSort: true // isColumnFilter={true}\n        ,\n        data: this.props.finalizeMarkdownData,\n        updateMyData: this.updateMyData // visibleColumns=\"markDownDrafts\"\n        ,\n        isPagination: true,\n        getColumnProps: function getColumnProps(column) {\n          return {// onClick: () => this.onColumnClick(column),\n          };\n        },\n        getCellProps: function getCellProps(cellInfo) {\n          return {\n            style: {\n              backgroundColor: _this2.bgmCol(cellInfo),\n              color: _this2.txtCol(cellInfo),\n              // textAlign: \"center\",\n              margin: '4px 4px',\n              borderRadius: '2px'\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658\n        },\n        __self: this\n      })) : React.createElement(NoData, {\n        description: \"Please select filters to show Markdown plans.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return FinalizeMarkdown;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    finalizeMarkdownData: store.draftStatusReducer.markdowns,\n    getOverlayLoaderState: store.loaderReducer.overlayLoaderState,\n    getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    getMetricOptions: store.finalizeReducer.metricOptions,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    selectedStores: store.filtersReducer.selectedStores,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate\n  };\n};\n\nvar mapActionToProps = {\n  getMarkdowns: FinalizeAction.getMarkdowns,\n  setMarkDowns: FinalizeAction.setMarkDowns,\n  setMDColumnHeaders: FinalizeAction.setMDColumnHeaders,\n  sendForApproval: FinalizeAction.sendForApproval\n};\nexport default connect(mapStateToProps, mapActionToProps)(withRouter(FinalizeMarkdown));\nvar ColSelBtn = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Finalize/FinalizeMarkdown.js"],"names":["React","Component","connect","withRouter","Filters","styled","LoadingOverlay","toast","NoData","FinalizeAction","Coldef","_","cloneDeep","DataTable","ColumnSelection","AlertWarning","AlertSuccess","moment","card1Image","card2Image","card3Image","card4Image","IndeterminateCheckbox","toPercentage","toDollarWithlDraft","toUnitDraft","FormatterStyling","props","value","val","val1","props1","FinalizeMarkdown","findStatusColor","status","color","high","medium","low","bgmCol","cellInfo","column","id","row","original","md_status","bgCol","txtCol","sendForReject","msg","payload","markdown_data","state","selectedRows","map","item","i","arrLength","length","msgStr","scenario","md_plan","push","markdown_id","update_status","sendForApproval","then","resp","data","successMsg","join","info","autoClose","hideProgressBar","getMarkdowns","setState","catch","err","error","message","sendForApprove","onActionSelection","rowData","foundEle","find","remove","onScenarioSelection","onHandleSelect","selOptions","headers","columns","metric","forEach","newTableCols","filter","a","accessor","spliceAt","splice","Header","label","Aggregated","accessorName","Cell","parentId","Math","floor","parentRow","rows","toString","selectedItems","onHandleCheckBox","e","index","target","checked","selLabels","indexOf","labels","tempArr","getColumnHeaders","labelColumns","Object","keys","options","columnOptions","selectedLabel","selectedItemsClone","newSelectedItems","labelArr","includes","mandatoryFiltersVal","selectedHierarchy1","selectedHierarchy2","startDate","endDate","onFilter","filters","hierarchy1","hierarchy2","hierarchy3","selectedHierarchy3","hierarchy4","selectedHierarchy4","hierarchy5","selectedHierarchy5","hierarchy6","selectedHierarchy6","hierarchy7","selectedHierarchy7","hierarchy8","selectedHierarchy8","tiers","selectedStores","format","columnHeaders","defaultHeader","default","setDefaultColDef","col","toggle","setDefaultLabel","setDefaultColumnOptions","setDefaultColumnOptions1","setDefaultItems","colHeaders","labelArray","diff","A","B","groupByBoundary","mdPlan","mainGrp","isSelected","checkboxDisabled","canExpand","getToggleRowSelectedProps","attributes","firstCardText","firstCardFirstValue","firstCardSecondValue","secondCardFirstValue","secondCardSecondValue","thirdCardFirstValue","thirdCardSecondValue","fourthCardFirstValue","fourthCardSecondValue","cardWeekText","cardMonthText","setMarkDowns","setMDColumnHeaders","getOverlayLoaderState","showAlertWarning","showAlertSuccess","marginTop","type","isMandatory","isMultiple","finalizeMarkdownData","padding","updateMyData","style","backgroundColor","margin","borderRadius","mapStateToProps","store","draftStatusReducer","markdowns","loaderReducer","overlayLoaderState","getMetricOptions","finalizeReducer","metricOptions","filtersReducer","mapActionToProps","ColSelBtn","div"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAO,6BAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,cAAP,MAA2B,wCAA3B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,qBAAP,MAAkC,qDAAlC;AACA,SAASC,YAAT,EAAuBC,kBAAvB,EAA2CC,WAA3C,QAA8D,wBAA9D;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,GAAxC,EAA6C;AAC3C,MAAIC,IAAI,GAAGD,GAAG,IAAIA,GAAG,IAAI,CAAd,GAAkBA,GAAlB,GAAwBF,KAAK,CAACC,KAAzC;AACA,MAAIG,MAAM,GAAGF,GAAG,IAAIA,GAAG,IAAI,CAAd,GAAkB;AAAED,IAAAA,KAAK,EAAEC;AAAT,GAAlB,GAAmCF,KAAhD;;AACA,MACEC,KAAK,IAAI,WAAT,IACAA,KAAK,IAAI,gBADT,IAEAA,KAAK,IAAI,mBAFT,IAGAA,KAAK,IAAI,wBAJX,EAKE;AACA,WAAOE,IAAI,IAAIA,IAAI,IAAI,CAAhB,GAAoBL,WAAW,CAACM,MAAD,CAA/B,GAA0C,GAAjD;AACD,GAPD,MAOO,IAAIH,KAAK,IAAI,aAAT,IAA0BA,KAAK,IAAI,qBAAvC,EAA8D;AACnE,WAAOE,IAAI,IAAIA,IAAI,IAAI,CAAhB,GAAoBP,YAAY,CAACQ,MAAD,CAAhC,GAA2C,GAAlD;AACD,GAFM,MAEA,IACLH,KAAK,IAAI,UAAT,IACAA,KAAK,IAAI,KADT,IAEAA,KAAK,IAAI,SAFT,IAGAA,KAAK,IAAI,KAHT,IAIAA,KAAK,IAAI,aAJT,IAKAA,KAAK,IAAI,kBALT,IAMAA,KAAK,IAAI,aANT,IAOAA,KAAK,IAAI,iBARJ,EASL;AACA,WAAOE,IAAI,IAAIA,IAAI,IAAI,CAAhB,GAAoBN,kBAAkB,CAACO,MAAD,CAAtC,GAAiD,GAAxD;AACD;;AACD,SAAO,GAAP;AACD;;IACKC,gB;;;;;AACJ,4BAAYL,MAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAMA,MAAN;;AADiB,UA4BnBM,eA5BmB,GA4BD,UAACC,MAAD,EAASC,KAAT,EAAmB;AACnC,cAAQD,MAAR;AACE,aAAK,MAAL;AACE,iBAAOC,KAAK,CAACC,IAAb;;AACF,aAAK,QAAL;AACE,iBAAOD,KAAK,CAACE,MAAb;;AACF,aAAK,KAAL;AACE,iBAAOF,KAAK,CAACG,GAAb;;AACF;AACE;AARJ;AAUD,KAvCkB;;AAAA,UAyCnBC,MAzCmB,GAyCV,UAACC,QAAD,EAAc;AACrB,UAAIA,QAAQ,CAACC,MAAT,CAAgBC,EAAhB,KAAuB,WAA3B,EAAwC,IAAIR,MAAM,GAAGM,QAAQ,CAACG,GAAT,CAAaC,QAAb,CAAsBC,SAAnC;AACxC,UAAIC,KAAK,GAAG;AACVV,QAAAA,IAAI,EAAE,SADI;AAEVC,QAAAA,MAAM,EAAE,SAFE;AAGVC,QAAAA,GAAG,EAAE;AAHK,OAAZ;AAKA,aAAO,MAAKL,eAAL,CAAqBC,MAArB,EAA6BY,KAA7B,CAAP;AACD,KAjDkB;;AAAA,UAkDnBC,MAlDmB,GAkDV,UAACP,QAAD,EAAc;AACrB,UAAIA,QAAQ,CAACC,MAAT,CAAgBC,EAAhB,KAAuB,WAA3B,EAAwC,IAAIR,MAAM,GAAGM,QAAQ,CAACG,GAAT,CAAaC,QAAb,CAAsBC,SAAnC;AACxC,UAAIE,MAAM,GAAG;AACXX,QAAAA,IAAI,EAAE,SADK;AAEXC,QAAAA,MAAM,EAAE,SAFG;AAGXC,QAAAA,GAAG,EAAE;AAHM,OAAb;AAKA,aAAO,MAAKL,eAAL,CAAqBC,MAArB,EAA6Ba,MAA7B,CAAP;AACD,KA1DkB;;AAAA,UA2DnBC,aA3DmB,GA2DH,YAAM;AACpB,UAAIC,GAAG,GAAG,EAAV;AACA,UAAIC,OAAO,GAAG;AACZC,QAAAA,aAAa,EAAE,MAAKC,KAAL,CAAWC,YAAX,CAAwBC,GAAxB,CAA4B,UAACC,IAAD,EAAOC,CAAP,EAAa;AACtD,cAAIC,SAAS,GAAG,MAAKL,KAAL,CAAWC,YAAX,CAAwBK,MAAxC;AACA,cAAIC,MAAM,uBAAgBJ,IAAI,CAACK,QAArB,wBAA2CL,IAAI,CAACM,OAAhD,cACRL,CAAC,KAAKC,SAAS,GAAG,CAAlB,GAAsB,OAAtB,GAAgCD,CAAC,KAAKC,SAAS,GAAG,CAAlB,GAAsB,EAAtB,GAA2B,IADnD,CAAV;AAGAR,UAAAA,GAAG,CAACa,IAAJ,CAASH,MAAT;AACA,iBAAO;AACLjB,YAAAA,EAAE,EAAEa,IAAI,CAACQ,WADJ;AAELH,YAAAA,QAAQ,EAAEL,IAAI,CAACK;AAFV,WAAP;AAID,SAVc,CADH;AAYZI,QAAAA,aAAa,EAAE;AAZH,OAAd;;AAcA,YAAKrC,KAAL,CACGsC,eADH,CACmBf,OADnB,EAEGgB,IAFH,CAEQ,UAACC,IAAD,EAAU;AACd,YAAIA,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUlC,MAAV,IAAoB,IAAhC,EAAsC;AACpC,cAAImC,UAAU,aAAMpB,GAAG,CAACqB,IAAJ,CAAS,EAAT,CAAN,uBAAd;AACA/D,UAAAA,KAAK,CAACgE,IAAN,CAAWF,UAAX,EAAuB;AACrBG,YAAAA,SAAS,EAAE,KADU;AAErBC,YAAAA,eAAe,EAAE;AAFI,WAAvB;;AAIA,gBAAK9C,KAAL,CAAW+C,YAAX,CAAwB;AAAExC,YAAAA,MAAM,EAAE;AAAV,WAAxB;;AACA,gBAAKyC,QAAL,CAAc;AACZtB,YAAAA,YAAY,EAAE;AADF,WAAd;AAGD;AACF,OAdH,EAeGuB,KAfH,CAeS,UAACC,GAAD,EAAS;AACdtE,QAAAA,KAAK,CAACuE,KAAN,CAAYD,GAAG,CAACE,OAAhB,EAAyB;AACvBP,UAAAA,SAAS,EAAE,KADY;AAEvBC,UAAAA,eAAe,EAAE;AAFM,SAAzB;AAID,OApBH;AAqBD,KAhGkB;;AAAA,UAiGnBO,cAjGmB,GAiGF,YAAM;AACrB,UAAI/B,GAAG,GAAG,EAAV;AACA,UAAIC,OAAO,GAAG;AACZC,QAAAA,aAAa,EAAE,MAAKC,KAAL,CAAWC,YAAX,CAAwBC,GAAxB,CAA4B,UAACC,IAAD,EAAOC,CAAP,EAAa;AACtD,cAAIC,SAAS,GAAG,MAAKL,KAAL,CAAWC,YAAX,CAAwBK,MAAxC;AACA,cAAIC,MAAM,uBAAgBJ,IAAI,CAACK,QAArB,wBAA2CL,IAAI,CAACM,OAAhD,cACRL,CAAC,KAAKC,SAAS,GAAG,CAAlB,GAAsB,OAAtB,GAAgCD,CAAC,KAAKC,SAAS,GAAG,CAAlB,GAAsB,EAAtB,GAA2B,IADnD,CAAV;AAGAR,UAAAA,GAAG,CAACa,IAAJ,CAASH,MAAT;AACA,iBAAO;AACLjB,YAAAA,EAAE,EAAEa,IAAI,CAACQ,WADJ;AAELH,YAAAA,QAAQ,EAAEL,IAAI,CAACK;AAFV,WAAP;AAID,SAVc,CADH;AAYZI,QAAAA,aAAa,EAAE;AAZH,OAAd;;AAeA,YAAKrC,KAAL,CACGsC,eADH,CACmBf,OADnB,EAEGgB,IAFH,CAEQ,UAACC,IAAD,EAAU;AACd,YAAIA,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUlC,MAAV,IAAoB,IAAhC,EAAsC;AACpC,cAAImC,UAAU,aAAMpB,GAAG,CAACqB,IAAJ,CAAS,EAAT,CAAN,qCAAd;AACA/D,UAAAA,KAAK,CAACgE,IAAN,CAAWF,UAAX,EAAuB;AACrBG,YAAAA,SAAS,EAAE,KADU;AAErBC,YAAAA,eAAe,EAAE;AAFI,WAAvB;;AAIA,gBAAK9C,KAAL,CAAW+C,YAAX,CAAwB;AAAExC,YAAAA,MAAM,EAAE;AAAV,WAAxB;;AACA,gBAAKyC,QAAL,CAAc;AACZtB,YAAAA,YAAY,EAAE;AADF,WAAd;AAGD;AACF,OAdH,EAeGuB,KAfH,CAeS,UAACC,GAAD,EAAS;AACdtE,QAAAA,KAAK,CAACuE,KAAN,CAAYD,GAAG,CAACE,OAAhB,EAAyB;AACvBP,UAAAA,SAAS,EAAE,KADY;AAEvBC,UAAAA,eAAe,EAAE;AAFM,SAAzB;AAID,OApBH;AAqBD,KAvIkB;;AAAA,UAwInBQ,iBAxImB,GAwIC,UAACC,OAAD,EAAa;AAAA,UACzB7B,YADyB,GACR,MAAKD,KADG,CACzBC,YADyB;;AAE/B,UAAI8B,QAAQ,GAAGxE,CAAC,CAACyE,IAAF,CAAO/B,YAAP,EAAqB;AAAEU,QAAAA,WAAW,EAAEmB,OAAO,CAACtC,QAAR,CAAiBmB;AAAhC,OAArB,CAAf;;AACA,UAAIoB,QAAJ,EAAc;AACZxE,QAAAA,CAAC,CAAC0E,MAAF,CAAShC,YAAT,EAAuB,UAACE,IAAD;AAAA,iBAAUA,IAAI,CAACQ,WAAL,KAAqBmB,OAAO,CAACtC,QAAR,CAAiBmB,WAAhD;AAAA,SAAvB;AACD,OAFD,MAEO;AACLV,QAAAA,YAAY,CAACS,IAAb,CAAkBoB,OAAO,CAACtC,QAA1B;AACD;;AACD,YAAK+B,QAAL,CAAc;AACZtB,QAAAA,YAAY,EAAZA;AADY,OAAd;AAGD,KAnJkB;;AAAA,UAqJnBiC,mBArJmB,GAqJG,UAACJ,OAAD,EAAa;AAAA,UAC3B7B,YAD2B,GACV,MAAKD,KADK,CAC3BC,YAD2B;;AAEjC,UAAI8B,QAAQ,GAAGxE,CAAC,CAACyE,IAAF,CAAO/B,YAAP,EAAqB;AAAEU,QAAAA,WAAW,EAAEmB,OAAO,CAACtC,QAAR,CAAiBmB;AAAhC,OAArB,CAAf;;AACA,UAAIoB,QAAJ,EAAc;AACZxE,QAAAA,CAAC,CAAC0E,MAAF,CAAShC,YAAT,EAAuB,UAACE,IAAD;AAAA,iBAAUA,IAAI,CAACQ,WAAL,KAAqBmB,OAAO,CAACtC,QAAR,CAAiBmB,WAAhD;AAAA,SAAvB;AACD,OAFD,MAEO;AACLV,QAAAA,YAAY,CAACS,IAAb,CAAkBoB,OAAO,CAACtC,QAA1B;AACD;;AACD,YAAK+B,QAAL,CAAc;AACZtB,QAAAA,YAAY,EAAZA;AADY,OAAd;AAGD,KAhKkB;;AAAA,UAiKnBkC,cAjKmB,GAiKF,UAACC,UAAD,EAAgB;AAC/B,UAAIC,OAAO,GAAG9E,CAAC,CAACC,SAAF,CAAY,MAAKwC,KAAL,CAAWsC,OAAvB,CAAd;;AACA/E,MAAAA,CAAC,CAAC0E,MAAF,CAASI,OAAT,EAAkB,UAAClC,IAAD;AAAA,eAAUA,IAAI,CAACoC,MAAf;AAAA,OAAlB;;AACAH,MAAAA,UAAU,CAACI,OAAX,CAAmB,UAACrC,IAAD,EAAU;AAC3B,YAAIsC,YAAY,GAAGJ,OAAO,CAACK,MAAR,CAAe,UAACC,CAAD,EAAO;AACvC,iBAAOA,CAAC,CAACC,QAAF,KAAezC,IAAI,CAAC3B,KAA3B;AACD,SAFkB,CAAnB;;AAGA,YAAIiE,YAAY,CAACnC,MAAb,IAAuB,CAA3B,EAA8B;AAC5B,cAAIuC,QAAQ,GAAGR,OAAO,CAAC/B,MAAR,GAAiB,CAAhC;AACA+B,UAAAA,OAAO,CAACS,MAAR,CAAeD,QAAf,EAAyB,CAAzB,EAA4B;AAC1BE,YAAAA,MAAM,EAAE5C,IAAI,CAAC6C,KADa;AAE1BJ,YAAAA,QAAQ,EAAEzC,IAAI,CAAC3B,KAFW;AAG1ByE,YAAAA,UAAU,EAAE,oBAAC1E,KAAD,EAAW;AACrB,kBAAI2E,YAAY,qBAAc/C,IAAI,CAAC3B,KAAnB,CAAhB;AACA,kBAAIC,GAAG,GAAGF,KAAK,CAACgB,GAAN,CAAUC,QAAV,CAAmB0D,YAAnB,CAAV;AACA,qBAAO5E,gBAAgB,CAACC,KAAD,EAAQ2E,YAAR,EAAsBzE,GAAtB,CAAvB;AACD,aAPyB;AAS1B0E,YAAAA,IAAI,EAAE,cAAC5E,KAAD,EAAW;AACf,kBAAI6E,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAW/E,KAAK,CAACgB,GAAN,CAAUD,EAArB,CAAf;;AACA,kBAAIiE,SAAS,GAAGhG,CAAC,CAACyE,IAAF,CAAOzD,KAAK,CAACiF,IAAb,EAAmB;AAAElE,gBAAAA,EAAE,EAAE8D,QAAQ,CAACK,QAAT;AAAN,eAAnB,CAAhB;;AACA,qBAAOnF,gBAAgB,CAACC,KAAD,EAAQ4B,IAAI,CAAC3B,KAAb,CAAvB;AACD,aAbyB;AAc1B+D,YAAAA,MAAM,EAAE;AAdkB,WAA5B;AAgBD;AACF,OAvBD;;AAwBA,YAAKhB,QAAL,CAAc;AACZe,QAAAA,OAAO,EAAED,OADG;AAEZqB,QAAAA,aAAa,EAAEtB;AAFH,OAAd;AAID,KAhMkB;;AAAA,UAkMnBuB,gBAlMmB,GAkMA,UAACC,CAAD,EAAIZ,KAAJ,EAAWa,KAAX,EAAqB;AACtC;AACA,UAAID,CAAC,CAACE,MAAF,CAASC,OAAb,EAAsB;AACpB,YAAI,MAAK/D,KAAL,CAAWgE,SAAX,CAAqBC,OAArB,CAA6BjB,KAA7B,MAAwC,CAAC,CAA7C,EAAgD;AAC9C,cAAIkB,MAAM,gCAAO,MAAKlE,KAAL,CAAWgE,SAAlB,IAA6BhB,KAA7B,EAAV;AACA,cAAImB,OAAO,GAAG,EAAd;AACAD,UAAAA,MAAM,CAAC1B,OAAP,CAAe,UAACQ,KAAD,EAAW;AACxB,gBAAIV,OAAO,GAAG,MAAK/D,KAAL,CAAW6F,gBAAX,CAA4BpB,KAA5B,CAAd;AACA,gBAAIqB,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYjC,OAAZ,CAAnB;AACA,gBAAIkC,OAAO,GAAGH,YAAY,CAACnE,GAAb,CAAiB,UAAC8C,KAAD,EAAW;AACxC,qBAAO;AACLA,gBAAAA,KAAK,EAAEA,KADF;AAELxE,gBAAAA,KAAK,EAAE8D,OAAO,CAACU,KAAD;AAFT,eAAP;AAID,aALa,CAAd;AAMAmB,YAAAA,OAAO,CAACzD,IAAR,OAAAyD,OAAO,qBAASK,OAAT,EAAP;AACD,WAVD;;AAWA,gBAAKjD,QAAL,CAAc;AACZyC,YAAAA,SAAS,EAAEE,MADC;AAEZO,YAAAA,aAAa,EAAEN;AAFH,WAAd;AAID;AACF,OApBD,MAoBO;AACL;AACA,YAAIN,MAAK,GAAG,MAAK7D,KAAL,CAAWgE,SAAX,CAAqBC,OAArB,CAA6BjB,KAA7B,CAAZ;;AACA,YAAIa,MAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,cAAIa,aAAa,GAAGnH,CAAC,CAACC,SAAF,CAAY,MAAKwC,KAAL,CAAWgE,SAAvB,CAApB;;AACAU,UAAAA,aAAa,CAAC5B,MAAd,CAAqBe,MAArB,EAA4B,CAA5B;AACA,cAAIM,QAAO,GAAG,EAAd;AACAO,UAAAA,aAAa,CAAClC,OAAd,CAAsB,UAACQ,KAAD,EAAW;AAC/B,gBAAIV,OAAO,GAAG,MAAK/D,KAAL,CAAW6F,gBAAX,CAA4BpB,KAA5B,CAAd;AACA,gBAAIqB,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYjC,OAAZ,CAAnB;AACA,gBAAIkC,OAAO,GAAGH,YAAY,CAACnE,GAAb,CAAiB,UAAC8C,KAAD,EAAW;AACxC,qBAAO;AACLA,gBAAAA,KAAK,EAAEA,KADF;AAELxE,gBAAAA,KAAK,EAAE8D,OAAO,CAACU,KAAD;AAFT,eAAP;AAID,aALa,CAAd;;AAMAmB,YAAAA,QAAO,CAACzD,IAAR,OAAAyD,QAAO,qBAASK,OAAT,EAAP;AACD,WAVD;;AAYA,cAAIG,kBAAkB,GAAGpH,CAAC,CAACC,SAAF,CAAY,MAAKwC,KAAL,CAAW0D,aAAvB,CAAzB;;AACA,cAAIkB,gBAAgB,GAAG,EAAvB;AACA,cAAIC,QAAQ,GAAGP,MAAM,CAACC,IAAP,CAAY,MAAKhG,KAAL,CAAW6F,gBAAX,CAA4BpB,KAA5B,CAAZ,CAAf;AACA2B,UAAAA,kBAAkB,CAACnC,OAAnB,CAA2B,UAACrC,IAAD,EAAU;AACnC,gBAAI,CAAC0E,QAAQ,CAACC,QAAT,CAAkB3E,IAAI,CAAC6C,KAAvB,CAAL,EAAoC;AAClC4B,cAAAA,gBAAgB,CAAClE,IAAjB,CAAsBP,IAAtB;AACD;AACF,WAJD;;AAMA,gBAAKgC,cAAL,CAAoByC,gBAApB;;AACA,gBAAKrD,QAAL,CAAc;AACZyC,YAAAA,SAAS,EAAEU,aADC;AAEZD,YAAAA,aAAa,EAAEN,QAFH;AAGZT,YAAAA,aAAa,EAAEkB;AAHH,WAAd;AAKD;AACF;AACF,KA5PkB;;AAAA,UA6PnBG,mBA7PmB,GA6PG,YAAM;AAC1B,aACE,MAAKxG,KAAL,CAAWyG,kBAAX,IACA,MAAKzG,KAAL,CAAW0G,kBAAX,CAA8B3E,MAD9B,IAEA,MAAK/B,KAAL,CAAW2G,SAFX,IAGA,MAAK3G,KAAL,CAAW4G,OAJb;AAMD,KApQkB;;AAAA,UAqQnBC,QArQmB,GAqQR,YAAM;AACf,UAAI,CAAC,MAAKL,mBAAL,EAAL,EAAiC;AAC/B5H,QAAAA,KAAK,CAACuE,KAAN,oCAA+C;AAC7CN,UAAAA,SAAS,EAAE,KADkC;AAE7CC,UAAAA,eAAe,EAAE;AAF4B,SAA/C;AAIA;AACD;;AACD,UAAIvB,OAAO,GAAG;AACZuF,QAAAA,OAAO,EAAE;AACPC,UAAAA,UAAU,EAAE,MAAK/G,KAAL,CAAWyG,kBADhB;AAEPO,UAAAA,UAAU,EAAE,MAAKhH,KAAL,CAAW0G,kBAFhB;AAGPO,UAAAA,UAAU,EAAE,MAAKjH,KAAL,CAAWkH,kBAHhB;AAIPC,UAAAA,UAAU,EAAE,MAAKnH,KAAL,CAAWoH,kBAJhB;AAKPC,UAAAA,UAAU,EAAE,MAAKrH,KAAL,CAAWsH,kBALhB;AAMPC,UAAAA,UAAU,EAAE,MAAKvH,KAAL,CAAWwH,kBANhB;AAOPC,UAAAA,UAAU,EAAE,MAAKzH,KAAL,CAAW0H,kBAPhB;AAQPC,UAAAA,UAAU,EAAE,MAAK3H,KAAL,CAAW4H,kBARhB;AASPC,UAAAA,KAAK,EAAE,MAAK7H,KAAL,CAAW8H;AATX,SADG;AAYZnB,QAAAA,SAAS,EAAE,MAAK3G,KAAL,CAAW2G,SAAX,GAAuBrH,MAAM,CAAC,MAAKU,KAAL,CAAW2G,SAAZ,CAAN,CAA6BoB,MAA7B,CAAoC,YAApC,CAAvB,GAA2E,IAZ1E;AAaZnB,QAAAA,OAAO,EAAE,MAAK5G,KAAL,CAAW4G,OAAX,GAAqBtH,MAAM,CAAC,MAAKU,KAAL,CAAW4G,OAAZ,CAAN,CAA2BmB,MAA3B,CAAkC,YAAlC,CAArB,GAAuE,IAbpE;AAcZxH,QAAAA,MAAM,EAAE;AAdI,OAAd;;AAgBA,YAAKwC,YAAL,CAAkBxB,OAAlB;AACD,KA9RkB;;AAAA,UAgSnBwB,YAhSmB,GAgSJ,UAACxB,OAAD,EAAa;AAC1B,YAAKvB,KAAL,CAAW+C,YAAX,CAAwBxB,OAAxB,EAAiCgB,IAAjC,CAAsC,UAACC,IAAD,EAAU;AAC9C,YAAIA,IAAI,CAACwF,aAAL,IAAsBjC,MAAM,CAACC,IAAP,CAAYxD,IAAI,CAACwF,aAAjB,EAAgCjG,MAA1D,EAAkE;AAAA;AAChE,gBAAIkG,aAAa,GAAGlC,MAAM,CAACC,IAAP,CAAYxD,IAAI,CAACwF,aAAL,CAAmBE,OAA/B,CAApB;AAEA,gBAAIC,gBAAgB,GAAGpJ,MAAM,GAAGoF,MAAT,CACrB,UAACiE,GAAD;AAAA,qBACEH,aAAa,CAAC1B,QAAd,CAAuB6B,GAAG,CAAC5D,MAA3B,KACA4D,GAAG,CAAC5D,MAAJ,KAAe,aADf,IAEA4D,GAAG,CAAC5D,MAAJ,KAAe,SAFf,IAGA4D,GAAG,CAACrH,EAAJ,KAAW,UAHX,IAIA;AACC,oBAAKU,KAAL,CAAW4G,MAAX,IAAqBD,GAAG,CAAC/D,QAAJ,KAAiB,QANzC;AAAA,aADqB,CAAvB;AASA,gBAAIiE,eAAe,GAAG,EAAtB;AACA,gBAAIC,uBAAuB,GAAG,EAA9B;AACA,gBAAIC,wBAAwB,GAAG,EAA/B;AACA,gBAAIC,eAAe,GAAG,EAAtB;;AACA,gBAAIC,UAAU,GAAG1J,CAAC,CAACC,SAAF,CAAYuD,IAAI,CAACwF,aAAjB,CAAjB;;AACA,gBAAIrC,MAAM,GAAGI,MAAM,CAACC,IAAP,CAAY0C,UAAZ,CAAb;AACA/C,YAAAA,MAAM,CAACpB,MAAP,CAAcoB,MAAM,CAACD,OAAP,CAAe,OAAf,CAAd,EAAuC,CAAvC;AACAC,YAAAA,MAAM,CAACpB,MAAP,CAAcoB,MAAM,CAACD,OAAP,CAAe,SAAf,CAAd,EAAyC,CAAzC;;AAnBgE;AAoB3D,kBAAMjB,KAAK,cAAX;AACH,kBAAIkE,UAAU,GAAG5C,MAAM,CAACC,IAAP,CAAYxD,IAAI,CAACwF,aAAL,CAAmBvD,KAAnB,CAAZ,CAAjB;;AACA,uBAASmE,IAAT,GAAiD;AAAA,oBAAnCC,CAAmC,uEAA/BF,UAA+B;AAAA,oBAAnBG,CAAmB,uEAAfb,aAAe;AAC/C,uBAAOY,CAAC,CAAC1E,MAAF,CAAS,UAAUC,CAAV,EAAa;AAC3B,yBAAO0E,CAAC,CAACpD,OAAF,CAAUtB,CAAV,MAAiB,CAAC,CAAzB;AACD,iBAFM,CAAP;AAGD;;AAED,kBAAIwE,IAAI,GAAG7G,MAAX,EAAmB;AACjBwG,gBAAAA,uBAAuB,CAACpG,IAAxB,OAAAoG,uBAAuB,qBAASxC,MAAM,CAACC,IAAP,CAAYxD,IAAI,CAACwF,aAAL,CAAmBvD,KAAnB,CAAZ,CAAT,EAAvB;AACA+D,gBAAAA,wBAAwB,CAACrG,IAAzB,CAA8BK,IAAI,CAACwF,aAAL,CAAmBvD,KAAnB,CAA9B;AACAgE,gBAAAA,eAAe,CAACtG,IAAhB,OAAAsG,eAAe,qBAASG,IAAI,EAAb,EAAf;AACAN,gBAAAA,eAAe,CAACnG,IAAhB,CAAqBsC,KAArB;AACD;AAjC6D;;AAoBhE,uCAAoBkB,MAApB,6BAA4B;AAAA;AAc3B;;AACD,gBAAIM,OAAO,GAAGsC,uBAAuB,CAAC5G,GAAxB,CAA4B,UAAC8C,KAAD,EAAW;AACnD,kBAAIhB,IAAI,GAAG+E,wBAAwB,IAAIA,wBAAwB,CAAC,CAAD,CAAxB,CAA4B/D,KAA5B,CAAvC;AACA,qBAAO;AACLA,gBAAAA,KAAK,EAAEA,KADF;AAELxE,gBAAAA,KAAK,EAAEwD;AAFF,eAAP;AAID,aANa,CAAd;AAOA,gBAAI0B,aAAa,GAAGsD,eAAe,CAAC9G,GAAhB,CAAoB,UAAC8C,KAAD,EAAW;AACjD,kBAAIhB,IAAI,GAAG+E,wBAAwB,IAAIA,wBAAwB,CAAC,CAAD,CAAxB,CAA4B/D,KAA5B,CAAvC;AACA,qBAAO;AACLA,gBAAAA,KAAK,EAAEA,KADF;AAELxE,gBAAAA,KAAK,EAAEwD;AAFF,eAAP;AAID,aANmB,CAApB;AAOA0E,YAAAA,gBAAgB,CAAChG,IAAjB,CAAsB;AACpBpB,cAAAA,EAAE,EAAE,WADgB;AAEpBgI,cAAAA,eAAe,EAAE,IAFG;AAGpBvE,cAAAA,MAAM,EAAE,SAHY;AAIpB;AACAI,cAAAA,IAAI,EAAE,cAAC5E,KAAD,EAAW;AAAA,oBACTgB,GADS,GACKhB,KADL,CACTgB,GADS;AAAA,oBACJiE,IADI,GACKjF,KADL,CACJiF,IADI;;AAEf,oBAAI+D,MAAM,GAAGhI,GAAG,CAACC,QAAJ,CAAamB,WAA1B;AAAA,oBACE6G,OAAO,GAAGjK,CAAC,CAACyE,IAAF,CAAOwB,IAAP,EAAa;AACrBiE,kBAAAA,UAAU,EAAE,IADS;AAErBjI,kBAAAA,QAAQ,EAAE;AAAEmB,oBAAAA,WAAW,EAAE4G;AAAf;AAFW,iBAAb,CADZ;AAAA,oBAKEG,gBAAgB,GAAGF,OAAO,IAAI,CAACjI,GAAG,CAACkI,UAAhB,GAA6B,IAA7B,GAAoC,KALzD;;AAOA,uBAAOlI,GAAG,CAACoI,SAAJ,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,oBAAC,qBAAD;AACE,kBAAA,GAAG,EAAEpI,GAAG,CAACD,EADX;AAEE,kBAAA,OAAO,EAAE,mBAAM;AACb,0BAAK4C,mBAAL,CAAyB3C,GAAzB;AACD,mBAJH;AAKE,kBAAA,QAAQ,EAAEmI;AALZ,mBAMMnI,GAAG,CAACqI,yBAAJ,EANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADK,GAWH,IAXJ;AAYD;AA1BmB,aAAtB;;AA4BA,kBAAKrG,QAAL,CAAc;AACZe,cAAAA,OAAO,EAAEoE,gBADG;AAEZ1C,cAAAA,SAAS,EAAE6C,eAFC;AAGZnD,cAAAA,aAAa,EAAEA,aAHH;AAIZe,cAAAA,aAAa,EAAED;AAJH,aAAd;AA7EgE;AAmFjE;AACF,OArFD;AAsFD,KAvXkB;;AAEjB,UAAKxE,KAAL,GAAa;AACX6H,MAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,OAAX,EAAoB,WAApB,CADD;AAEXC,MAAAA,aAAa,EAAE,oBAFJ;AAGXC,MAAAA,mBAAmB,EAAE,KAHV;AAIXC,MAAAA,oBAAoB,EAAE,KAJX;AAKXC,MAAAA,oBAAoB,EAAE,KALX;AAMXC,MAAAA,qBAAqB,EAAE,KANZ;AAOXC,MAAAA,mBAAmB,EAAE,IAPV;AAQXC,MAAAA,oBAAoB,EAAE,KARX;AASXC,MAAAA,oBAAoB,EAAE,KATX;AAUXC,MAAAA,qBAAqB,EAAE,OAVZ;AAWXC,MAAAA,YAAY,EAAE,WAXH;AAYXC,MAAAA,aAAa,EAAE,YAZJ;AAaX9E,MAAAA,aAAa,EAAE,EAbJ;AAcXe,MAAAA,aAAa,EAAE,EAdJ;AAeXT,MAAAA,SAAS,EAAE,EAfA;AAgBX1B,MAAAA,OAAO,EAAE,EAhBE;AAiBXrC,MAAAA,YAAY,EAAE;AAjBH,KAAb;AAFiB;AAqBlB;;;;2CAEsB;AACrB,WAAK1B,KAAL,CAAWkK,YAAX,CAAwB,EAAxB;AACA,WAAKlK,KAAL,CAAWmK,kBAAX,CAA8B,EAA9B;AACD;;;AA8VD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAES;AAAA;;AACP,aACE,oBAAC,cAAD;AAAgB,QAAA,MAAM,EAAE,KAAKnK,KAAL,CAAWoK,qBAAnC;AAA0D,QAAA,OAAO,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAK3I,KAAL,CAAW4I,gBAAX,GACC,oBAAC,YAAD;AACE,QAAA,OAAO,EAAC,+BADV;AAEE,QAAA,IAAI,EAAE,KAAK5I,KAAL,CAAW4I,gBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAKG,IANN,EAOG,KAAK5I,KAAL,CAAW6I,gBAAX,GACC,oBAAC,YAAD;AACE,QAAA,OAAO,EAAE,qBAAqB,KAAK7I,KAAL,CAAW2B,OAD3C;AAEE,QAAA,IAAI,EAAE,KAAK3B,KAAL,CAAW6I,gBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAKG,IAZN,CADF,EAeE;AAAK,QAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,uCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCACyB;AAAM,QAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADzB,CADF,CADF,EAME;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,SAAS,EAAE;AADN,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAYE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AACE,QAAA,QAAQ,EAAE,KAAK1D,QADjB;AAEE,QAAA,MAAM,MAFR;AAGE,QAAA,SAAS,MAHX;AAIE,QAAA,SAAS,EAAE;AAEP2D,UAAAA,IAAI,EAAE,YAFC;AAGPC,UAAAA,WAAW,EAAE,IAHN;AAIPC,UAAAA,UAAU,EAAE;AAJL,0BAKM,IALN,GAOT;AACEF,UAAAA,IAAI,EAAE,YADR;AAEEE,UAAAA,UAAU,EAAE,IAFd;AAGED,UAAAA,WAAW,EAAE;AAHf,SAPS,EAYT;AACED,UAAAA,IAAI,EAAE,YADR;AAEEE,UAAAA,UAAU,EAAE;AAFd,SAZS,EAgBT;AACEF,UAAAA,IAAI,EAAE,YADR;AAEEE,UAAAA,UAAU,EAAE;AAFd,SAhBS,EAoBT;AACEF,UAAAA,IAAI,EAAE,YADR;AAGEE,UAAAA,UAAU,EAAE;AAHd,SApBS,EAyBT;AACEF,UAAAA,IAAI,EAAE,YADR;AAEEE,UAAAA,UAAU,EAAE;AAFd,SAzBS,EA6BT;AACEF,UAAAA,IAAI,EAAE,YADR;AAEEE,UAAAA,UAAU,EAAE;AAFd,SA7BS,EAiCT;AACEF,UAAAA,IAAI,EAAE,YADR;AAEEE,UAAAA,UAAU,EAAE;AAFd,SAjCS,CAJb;AA0CE,QAAA,mBAAmB,EAAE,IA1CvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAZF,CAfF,EA8IG,KAAK1K,KAAL,CAAW2K,oBAAX,IAAmC,KAAK3K,KAAL,CAAW2K,oBAAX,CAAgC5I,MAAnE,GACC;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAK/B,KAAL,CAAW6F,gBAAX,IAA+BE,MAAM,CAACC,IAAP,CAAY,KAAKhG,KAAL,CAAW6F,gBAAvB,EAAyC9D,MAAxE,IACC,oBAAC,eAAD;AACE,QAAA,gBAAgB,EAAE,KAAKqD,gBADzB;AAEE,QAAA,aAAa,EAAE,KAAKpF,KAAL,CAAW6F,gBAF5B;AAGE,QAAA,cAAc,EAAE,KAAKjC,cAHvB;AAIE,QAAA,aAAa,EAAE,KAAKnC,KAAL,CAAWyE,aAJ5B;AAKE,QAAA,aAAa,EAAE,KAAKzE,KAAL,CAAW0D,aAL5B;AAME,QAAA,SAAS,EAAE,KAAK1D,KAAL,CAAWgE,SANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAWE;AAAK,QAAA,KAAK,EAAE;AAAEmF,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,QAAQ,EAAE,CAAC,KAAKnJ,KAAL,CAAWC,YAAX,CAAwBK,MAFrC;AAGE,QAAA,OAAO,EAAE,KAAKsB,cAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,UAQE;AACE,QAAA,QAAQ,EAAE,CAAC,KAAK5B,KAAL,CAAWC,YAAX,CAAwBK,MADrC;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAGE,QAAA,OAAO,EAAE,KAAKV,aAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,CAXF,CADF,EA4BE,oBAAC,SAAD;AACE,QAAA,OAAO,EAAE,KAAKI,KAAL,CAAWsC,OADtB;AAEE,QAAA,MAAM,EAAE,IAFV,CAGE;AAHF;AAIE,QAAA,IAAI,EAAE,KAAK/D,KAAL,CAAW2K,oBAJnB;AAKE,QAAA,YAAY,EAAE,KAAKE,YALrB,CAME;AANF;AAOE,QAAA,YAAY,EAAE,IAPhB;AAQE,QAAA,cAAc,EAAE,wBAAC/J,MAAD;AAAA,iBAAa,CAC3B;AAD2B,WAAb;AAAA,SARlB;AAWE,QAAA,YAAY,EAAE,sBAACD,QAAD;AAAA,iBAAe;AAC3BiK,YAAAA,KAAK,EAAE;AACLC,cAAAA,eAAe,EAAE,MAAI,CAACnK,MAAL,CAAYC,QAAZ,CADZ;AAELL,cAAAA,KAAK,EAAE,MAAI,CAACY,MAAL,CAAYP,QAAZ,CAFF;AAGL;AACAmK,cAAAA,MAAM,EAAE,SAJH;AAKLC,cAAAA,YAAY,EAAE;AALT;AADoB,WAAf;AAAA,SAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5BF,CADD,GAoDC,oBAAC,MAAD;AAAQ,QAAA,WAAW,EAAC,+CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlMJ,CADF,CADF;AAyMD;;;;EAznB4B3M,S;;AA4nB/B,IAAM4M,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLR,IAAAA,oBAAoB,EAAEQ,KAAK,CAACC,kBAAN,CAAyBC,SAD1C;AAELjB,IAAAA,qBAAqB,EAAEe,KAAK,CAACG,aAAN,CAAoBC,kBAFtC;AAGL1F,IAAAA,gBAAgB,EAAEsF,KAAK,CAACC,kBAAN,CAAyBpD,aAHtC;AAILwD,IAAAA,gBAAgB,EAAEL,KAAK,CAACM,eAAN,CAAsBC,aAJnC;AAKLjF,IAAAA,kBAAkB,EAAE0E,KAAK,CAACQ,cAAN,CAAqBlF,kBALpC;AAMLC,IAAAA,kBAAkB,EAAEyE,KAAK,CAACQ,cAAN,CAAqBjF,kBANpC;AAOLQ,IAAAA,kBAAkB,EAAEiE,KAAK,CAACQ,cAAN,CAAqBzE,kBAPpC;AAQLE,IAAAA,kBAAkB,EAAE+D,KAAK,CAACQ,cAAN,CAAqBvE,kBARpC;AASLE,IAAAA,kBAAkB,EAAE6D,KAAK,CAACQ,cAAN,CAAqBrE,kBATpC;AAULE,IAAAA,kBAAkB,EAAE2D,KAAK,CAACQ,cAAN,CAAqBnE,kBAVpC;AAWLE,IAAAA,kBAAkB,EAAEyD,KAAK,CAACQ,cAAN,CAAqBjE,kBAXpC;AAYLE,IAAAA,kBAAkB,EAAEuD,KAAK,CAACQ,cAAN,CAAqB/D,kBAZpC;AAaLE,IAAAA,cAAc,EAAEqD,KAAK,CAACQ,cAAN,CAAqB7D,cAbhC;AAcLnB,IAAAA,SAAS,EAAEwE,KAAK,CAACQ,cAAN,CAAqBhF,SAd3B;AAeLC,IAAAA,OAAO,EAAEuE,KAAK,CAACQ,cAAN,CAAqB/E;AAfzB,GAAP;AAiBD,CAlBD;;AAoBA,IAAMgF,gBAAgB,GAAG;AACvB7I,EAAAA,YAAY,EAAEjE,cAAc,CAACiE,YADN;AAEvBmH,EAAAA,YAAY,EAAEpL,cAAc,CAACoL,YAFN;AAGvBC,EAAAA,kBAAkB,EAAErL,cAAc,CAACqL,kBAHZ;AAIvB7H,EAAAA,eAAe,EAAExD,cAAc,CAACwD;AAJT,CAAzB;AAMA,eAAe/D,OAAO,CAAC2M,eAAD,EAAkBU,gBAAlB,CAAP,CAA2CpN,UAAU,CAAC6B,gBAAD,CAArD,CAAf;AAEA,IAAMwL,SAAS,GAAGnN,MAAM,CAACoN,GAAV,mBAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Filters from '../../services/filters';\nimport './finalizeMarkdownStyle.css';\nimport styled from 'styled-components';\nimport LoadingOverlay from '../../utils/Loader';\nimport { toast } from 'react-toastify';\nimport NoData from '../noTableData';\nimport FinalizeAction from '../../actions/draftStausFinalizeAction';\n// import Coldef from './coldef';\nimport Coldef from '../draftStatus/draft/coldef';\nimport _ from 'lodash';\nimport cloneDeep from 'clone-deep';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport AlertWarning from '../../utils/AlertMessage/alertDanger';\nimport AlertSuccess from '../../utils/AlertMessage/alertSuccess';\nimport moment from 'moment';\nimport card1Image from '../../images/card1Image.png';\nimport card2Image from '../../images/card2Image.png';\nimport card3Image from '../../images/card3Image.png';\nimport card4Image from '../../images/card4Image.png';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox';\nimport { toPercentage, toDollarWithlDraft, toUnitDraft } from '../../helper/formatter';\n\nfunction FormatterStyling(props, value, val) {\n  let val1 = val || val == 0 ? val : props.value;\n  let props1 = val || val == 0 ? { value: val } : props;\n  if (\n    value == 'pvh_units' ||\n    value == 'markdown_units' ||\n    value == 'overall_pvh_units' ||\n    value == 'overall_markdown_units'\n  ) {\n    return val1 || val1 == 0 ? toUnitDraft(props1) : '-';\n  } else if (value == 'margin_perc' || value == 'overall_margin_perc') {\n    return val1 || val1 == 0 ? toPercentage(props1) : '-';\n  } else if (\n    value == 'revenue$' ||\n    value == 'aur' ||\n    value == 'margin$' ||\n    value == 'aum' ||\n    value == 'overall_aum' ||\n    value == 'overall_revenue$' ||\n    value == 'overall_aur' ||\n    value == 'overall_margin$'\n  ) {\n    return val1 || val1 == 0 ? toDollarWithlDraft(props1) : '-';\n  }\n  return '-';\n}\nclass FinalizeMarkdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      attributes: ['Margin', 'Sales', 'Inventory'],\n      firstCardText: 'KPIs to be decided',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month',\n      selectedItems: [],\n      columnOptions: [],\n      selLabels: [],\n      columns: [],\n      selectedRows: [],\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.setMarkDowns([]);\n    this.props.setMDColumnHeaders({});\n  }\n\n  findStatusColor = (status, color) => {\n    switch (status) {\n      case 'high':\n        return color.high;\n      case 'medium':\n        return color.medium;\n      case 'low':\n        return color.low;\n      default:\n        break;\n    }\n  };\n\n  bgmCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let bgCol = {\n      high: '#F8E8E8',\n      medium: '#FCF3D1',\n      low: '#E8F8F5',\n    };\n    return this.findStatusColor(status, bgCol);\n  };\n  txtCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let txtCol = {\n      high: '#D38485',\n      medium: '#F0C53A',\n      low: '#66CFBA',\n    };\n    return this.findStatusColor(status, txtCol);\n  };\n  sendForReject = () => {\n    let msg = [];\n    let payload = {\n      markdown_data: this.state.selectedRows.map((item, i) => {\n        let arrLength = this.state.selectedRows.length;\n        let msgStr = `Scenario '${item.scenario}' of Plan '${item.md_plan}'${\n          i === arrLength - 2 ? ' and ' : i === arrLength - 1 ? '' : ', '\n        }`;\n        msg.push(msgStr);\n        return {\n          id: item.markdown_id,\n          scenario: item.scenario,\n        };\n      }),\n      update_status: 'rejected',\n    };\n    this.props\n      .sendForApproval(payload)\n      .then((resp) => {\n        if (resp && resp.data.status == true) {\n          let successMsg = `${msg.join('')} has been Rejected`;\n          toast.info(successMsg, {\n            autoClose: 15000,\n            hideProgressBar: true,\n          });\n          this.props.getMarkdowns({ status: 'pending' });\n          this.setState({\n            selectedRows: [],\n          });\n        }\n      })\n      .catch((err) => {\n        toast.error(err.message, {\n          autoClose: 15000,\n          hideProgressBar: true,\n        });\n      });\n  };\n  sendForApprove = () => {\n    let msg = [];\n    let payload = {\n      markdown_data: this.state.selectedRows.map((item, i) => {\n        let arrLength = this.state.selectedRows.length;\n        let msgStr = `Scenario '${item.scenario}' of Plan '${item.md_plan}'${\n          i === arrLength - 2 ? ' and ' : i === arrLength - 1 ? '' : ', '\n        }`;\n        msg.push(msgStr);\n        return {\n          id: item.markdown_id,\n          scenario: item.scenario,\n        };\n      }),\n      update_status: 'approved',\n    };\n\n    this.props\n      .sendForApproval(payload)\n      .then((resp) => {\n        if (resp && resp.data.status == true) {\n          let successMsg = `${msg.join('')} has been Finalized Successfully`;\n          toast.info(successMsg, {\n            autoClose: 15000,\n            hideProgressBar: true,\n          });\n          this.props.getMarkdowns({ status: 'pending' });\n          this.setState({\n            selectedRows: [],\n          });\n        }\n      })\n      .catch((err) => {\n        toast.error(err.message, {\n          autoClose: 15000,\n          hideProgressBar: true,\n        });\n      });\n  };\n  onActionSelection = (rowData) => {\n    let { selectedRows } = this.state;\n    let foundEle = _.find(selectedRows, { markdown_id: rowData.original.markdown_id });\n    if (foundEle) {\n      _.remove(selectedRows, (item) => item.markdown_id === rowData.original.markdown_id);\n    } else {\n      selectedRows.push(rowData.original);\n    }\n    this.setState({\n      selectedRows,\n    });\n  };\n\n  onScenarioSelection = (rowData) => {\n    let { selectedRows } = this.state;\n    let foundEle = _.find(selectedRows, { markdown_id: rowData.original.markdown_id });\n    if (foundEle) {\n      _.remove(selectedRows, (item) => item.markdown_id === rowData.original.markdown_id);\n    } else {\n      selectedRows.push(rowData.original);\n    }\n    this.setState({\n      selectedRows,\n    });\n  };\n  onHandleSelect = (selOptions) => {\n    let headers = _.cloneDeep(this.state.columns);\n    _.remove(headers, (item) => item.metric);\n    selOptions.forEach((item) => {\n      let newTableCols = headers.filter((a) => {\n        return a.accessor === item.value;\n      });\n      if (newTableCols.length == 0) {\n        let spliceAt = headers.length - 1;\n        headers.splice(spliceAt, 0, {\n          Header: item.label,\n          accessor: item.value,\n          Aggregated: (props) => {\n            let accessorName = `overall_${item.value}`;\n            let val = props.row.original[accessorName];\n            return FormatterStyling(props, accessorName, val);\n          },\n\n          Cell: (props) => {\n            let parentId = Math.floor(props.row.id);\n            let parentRow = _.find(props.rows, { id: parentId.toString() });\n            return FormatterStyling(props, item.value);\n          },\n          metric: true,\n        });\n      }\n    });\n    this.setState({\n      columns: headers,\n      selectedItems: selOptions,\n    });\n  };\n\n  onHandleCheckBox = (e, label, index) => {\n    //adding\n    if (e.target.checked) {\n      if (this.state.selLabels.indexOf(label) === -1) {\n        let labels = [...this.state.selLabels, label];\n        let tempArr = [];\n        labels.forEach((label) => {\n          let columns = this.props.getColumnHeaders[label];\n          let labelColumns = Object.keys(columns);\n          let options = labelColumns.map((label) => {\n            return {\n              label: label,\n              value: columns[label],\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selLabels: labels,\n          columnOptions: tempArr,\n        });\n      }\n    } else {\n      //removing\n      let index = this.state.selLabels.indexOf(label);\n      if (index !== -1) {\n        let selectedLabel = _.cloneDeep(this.state.selLabels);\n        selectedLabel.splice(index, 1);\n        let tempArr = [];\n        selectedLabel.forEach((label) => {\n          let columns = this.props.getColumnHeaders[label];\n          let labelColumns = Object.keys(columns);\n          let options = labelColumns.map((label) => {\n            return {\n              label: label,\n              value: columns[label],\n            };\n          });\n          tempArr.push(...options);\n        });\n\n        let selectedItemsClone = _.cloneDeep(this.state.selectedItems);\n        let newSelectedItems = [];\n        let labelArr = Object.keys(this.props.getColumnHeaders[label]);\n        selectedItemsClone.forEach((item) => {\n          if (!labelArr.includes(item.label)) {\n            newSelectedItems.push(item);\n          }\n        });\n\n        this.onHandleSelect(newSelectedItems);\n        this.setState({\n          selLabels: selectedLabel,\n          columnOptions: tempArr,\n          selectedItems: newSelectedItems,\n        });\n      }\n    }\n  };\n  mandatoryFiltersVal = () => {\n    return (\n      this.props.selectedHierarchy1 &&\n      this.props.selectedHierarchy2.length &&\n      this.props.startDate &&\n      this.props.endDate\n    );\n  };\n  onFilter = () => {\n    if (!this.mandatoryFiltersVal()) {\n      toast.error(`Please select mandatory filters`, {\n        autoClose: 15000,\n        hideProgressBar: true,\n      });\n      return;\n    }\n    let payload = {\n      filters: {\n        hierarchy1: this.props.selectedHierarchy1,\n        hierarchy2: this.props.selectedHierarchy2,\n        hierarchy3: this.props.selectedHierarchy3,\n        hierarchy4: this.props.selectedHierarchy4,\n        hierarchy5: this.props.selectedHierarchy5,\n        hierarchy6: this.props.selectedHierarchy6,\n        hierarchy7: this.props.selectedHierarchy7,\n        hierarchy8: this.props.selectedHierarchy8,\n        tiers: this.props.selectedStores,\n      },\n      startDate: this.props.startDate ? moment(this.props.startDate).format('YYYY-MM-DD') : null,\n      endDate: this.props.endDate ? moment(this.props.endDate).format('YYYY-MM-DD') : null,\n      status: 'pending',\n    };\n    this.getMarkdowns(payload);\n  };\n\n  getMarkdowns = (payload) => {\n    this.props.getMarkdowns(payload).then((resp) => {\n      if (resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n        let defaultHeader = Object.keys(resp.columnHeaders.default);\n\n        let setDefaultColDef = Coldef().filter(\n          (col) =>\n            defaultHeader.includes(col.Header) ||\n            col.Header === 'Time Period' ||\n            col.Header === 'Actions' ||\n            col.id === 'expander' ||\n            // col.accessor === 'sell_through' ||\n            (this.state.toggle && col.accessor === 'status')\n        );\n        let setDefaultLabel = [];\n        let setDefaultColumnOptions = [];\n        let setDefaultColumnOptions1 = [];\n        let setDefaultItems = [];\n        let colHeaders = _.cloneDeep(resp.columnHeaders);\n        let labels = Object.keys(colHeaders);\n        labels.splice(labels.indexOf('fixed'), 1);\n        labels.splice(labels.indexOf('default'), 1);\n        for (const label of labels) {\n          let labelArray = Object.keys(resp.columnHeaders[label]);\n          function diff(A = labelArray, B = defaultHeader) {\n            return A.filter(function (a) {\n              return B.indexOf(a) !== -1;\n            });\n          }\n\n          if (diff().length) {\n            setDefaultColumnOptions.push(...Object.keys(resp.columnHeaders[label]));\n            setDefaultColumnOptions1.push(resp.columnHeaders[label]);\n            setDefaultItems.push(...diff());\n            setDefaultLabel.push(label);\n          }\n        }\n        let options = setDefaultColumnOptions.map((label) => {\n          let find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n          return {\n            label: label,\n            value: find,\n          };\n        });\n        let selectedItems = setDefaultItems.map((label) => {\n          let find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n          return {\n            label: label,\n            value: find,\n          };\n        });\n        setDefaultColDef.push({\n          id: 'selection',\n          groupByBoundary: true,\n          Header: 'Actions',\n          // fixed: 'left',\n          Cell: (props) => {\n            let { row, rows } = props;\n            let mdPlan = row.original.markdown_id,\n              mainGrp = _.find(rows, {\n                isSelected: true,\n                original: { markdown_id: mdPlan },\n              }),\n              checkboxDisabled = mainGrp && !row.isSelected ? true : false;\n\n            return row.canExpand ? (\n              <div>\n                <IndeterminateCheckbox\n                  row={row.id}\n                  onClick={() => {\n                    this.onScenarioSelection(row);\n                  }}\n                  disabled={checkboxDisabled}\n                  {...row.getToggleRowSelectedProps()}\n                />\n              </div>\n            ) : null;\n          },\n        });\n        this.setState({\n          columns: setDefaultColDef,\n          selLabels: setDefaultLabel,\n          selectedItems: selectedItems,\n          columnOptions: options,\n        });\n      }\n    });\n  };\n  // onFilter = (selectedFilters) => {\n  //   let payload = { ...selectedFilters };\n  //   payload.startDate = moment(payload.startDate).format('MM-DD-YYYY');\n  //   payload.endDate = moment(payload.endDate).format('MM-DD-YYYY');\n  //   payload['week'] = '';\n  //   payload['status'] = 'draft';\n  //   this.props.getMarkDowns(payload).then((resp) => {\n  //     console.log(resp, 'aaaaaaaaaa');\n  //     if (resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n  //       let setDefaultColDef = Coldef().filter((col) =>\n  //         resp.columnHeaders.default.includes(col.Header)\n  //       );\n  //       let setDefaultLabel = [];\n  //       let setDefaultColumnOptions = [];\n  //       let setDefaultItems = [];\n  //       let colHeaders = _.cloneDeep(resp.columnHeaders);\n  //       let labels = Object.keys(colHeaders);\n  //       labels.splice(labels.indexOf('fixed'), 1);\n  //       labels.splice(labels.indexOf('default'), 1);\n  //       for (const label of labels) {\n  //         function diff(A = resp.columnHeaders[label], B = resp.columnHeaders.default) {\n  //           return A.filter(function (a) {\n  //             return B.indexOf(a) !== -1;\n  //           });\n  //         }\n\n  //         if (diff().length) {\n  //           setDefaultColumnOptions.push(...resp.columnHeaders[label]);\n  //           setDefaultItems.push(...diff());\n  //           setDefaultLabel.push(label);\n  //         }\n  //       }\n  //       let options = setDefaultColumnOptions.map((label) => {\n  //         return {\n  //           label: label,\n  //           value: label,\n  //         };\n  //       });\n  //       let selectedItems = setDefaultItems.map((label) => {\n  //         return {\n  //           label: label,\n  //           value: label,\n  //         };\n  //       });\n  //       this.setState({\n  //         columns: setDefaultColDef,\n  //         selLabels: setDefaultLabel,\n  //         selectedItems: selectedItems,\n  //         columnOptions: options,\n  //       });\n  //     }\n  //   });\n  // };\n\n  render() {\n    return (\n      <LoadingOverlay loader={this.props.getOverlayLoaderState} spinner>\n        <div className=\"createMd pl-2 pr-2\">\n          <div className=\"alertDivs\">\n            {this.state.showAlertWarning ? (\n              <AlertWarning\n                message=\"Markdown Finalization Failed!\"\n                show={this.state.showAlertWarning}\n              />\n            ) : null}\n            {this.state.showAlertSuccess ? (\n              <AlertSuccess\n                message={'Markdown(s) are ' + this.state.message}\n                show={this.state.showAlertSuccess}\n              />\n            ) : null}\n          </div>\n          <div className=\"card CalendarMain promoCalendarDiv1 mt-3\">\n            <div>\n              <h4 className=\"font-size-14  pad-10 markdown-heading\">\n                Markdown Optimization /<span className=\"font-bold color-blue\">Finalize</span>\n              </h4>\n            </div>\n            <hr\n              className=\"mb-2\"\n              style={{\n                marginTop: '-4px',\n              }}\n            />\n            <div className=\"filterCol mb-4\">\n              <Filters\n                onFilter={this.onFilter}\n                stores\n                dateRange\n                hierarchy={[\n                  {\n                    type: 'hierarchy1',\n                    isMandatory: true,\n                    isMultiple: false,\n                    isMandatory: true,\n                  },\n                  {\n                    type: 'hierarchy2',\n                    isMultiple: true,\n                    isMandatory: true,\n                  },\n                  {\n                    type: 'hierarchy3',\n                    isMultiple: true,\n                  },\n                  {\n                    type: 'hierarchy4',\n                    isMultiple: true,\n                  },\n                  {\n                    type: 'hierarchy5',\n\n                    isMultiple: true,\n                  },\n                  {\n                    type: 'hierarchy6',\n                    isMultiple: true,\n                  },\n                  {\n                    type: 'hierarchy7',\n                    isMultiple: true,\n                  },\n                  {\n                    type: 'hierarchy8',\n                    isMultiple: true,\n                  },\n                ]}\n                storeIsNotMandatory={true}\n              />\n            </div>\n          </div>\n          {/* <div className=\"row\" style={{ marginTop: '15px' }}>\n          <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n            <CardComponent\n              cardImage={card1Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.firstCardFirstValue}\n              cardValueSecond={this.state.firstCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border1',\n                cardValue: 'card1-value',\n                cardImg: 'card1-img',\n                cardValueSecond: 'card-value-second',\n                cardSubHeading: 'card-subHeading',\n              }}\n            />\n          </div>\n          <div className=\"col-md-3 col-sm-3 col-xs-6\">\n            <CardComponent\n              cardImage={card2Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.secondCardFirstValue}\n              cardValueSecond={this.state.secondCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border2',\n                cardValue: 'card1-value',\n                cardImg: 'card2-img',\n                cardValueSecond: 'card-value-second',\n                cardSubHeading: 'card-subHeading',\n              }}\n            />\n          </div>\n          <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n            <CardComponent\n              cardImage={card3Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.thirdCardFirstValue}\n              cardValueSecond={this.state.thirdCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border3',\n                cardValue: 'card1-value',\n                cardImg: 'card3-img',\n                cardValueSecond: 'card-value-second',\n                cardSubHeading: 'card-subHeading',\n              }}\n            />\n          </div>\n          <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n            <CardComponent\n              cardImage={card4Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.fourthCardFirstValue}\n              cardValueSecond={this.state.fourthCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border4',\n                cardValue: 'card1-value',\n                cardImg: 'card4-img',\n              }}\n            />\n          </div>\n        </div> */}\n          {this.props.finalizeMarkdownData && this.props.finalizeMarkdownData.length ? (\n            <div className=\"card pl-3 pr-3 mt-3\">\n              <ColSelBtn>\n                {this.props.getColumnHeaders && Object.keys(this.props.getColumnHeaders).length && (\n                  <ColumnSelection\n                    onHandleCheckBox={this.onHandleCheckBox}\n                    columnHeaders={this.props.getColumnHeaders}\n                    onHandleSelect={this.onHandleSelect}\n                    columnOptions={this.state.columnOptions}\n                    selectedItems={this.state.selectedItems}\n                    selLabels={this.state.selLabels}\n                  />\n                )}\n                <div style={{ padding: '1rem' }}>\n                  <button\n                    className=\"btn btn-primary\"\n                    disabled={!this.state.selectedRows.length}\n                    onClick={this.sendForApprove}>\n                    Approve\n                  </button>\n                  &nbsp;\n                  <button\n                    disabled={!this.state.selectedRows.length}\n                    className=\"btn btn-primary\"\n                    onClick={this.sendForReject}>\n                    Reject\n                  </button>\n                </div>\n              </ColSelBtn>\n              <DataTable\n                columns={this.state.columns}\n                isSort={true}\n                // isColumnFilter={true}\n                data={this.props.finalizeMarkdownData}\n                updateMyData={this.updateMyData}\n                // visibleColumns=\"markDownDrafts\"\n                isPagination={true}\n                getColumnProps={(column) => ({\n                  // onClick: () => this.onColumnClick(column),\n                })}\n                getCellProps={(cellInfo) => ({\n                  style: {\n                    backgroundColor: this.bgmCol(cellInfo),\n                    color: this.txtCol(cellInfo),\n                    // textAlign: \"center\",\n                    margin: '4px 4px',\n                    borderRadius: '2px',\n                  },\n                })}\n              />\n            </div>\n          ) : (\n            <NoData description=\"Please select filters to show Markdown plans.\" />\n          )}\n        </div>\n      </LoadingOverlay>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    finalizeMarkdownData: store.draftStatusReducer.markdowns,\n    getOverlayLoaderState: store.loaderReducer.overlayLoaderState,\n    getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    getMetricOptions: store.finalizeReducer.metricOptions,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    selectedStores: store.filtersReducer.selectedStores,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n  };\n};\n\nconst mapActionToProps = {\n  getMarkdowns: FinalizeAction.getMarkdowns,\n  setMarkDowns: FinalizeAction.setMarkDowns,\n  setMDColumnHeaders: FinalizeAction.setMDColumnHeaders,\n  sendForApproval: FinalizeAction.sendForApproval,\n};\nexport default connect(mapStateToProps, mapActionToProps)(withRouter(FinalizeMarkdown));\n\nconst ColSelBtn = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n"]},"metadata":{},"sourceType":"module"}