{"ast":null,"code":"import { config } from \"../utils/config\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport { GET_ERRORS, SET_CURRENT_USER, LOGOUT_CURRENT_USER, SOME_ACTION } from \"./types\";\nimport axios from \"axios\"; // Login - Post User Token\n\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    axios.post(\"\".concat(config.loginUrl), userData).then(function (res) {\n      // Save to localStorage\n      var token = res.data.data.token; // Set token to ls\n\n      localStorage.setItem(\"token\", token); // Set token to Auth header\n\n      setAuthToken(token);\n      dispatch({\n        type: SET_CURRENT_USER,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      console.log(err);\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.message\n      });\n    });\n  };\n}; // Login - Post User Token\n\nexport var hidrateUser = function hidrateUser() {\n  return function (dispatch) {\n    if (localStorage.getItem(\"token\") && localStorage.getItem(\"user\")) {\n      dispatch({\n        type: SET_CURRENT_USER,\n        payload: {\n          token: localStorage.getItem(\"token\"),\n          user: JSON.parse(localStorage.getItem(\"user\"))\n        }\n      });\n    } else {\n      dispatch({\n        type: LOGOUT_CURRENT_USER\n      });\n    }\n  };\n};\nexport var logoutUser = function logoutUser(token) {\n  return function (dispatch) {\n    localStorage.removeItem(\"token\", token);\n    setAuthToken(false);\n    dispatch({\n      type: LOGOUT_CURRENT_USER\n    });\n  };\n};\nexport var someAction = function someAction(data) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: SOME_ACTION,\n      pathname: getState().router.pathname\n    });\n  };\n};","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/auth.js"],"names":["config","setAuthToken","GET_ERRORS","SET_CURRENT_USER","LOGOUT_CURRENT_USER","SOME_ACTION","axios","loginUser","userData","dispatch","post","loginUrl","then","res","token","data","localStorage","setItem","type","payload","catch","err","console","log","message","hidrateUser","getItem","user","JSON","parse","logoutUser","removeItem","someAction","getState","pathname","router"],"mappings":"AAAA,SAASA,MAAT,QAAuB,iBAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SACEC,UADF,EAEEC,gBAFF,EAGEC,mBAHF,EAIEC,WAJF,QAKO,SALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD;AAAA,SAAc,UAACC,QAAD,EAAc;AACnDH,IAAAA,KAAK,CACFI,IADH,WACWV,MAAM,CAACW,QADlB,GAC8BH,QAD9B,EAEGI,IAFH,CAEQ,UAACC,GAAD,EAAS;AACb;AADa,UAELC,KAFK,GAEKD,GAAG,CAACE,IAAJ,CAASA,IAFd,CAELD,KAFK,EAGb;;AAEAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B,EALa,CAOb;;AACAb,MAAAA,YAAY,CAACa,KAAD,CAAZ;AACAL,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAEf,gBADC;AAEPgB,QAAAA,OAAO,EAAEN,GAAG,CAACE;AAFN,OAAD,CAAR;AAID,KAfH,EAgBGK,KAhBH,CAgBS,UAACC,GAAD,EAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAZ,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAEhB,UADC;AAEPiB,QAAAA,OAAO,EAAEE,GAAG,CAACG;AAFN,OAAD,CAAR;AAID,KAtBH;AAuBD,GAxBwB;AAAA,CAAlB,C,CA0BP;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAAChB,QAAD,EAAc;AAC7C,QAAIO,YAAY,CAACU,OAAb,CAAqB,OAArB,KAAiCV,YAAY,CAACU,OAAb,CAAqB,MAArB,CAArC,EAAmE;AACjEjB,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAEf,gBADC;AAEPgB,QAAAA,OAAO,EAAE;AACPL,UAAAA,KAAK,EAAEE,YAAY,CAACU,OAAb,CAAqB,OAArB,CADA;AAEPC,UAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWb,YAAY,CAACU,OAAb,CAAqB,MAArB,CAAX;AAFC;AAFF,OAAD,CAAR;AAOD,KARD,MAQO;AACLjB,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAEd;AADC,OAAD,CAAR;AAGD;AACF,GAd0B;AAAA,CAApB;AAgBP,OAAO,IAAM0B,UAAU,GAAG,SAAbA,UAAa,CAAChB,KAAD;AAAA,SAAW,UAACL,QAAD,EAAc;AACjDO,IAAAA,YAAY,CAACe,UAAb,CAAwB,OAAxB,EAAiCjB,KAAjC;AACAb,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAQ,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEd;AADC,KAAD,CAAR;AAGD,GANyB;AAAA,CAAnB;AAQP,OAAO,IAAM4B,UAAU,GAAG,SAAbA,UAAa,CAACjB,IAAD;AAAA,SAAU,UAACN,QAAD,EAAWwB,QAAX,EAAwB;AAC1DxB,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEb,WADC;AAEP6B,MAAAA,QAAQ,EAAED,QAAQ,GAAGE,MAAX,CAAkBD;AAFrB,KAAD,CAAR;AAID,GALyB;AAAA,CAAnB","sourcesContent":["import { config } from \"../utils/config\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  LOGOUT_CURRENT_USER,\n  SOME_ACTION,\n} from \"./types\";\nimport axios from \"axios\";\n\n// Login - Post User Token\nexport const loginUser = (userData) => (dispatch) => {\n  axios\n    .post(`${config.loginUrl}`, userData)\n    .then((res) => {\n      // Save to localStorage\n      const { token } = res.data.data;\n      // Set token to ls\n\n      localStorage.setItem(\"token\", token);\n\n      // Set token to Auth header\n      setAuthToken(token);\n      dispatch({\n        type: SET_CURRENT_USER,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.message,\n      });\n    });\n};\n\n// Login - Post User Token\nexport const hidrateUser = () => (dispatch) => {\n  if (localStorage.getItem(\"token\") && localStorage.getItem(\"user\")) {\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: {\n        token: localStorage.getItem(\"token\"),\n        user: JSON.parse(localStorage.getItem(\"user\")),\n      },\n    });\n  } else {\n    dispatch({\n      type: LOGOUT_CURRENT_USER,\n    });\n  }\n};\n\nexport const logoutUser = (token) => (dispatch) => {\n  localStorage.removeItem(\"token\", token);\n  setAuthToken(false);\n  dispatch({\n    type: LOGOUT_CURRENT_USER,\n  });\n};\n\nexport const someAction = (data) => (dispatch, getState) => {\n  dispatch({\n    type: SOME_ACTION,\n    pathname: getState().router.pathname,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}