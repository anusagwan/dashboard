{"ast":null,"code":"var _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/draftStatus/draft/coldef.js\";\nimport React from 'react';\nimport { toPercentage } from '../../../helper/formatter';\nimport IndeterminateCheckbox from '../../../components/cellRenders/inderterminateCheckbox';\nimport _ from 'lodash';\nimport moment from 'moment';\nexport default (function () {\n  var colDef = [{\n    Header: 'MD Plan',\n    accessor: 'md_plan',\n    disableGroupBy: true,\n    width: 50,\n    // isGroupBy: false,\n    align: 'left',\n    enableRowSpan: true // aggregate: 'uniqueCount',\n    // Aggregated: ({ value }) => `${value} scenario`,\n\n  }, {\n    Header: 'Scenario',\n    accessor: 'scenario',\n    disableGroupBy: true,\n    enableRowSpan: true,\n    // isGroupBy: false,\n    width: 50 // aggregate: 'uniqueCount',\n    // Aggregated: ({ value }) => `${value} scenario`,\n\n  }, {\n    // Build our expander column\n    id: 'expander',\n    // Make sure it has an ID\n    // Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n    //   <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}</span>\n    // ),\n    Header: 'Date Range',\n    width: 15,\n    Cell: function Cell(_ref) {\n      var row = _ref.row;\n      // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n      // to build the toggle for expanding a row\n      console.log('czseferuuuuuuu', row);\n      return row.canExpand ? React.createElement(\"span\", Object.assign({}, row.getToggleRowExpandedProps({\n        style: {\n          // We can even use the row.depth property\n          // and paddingLeft to indicate the depth\n          // of the row\n          paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n        }\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), moment(row.original.start_date).format('YYYY/MM/DD'), \" -\", ' ', moment(row.original.end_date).format('YYYY/MM/DD') + '  ', row.isExpanded ? React.createElement(\"i\", {\n        class: \"fa fa-angle-down expanded-icon-size\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }) : React.createElement(\"i\", {\n        class: \"fa fa-angle-right expanded-icon-size\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })) : null;\n    }\n  }, {\n    Header: 'Time Period',\n    accessor: 'time_period',\n    disableGroupBy: false,\n    isGroupBy: false,\n    width: 50,\n    // aggregate: 'uniqueCount',\n    Aggregated: function Aggregated(_ref2) {\n      var value = _ref2.value,\n          row = _ref2.row;\n      return \"weeks (\".concat(row.subRows.length, \")\");\n    }\n  }, //Inventory\n  {\n    Header: 'Sell through%',\n    accessor: 'sell_through_perc',\n    disableGroupBy: true,\n    width: 50,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    },\n    aggregate: 'sum',\n    Aggregated: function Aggregated(_ref3) {\n      var value = _ref3.value;\n      return \"\".concat(value);\n    }\n  }, {\n    Header: 'Inventory On Hand',\n    accessor: 'ioh',\n    disableGroupBy: true,\n    width: 70,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    },\n    aggregate: 'average',\n    Aggregated: function Aggregated(_ref4) {\n      var value = _ref4.value;\n      return \"\".concat(value);\n    }\n  }, {\n    Header: 'Inventory On Order',\n    accessor: 'ioo',\n    disableGroupBy: true,\n    width: 70,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    },\n    aggregate: 'sum',\n    Aggregated: function Aggregated(_ref5) {\n      var value = _ref5.value;\n      return \"\".concat(value);\n    }\n  }, //Margin\n  {\n    Header: 'Margin%',\n    accessor: 'margin_perc',\n    disableGroupBy: true,\n    width: 70,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    },\n    aggregate: 'average',\n    Aggregated: function Aggregated(props) {\n      var value = props.value,\n          row = props.row;\n      console.log(value, 'vsfweoppppp', props);\n      return \"\".concat(value);\n    }\n  }, {\n    Header: 'AUM',\n    accessor: 'aum',\n    disableGroupBy: true,\n    width: 55,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    },\n    // aggregate: 'average',\n    Aggregated: function Aggregated(_ref6) {\n      var value = _ref6.value;\n      return \"-\";\n    }\n  }, //Product Information\n  {\n    Header: 'SKU ID',\n    accessor: 'sku_id',\n    disableGroupBy: true,\n    width: 50,\n    aggregate: 'uniqueCount',\n    Aggregated: function Aggregated(_ref7) {\n      var value = _ref7.value;\n      return \"\".concat(value, \" SKU ID's\");\n    }\n  }, {\n    Header: 'SKU DESC',\n    accessor: 'sku_desc',\n    disableGroupBy: true,\n    width: 55,\n    aggregate: 'uniqueCount',\n    Aggregated: function Aggregated(_ref8) {\n      var value = _ref8.value;\n      return \"-\";\n    }\n  }, {\n    Header: 'Department',\n    accessor: 'department',\n    disableGroupBy: true,\n    width: 55,\n    aggregate: 'uniqueCount',\n    Aggregated: function Aggregated(_ref9) {\n      var value = _ref9.value;\n      return \"-\";\n    }\n  }, {\n    Header: 'Category',\n    accessor: 'category',\n    disableGroupBy: true,\n    width: 55,\n    aggregate: 'uniqueCount',\n    Aggregated: function Aggregated(_ref10) {\n      var value = _ref10.value;\n      return \"-\";\n    }\n  }, {\n    Header: 'Brand',\n    accessor: 'brand',\n    disableGroupBy: true,\n    width: 55,\n    aggregate: 'uniqueCount',\n    Aggregated: function Aggregated(_ref11) {\n      var value = _ref11.value;\n      return \"-\";\n    }\n  }, //Sales\n  {\n    Header: 'Store ID',\n    accessor: 'store_id',\n    disableGroupBy: true,\n    width: 55,\n    aggregate: 'uniqueCount',\n    Aggregated: function Aggregated(_ref12) {\n      var value = _ref12.value;\n      return \"\".concat(value, \" Store ID's\");\n    }\n  }, {\n    Header: 'Actual Sales',\n    accessor: 'actual_sales',\n    disableGroupBy: true,\n    width: 55,\n    aggregate: 'uniqueCount',\n    Aggregated: function Aggregated(_ref13) {\n      var value = _ref13.value;\n      return \"\".concat(value, \" Store ID's\");\n    }\n  }, {\n    Header: 'Predicted Sales',\n    accessor: 'predicted_sales',\n    disableGroupBy: true,\n    width: 55,\n    aggregate: 'uniqueCount',\n    Aggregated: function Aggregated(_ref14) {\n      var value = _ref14.value;\n      return \"\".concat(value, \" Store ID's\");\n    }\n  }, {\n    Header: 'Sales Contribution',\n    accessor: 'sales_contribution',\n    disableGroupBy: true,\n    width: 55,\n    aggregate: 'uniqueCount',\n    Aggregated: function Aggregated(_ref15) {\n      var value = _ref15.value;\n      return \"\".concat(value, \" Store ID's\");\n    }\n  }, {\n    Header: 'Revenue',\n    accessor: 'revenue',\n    disableGroupBy: true,\n    width: 55,\n    aggregate: 'uniqueCount',\n    Aggregated: function Aggregated(_ref16) {\n      var value = _ref16.value;\n      return \"\".concat(value, \" Store ID's\");\n    }\n  }, // Store Information\n  {\n    Header: 'Store Description',\n    accessor: 'store_description',\n    disableGroupBy: true,\n    width: 55,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    },\n    // aggregate: 'average',\n    Aggregated: function Aggregated(_ref17) {\n      var value = _ref17.value;\n      return \"-\";\n    }\n  }, {\n    Header: 'Region',\n    accessor: 'region',\n    disableGroupBy: true,\n    width: 55,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    },\n    // aggregate: 'average',\n    Aggregated: function Aggregated(_ref18) {\n      var value = _ref18.value;\n      return \"-\";\n    }\n  }, {\n    Header: 'State',\n    accessor: 'state',\n    disableGroupBy: true,\n    width: 55,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    },\n    // aggregate: 'average',\n    Aggregated: function Aggregated(_ref19) {\n      var value = _ref19.value;\n      return \"-\";\n    }\n  }, {\n    Header: 'Store Address',\n    accessor: 'store_address',\n    disableGroupBy: true,\n    width: 55,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    },\n    // aggregate: 'average',\n    Aggregated: function Aggregated(_ref20) {\n      var value = _ref20.value;\n      return \"-\";\n    }\n  }, {\n    Header: 'MD Status',\n    accessor: 'status',\n    disableGroupBy: true,\n    width: 70,\n    style: {\n      textAlign: 'center'\n    }\n  }, {\n    id: 'selection',\n    // Make this column a groupByBoundary. This ensures that groupBy columns\n    // are placed after it\n    groupByBoundary: true,\n    // The header can use the table's getToggleAllRowsSelectedProps method\n    // to render a checkbox\n    Header: 'Actions',\n    // The cell can use the individual row's getToggleRowSelectedProps method\n    // to the render a checkbox\n    Cell: function Cell(props) {\n      var row = props.row,\n          rows = props.rows;\n\n      var mdPlan = row.values.md_plan,\n          mainGrp = _.find(rows, {\n        values: {\n          md_plan: mdPlan\n        }\n      }),\n          checkboxDisabled = mainGrp ? mainGrp.isSomeSelected && !row.isSelected : false;\n\n      console.log(row, 'zsfldroepppppppqqqq', mainGrp, mdPlan, row.isSelected);\n      return row.canExpand ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(IndeterminateCheckbox, Object.assign({\n        row: row.id,\n        disabled: checkboxDisabled\n      }, row.getToggleRowSelectedProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }))) : null;\n    }\n  }];\n  return colDef;\n});","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/draftStatus/draft/coldef.js"],"names":["React","toPercentage","IndeterminateCheckbox","_","moment","colDef","Header","accessor","disableGroupBy","width","align","enableRowSpan","id","Cell","row","console","log","canExpand","getToggleRowExpandedProps","style","paddingLeft","depth","original","start_date","format","end_date","isExpanded","isGroupBy","Aggregated","value","subRows","length","props","aggregate","textAlign","groupByBoundary","rows","mdPlan","values","md_plan","mainGrp","find","checkboxDisabled","isSomeSelected","isSelected","getToggleRowSelectedProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { toPercentage } from '../../../helper/formatter';\nimport IndeterminateCheckbox from '../../../components/cellRenders/inderterminateCheckbox';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nexport default () => {\n  const colDef = [\n    {\n      Header: 'MD Plan',\n      accessor: 'md_plan',\n      disableGroupBy: true,\n      width: 50,\n      // isGroupBy: false,\n      align: 'left',\n      enableRowSpan: true,\n      // aggregate: 'uniqueCount',\n      // Aggregated: ({ value }) => `${value} scenario`,\n    },\n    {\n      Header: 'Scenario',\n      accessor: 'scenario',\n      disableGroupBy: true,\n      enableRowSpan: true,\n      // isGroupBy: false,\n      width: 50,\n      // aggregate: 'uniqueCount',\n      // Aggregated: ({ value }) => `${value} scenario`,\n    },\n    {\n      // Build our expander column\n      id: 'expander', // Make sure it has an ID\n      // Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n      //   <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}</span>\n      // ),\n      Header: 'Date Range',\n      width: 15,\n      Cell: ({ row }) => {\n        // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n        // to build the toggle for expanding a row\n        console.log('czseferuuuuuuu', row);\n\n        return row.canExpand ? (\n          <span\n            {...row.getToggleRowExpandedProps({\n              style: {\n                // We can even use the row.depth property\n                // and paddingLeft to indicate the depth\n                // of the row\n                paddingLeft: `${row.depth * 2}rem`,\n              },\n            })}>\n            {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n            {moment(row.original.end_date).format('YYYY/MM/DD') + '  '}\n            {row.isExpanded ? (\n              <i class=\"fa fa-angle-down expanded-icon-size\" aria-hidden=\"true\"></i>\n            ) : (\n              <i class=\"fa fa-angle-right expanded-icon-size\" aria-hidden=\"true\"></i>\n            )}\n          </span>\n        ) : null;\n      },\n    },\n    {\n      Header: 'Time Period',\n      accessor: 'time_period',\n      disableGroupBy: false,\n      isGroupBy: false,\n      width: 50,\n      // aggregate: 'uniqueCount',\n      Aggregated: ({ value, row }) => `weeks (${row.subRows.length})`,\n    },\n    //Inventory\n    {\n      Header: 'Sell through%',\n      accessor: 'sell_through_perc',\n      disableGroupBy: true,\n      width: 50,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n      aggregate: 'sum',\n      Aggregated: ({ value }) => `${value}`,\n    },\n    {\n      Header: 'Inventory On Hand',\n      accessor: 'ioh',\n      disableGroupBy: true,\n      width: 70,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n      aggregate: 'average',\n      Aggregated: ({ value }) => `${value}`,\n    },\n    {\n      Header: 'Inventory On Order',\n      accessor: 'ioo',\n      disableGroupBy: true,\n      width: 70,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n      aggregate: 'sum',\n      Aggregated: ({ value }) => `${value}`,\n    },\n    //Margin\n    {\n      Header: 'Margin%',\n      accessor: 'margin_perc',\n      disableGroupBy: true,\n      width: 70,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n      aggregate: 'average',\n      Aggregated: (props) => {\n        let { value, row } = props;\n        console.log(value, 'vsfweoppppp', props);\n\n        return `${value}`;\n      },\n    },\n    {\n      Header: 'AUM',\n      accessor: 'aum',\n      disableGroupBy: true,\n      width: 55,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n      // aggregate: 'average',\n      Aggregated: ({ value }) => `-`,\n    },\n    //Product Information\n    {\n      Header: 'SKU ID',\n      accessor: 'sku_id',\n      disableGroupBy: true,\n      width: 50,\n      aggregate: 'uniqueCount',\n      Aggregated: ({ value }) => `${value} SKU ID's`,\n    },\n    {\n      Header: 'SKU DESC',\n      accessor: 'sku_desc',\n      disableGroupBy: true,\n      width: 55,\n      aggregate: 'uniqueCount',\n      Aggregated: ({ value }) => `-`,\n    },\n    {\n      Header: 'Department',\n      accessor: 'department',\n      disableGroupBy: true,\n      width: 55,\n      aggregate: 'uniqueCount',\n      Aggregated: ({ value }) => `-`,\n    },\n    {\n      Header: 'Category',\n      accessor: 'category',\n      disableGroupBy: true,\n      width: 55,\n      aggregate: 'uniqueCount',\n      Aggregated: ({ value }) => `-`,\n    },\n    {\n      Header: 'Brand',\n      accessor: 'brand',\n      disableGroupBy: true,\n      width: 55,\n      aggregate: 'uniqueCount',\n      Aggregated: ({ value }) => `-`,\n    },\n    //Sales\n    {\n      Header: 'Store ID',\n      accessor: 'store_id',\n      disableGroupBy: true,\n      width: 55,\n      aggregate: 'uniqueCount',\n      Aggregated: ({ value }) => `${value} Store ID's`,\n    },\n    {\n      Header: 'Actual Sales',\n      accessor: 'actual_sales',\n      disableGroupBy: true,\n      width: 55,\n      aggregate: 'uniqueCount',\n      Aggregated: ({ value }) => `${value} Store ID's`,\n    },\n    {\n      Header: 'Predicted Sales',\n      accessor: 'predicted_sales',\n      disableGroupBy: true,\n      width: 55,\n      aggregate: 'uniqueCount',\n      Aggregated: ({ value }) => `${value} Store ID's`,\n    },\n    {\n      Header: 'Sales Contribution',\n      accessor: 'sales_contribution',\n      disableGroupBy: true,\n      width: 55,\n      aggregate: 'uniqueCount',\n      Aggregated: ({ value }) => `${value} Store ID's`,\n    },\n    {\n      Header: 'Revenue',\n      accessor: 'revenue',\n      disableGroupBy: true,\n      width: 55,\n      aggregate: 'uniqueCount',\n      Aggregated: ({ value }) => `${value} Store ID's`,\n    },\n    // Store Information\n    {\n      Header: 'Store Description',\n      accessor: 'store_description',\n      disableGroupBy: true,\n      width: 55,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n      // aggregate: 'average',\n      Aggregated: ({ value }) => `-`,\n    },\n    {\n      Header: 'Region',\n      accessor: 'region',\n      disableGroupBy: true,\n      width: 55,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n      // aggregate: 'average',\n      Aggregated: ({ value }) => `-`,\n    },\n    {\n      Header: 'State',\n      accessor: 'state',\n      disableGroupBy: true,\n      width: 55,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n      // aggregate: 'average',\n      Aggregated: ({ value }) => `-`,\n    },\n    {\n      Header: 'Store Address',\n      accessor: 'store_address',\n      disableGroupBy: true,\n      width: 55,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n      // aggregate: 'average',\n      Aggregated: ({ value }) => `-`,\n    },\n    {\n      Header: 'MD Status',\n      accessor: 'status',\n      disableGroupBy: true,\n      width: 70,\n      style: {\n        textAlign: 'center',\n      },\n    },\n    {\n      id: 'selection',\n      // Make this column a groupByBoundary. This ensures that groupBy columns\n      // are placed after it\n      groupByBoundary: true,\n      // The header can use the table's getToggleAllRowsSelectedProps method\n      // to render a checkbox\n      Header: 'Actions',\n      // The cell can use the individual row's getToggleRowSelectedProps method\n      // to the render a checkbox\n      Cell: (props) => {\n        let { row, rows } = props;\n        let mdPlan = row.values.md_plan,\n          mainGrp = _.find(rows, { values: { md_plan: mdPlan } }),\n          checkboxDisabled = mainGrp ? mainGrp.isSomeSelected && !row.isSelected : false;\n        console.log(row, 'zsfldroepppppppqqqq', mainGrp, mdPlan, row.isSelected);\n\n        return row.canExpand ? (\n          <div>\n            <IndeterminateCheckbox\n              row={row.id}\n              disabled={checkboxDisabled}\n              {...row.getToggleRowSelectedProps()}\n            />\n          </div>\n        ) : null;\n      },\n    },\n  ];\n  return colDef;\n};\n"]},"metadata":{},"sourceType":"module"}