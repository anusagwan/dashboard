{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Planned Reports/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Filters from '../../services/filters';\nimport CardComponent from '../../services/cardComponent/cardComponent';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport styled from 'styled-components';\nimport plannedReportsAction from '../../actions/plannedReportsAction';\nimport _ from 'lodash';\nimport LoadingOverlay from '../../utils/Loader';\nimport Download from '../../services/download';\nimport card1Image from '../../images/card1Image.png';\nimport card2Image from '../../images/card2Image.png';\nimport card3Image from '../../images/card3Image.png';\nimport card4Image from '../../images/card4Image.png';\nimport { toUnit } from '../../helper/formatter';\nimport { toast } from 'react-toastify';\nvar options = [{\n  label: 'Sell Through',\n  value: '1'\n}, {\n  label: 'Margin %',\n  value: '2'\n}, {\n  label: 'Mark Down %',\n  value: '3'\n}];\nvar attributes = ['Margin', 'Sales', 'Inventory'];\n\nvar planedReport =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(planedReport, _Component);\n\n  function planedReport(_props) {\n    var _this;\n\n    _classCallCheck(this, planedReport);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(planedReport).call(this, _props));\n\n    _this.onHandleSelect = function (selectValues) {\n      return _this.setState({\n        selectValues: selectValues\n      });\n    };\n\n    _this.validateFilters = function () {\n      return _this.props.selectedHierarchy1 && _this.props.selectedHierarchy2.length && _this.props.selectedHierarchy3.length && _this.props.selectedHierarchy4.length && _this.props.selectedHierarchy5.length && _this.props.selectedStores.length;\n    };\n\n    _this.onFilter = function (filters) {\n      if (!_this.validateFilters()) {\n        toast.error(\"Please select mandatory filters\", {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        return;\n      }\n\n      var req = {\n        filters: {\n          hierarchy1: _this.props.selectedHierarchy1,\n          hierarchy2: _this.props.selectedHierarchy2,\n          hierarchy3: _this.props.selectedHierarchy3,\n          hierarchy4: _this.props.selectedHierarchy4,\n          hierarchy5: _this.props.selectedHierarchy5,\n          hierarchy6: _this.props.selectedHierarchy6\n        },\n        startDate: _this.props.startDate,\n        endDate: _this.props.endDate,\n        week: _this.props.weeks\n      }; // req = {\n      //   filters: {\n      //     hierarchy1: ['MENS'],\n      //     hierarchy2: ['SPORTSWEAR MENS TEES'],\n      //     hierarchy3: ['SPW MENS TEES'],\n      //     hierarchy4: ['LS TEE'],\n      //     hierarchy5: ['seasonal key items'],\n      //     hierarchy6: ['Prior to Jan20'],\n      //   },\n      //   startDate: '06-01-2020',\n      //   endDate: '08-02-2020',\n      //   week: [23, 24, 25, 26, 27, 28, 29, 30, 31],\n      // };\n      // req = {\n      //   filters: {\n      //     hierarchy1: ['MENS'],\n      //     hierarchy2: ['SPORTSWEAR MENS TEES'],\n      //     hierarchy3: ['SPW MENS TEES'],\n      //     hierarchy4: ['LS TEE'],\n      //   },\n      //   hierarchyType: 'HIERARCHY5',\n      // };\n\n      _this.props.fetchPlannedReports(req);\n    };\n\n    _this.coldef = function () {\n      if (_this.props.getPlannedTableData.length) {\n        var columns = [// {\n        //   Header: 'Plan ID',\n        //   accessor: 'promo_code',\n        //   disableGroupBy: true,\n        //   //   width: 50,\n        //   align: 'left',\n        //   enableRowSpan: true,\n        //   // cells:\n        // },\n        {\n          Header: 'Plan',\n          accessor: 'promo_id',\n          disableGroupBy: true,\n          Cell: function Cell(_ref) {\n            var row = _ref.row,\n                rows = _ref.rows;\n            return row.original.plan ? row.original.plan : null;\n          },\n          align: 'center',\n          enableRowSpan: true\n        }, {\n          Header: 'Scenario',\n          accessor: function accessor(d) {\n            return d.promo_id + d.promo_id;\n          },\n          disableGroupBy: true,\n          Cell: function Cell(_ref2) {\n            var row = _ref2.row,\n                rows = _ref2.rows;\n            return row.original.scenario ? row.original.scenario : null;\n          },\n          enableRowSpan: true,\n          //   width: 50,\n          align: 'left'\n        }, {\n          Header: 'Start Date',\n          // accessor: 'startDate',\n          disableGroupBy: true,\n          accessor: 'promo_code',\n          Cell: function Cell(_ref3) {\n            var row = _ref3.row,\n                rows = _ref3.rows;\n            return row.original.startDate ? row.original.startDate : null;\n          },\n          enableRowSpan: true,\n          //   width: 50,\n          align: 'left'\n        }, {\n          Header: 'End Date',\n          accessor: 'promotion_id',\n          disableGroupBy: true,\n          // accessor: 'promo_code',\n          Cell: function Cell(_ref4) {\n            var row = _ref4.row,\n                rows = _ref4.rows;\n            return row.original.endDate ? row.original.endDate : null;\n          },\n          enableRowSpan: true,\n          // enableRowSpan: true,\n          //   width: 50,\n          align: 'left'\n        }, {\n          Header: 'Metrics',\n          accessor: 'metrices',\n          disableGroupBy: true,\n          //   width: 50,\n          align: 'left'\n        }]; // Object.keys(this.props.getPlannedTableData[0]).forEach((i) => {\n        //   if (!columns.map((c) => c.accessor).includes(i)) {\n        //     columns.push({\n        //       Header: i,\n        //       accessor: i,\n        //       disableGroupBy: true,\n        //       Cell: (props) => <div> {toUnit(props)} </div>,\n        //     });\n        //   }\n        // });\n        // let finalArr = this.props.weeks.length || arr;\n\n        if (_this.props.weeks.length) {\n          _this.props.weeks.forEach(function (week) {\n            columns.push({\n              Header: 'w' + week,\n              accessor: 'w' + week,\n              disableGroupBy: true,\n              Cell: function Cell(props) {\n                return React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 217\n                  },\n                  __self: this\n                }, \" \", props.value ? toUnit(props) : '-', \" \");\n              }\n            });\n          });\n        } else {\n          var arr = Object.keys(_this.props.getPlannedTableData[0]).filter(function (tableData) {\n            return tableData.startsWith('w');\n          });\n          arr.forEach(function (week) {\n            columns.push({\n              Header: week,\n              accessor: week,\n              disableGroupBy: true,\n              Cell: function Cell(props) {\n                return React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 229\n                  },\n                  __self: this\n                }, \" \", props.value ? toUnit(props) : '-', \" \");\n              }\n            });\n          });\n        }\n\n        return columns;\n      } else return [];\n    };\n\n    _this.state = {\n      filters: [{\n        type: 'hierarchy1',\n        isMandatory: true,\n        isMultiple: false\n      }, {\n        type: 'hierarchy2',\n        isMandatory: true,\n        isMultiple: true\n      }, {\n        type: 'hierarchy3',\n        isMandatory: true,\n        isMultiple: true\n      }, {\n        type: 'hierarchy4',\n        isMandatory: true,\n        isMultiple: true\n      }, {\n        type: 'hierarchy5',\n        isMandatory: true,\n        isMultiple: true\n      }, {\n        type: 'hierarchy6',\n        isMandatory: false,\n        isMultiple: true\n      }],\n      selectedItems: [],\n      firstCardText: 'Avg Markdown',\n      secondCardText: 'Sell through %',\n      thirdCardText: 'Margin %',\n      fourthCardText: 'Quantity Sold',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month'\n    };\n    return _this;\n  }\n\n  _createClass(planedReport, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          getPlannedMetricOptions = _this$props.getPlannedMetricOptions,\n          getPlannedTableData = _this$props.getPlannedTableData;\n      return React.createElement(\"div\", {\n        className: \"planned-report pl-2 pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"font-size-14  pad-10 markdown-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Markdown Optimization /\", React.createElement(\"span\", {\n        className: \"font-bold color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Actual Vs Planned Reports\"))), React.createElement(\"hr\", {\n        className: \"mb-2\",\n        style: {\n          marginTop: '-4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), React.createElement(Filters, {\n        onFilter: this.onFilter,\n        drop: true,\n        stores: true,\n        dateRange: true,\n        hierarchy: this.state.filters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        className: \"dotted-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      })), React.createElement(LoadingOverlay, {\n        loader: this.props.overlayLoaderState,\n        spinner: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, getPlannedTableData.length > 0 && React.createElement(\"div\", {\n        className: \"card CalendarMain promoCalendarDiv1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(ColSelBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(Download, {\n        data: getPlannedTableData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"pad-15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        columns: this.coldef(),\n        data: getPlannedTableData,\n        isPagination: true,\n        rowsPerPage: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return planedReport;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    overlayLoaderState: store.loaderReducer.overlayLoaderState,\n    getPlannedTableData: store.plannedReportReducer.plannedReportsTableData,\n    getPlannedMetricOptions: store.plannedReportReducer.metricOptions.draft,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    selectedStores: store.filtersReducer.selectedStores,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks\n  };\n};\n\nvar mapActionsToProps = {\n  fetchPlannedReports: plannedReportsAction.fetchPlannedReports\n};\nexport default connect(mapStateToProps, mapActionsToProps)(planedReport); // export default planedReport;\n\nvar ColSelBtn = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Planned Reports/index.js"],"names":["React","Component","connect","Filters","CardComponent","DataTable","ColumnSelection","styled","plannedReportsAction","_","LoadingOverlay","Download","card1Image","card2Image","card3Image","card4Image","toUnit","toast","options","label","value","attributes","planedReport","props","onHandleSelect","selectValues","setState","validateFilters","selectedHierarchy1","selectedHierarchy2","length","selectedHierarchy3","selectedHierarchy4","selectedHierarchy5","selectedStores","onFilter","filters","error","autoClose","hideProgressBar","req","hierarchy1","hierarchy2","hierarchy3","hierarchy4","hierarchy5","hierarchy6","selectedHierarchy6","startDate","endDate","week","weeks","fetchPlannedReports","coldef","getPlannedTableData","columns","Header","accessor","disableGroupBy","Cell","row","rows","original","plan","align","enableRowSpan","d","promo_id","scenario","forEach","push","arr","Object","keys","filter","tableData","startsWith","state","type","isMandatory","isMultiple","selectedItems","firstCardText","secondCardText","thirdCardText","fourthCardText","firstCardFirstValue","firstCardSecondValue","secondCardFirstValue","secondCardSecondValue","thirdCardFirstValue","thirdCardSecondValue","fourthCardFirstValue","fourthCardSecondValue","cardWeekText","cardMonthText","getPlannedMetricOptions","marginTop","overlayLoaderState","mapStateToProps","store","loaderReducer","plannedReportReducer","plannedReportsTableData","metricOptions","draft","filtersReducer","mapActionsToProps","ColSelBtn","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Filters from '../../services/filters';\nimport CardComponent from '../../services/cardComponent/cardComponent';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport styled from 'styled-components';\nimport plannedReportsAction from '../../actions/plannedReportsAction';\nimport _ from 'lodash';\nimport LoadingOverlay from '../../utils/Loader';\nimport Download from '../../services/download';\n\nimport card1Image from '../../images/card1Image.png';\nimport card2Image from '../../images/card2Image.png';\nimport card3Image from '../../images/card3Image.png';\nimport card4Image from '../../images/card4Image.png';\nimport { toUnit } from '../../helper/formatter';\nimport { toast } from 'react-toastify';\n\nconst options = [\n  { label: 'Sell Through', value: '1' },\n  { label: 'Margin %', value: '2' },\n  { label: 'Mark Down %', value: '3' },\n];\nconst attributes = ['Margin', 'Sales', 'Inventory'];\n\nclass planedReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filters: [\n        {\n          type: 'hierarchy1',\n          isMandatory: true,\n          isMultiple: false,\n        },\n        {\n          type: 'hierarchy2',\n          isMandatory: true,\n          isMultiple: true,\n        },\n        {\n          type: 'hierarchy3',\n          isMandatory: true,\n          isMultiple: true,\n        },\n        {\n          type: 'hierarchy4',\n          isMandatory: true,\n          isMultiple: true,\n        },\n        {\n          type: 'hierarchy5',\n          isMandatory: true,\n          isMultiple: true,\n        },\n        {\n          type: 'hierarchy6',\n          isMandatory: false,\n          isMultiple: true,\n        },\n      ],\n\n      selectedItems: [],\n      firstCardText: 'Avg Markdown',\n      secondCardText: 'Sell through %',\n      thirdCardText: 'Margin %',\n      fourthCardText: 'Quantity Sold',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month',\n    };\n  }\n  onHandleSelect = (selectValues) => this.setState({ selectValues });\n  validateFilters = () => {\n    return (\n      this.props.selectedHierarchy1 &&\n      this.props.selectedHierarchy2.length &&\n      this.props.selectedHierarchy3.length &&\n      this.props.selectedHierarchy4.length &&\n      this.props.selectedHierarchy5.length &&\n      this.props.selectedStores.length\n    );\n  };\n  onFilter = (filters) => {\n    if (!this.validateFilters()) {\n      toast.error(`Please select mandatory filters`, {\n        autoClose: 15000,\n        hideProgressBar: true,\n      });\n      return;\n    }\n    let req = {\n      filters: {\n        hierarchy1: this.props.selectedHierarchy1,\n        hierarchy2: this.props.selectedHierarchy2,\n        hierarchy3: this.props.selectedHierarchy3,\n        hierarchy4: this.props.selectedHierarchy4,\n        hierarchy5: this.props.selectedHierarchy5,\n        hierarchy6: this.props.selectedHierarchy6,\n      },\n      startDate: this.props.startDate,\n      endDate: this.props.endDate,\n      week: this.props.weeks,\n    };\n    // req = {\n    //   filters: {\n    //     hierarchy1: ['MENS'],\n    //     hierarchy2: ['SPORTSWEAR MENS TEES'],\n    //     hierarchy3: ['SPW MENS TEES'],\n    //     hierarchy4: ['LS TEE'],\n    //     hierarchy5: ['seasonal key items'],\n    //     hierarchy6: ['Prior to Jan20'],\n    //   },\n    //   startDate: '06-01-2020',\n    //   endDate: '08-02-2020',\n    //   week: [23, 24, 25, 26, 27, 28, 29, 30, 31],\n    // };\n    // req = {\n    //   filters: {\n    //     hierarchy1: ['MENS'],\n    //     hierarchy2: ['SPORTSWEAR MENS TEES'],\n    //     hierarchy3: ['SPW MENS TEES'],\n    //     hierarchy4: ['LS TEE'],\n    //   },\n    //   hierarchyType: 'HIERARCHY5',\n    // };\n    this.props.fetchPlannedReports(req);\n  };\n\n  coldef = () => {\n    if (this.props.getPlannedTableData.length) {\n      let columns = [\n        // {\n        //   Header: 'Plan ID',\n\n        //   accessor: 'promo_code',\n        //   disableGroupBy: true,\n        //   //   width: 50,\n\n        //   align: 'left',\n        //   enableRowSpan: true,\n        //   // cells:\n        // },\n\n        {\n          Header: 'Plan',\n          accessor: 'promo_id',\n          disableGroupBy: true,\n          Cell: ({ row, rows }) => (row.original.plan ? row.original.plan : null),\n          align: 'center',\n          enableRowSpan: true,\n        },\n        {\n          Header: 'Scenario',\n          accessor: (d) => d.promo_id + d.promo_id,\n          disableGroupBy: true,\n          Cell: ({ row, rows }) => (row.original.scenario ? row.original.scenario : null),\n          enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n        },\n        {\n          Header: 'Start Date',\n          // accessor: 'startDate',\n          disableGroupBy: true,\n          accessor: 'promo_code',\n          Cell: ({ row, rows }) => (row.original.startDate ? row.original.startDate : null),\n          enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n        },\n        {\n          Header: 'End Date',\n          accessor: 'promotion_id',\n          disableGroupBy: true,\n          // accessor: 'promo_code',\n          Cell: ({ row, rows }) => (row.original.endDate ? row.original.endDate : null),\n          enableRowSpan: true,\n          // enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n        },\n        {\n          Header: 'Metrics',\n          accessor: 'metrices',\n          disableGroupBy: true,\n          //   width: 50,\n          align: 'left',\n        },\n      ];\n      // Object.keys(this.props.getPlannedTableData[0]).forEach((i) => {\n      //   if (!columns.map((c) => c.accessor).includes(i)) {\n      //     columns.push({\n      //       Header: i,\n      //       accessor: i,\n      //       disableGroupBy: true,\n      //       Cell: (props) => <div> {toUnit(props)} </div>,\n      //     });\n      //   }\n      // });\n\n      // let finalArr = this.props.weeks.length || arr;\n      if (this.props.weeks.length) {\n        this.props.weeks.forEach((week) => {\n          columns.push({\n            Header: 'w' + week,\n            accessor: 'w' + week,\n            disableGroupBy: true,\n            Cell: (props) => <div> {props.value ? toUnit(props) : '-'} </div>,\n          });\n        });\n      } else {\n        let arr = Object.keys(this.props.getPlannedTableData[0]).filter((tableData) =>\n          tableData.startsWith('w')\n        );\n        arr.forEach((week) => {\n          columns.push({\n            Header: week,\n            accessor: week,\n            disableGroupBy: true,\n            Cell: (props) => <div> {props.value ? toUnit(props) : '-'} </div>,\n          });\n        });\n      }\n\n      return columns;\n    } else return [];\n  };\n  render() {\n    let { getPlannedMetricOptions, getPlannedTableData } = this.props;\n    return (\n      <div className=\"planned-report pl-2 pr-2\">\n        <div className=\"card mb-4\">\n          <div>\n            <h4 className=\"font-size-14  pad-10 markdown-heading\">\n              Markdown Optimization /\n              <span className=\"font-bold color-blue\">Actual Vs Planned Reports</span>\n            </h4>\n          </div>\n          <hr\n            className=\"mb-2\"\n            style={{\n              marginTop: '-4px',\n            }}\n          />\n          <Filters onFilter={this.onFilter} drop stores dateRange hierarchy={this.state.filters} />\n          <hr className=\"dotted-line\"></hr>\n        </div>\n        <LoadingOverlay loader={this.props.overlayLoaderState} spinner>\n          {/* <div className=\"row\" style={{ padding: '1px 18px' }}> */}\n          {/* <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n              <CardComponent\n                cardImage={card1Image}\n                cardText={this.state.firstCardText}\n                cardValue={this.state.firstCardFirstValue}\n                cardValueSecond={this.state.firstCardSecondValue}\n \n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border1',\n                  cardValue: 'card1-value',\n                  cardImg: 'card1-img',\n                  cardValueSecond: 'card-value-second',\n                  cardSubHeading: 'card-subHeading',\n                }}\n              />\n            </div>\n            <div className=\"col-md-3 col-sm-3 col-xs-6\">\n              <CardComponent\n                cardImage={card2Image}\n                cardText={this.state.secondCardText}\n                cardValue={this.state.secondCardFirstValue}\n                cardValueSecond={this.state.secondCardSecondValue}\n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border2',\n                  cardValue: 'card1-value',\n                  cardImg: 'card2-img',\n                  cardValueSecond: 'card-value-second',\n                  cardSubHeading: 'card-subHeading',\n                }}\n              />\n            </div>\n            <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n              <CardComponent\n                cardImage={card3Image}\n                cardText={this.state.thirdCardText}\n                cardValue={this.state.thirdCardFirstValue}\n                cardValueSecond={this.state.thirdCardSecondValue}\n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border3',\n                  cardValue: 'card1-value',\n                  cardImg: 'card3-img',\n                  cardValueSecond: 'card-value-second',\n                  cardSubHeading: 'card-subHeading',\n                }}\n              />\n            </div>\n            <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n              <CardComponent\n                cardImage={card4Image}\n                cardText={this.state.fourthCardText}\n                cardValue={this.state.fourthCardFirstValue}\n                cardValueSecond={this.state.fourthCardSecondValue}\n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border4',\n                  cardValue: 'card1-value',\n                  cardImg: 'card4-img',\n                }}\n              />\n            </div>\n          </div> */}\n          {getPlannedTableData.length > 0 && (\n            <div className=\"card CalendarMain promoCalendarDiv1 mt-3\">\n              <ColSelBtn>\n                {/* <ColumnSelection\n                tab=\"draft\"\n                options={getPlannedMetricOptions}\n                onHandleSelect={this.onHandleSelect}\n                selectedItems={this.state.selectedItems}\n                attributes={attributes}\n                contentRenderer={true}\n              /> */}\n                <Download data={getPlannedTableData} />\n              </ColSelBtn>\n\n              <div className=\"pad-15\">\n                <DataTable\n                  columns={this.coldef()}\n                  data={getPlannedTableData}\n                  isPagination={true}\n                  rowsPerPage={12}\n                />\n              </div>\n            </div>\n          )}\n        </LoadingOverlay>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (store) => {\n  return {\n    overlayLoaderState: store.loaderReducer.overlayLoaderState,\n    getPlannedTableData: store.plannedReportReducer.plannedReportsTableData,\n    getPlannedMetricOptions: store.plannedReportReducer.metricOptions.draft,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    selectedStores: store.filtersReducer.selectedStores,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks,\n  };\n};\nconst mapActionsToProps = {\n  fetchPlannedReports: plannedReportsAction.fetchPlannedReports,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(planedReport);\n// export default planedReport;\nconst ColSelBtn = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n"]},"metadata":{},"sourceType":"module"}