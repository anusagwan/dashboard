{"ast":null,"code":"import _regeneratorRuntime from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/services/filters/index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { validations, filterType, reportingToCreateMdFilterToRetain } from './config';\nimport Select from '../select';\nimport './index.css';\nimport { connect } from 'react-redux';\nimport DateRangePicker from '../RetailCalendarDatePicker';\nimport FilterActions from '../../actions/filtersAction';\nimport { toast } from 'react-toastify';\nimport _ from 'lodash';\nimport { getSelectedItemsArray, getSelectedItems, getFiltersOptions, resetFilterData, getFilterList, getAllFiltersData } from '../../helper/filterHelperFuncs';\n\nvar Filters =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Filters, _Component);\n\n  function Filters(props) {\n    var _this;\n\n    _classCallCheck(this, Filters);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filters).call(this, props));\n\n    _this.filtersOptionsHandler = function (onlyOptionsNeeded) {\n      var options = getFilterList(_this.props.filtersList, _this.props.from);\n      var filterOptions = options && !_this.props.isCreateStyleGroup ? options.filter_options : options && _this.props.isCreateStyleGroup ? options.create_filter_options : [];\n      !onlyOptionsNeeded && _this.setState({\n        calendarRange: options && options.calendar_range\n      });\n      return filterOptions;\n    };\n\n    _this.onHierarchyOneSelection = function (val) {\n      var hierarchyClone = _this.filtersOptionsHandler(); //_.cloneDeep(this.props.filtersOptions);\n\n\n      var valiadtion = validations[val[0].label];\n\n      var findIndex = function findIndex(index, key) {\n        return _.findIndex(hierarchyClone, {\n          type: \"\".concat(valiadtion[key][index])\n        });\n      }; //finding index num for swap case from validations\n\n\n      if (valiadtion && !_.isEmpty(valiadtion.swap)) {\n        //swaping filters\n        var a = findIndex(0, 'swap'),\n            b = findIndex(1, 'swap');\n        var temp = hierarchyClone[a];\n        hierarchyClone[a] = hierarchyClone[b];\n        hierarchyClone[b] = temp;\n      }\n\n      if (valiadtion && !_.isEmpty(valiadtion.remove)) {\n        //remove filters case\n        _.map(valiadtion.remove, function (item, i) {\n          _.remove(hierarchyClone, function (itm, index) {\n            return index === findIndex(i, 'remove');\n          });\n        });\n      }\n\n      _this.setState({\n        hierarchy: hierarchyClone\n      });\n\n      return hierarchyClone;\n    };\n\n    _this.getHierarchyOptions =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(val, filterIndex, currFilterName) {\n        var hierarchy, filtersOptions;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                !Array.isArray(val) && (val = [val]);\n                hierarchy = _.cloneDeep(_this.state.hierarchy);\n\n                _this.props.setSelectedFilterData(val, currFilterName);\n\n                if (!(currFilterName === 'hierarchy1')) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 6;\n                return _this.onHierarchyOneSelection(val);\n\n              case 6:\n                hierarchy = _context.sent;\n\n              case 7:\n                if (_.findIndex(hierarchy, {\n                  type: 'hierarchy1'\n                }) > filterIndex) {\n                  filtersOptions = _this.filtersOptionsHandler();\n\n                  _this.setState({\n                    hierarchy: filtersOptions\n                  }); //reset filters that are removed or swapped when filters that comes before H1 are set\n\n                }\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.actionCallHandler = function (func, isHierarchyNext, nextFilterName, req) {\n      var typeName = filterType[nextFilterName];\n      var reqObj = {\n        filters: req,\n        allowInactiveProducts: _this.props.allowInactiveProducts || false\n      };\n      if (isHierarchyNext) reqObj.hierarchyType = typeName;\n      if (!isHierarchyNext) reqObj.filterType = typeName;\n\n      if (nextFilterName === 'customStyleGroup') {\n        var _req = {\n          filters: reqObj.filters,\n          disable_empty_flag: _this.props.disable_empty_flag && !_this.props.isEdit ? _this.props.disable_empty_flag : false\n        };\n        reqObj = _req;\n        func = \"fetchStyleGroups\";\n      }\n\n      if (nextFilterName === 'customStoreGroup') {\n        reqObj = {};\n        func = \"getCustomStores\";\n      }\n\n      _this.props[func](reqObj, nextFilterName);\n    };\n\n    _this.filterOnFocusHandler = function (filterIndex, filterName, isHierarchy) {\n      // console.log(\"Vzsdfkewpwwwwwwwww\", this.props.from, );\n      var options = getFiltersOptions(filterName, _this.props.filtersData);\n      if (filterName && options && !options.callApi && !_.isEmpty(options) || !_this.validateFilters(filterIndex)) //if filter options already exists or if all of the mandatory filters that comes before this filter is not selected , return\n        return;\n      console.log(filterName, 'filterName');\n      var func = isHierarchy ? \"getHierarchyOptions\" : \"getExtraFiltersOptions\";\n      var req = {};\n\n      var filtersOptions = _this.filtersOptionsHandler();\n\n      _.map(filtersOptions, function (item, index) {\n        if (index < filterIndex) {\n          var selected = getSelectedItemsArray(item.type, _this.props.filtersData); // if (_.isEmpty(selected)) return; //uncomment if u want empty filters removed\n\n          req[item.type] = selected; //this goes as filters req obj in api calls\n        }\n      });\n\n      if (filterName && _this.props[func]) {\n        _this.actionCallHandler(func, isHierarchy, filterName, req); //calles next filters action, to get it's options\n\n      }\n    };\n\n    _this.reset = function () {\n      _this.props.onReset();\n\n      _this.props.resetFilters();\n\n      _this.setState({\n        startDate: null,\n        endDate: null\n      }, function () {// if (this.props.from !== 'draft' && this.props.from !== 'status') this.props.resetFilters(); ////////// handling reset issues rising bcs of tabs, only reset this component state, not reducer\n      });\n    };\n\n    _this.onDatesChange = function (_ref2) {\n      var startDate = _ref2.startDate,\n          endDate = _ref2.endDate,\n          weekNumList = _ref2.weekNumList;\n\n      _this.setState({\n        startDate: startDate,\n        endDate: endDate\n      }, function () {\n        _this.props.setSelectedFilterData({\n          startDate: startDate && startDate.format('YYYY-MM-DD'),\n          endDate: endDate && endDate.format('YYYY-MM-DD'),\n          weeks: weekNumList\n        }, 'dateRange');\n      });\n    };\n\n    _this.validateFilters = function (filterIndex, from) {\n      var hierarchy = _this.state.hierarchy;\n      var dateRange = false;\n\n      for (var i = 0; i < filterIndex; i++) {\n        var type = hierarchy[i] && hierarchy[i].type;\n        var selectedItems = getSelectedItems(type, _this.props.filtersData);\n\n        if (from === 'onFilter' && !dateRange && hierarchy[i] && hierarchy[i].type === 'dateRange') {\n          dateRange = true;\n        }\n\n        if (hierarchy[i] && hierarchy[i].type !== 'dateRange' && hierarchy[i].isMandatory && _.isEmpty(selectedItems)) {\n          return false;\n        }\n      }\n\n      if (dateRange && (_.isEmpty(_this.state.startDate) || _.isEmpty(_this.state.endDate))) {\n        return false;\n      }\n\n      return true;\n    };\n\n    _this.onFilterHandler = function () {\n      if (!_this.validateFilters(_this.state.hierarchy.length, 'onFilter')) {\n        toast.error(\"Please select mandatory filters\", {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        return;\n      }\n\n      var filtersOptions = _this.filtersOptionsHandler(true);\n\n      var filtersData = getAllFiltersData(_this.props.filtersData, filtersOptions, _this.props.from);\n\n      _this.props.setLastSavedFilters({\n        filters: filtersData,\n        from: _this.props.from,\n        filtersData: _this.props.filtersData\n      });\n\n      _this.props.onFilter(filtersData);\n    };\n\n    _this.state = {\n      filters: {},\n      startDate: null,\n      endDate: null,\n      calendarRange: [],\n      hierarchy: [],\n      filtersOptions: [],\n      filtersData: {}\n    };\n    return _this;\n  }\n\n  _createClass(Filters, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.location.state && this.props.location.state.fromNotification) {\n        this.props.getHierarchyOptions({\n          filters: {},\n          hierarchyType: 'HIERARCHY1',\n          allowInactiveProducts: this.props.allowInactiveProducts || false\n        }, 'hierarchy1');\n      }\n\n      if (this.props.retainFilters && this.props.location && this.props.location.state && this.props.location.state.styles) {\n        var selectedItems = this.props.location.state.styles.map(function (e) {\n          return {\n            value: e,\n            label: e\n          };\n        });\n        var filter = this.props.groupingLevel && this.props.groupingLevel.type;\n        this.props.setSelectedFilterData(selectedItems, filter, 'reportingToCreateMd');\n      } else if (this.props.keepFilters) {\n        console.log('draftStatus keepFilters', this.props.keepFilters);\n      } else if (!this.props.isEdit && !this.props.retainFilters && !(this.props.location.state && this.props.location.state.fromNotification) && !_.isEmpty(this.props.filtersData)) {\n        var newFilterData = resetFilterData(this.props.filtersData);\n        this.props.setFiltersData(newFilterData);\n      } //call getFiltersList when filtersDAta is not available code\n\n\n      if (_.isEmpty(this.props.filtersData)) {\n        //call getFiltersList first n then take first filter name from there and call the respective api to get first filter options\n        this.props.getFiltersList();\n      } else {\n        var filtersOptions = this.filtersOptionsHandler();\n        !_.isEmpty(filtersOptions) && this.setState({\n          hierarchy: filtersOptions\n        });\n      } // retain filters code\n\n\n      var h1SelectedItems = getSelectedItems('hierarchy1', this.props.filtersData);\n\n      if (this.props.retainFilters && !_.isEmpty(h1SelectedItems)) {\n        this.props.setRetainFilters(false);\n        this.onHierarchyOneSelection(h1SelectedItems);\n        return;\n      }\n\n      this.props.setRetainFilters(false);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (_.isEmpty(this.state.hierarchy) && !_.isEmpty(this.props.filtersList)) {\n        var filtersOptions = this.filtersOptionsHandler();\n        !_.isEmpty(filtersOptions) && this.setState({\n          hierarchy: filtersOptions\n        });\n      }\n\n      if (!_.isEqual(this.state.filtersData, this.props.filtersData)) {\n        var filtersData = _.cloneDeep(this.props.filtersData);\n\n        this.setState({\n          filtersData: filtersData\n        });\n      }\n\n      if (this.props.location.state && this.props.location.state.fromNotification) {}\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var labels = _.cloneDeep(this.props.filtersLabels);\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: this.props.isEdit ? 'row d-flex ml-4 mr-4 edit-markdown-filters' : ' d-flex row ml-4 mr-4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, !_.isEmpty(this.state.hierarchy) && !_.isEmpty(this.state.filtersData) && this.state.hierarchy.map(function (filter, i) {\n        return labels[filter.type] && filter.type !== 'dateRange' ? React.createElement(\"div\", {\n          className: \"col-md-2 \",\n          key: filter.type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"mb-1 mt-3\",\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        }, labels[filter.type], filter.isMandatory ? React.createElement(\"span\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, \" * \") : null), React.createElement(Select, {\n          name: filter.type,\n          options: _this2.state.filtersData[filter.type] && _this2.state.filtersData[filter.type].options,\n          onFocus: function onFocus(e) {\n            return _this2.filterOnFocusHandler(i, filter.type, filter.isHierarchy);\n          },\n          onChange: function onChange(option) {\n            return _this2.getHierarchyOptions(option, i, filter.type, filter.isHierarchy, _this2.state.hierarchy[i + 1] && _this2.state.hierarchy[i + 1].type, _this2.state.hierarchy[i + 1] && _this2.state.hierarchy[i + 1].isHierarchy);\n          },\n          value: _this2.state.filtersData[filter.type] && _this2.state.filtersData[filter.type].selectedItems,\n          isMulti: filter.isMultiple,\n          isDisabled: i === 0 && _this2.props.styleGroupEdit || i === 2 && _this2.props.storeClusterDisable || i === 3 && _this2.props.storeClusterDisable || i === 4 && _this2.props.storeClusterDisable ? true : false // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        })) : labels[filter.type] && filter.type === 'dateRange' ? React.createElement(\"div\", {\n          className: \"col-md-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"mb-1 mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          },\n          __self: this\n        }, \"Date range \", React.createElement(\"span\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }, \" * \")), React.createElement(DateRangePicker, {\n          startDate: _this2.state.startDate,\n          startDateId: \"startDate_11\",\n          endDate: _this2.state.endDate,\n          endDateId: \"endDate_11\",\n          onDatesChange: _this2.onDatesChange,\n          calendarRange: _this2.state.calendarRange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        })) : null;\n      }), !this.props.hidefilterButton && React.createElement(\"div\", {\n        className: !this.props.dateRange && !this.props.hideCustomStores ? 'col-md-2 mt-5 px-0' //'col-md-3 mt-4  ml-auto text-right'\n        : 'col-md-3 mt-5',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        disabled: this.props.isEdit,\n        onClick: this.onFilterHandler,\n        className: !this.props.dateRange && !this.props.hideCustomStores ? 'col-md-5 btn btn-primary btn-filter ml-2' : 'col-md-4 btn btn-primary btn-filter',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }), \"\\xA0 Filter\")), React.createElement(\"button\", {\n        disabled: this.props.isEdit || this.props.styleGroupEdit,\n        className: !this.props.dateRange && !this.props.hideCustomStores ? ' col-md-5 btn btn-primary btn-filter btn-filter-reset ml-3' : 'col-md-4 offset-1 btn btn-primary btn-filter btn-filter-reset',\n        onClick: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-repeat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }), \"\\xA0 Reset\")))));\n    }\n  }]);\n\n  return Filters;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    filtersList: store.filtersReducer.filtersList,\n    filtersLabels: store.filtersReducer.filtersLabels,\n    groupingLevel: store.filtersReducer.groupingLevel,\n    filtersData: store.filtersReducer.filtersData,\n    retainFilters: store.filtersReducer.retainFilters\n  };\n};\n\nvar mapDispatchToProps = {\n  getFiltersList: FilterActions.getFiltersList,\n  getHierarchyOptions: FilterActions.getHierarchyOptions,\n  getExtraFiltersOptions: FilterActions.getExtraFiltersOptions,\n  getCustomStores: FilterActions.getCustomStores,\n  fetchStyleGroups: FilterActions.fetchStyleGroups,\n  setSelectedFilterData: FilterActions.setSelectedFilterData,\n  setFiltersData: FilterActions.setFiltersData,\n  resetFilters: FilterActions.resetFilters,\n  setRetainFilters: FilterActions.setRetainFilters,\n  setLastSavedFilters: FilterActions.setLastSavedFilters\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Filters));","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/services/filters/index.js"],"names":["React","Component","withRouter","validations","filterType","reportingToCreateMdFilterToRetain","Select","connect","DateRangePicker","FilterActions","toast","_","getSelectedItemsArray","getSelectedItems","getFiltersOptions","resetFilterData","getFilterList","getAllFiltersData","Filters","props","filtersOptionsHandler","onlyOptionsNeeded","options","filtersList","from","filterOptions","isCreateStyleGroup","filter_options","create_filter_options","setState","calendarRange","calendar_range","onHierarchyOneSelection","val","hierarchyClone","valiadtion","label","findIndex","index","key","type","isEmpty","swap","a","b","temp","remove","map","item","i","itm","hierarchy","getHierarchyOptions","filterIndex","currFilterName","Array","isArray","cloneDeep","state","setSelectedFilterData","filtersOptions","actionCallHandler","func","isHierarchyNext","nextFilterName","req","typeName","reqObj","filters","allowInactiveProducts","hierarchyType","disable_empty_flag","isEdit","filterOnFocusHandler","filterName","isHierarchy","filtersData","callApi","validateFilters","console","log","selected","reset","onReset","resetFilters","startDate","endDate","onDatesChange","weekNumList","format","weeks","dateRange","selectedItems","isMandatory","onFilterHandler","length","error","autoClose","hideProgressBar","setLastSavedFilters","onFilter","location","fromNotification","retainFilters","styles","e","value","filter","groupingLevel","keepFilters","newFilterData","setFiltersData","getFiltersList","h1SelectedItems","setRetainFilters","prevProps","prevState","isEqual","labels","filtersLabels","whiteSpace","color","option","isMultiple","styleGroupEdit","storeClusterDisable","hidefilterButton","hideCustomStores","mapStateToProps","store","filtersReducer","mapDispatchToProps","getExtraFiltersOptions","getCustomStores","fetchStyleGroups"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { validations, filterType, reportingToCreateMdFilterToRetain } from './config';\nimport Select from '../select';\nimport './index.css';\nimport { connect } from 'react-redux';\nimport DateRangePicker from '../RetailCalendarDatePicker';\nimport FilterActions from '../../actions/filtersAction';\nimport { toast } from 'react-toastify';\nimport _ from 'lodash';\nimport {\n  getSelectedItemsArray,\n  getSelectedItems,\n  getFiltersOptions,\n  resetFilterData,\n  getFilterList,\n  getAllFiltersData,\n} from '../../helper/filterHelperFuncs';\n\nclass Filters extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filters: {},\n      startDate: null,\n      endDate: null,\n      calendarRange: [],\n      hierarchy: [],\n      filtersOptions: [],\n      filtersData: {},\n    };\n  }\n  filtersOptionsHandler = (onlyOptionsNeeded) => {\n    let options = getFilterList(this.props.filtersList, this.props.from);\n    let filterOptions =\n      options && !this.props.isCreateStyleGroup\n        ? options.filter_options\n        : options && this.props.isCreateStyleGroup\n        ? options.create_filter_options\n        : [];\n    !onlyOptionsNeeded && this.setState({ calendarRange: options && options.calendar_range });\n    return filterOptions;\n  };\n  componentDidMount() {\n    if (this.props.location.state && this.props.location.state.fromNotification) {\n      this.props.getHierarchyOptions(\n        {\n          filters: {},\n          hierarchyType: 'HIERARCHY1',\n          allowInactiveProducts: this.props.allowInactiveProducts || false,\n        },\n        'hierarchy1'\n      );\n    }\n    if (\n      this.props.retainFilters &&\n      this.props.location &&\n      this.props.location.state &&\n      this.props.location.state.styles\n    ) {\n      let selectedItems = this.props.location.state.styles.map((e) => {\n        return { value: e, label: e };\n      });\n      let filter = this.props.groupingLevel && this.props.groupingLevel.type;\n      this.props.setSelectedFilterData(selectedItems, filter, 'reportingToCreateMd');\n    } else if (this.props.keepFilters) {\n      console.log('draftStatus keepFilters', this.props.keepFilters);\n    } else if (\n      !this.props.isEdit &&\n      !this.props.retainFilters &&\n      !(this.props.location.state && this.props.location.state.fromNotification) &&\n      !_.isEmpty(this.props.filtersData)\n    ) {\n      let newFilterData = resetFilterData(this.props.filtersData);\n      this.props.setFiltersData(newFilterData);\n    }\n\n    //call getFiltersList when filtersDAta is not available code\n    if (_.isEmpty(this.props.filtersData)) {\n      //call getFiltersList first n then take first filter name from there and call the respective api to get first filter options\n      this.props.getFiltersList();\n    } else {\n      let filtersOptions = this.filtersOptionsHandler();\n      !_.isEmpty(filtersOptions) && this.setState({ hierarchy: filtersOptions });\n    }\n    // retain filters code\n    let h1SelectedItems = getSelectedItems('hierarchy1', this.props.filtersData);\n    if (this.props.retainFilters && !_.isEmpty(h1SelectedItems)) {\n      this.props.setRetainFilters(false);\n      this.onHierarchyOneSelection(h1SelectedItems);\n      return;\n    }\n    this.props.setRetainFilters(false);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (_.isEmpty(this.state.hierarchy) && !_.isEmpty(this.props.filtersList)) {\n      let filtersOptions = this.filtersOptionsHandler();\n      !_.isEmpty(filtersOptions) && this.setState({ hierarchy: filtersOptions });\n    }\n    if (!_.isEqual(this.state.filtersData, this.props.filtersData)) {\n      let filtersData = _.cloneDeep(this.props.filtersData);\n      this.setState({ filtersData });\n    }\n    if (this.props.location.state && this.props.location.state.fromNotification) {\n    }\n  }\n  onHierarchyOneSelection = (val) => {\n    let hierarchyClone = this.filtersOptionsHandler(); //_.cloneDeep(this.props.filtersOptions);\n    let valiadtion = validations[val[0].label];\n    let findIndex = (index, key) =>\n      _.findIndex(hierarchyClone, {\n        type: `${valiadtion[key][index]}`,\n      }); //finding index num for swap case from validations\n    if (valiadtion && !_.isEmpty(valiadtion.swap)) {\n      //swaping filters\n      let a = findIndex(0, 'swap'),\n        b = findIndex(1, 'swap');\n      let temp = hierarchyClone[a];\n\n      hierarchyClone[a] = hierarchyClone[b];\n      hierarchyClone[b] = temp;\n    }\n    if (valiadtion && !_.isEmpty(valiadtion.remove)) {\n      //remove filters case\n      _.map(valiadtion.remove, (item, i) => {\n        _.remove(hierarchyClone, (itm, index) => index === findIndex(i, 'remove'));\n      });\n    }\n    this.setState({ hierarchy: hierarchyClone });\n    return hierarchyClone;\n  };\n\n  getHierarchyOptions = async (val, filterIndex, currFilterName) => {\n    !Array.isArray(val) && (val = [val]);\n    let hierarchy = _.cloneDeep(this.state.hierarchy);\n    this.props.setSelectedFilterData(val, currFilterName);\n\n    if (currFilterName === 'hierarchy1') {\n      //Division selected case\n      hierarchy = await this.onHierarchyOneSelection(val); //returns updated hierarchy data;\n    }\n    if (_.findIndex(hierarchy, { type: 'hierarchy1' }) > filterIndex) {\n      let filtersOptions = this.filtersOptionsHandler();\n      this.setState({ hierarchy: filtersOptions }); //reset filters that are removed or swapped when filters that comes before H1 are set\n    }\n  };\n  actionCallHandler = (func, isHierarchyNext, nextFilterName, req) => {\n    let typeName = filterType[nextFilterName];\n    let reqObj = {\n      filters: req,\n      allowInactiveProducts: this.props.allowInactiveProducts || false,\n    };\n    if (isHierarchyNext) reqObj.hierarchyType = typeName;\n    if (!isHierarchyNext) reqObj.filterType = typeName;\n    if (nextFilterName === 'customStyleGroup') {\n      let req = {\n        filters: reqObj.filters,\n        disable_empty_flag:\n          this.props.disable_empty_flag && !this.props.isEdit\n            ? this.props.disable_empty_flag\n            : false,\n      };\n      reqObj = req;\n      func = `fetchStyleGroups`;\n    }\n    if (nextFilterName === 'customStoreGroup') {\n      reqObj = {};\n      func = `getCustomStores`;\n    }\n\n    this.props[func](reqObj, nextFilterName);\n  };\n  filterOnFocusHandler = (filterIndex, filterName, isHierarchy) => {\n    // console.log(\"Vzsdfkewpwwwwwwwww\", this.props.from, );\n    let options = getFiltersOptions(filterName, this.props.filtersData);\n    if (\n      (filterName && options && !options.callApi && !_.isEmpty(options)) ||\n      !this.validateFilters(filterIndex)\n    )\n      //if filter options already exists or if all of the mandatory filters that comes before this filter is not selected , return\n      return;\n    console.log(filterName, 'filterName');\n    let func = isHierarchy ? `getHierarchyOptions` : `getExtraFiltersOptions`;\n    let req = {};\n    let filtersOptions = this.filtersOptionsHandler();\n    _.map(filtersOptions, (item, index) => {\n      if (index < filterIndex) {\n        let selected = getSelectedItemsArray(item.type, this.props.filtersData);\n        // if (_.isEmpty(selected)) return; //uncomment if u want empty filters removed\n\n        req[item.type] = selected; //this goes as filters req obj in api calls\n      }\n    });\n    if (filterName && this.props[func]) {\n      this.actionCallHandler(func, isHierarchy, filterName, req); //calles next filters action, to get it's options\n    }\n  };\n\n  reset = () => {\n    this.props.onReset();\n    this.props.resetFilters();\n    this.setState(\n      {\n        startDate: null,\n        endDate: null,\n      },\n      () => {\n        // if (this.props.from !== 'draft' && this.props.from !== 'status') this.props.resetFilters(); ////////// handling reset issues rising bcs of tabs, only reset this component state, not reducer\n      }\n    );\n  };\n  onDatesChange = ({ startDate, endDate, weekNumList }) => {\n    this.setState(\n      {\n        startDate,\n        endDate,\n      },\n      () => {\n        this.props.setSelectedFilterData(\n          {\n            startDate: startDate && startDate.format('YYYY-MM-DD'),\n            endDate: endDate && endDate.format('YYYY-MM-DD'),\n            weeks: weekNumList,\n          },\n          'dateRange'\n        );\n      }\n    );\n  };\n\n  validateFilters = (filterIndex, from) => {\n    let { hierarchy } = this.state;\n    let dateRange = false;\n    for (let i = 0; i < filterIndex; i++) {\n      let type = hierarchy[i] && hierarchy[i].type;\n\n      let selectedItems = getSelectedItems(type, this.props.filtersData);\n      if (from === 'onFilter' && !dateRange && hierarchy[i] && hierarchy[i].type === 'dateRange') {\n        dateRange = true;\n      }\n      if (\n        hierarchy[i] &&\n        hierarchy[i].type !== 'dateRange' &&\n        hierarchy[i].isMandatory &&\n        _.isEmpty(selectedItems)\n      ) {\n        return false;\n      }\n    }\n    if (dateRange && (_.isEmpty(this.state.startDate) || _.isEmpty(this.state.endDate))) {\n      return false;\n    }\n    return true;\n  };\n  onFilterHandler = () => {\n    if (!this.validateFilters(this.state.hierarchy.length, 'onFilter')) {\n      toast.error(`Please select mandatory filters`, {\n        autoClose: 15000,\n        hideProgressBar: true,\n      });\n      return;\n    }\n    let filtersOptions = this.filtersOptionsHandler(true);\n    let filtersData = getAllFiltersData(this.props.filtersData, filtersOptions, this.props.from);\n    this.props.setLastSavedFilters({\n      filters: filtersData,\n      from: this.props.from,\n      filtersData: this.props.filtersData,\n    });\n\n    this.props.onFilter(filtersData);\n  };\n  render() {\n    let labels = _.cloneDeep(this.props.filtersLabels);\n    return (\n      <React.Fragment>\n        <div\n          className={\n            this.props.isEdit\n              ? 'row d-flex ml-4 mr-4 edit-markdown-filters'\n              : ' d-flex row ml-4 mr-4'\n          }>\n          {!_.isEmpty(this.state.hierarchy) &&\n            !_.isEmpty(this.state.filtersData) &&\n            this.state.hierarchy.map((filter, i) =>\n              labels[filter.type] && filter.type !== 'dateRange' ? (\n                <div className=\"col-md-2 \" key={filter.type}>\n                  <label className=\"mb-1 mt-3\" style={{ whiteSpace: 'nowrap' }}>\n                    {labels[filter.type]}\n                    {filter.isMandatory ? <span style={{ color: 'red' }}> * </span> : null}\n                  </label>\n                  <Select\n                    name={filter.type}\n                    options={\n                      this.state.filtersData[filter.type] &&\n                      this.state.filtersData[filter.type].options\n                    }\n                    onFocus={(e) => this.filterOnFocusHandler(i, filter.type, filter.isHierarchy)}\n                    onChange={(option) =>\n                      this.getHierarchyOptions(\n                        option,\n                        i,\n                        filter.type,\n                        filter.isHierarchy,\n                        this.state.hierarchy[i + 1] && this.state.hierarchy[i + 1].type,\n                        this.state.hierarchy[i + 1] && this.state.hierarchy[i + 1].isHierarchy\n                      )\n                    }\n                    value={\n                      this.state.filtersData[filter.type] &&\n                      this.state.filtersData[filter.type].selectedItems\n                    }\n                    isMulti={filter.isMultiple}\n                    isDisabled={\n                      (i === 0 && this.props.styleGroupEdit) ||\n                      (i === 2 && this.props.storeClusterDisable) ||\n                      (i === 3 && this.props.storeClusterDisable) ||\n                      (i === 4 && this.props.storeClusterDisable)\n                        ? true\n                        : false\n                    }\n                    // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n                  />\n                </div>\n              ) : labels[filter.type] && filter.type === 'dateRange' ? (\n                <div className=\"col-md-3\">\n                  <label className=\"mb-1 mt-3\">\n                    Date range <span style={{ color: 'red' }}> * </span>\n                  </label>\n                  <DateRangePicker\n                    startDate={this.state.startDate}\n                    startDateId=\"startDate_11\"\n                    endDate={this.state.endDate}\n                    endDateId=\"endDate_11\"\n                    onDatesChange={this.onDatesChange}\n                    calendarRange={this.state.calendarRange}\n                  />\n                </div>\n              ) : null\n            )}\n\n          {!this.props.hidefilterButton && (\n            <div\n              className={\n                !this.props.dateRange && !this.props.hideCustomStores\n                  ? 'col-md-2 mt-5 px-0' //'col-md-3 mt-4  ml-auto text-right'\n                  : 'col-md-3 mt-5'\n              }>\n              <button\n                disabled={this.props.isEdit}\n                onClick={this.onFilterHandler}\n                className={\n                  !this.props.dateRange && !this.props.hideCustomStores\n                    ? 'col-md-5 btn btn-primary btn-filter ml-2'\n                    : 'col-md-4 btn btn-primary btn-filter'\n                }>\n                <span>\n                  <i className=\"fa fa-filter\"></i>&nbsp; Filter\n                </span>\n              </button>\n              <button\n                disabled={this.props.isEdit || this.props.styleGroupEdit}\n                className={\n                  !this.props.dateRange && !this.props.hideCustomStores\n                    ? ' col-md-5 btn btn-primary btn-filter btn-filter-reset ml-3'\n                    : 'col-md-4 offset-1 btn btn-primary btn-filter btn-filter-reset'\n                }\n                onClick={this.reset}>\n                <span>\n                  <i className=\"fa fa-repeat\"></i>&nbsp; Reset\n                </span>\n              </button>\n            </div>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    filtersList: store.filtersReducer.filtersList,\n    filtersLabels: store.filtersReducer.filtersLabels,\n    groupingLevel: store.filtersReducer.groupingLevel,\n\n    filtersData: store.filtersReducer.filtersData,\n    retainFilters: store.filtersReducer.retainFilters,\n  };\n};\nconst mapDispatchToProps = {\n  getFiltersList: FilterActions.getFiltersList,\n\n  getHierarchyOptions: FilterActions.getHierarchyOptions,\n  getExtraFiltersOptions: FilterActions.getExtraFiltersOptions,\n  getCustomStores: FilterActions.getCustomStores,\n  fetchStyleGroups: FilterActions.fetchStyleGroups,\n\n  setSelectedFilterData: FilterActions.setSelectedFilterData,\n\n  setFiltersData: FilterActions.setFiltersData,\n\n  resetFilters: FilterActions.resetFilters,\n  setRetainFilters: FilterActions.setRetainFilters,\n\n  setLastSavedFilters: FilterActions.setLastSavedFilters,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Filters));\n"]},"metadata":{},"sourceType":"module"}