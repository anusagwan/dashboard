{"ast":null,"code":"import axios from '../utils/axios';\nimport { config } from '../utils/config';\nimport _ from 'lodash';\nvar reportingActions = {\n  onReset: function onReset() {\n    return function (dispatch) {\n      dispatch({\n        type: 'RESET_REPORTING_DATA'\n      });\n    };\n  },\n  getReportingData: function getReportingData(req) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getReporting/\"),\n        method: 'POST',\n        data: req\n      }).then(function (resp) {\n        if (req.reportingType === 'week_level_aggregated_data') {\n          dispatch({\n            type: 'SET_REPORTING_DATA',\n            payload: resp.data.data && (Object.keys(resp.data.data.sell_through).length || Object.keys(resp.data.data.margin).length || Object.keys(resp.data.data.inventory).length || resp.data.data.sales.ty || resp.data.data.sales.ly) ? resp.data.data : {\n              message: 'No data found. Please try with different filters.'\n            }\n          });\n          dispatch({\n            type: 'GET_SKU_COCKPIT',\n            payload: []\n          });\n        } else {\n          var formattedTableData = []; // if (resp.data.data.length) {\n          //   let tableData = resp.data.data;\n          //   let uniqStyleGrp = _.uniqBy(tableData, 'style_group'); //find uniq styleGroups to format data in styleGroup level\n          //   _.map(uniqStyleGrp, (styleGroup) => {\n          //     let styleGrpObject = { style_group: styleGroup.style_group, subRows: [] }; //styleGroup Level\n          //     _.map(tableData, (custmStyleGrp) => {\n          //       if (custmStyleGrp.style_group === styleGroup.style_group) {\n          //         // customer style group level\n          //         let styleColorSubRows = [];\n          //         _.map(tableData, (styleColor) => {\n          //           if (\n          //             custmStyleGrp.style_group === styleColor.style_group &&\n          //             custmStyleGrp.custom_style_group === styleColor.custom_style_group\n          //           ) {\n          //             // customer style group level\n          //             styleColorSubRows.push(styleColor);\n          //           }\n          //         });\n          //         styleGrpObject.subRows.push({\n          //           custom_style_group: custmStyleGrp.custom_style_group\n          //             ? custmStyleGrp.custom_style_group\n          //             : 'untagged',\n          //           subRows: styleColorSubRows,\n          //         });\n          //         styleGrpObject.subRows = _.uniqBy(styleGrpObject.subRows, 'custom_style_group'); // remove duplicate rows\n          //       }\n          //     });\n          //     formattedTableData.push(styleGrpObject);\n          //   });\n          // }\n\n          dispatch({\n            type: 'GET_SKU_COCKPIT',\n            payload: resp.data.data.length ? resp.data.data //formattedTableData\n            : {\n              message: 'No data found. Please try with different filters.'\n            }\n          });\n          dispatch({\n            type: 'GET_COLUMNHEADERS'\n          });\n        }\n\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  }\n};\nexport default reportingActions;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/reportingActions.js"],"names":["axios","config","_","reportingActions","onReset","dispatch","type","getReportingData","req","payload","status","url","createMarkdownURL","method","data","then","resp","reportingType","Object","keys","sell_through","length","margin","inventory","sales","ty","ly","message","formattedTableData","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,OAAO,EAAE,mBAAM;AACb,WAAO,UAACC,QAAD,EAAc;AACnBA,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGD,KAJD;AAKD,GAPsB;AAQvBC,EAAAA,gBAAgB,EAAE,0BAACC,GAAD,EAAS;AACzB,WAAO,UAACH,QAAD,EAAc;AACnBA,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,cADC;AAEPG,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE;AADD;AAFF,OAAD,CAAR;AAMAV,MAAAA,KAAK,CAAC;AACJW,QAAAA,GAAG,YAAKV,MAAM,CAACW,iBAAZ,mBADC;AAEJC,QAAAA,MAAM,EAAE,MAFJ;AAGJC,QAAAA,IAAI,EAAEN;AAHF,OAAD,CAAL,CAKGO,IALH,CAKQ,UAACC,IAAD,EAAU;AACd,YAAIR,GAAG,CAACS,aAAJ,KAAsB,4BAA1B,EAAwD;AACtDZ,UAAAA,QAAQ,CAAC;AACPC,YAAAA,IAAI,EAAE,oBADC;AAEPG,YAAAA,OAAO,EACLO,IAAI,CAACF,IAAL,CAAUA,IAAV,KACCI,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACF,IAAL,CAAUA,IAAV,CAAeM,YAA3B,EAAyCC,MAAzC,IACCH,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACF,IAAL,CAAUA,IAAV,CAAeQ,MAA3B,EAAmCD,MADpC,IAECH,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACF,IAAL,CAAUA,IAAV,CAAeS,SAA3B,EAAsCF,MAFvC,IAGCL,IAAI,CAACF,IAAL,CAAUA,IAAV,CAAeU,KAAf,CAAqBC,EAHtB,IAICT,IAAI,CAACF,IAAL,CAAUA,IAAV,CAAeU,KAAf,CAAqBE,EALvB,IAMIV,IAAI,CAACF,IAAL,CAAUA,IANd,GAOI;AAAEa,cAAAA,OAAO,EAAE;AAAX;AAVC,WAAD,CAAR;AAYAtB,UAAAA,QAAQ,CAAC;AACPC,YAAAA,IAAI,EAAE,iBADC;AAEPG,YAAAA,OAAO,EAAE;AAFF,WAAD,CAAR;AAID,SAjBD,MAiBO;AACL,cAAImB,kBAAkB,GAAG,EAAzB,CADK,CAEL;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACAvB,UAAAA,QAAQ,CAAC;AACPC,YAAAA,IAAI,EAAE,iBADC;AAEPG,YAAAA,OAAO,EAAEO,IAAI,CAACF,IAAL,CAAUA,IAAV,CAAeO,MAAf,GACLL,IAAI,CAACF,IAAL,CAAUA,IADL,CACU;AADV,cAEL;AAAEa,cAAAA,OAAO,EAAE;AAAX;AAJG,WAAD,CAAR;AAMAtB,UAAAA,QAAQ,CAAC;AACPC,YAAAA,IAAI,EAAE;AADC,WAAD,CAAR;AAGD;;AACDD,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAE,cADC;AAEPG,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE;AADD;AAFF,SAAD,CAAR;AAMD,OA3EH,EA4EGmB,KA5EH,CA4ES,UAACC,GAAD,EAAS;AACdzB,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAE,cADC;AAEPG,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE;AADD;AAFF,SAAD,CAAR;AAMD,OAnFH;AAoFD,KA3FD;AA4FD;AArGsB,CAAzB;AAwGA,eAAeP,gBAAf","sourcesContent":["import axios from '../utils/axios';\nimport { config } from '../utils/config';\nimport _ from 'lodash';\n\nconst reportingActions = {\n  onReset: () => {\n    return (dispatch) => {\n      dispatch({\n        type: 'RESET_REPORTING_DATA',\n      });\n    };\n  },\n  getReportingData: (req) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        url: `${config.createMarkdownURL}/getReporting/`,\n        method: 'POST',\n        data: req,\n      })\n        .then((resp) => {\n          if (req.reportingType === 'week_level_aggregated_data') {\n            dispatch({\n              type: 'SET_REPORTING_DATA',\n              payload:\n                resp.data.data &&\n                (Object.keys(resp.data.data.sell_through).length ||\n                  Object.keys(resp.data.data.margin).length ||\n                  Object.keys(resp.data.data.inventory).length ||\n                  resp.data.data.sales.ty ||\n                  resp.data.data.sales.ly)\n                  ? resp.data.data\n                  : { message: 'No data found. Please try with different filters.' },\n            });\n            dispatch({\n              type: 'GET_SKU_COCKPIT',\n              payload: [],\n            });\n          } else {\n            let formattedTableData = [];\n            // if (resp.data.data.length) {\n            //   let tableData = resp.data.data;\n            //   let uniqStyleGrp = _.uniqBy(tableData, 'style_group'); //find uniq styleGroups to format data in styleGroup level\n\n            //   _.map(uniqStyleGrp, (styleGroup) => {\n            //     let styleGrpObject = { style_group: styleGroup.style_group, subRows: [] }; //styleGroup Level\n\n            //     _.map(tableData, (custmStyleGrp) => {\n            //       if (custmStyleGrp.style_group === styleGroup.style_group) {\n            //         // customer style group level\n            //         let styleColorSubRows = [];\n            //         _.map(tableData, (styleColor) => {\n            //           if (\n            //             custmStyleGrp.style_group === styleColor.style_group &&\n            //             custmStyleGrp.custom_style_group === styleColor.custom_style_group\n            //           ) {\n            //             // customer style group level\n            //             styleColorSubRows.push(styleColor);\n            //           }\n            //         });\n\n            //         styleGrpObject.subRows.push({\n            //           custom_style_group: custmStyleGrp.custom_style_group\n            //             ? custmStyleGrp.custom_style_group\n            //             : 'untagged',\n            //           subRows: styleColorSubRows,\n            //         });\n            //         styleGrpObject.subRows = _.uniqBy(styleGrpObject.subRows, 'custom_style_group'); // remove duplicate rows\n            //       }\n            //     });\n\n            //     formattedTableData.push(styleGrpObject);\n            //   });\n            // }\n            dispatch({\n              type: 'GET_SKU_COCKPIT',\n              payload: resp.data.data.length\n                ? resp.data.data //formattedTableData\n                : { message: 'No data found. Please try with different filters.' },\n            });\n            dispatch({\n              type: 'GET_COLUMNHEADERS',\n            });\n          }\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n};\n\nexport default reportingActions;\n"]},"metadata":{},"sourceType":"module"}