{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/draftStatus/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  li.nav-item {\\n    padding-right: 0;\\n  }\\n\\n  .nav-tabs .nav-item.show .nav-link,\\n  .nav-tabs .nav-link.active {\\n    background: none;\\n    border-bottom: 2px solid #44667a;\\n  }\\n  .nav-tabs .nav-link {\\n    border: 0px;\\n  }\\n  .nav-link {\\n    padding: 0 0.5rem;\\n  }\\n  .nav-tabs {\\n    margin-bottom: 1.3rem;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport LoadingOverlay from '../../utils/Loader';\nimport draftStausAction from '../../actions/draftStausFinalizeAction';\nimport styled from 'styled-components';\nimport Draft from './draft';\nimport Status from './status';\nimport './draftStatus.css';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { toPercentage, toPercentageWithDecimalDraft, toDollarWithlDraft, toUnitDraft, toFixedToTwoDraft } from '../../helper/formatter';\nimport draftColdef from './draft/coldef';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox';\n\nfunction FormatterStyling(props, value, val) {\n  var val1 = val || val == 0 ? val : props.value;\n  var props1 = val || val == 0 ? {\n    value: val\n  } : props;\n  console.log(val1, 'formval', props1);\n\n  if (value == 'pvh_units' || value == 'markdown_units' || value == 'overall_pvh_units' || value == 'overall_markdown_units') {\n    return val1 || val1 == 0 ? toUnitDraft(props1) : '-';\n  } else if (value == 'margin_perc' || value == 'overall_margin_perc') {\n    return val1 || val1 == 0 ? toPercentage(props1) : '-';\n  } else if (value == 'revenue$' || value == 'aur' || value == 'margin$' || value == 'aum' || value == 'overall_aum' || value == 'overall_revenue$' || value == 'overall_aur' || value == 'overall_margin$') {\n    return val1 || val1 == 0 ? toDollarWithlDraft(props1) : '-';\n  }\n\n  return '-';\n}\n\nvar DraftStatus =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DraftStatus, _Component);\n\n  function DraftStatus(_props) {\n    var _this;\n\n    _classCallCheck(this, DraftStatus);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DraftStatus).call(this, _props));\n\n    _this.scenarioSelectedHandler = function (value, row) {\n      _this.setState({\n        scenarioSelected: {\n          value: value,\n          row: row\n        }\n      });\n    };\n\n    _this.onToggleTab = function (tab) {\n      _this.setState({\n        toggle: !_this.state.toggle,\n        currentTab: tab\n      });\n\n      tab === 'draft' ? _this.getMarkdowns({\n        status: 'draft'\n      }) : _this.getMarkdowns();\n    };\n\n    _this.onHandleSelect = function (selOptions, proceed) {\n      if (!_.isEqual(_this.state.selectedItems, selOptions) || proceed) {\n        var headers = _.cloneDeep(_this.state.columns);\n\n        _.remove(headers, function (item) {\n          return item.metric;\n        });\n\n        selOptions.forEach(function (item) {\n          var newTableCols = headers.filter(function (a) {\n            return a.accessor === item.value;\n          });\n\n          if (newTableCols.length == 0) {\n            var spliceAt = headers.length - 1;\n            headers.splice(spliceAt, 0, {\n              Header: item.label,\n              accessor: item.value,\n              disableGroupBy: true,\n              // Cell: (props) => {\n              //   return console.log(props.row.values.margin$, 'propospos');\n              // },\n              Cell: function Cell(props) {\n                return FormatterStyling(props, item.value);\n              },\n              Aggregated: function Aggregated(props) {\n                var accessorName = \"overall_\".concat(item.value);\n                var val = props.row.original[accessorName];\n                return FormatterStyling(props, accessorName, val); // return <span>{val ? Math.round(val) : '-'}</span>;\n              },\n              metric: true\n            });\n          }\n        });\n\n        _this.setState({\n          columns: headers,\n          selectedItems: selOptions\n        });\n      }\n    };\n\n    _this.onHandleCheckBox = function (e, label, index) {\n      //adding\n      if (e.target.checked) {\n        if (_this.state.selLabels.indexOf(label) === -1) {\n          var labels = [].concat(_toConsumableArray(_this.state.selLabels), [label]);\n          var tempArr = [];\n          labels.forEach(function (label) {\n            var columns = _this.props.getColumnHeaders[label];\n            var labelColumns = Object.keys(columns);\n            var options = labelColumns.map(function (label) {\n              return {\n                label: label,\n                value: columns[label]\n              };\n            });\n            tempArr.push.apply(tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selLabels: labels,\n            columnOptions: tempArr\n          });\n        }\n      } else {\n        //removing\n        var _index = _this.state.selLabels.indexOf(label);\n\n        if (_index !== -1) {\n          var selectedLabel = _.cloneDeep(_this.state.selLabels);\n\n          selectedLabel.splice(_index, 1);\n          var _tempArr = [];\n          selectedLabel.forEach(function (label) {\n            var columns = _this.props.getColumnHeaders[label];\n            var labelColumns = Object.keys(columns);\n            var options = labelColumns.map(function (label) {\n              return {\n                label: label,\n                value: columns[label]\n              };\n            });\n\n            _tempArr.push.apply(_tempArr, _toConsumableArray(options));\n          });\n\n          var selectedItemsClone = _.cloneDeep(_this.state.selectedItems);\n\n          var newSelectedItems = [];\n          var labelArr = Object.keys(_this.props.getColumnHeaders[label]);\n          selectedItemsClone.forEach(function (item) {\n            if (!labelArr.includes(item.label)) {\n              newSelectedItems.push(item);\n            }\n          });\n\n          _this.onHandleSelect(newSelectedItems);\n\n          _this.setState({\n            selLabels: selectedLabel,\n            columnOptions: _tempArr,\n            selectedItems: newSelectedItems\n          });\n        }\n      }\n    };\n\n    _this.getMarkdowns = function (payload) {\n      _this.props.getMarkdowns(payload).then(function (resp) {\n        var tempStatusObj = {};\n\n        _this.props.markdowns.forEach(function (row) {\n          if (tempStatusObj.hasOwnProperty(row.status)) {\n            tempStatusObj[row.status] += 1;\n          } else {\n            tempStatusObj[\"\".concat(row.status)] = 1;\n          }\n        });\n\n        _this.setState({\n          statusCounts: tempStatusObj\n        });\n\n        if (resp && resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n          (function () {\n            var defaultHeader = Object.keys(resp.columnHeaders.default);\n            var setDefaultColDef = draftColdef().filter(function (col) {\n              return defaultHeader.includes(col.Header) || col.Header === 'Time Period' || // (this.state.toggle && col.Header === 'Actions') ||\n              col.id === 'expander' || _this.state.toggle && col.accessor === 'status';\n            });\n            var setDefaultLabel = [];\n            var setDefaultColumnOptions = [];\n            var setDefaultColumnOptions1 = [];\n            var setDefaultItems = [];\n\n            var colHeaders = _.cloneDeep(resp.columnHeaders);\n\n            var labels = Object.keys(colHeaders);\n            labels.splice(labels.indexOf('fixed'), 1);\n            labels.splice(labels.indexOf('default'), 1);\n\n            var _loop = function _loop() {\n              var label = _labels[_i];\n              var labelArray = Object.keys(resp.columnHeaders[label]);\n\n              function diff() {\n                var A = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : labelArray;\n                var B = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultHeader;\n                return A.filter(function (a) {\n                  return B.indexOf(a) !== -1;\n                });\n              }\n\n              if (diff().length) {\n                setDefaultColumnOptions.push.apply(setDefaultColumnOptions, _toConsumableArray(Object.keys(resp.columnHeaders[label])));\n                setDefaultColumnOptions1.push(resp.columnHeaders[label]);\n                setDefaultItems.push.apply(setDefaultItems, _toConsumableArray(diff()));\n                setDefaultLabel.push(label);\n              }\n            };\n\n            for (var _i = 0, _labels = labels; _i < _labels.length; _i++) {\n              _loop();\n            }\n\n            var options = setDefaultColumnOptions.map(function (label) {\n              var find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n              return {\n                label: label,\n                value: find\n              };\n            });\n            var selectedItems = setDefaultItems.map(function (label) {\n              var find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n              return {\n                label: label,\n                value: find\n              };\n            });\n\n            if (!_this.state.toggle) {\n              setDefaultColDef.push({\n                id: 'selection',\n                groupByBoundary: true,\n                Header: 'Actions',\n                // fixed: 'left',\n                Cell: function Cell(props) {\n                  var row = props.row,\n                      rows = props.rows;\n\n                  var mdPlan = row.original.markdown_id,\n                      mainGrp = _.find(rows, {\n                    isSelected: true,\n                    original: {\n                      markdown_id: mdPlan\n                    }\n                  }),\n                      checkboxDisabled = mainGrp && !row.isSelected ? true : false;\n\n                  return row.canExpand ? React.createElement(\"div\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 258\n                    },\n                    __self: this\n                  }, React.createElement(IndeterminateCheckbox, Object.assign({\n                    row: row.id,\n                    onClick: function onClick() {\n                      _this.scenarioSelectedHandler(true, row);\n                    },\n                    disabled: checkboxDisabled\n                  }, row.getToggleRowSelectedProps(), {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 259\n                    },\n                    __self: this\n                  }))) : null;\n                }\n              });\n            }\n\n            _this.setState({\n              columns: setDefaultColDef,\n              selLabels: setDefaultLabel,\n              selectedItems: selectedItems,\n              columnOptions: options\n            });\n\n            if (selectedItems) {\n              var filteredHeader = _.find(options, {\n                accessor: selectedItems[0].value\n              });\n\n              if (!filteredHeader) {\n                _this.onHandleSelect(selectedItems, true);\n              }\n            }\n          })();\n        }\n      });\n    };\n\n    _this.state = {\n      toggle: false,\n      currentTab: 'draft',\n      selectedItems: [],\n      columnOptions: [],\n      selLabels: [],\n      columns: [],\n      statusCounts: {},\n      scenarioSelected: {\n        value: false,\n        row: []\n      }\n    };\n    return _this;\n  }\n\n  _createClass(DraftStatus, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(props, state) {\n      if (state.currentTab !== this.state.currentTab) {\n        this.props.setMarkDowns([]);\n        this.props.setMDColumnHeaders({});\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Styles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(LoadingOverlay, {\n        loader: this.props.getOverlayLoaderState,\n        spinner: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: \"draft\",\n        id: \"uncontrolled-tab-example\",\n        onSelect: this.onToggleTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        eventKey: \"draft\",\n        title: \"Draft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(Draft, {\n        getMarkdowns: this.getMarkdowns,\n        columns: this.state.columns,\n        scenarioSelectedHandler: this.scenarioSelectedHandler,\n        scenarioSelected: this.state.scenarioSelected,\n        onHandleSelect: this.onHandleSelect,\n        selectedItems: this.state.selectedItems,\n        onHandleCheckBox: this.onHandleCheckBox,\n        columnOptions: this.state.columnOptions,\n        selLabels: this.state.selLabels,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      })), React.createElement(Tab, {\n        eventKey: \"status\",\n        title: \"Status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(Status, {\n        getMarkdowns: this.getMarkdowns,\n        columns: this.state.columns,\n        statusCounts: this.state.statusCounts,\n        onHandleSelect: this.onHandleSelect,\n        selectedItems: this.state.selectedItems,\n        onHandleCheckBox: this.onHandleCheckBox,\n        columnOptions: this.state.columnOptions,\n        selLabels: this.state.selLabels,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return DraftStatus;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    getOverlayLoaderState: store.loaderReducer.overlayLoaderState,\n    markdowns: store.draftStatusReducer.markdowns,\n    getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    getStatusOptions: store.draftStatusReducer.statusOptions\n  };\n};\n\nvar mapActionToProps = {\n  getMarkdowns: draftStausAction.getMarkdowns,\n  setMarkDowns: draftStausAction.setMarkDowns,\n  setMDColumnHeaders: draftStausAction.setMDColumnHeaders\n};\nexport default connect(mapStateToProps, mapActionToProps)(DraftStatus);\nvar Styles = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/draftStatus/index.js"],"names":["React","Component","Tabs","Tab","LoadingOverlay","draftStausAction","styled","Draft","Status","connect","_","toPercentage","toPercentageWithDecimalDraft","toDollarWithlDraft","toUnitDraft","toFixedToTwoDraft","draftColdef","IndeterminateCheckbox","FormatterStyling","props","value","val","val1","props1","console","log","DraftStatus","scenarioSelectedHandler","row","setState","scenarioSelected","onToggleTab","tab","toggle","state","currentTab","getMarkdowns","status","onHandleSelect","selOptions","proceed","isEqual","selectedItems","headers","cloneDeep","columns","remove","item","metric","forEach","newTableCols","filter","a","accessor","length","spliceAt","splice","Header","label","disableGroupBy","Cell","Aggregated","accessorName","original","onHandleCheckBox","e","index","target","checked","selLabels","indexOf","labels","tempArr","getColumnHeaders","labelColumns","Object","keys","options","map","push","columnOptions","selectedLabel","selectedItemsClone","newSelectedItems","labelArr","includes","payload","then","resp","tempStatusObj","markdowns","hasOwnProperty","statusCounts","columnHeaders","defaultHeader","default","setDefaultColDef","col","id","setDefaultLabel","setDefaultColumnOptions","setDefaultColumnOptions1","setDefaultItems","colHeaders","labelArray","diff","A","B","find","groupByBoundary","rows","mdPlan","markdown_id","mainGrp","isSelected","checkboxDisabled","canExpand","getToggleRowSelectedProps","filteredHeader","setMarkDowns","setMDColumnHeaders","getOverlayLoaderState","mapStateToProps","store","loaderReducer","overlayLoaderState","draftStatusReducer","getStatusOptions","statusOptions","mapActionToProps","Styles","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport LoadingOverlay from '../../utils/Loader';\nimport draftStausAction from '../../actions/draftStausFinalizeAction';\nimport styled from 'styled-components';\nimport Draft from './draft';\nimport Status from './status';\nimport './draftStatus.css';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport {\n  toPercentage,\n  toPercentageWithDecimalDraft,\n  toDollarWithlDraft,\n  toUnitDraft,\n  toFixedToTwoDraft,\n} from '../../helper/formatter';\nimport draftColdef from './draft/coldef';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox';\n\nfunction FormatterStyling(props, value, val) {\n  let val1 = val || val == 0 ? val : props.value;\n  let props1 = val || val == 0 ? { value: val } : props;\n  console.log(val1, 'formval', props1);\n\n  if (\n    value == 'pvh_units' ||\n    value == 'markdown_units' ||\n    value == 'overall_pvh_units' ||\n    value == 'overall_markdown_units'\n  ) {\n    return val1 || val1 == 0 ? toUnitDraft(props1) : '-';\n  } else if (value == 'margin_perc' || value == 'overall_margin_perc') {\n    return val1 || val1 == 0 ? toPercentage(props1) : '-';\n  } else if (\n    value == 'revenue$' ||\n    value == 'aur' ||\n    value == 'margin$' ||\n    value == 'aum' ||\n    value == 'overall_aum' ||\n    value == 'overall_revenue$' ||\n    value == 'overall_aur' ||\n    value == 'overall_margin$'\n  ) {\n    return val1 || val1 == 0 ? toDollarWithlDraft(props1) : '-';\n  }\n  return '-';\n}\n\nclass DraftStatus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false,\n      currentTab: 'draft',\n      selectedItems: [],\n      columnOptions: [],\n      selLabels: [],\n      columns: [],\n      statusCounts: {},\n      scenarioSelected: { value: false, row: [] },\n    };\n  }\n\n  componentDidUpdate(props, state) {\n    if (state.currentTab !== this.state.currentTab) {\n      this.props.setMarkDowns([]);\n      this.props.setMDColumnHeaders({});\n    }\n  }\n  scenarioSelectedHandler = (value, row) => {\n    this.setState({ scenarioSelected: { value, row } });\n  };\n  onToggleTab = (tab) => {\n    this.setState({\n      toggle: !this.state.toggle,\n      currentTab: tab,\n    });\n    tab === 'draft' ? this.getMarkdowns({ status: 'draft' }) : this.getMarkdowns();\n  };\n\n  onHandleSelect = (selOptions, proceed) => {\n    if (!_.isEqual(this.state.selectedItems, selOptions) || proceed) {\n      let headers = _.cloneDeep(this.state.columns);\n      _.remove(headers, (item) => item.metric);\n\n      selOptions.forEach((item) => {\n        let newTableCols = headers.filter((a) => {\n          return a.accessor === item.value;\n        });\n        if (newTableCols.length == 0) {\n          let spliceAt = headers.length - 1;\n          headers.splice(spliceAt, 0, {\n            Header: item.label,\n            accessor: item.value,\n            disableGroupBy: true,\n            // Cell: (props) => {\n            //   return console.log(props.row.values.margin$, 'propospos');\n            // },\n            Cell: (props) => FormatterStyling(props, item.value),\n            Aggregated: (props) => {\n              let accessorName = `overall_${item.value}`;\n              let val = props.row.original[accessorName];\n              return FormatterStyling(props, accessorName, val);\n\n              // return <span>{val ? Math.round(val) : '-'}</span>;\n            },\n            metric: true,\n          });\n        }\n      });\n      this.setState({\n        columns: headers,\n        selectedItems: selOptions,\n      });\n    }\n  };\n\n  onHandleCheckBox = (e, label, index) => {\n    //adding\n    if (e.target.checked) {\n      if (this.state.selLabels.indexOf(label) === -1) {\n        let labels = [...this.state.selLabels, label];\n        let tempArr = [];\n        labels.forEach((label) => {\n          let columns = this.props.getColumnHeaders[label];\n          let labelColumns = Object.keys(columns);\n          let options = labelColumns.map((label) => {\n            return {\n              label: label,\n              value: columns[label],\n            };\n          });\n          tempArr.push(...options);\n        });\n\n        this.setState({\n          selLabels: labels,\n          columnOptions: tempArr,\n        });\n      }\n    } else {\n      //removing\n      let index = this.state.selLabels.indexOf(label);\n      if (index !== -1) {\n        let selectedLabel = _.cloneDeep(this.state.selLabels);\n        selectedLabel.splice(index, 1);\n        let tempArr = [];\n        selectedLabel.forEach((label) => {\n          let columns = this.props.getColumnHeaders[label];\n          let labelColumns = Object.keys(columns);\n          let options = labelColumns.map((label) => {\n            return {\n              label: label,\n              value: columns[label],\n            };\n          });\n          tempArr.push(...options);\n        });\n\n        let selectedItemsClone = _.cloneDeep(this.state.selectedItems);\n        let newSelectedItems = [];\n        let labelArr = Object.keys(this.props.getColumnHeaders[label]);\n        selectedItemsClone.forEach((item) => {\n          if (!labelArr.includes(item.label)) {\n            newSelectedItems.push(item);\n          }\n        });\n\n        this.onHandleSelect(newSelectedItems);\n        this.setState({\n          selLabels: selectedLabel,\n          columnOptions: tempArr,\n          selectedItems: newSelectedItems,\n        });\n      }\n    }\n  };\n\n  getMarkdowns = (payload) => {\n    this.props.getMarkdowns(payload).then((resp) => {\n      let tempStatusObj = {};\n      this.props.markdowns.forEach((row) => {\n        if (tempStatusObj.hasOwnProperty(row.status)) {\n          tempStatusObj[row.status] += 1;\n        } else {\n          tempStatusObj[`${row.status}`] = 1;\n        }\n      });\n      this.setState({\n        statusCounts: tempStatusObj,\n      });\n      if (resp && resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n        let defaultHeader = Object.keys(resp.columnHeaders.default);\n\n        let setDefaultColDef = draftColdef().filter(\n          (col) =>\n            defaultHeader.includes(col.Header) ||\n            col.Header === 'Time Period' ||\n            // (this.state.toggle && col.Header === 'Actions') ||\n            col.id === 'expander' ||\n            (this.state.toggle && col.accessor === 'status')\n        );\n        let setDefaultLabel = [];\n        let setDefaultColumnOptions = [];\n        let setDefaultColumnOptions1 = [];\n        let setDefaultItems = [];\n        let colHeaders = _.cloneDeep(resp.columnHeaders);\n        let labels = Object.keys(colHeaders);\n        labels.splice(labels.indexOf('fixed'), 1);\n        labels.splice(labels.indexOf('default'), 1);\n        for (const label of labels) {\n          let labelArray = Object.keys(resp.columnHeaders[label]);\n          function diff(A = labelArray, B = defaultHeader) {\n            return A.filter(function (a) {\n              return B.indexOf(a) !== -1;\n            });\n          }\n\n          if (diff().length) {\n            setDefaultColumnOptions.push(...Object.keys(resp.columnHeaders[label]));\n            setDefaultColumnOptions1.push(resp.columnHeaders[label]);\n            setDefaultItems.push(...diff());\n            setDefaultLabel.push(label);\n          }\n        }\n        let options = setDefaultColumnOptions.map((label) => {\n          let find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n          return {\n            label: label,\n            value: find,\n          };\n        });\n        let selectedItems = setDefaultItems.map((label) => {\n          let find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n          return {\n            label: label,\n            value: find,\n          };\n        });\n        if (!this.state.toggle) {\n          setDefaultColDef.push({\n            id: 'selection',\n            groupByBoundary: true,\n            Header: 'Actions',\n            // fixed: 'left',\n            Cell: (props) => {\n              let { row, rows } = props;\n              let mdPlan = row.original.markdown_id,\n                mainGrp = _.find(rows, {\n                  isSelected: true,\n                  original: { markdown_id: mdPlan },\n                }),\n                checkboxDisabled = mainGrp && !row.isSelected ? true : false;\n\n              return row.canExpand ? (\n                <div>\n                  <IndeterminateCheckbox\n                    row={row.id}\n                    onClick={() => {\n                      this.scenarioSelectedHandler(true, row);\n                    }}\n                    disabled={checkboxDisabled}\n                    {...row.getToggleRowSelectedProps()}\n                  />\n                </div>\n              ) : null;\n            },\n          });\n        }\n        this.setState({\n          columns: setDefaultColDef,\n          selLabels: setDefaultLabel,\n          selectedItems: selectedItems,\n          columnOptions: options,\n        });\n        if (selectedItems) {\n          let filteredHeader = _.find(options, { accessor: selectedItems[0].value });\n          if (!filteredHeader) {\n            this.onHandleSelect(selectedItems, true);\n          }\n        }\n      }\n    });\n  };\n  render() {\n    return (\n      <Styles>\n        <LoadingOverlay loader={this.props.getOverlayLoaderState} spinner>\n          <Tabs defaultActiveKey=\"draft\" id=\"uncontrolled-tab-example\" onSelect={this.onToggleTab}>\n            <Tab eventKey=\"draft\" title=\"Draft\">\n              <Draft\n                getMarkdowns={this.getMarkdowns}\n                columns={this.state.columns}\n                scenarioSelectedHandler={this.scenarioSelectedHandler}\n                scenarioSelected={this.state.scenarioSelected}\n                onHandleSelect={this.onHandleSelect}\n                selectedItems={this.state.selectedItems}\n                onHandleCheckBox={this.onHandleCheckBox}\n                columnOptions={this.state.columnOptions}\n                selLabels={this.state.selLabels}\n              />\n            </Tab>\n            <Tab eventKey=\"status\" title=\"Status\">\n              <Status\n                getMarkdowns={this.getMarkdowns}\n                columns={this.state.columns}\n                statusCounts={this.state.statusCounts}\n                onHandleSelect={this.onHandleSelect}\n                selectedItems={this.state.selectedItems}\n                onHandleCheckBox={this.onHandleCheckBox}\n                columnOptions={this.state.columnOptions}\n                selLabels={this.state.selLabels}\n              />\n            </Tab>\n          </Tabs>\n        </LoadingOverlay>\n      </Styles>\n    );\n  }\n}\nconst mapStateToProps = (store) => {\n  return {\n    getOverlayLoaderState: store.loaderReducer.overlayLoaderState,\n    markdowns: store.draftStatusReducer.markdowns,\n    getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    getStatusOptions: store.draftStatusReducer.statusOptions,\n  };\n};\nconst mapActionToProps = {\n  getMarkdowns: draftStausAction.getMarkdowns,\n  setMarkDowns: draftStausAction.setMarkDowns,\n  setMDColumnHeaders: draftStausAction.setMDColumnHeaders,\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(DraftStatus);\n\nconst Styles = styled.div`\n  li.nav-item {\n    padding-right: 0;\n  }\n\n  .nav-tabs .nav-item.show .nav-link,\n  .nav-tabs .nav-link.active {\n    background: none;\n    border-bottom: 2px solid #44667a;\n  }\n  .nav-tabs .nav-link {\n    border: 0px;\n  }\n  .nav-link {\n    padding: 0 0.5rem;\n  }\n  .nav-tabs {\n    margin-bottom: 1.3rem;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}