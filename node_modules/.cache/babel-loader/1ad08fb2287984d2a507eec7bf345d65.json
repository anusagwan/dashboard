{"ast":null,"code":"var _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/SKUCockpit/skuColdef.js\";\nimport React from 'react';\nimport { toUnit, toDollar, toPercentage } from '../../helper/formatter';\nexport default (function () {\n  var header = [{\n    Header: 'Style-Color',\n    columns: [{\n      Header: '',\n      downloadHeader: 'Style-Color',\n      accessor: 'style_color',\n      groupByID: 'style_color',\n      disableGroupBy: true,\n      align: 'left',\n      showFilter: true,\n      disableSort: true\n    }]\n  }, {\n    Header: 'Custom Style Color Group',\n    columns: [{\n      Header: '',\n      downloadHeader: 'Custom Style Color Group',\n      accessor: 'custom_style_group',\n      groupByID: 'style_color',\n      disableGroupBy: true,\n      align: 'left',\n      showFilter: true,\n      disableSort: true,\n      Cell: function Cell(_ref) {\n        var row = _ref.row;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \" \", row.original.custom_style_group ? row.original.custom_style_group : '-', \" \");\n      }\n    }]\n  }, {\n    Header: 'Sell through %',\n    columns: [{\n      Header: 'TY',\n      downloadHeader: 'Sell through TY %',\n      downloadFormatter: toPercentage,\n      accessor: 'sell_through_ty',\n      aggregate: 'sum',\n      disableGroupBy: true,\n      align: 'left',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \" \", toPercentage({\n          value: props.value\n        }), \" \");\n      }\n    }, {\n      Header: 'LY',\n      downloadHeader: 'Sell through LY %',\n      downloadFormatter: toPercentage,\n      accessor: 'sell_through_ly',\n      disableGroupBy: true,\n      align: 'left',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \" \", toPercentage({\n          value: props.value\n        }), \" \");\n      }\n    }, {\n      Header: 'Avg.',\n      downloadHeader: 'Sell through Avg.',\n      downloadFormatter: toPercentage,\n      accessor: 'sell_through_avg',\n      disableGroupBy: true,\n      align: 'left',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \" \", toPercentage({\n          value: props.value\n        }), \" \");\n      }\n    }]\n  }, {\n    Header: 'Margin %',\n    columns: [{\n      Header: 'TY',\n      downloadHeader: 'Margin TY %',\n      downloadFormatter: toPercentage,\n      accessor: 'margin_ty',\n      disableGroupBy: true,\n      aggregate: roundedMedian,\n      Aggregated: function Aggregated(_ref2) {\n        var value = _ref2.value;\n        return \"\".concat(value);\n      },\n      align: 'left',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \" \", toPercentage({\n          value: props.value\n        }), \" \");\n      }\n    }, {\n      Header: 'LY',\n      downloadHeader: 'Margin LY %',\n      downloadFormatter: toPercentage,\n      accessor: 'margin_ly',\n      disableGroupBy: true,\n      align: 'left',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \" \", toPercentage({\n          value: props.value\n        }), \" \");\n      }\n    }]\n  }, {\n    Header: 'GM %',\n    columns: [{\n      Header: '',\n      downloadHeader: 'GM %',\n      downloadFormatter: toPercentage,\n      accessor: 'GM%',\n      disableGroupBy: true,\n      align: 'left',\n      showFilter: true,\n      disableSort: true,\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \" \", toPercentage({\n          value: props.value\n        }), \" \");\n      }\n    }]\n  }, {\n    Header: 'Total Availabality',\n    columns: [{\n      Header: '',\n      downloadHeader: 'Total availabality',\n      // downloadFormatter: toPercentage,\n      accessor: 'total_avail',\n      disableGroupBy: true,\n      align: 'left',\n      showFilter: true,\n      disableSort: true,\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \" \", props.value ? props.value : '-', \" \");\n      }\n    }]\n  }, {\n    Header: 'Size Integrity',\n    columns: [{\n      Header: '',\n      downloadHeader: 'Size integrity',\n      // downloadFormatter: toPercentage,\n      accessor: 'size_integrity',\n      disableGroupBy: true,\n      align: 'left',\n      showFilter: true,\n      disableSort: true,\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \" \", props.value ? props.value : '-', \" \");\n      }\n    }]\n  }, {\n    Header: 'No. of doors',\n    columns: [{\n      Header: '',\n      downloadHeader: 'No. of doors',\n      // downloadFormatter: toPercentage,\n      accessor: 'no_of_doors',\n      disableGroupBy: true,\n      align: 'left',\n      showFilter: true,\n      disableSort: true,\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, \" \", props.value ? props.value : '-', \" \");\n      }\n    }]\n  }, // {\n  //   Header: 'Margin ',\n  //   columns: [\n  //     {\n  //       Header: 'Margin ($)',\n  //       accessor: 'margin$',\n  //       disableGroupBy: true,\n  //       Aggregated: ({ value }) => `${value}`,\n  //       align: 'centre',\n  //       Cell: (props) => <div> {toDollar(props)} </div>,\n  //       downloadFormatter: toDollar,\n  //     },\n  //     {\n  //       Header: 'AUM $',\n  //       accessor: 'aum',\n  //       disableGroupBy: true,\n  //       Aggregated: ({ value }) => `${value}`,\n  //       align: 'centre',\n  //       Cell: (props) => <div> {toDollar(props)} </div>,\n  //       downloadFormatter: toDollar,\n  //     },\n  //   ],\n  // },\n  // {\n  //   Header: 'Sales',\n  //   columns: [\n  //     {\n  //       Header: 'Actual sales (units)',\n  //       accessor: 'units_sold',\n  //       aggregate: 'average',\n  //       disableGroupBy: true,\n  //       Aggregated: ({ value }) => `${value}`,\n  //       align: 'centre',\n  //       Cell: (props) => <div> {toUnit(props)} </div>,\n  //       downloadFormatter: toUnit,\n  //     },\n  //     {\n  //       Header: 'Revenue ($)',\n  //       accessor: 'revenue$',\n  //       disableGroupBy: true,\n  //       Aggregated: ({ value }) => `${value}`,\n  //       align: 'centre',\n  //       Cell: (props) => <div> {toDollar(props)} </div>,\n  //       downloadFormatter: toDollar,\n  //     },\n  //     {\n  //       Header: 'AUR $',\n  //       accessor: 'aur',\n  //       disableGroupBy: true,\n  //       Aggregated: ({ value }) => `${value}`,\n  //       align: 'centre',\n  //       Cell: (props) => <div> {toDollar(props)} </div>,\n  //       downloadFormatter: toDollar,\n  //     },\n  //     {\n  //       Header: \"Last week's sales\",\n  //       accessor: 'last_week_sales',\n  //       disableGroupBy: true,\n  //       Aggregated: ({ value }) => `${value}`,\n  //       align: 'centre',\n  //     },\n  //   ],\n  // },\n  // {\n  //   Header: 'Current inventory',\n  //   columns: [\n  //     {\n  //       Header: 'On hand',\n  //       accessor: 'inventory.inventory_on_hand',\n  //       aggregate: 'average',\n  //       disableGroupBy: true,\n  //       align: 'left',\n  //       Cell: (props) => <div> {toUnit(props)} </div>,\n  //       downloadFormatter: toUnit,\n  //     },\n  //     {\n  //       Header: 'In transit',\n  //       accessor: 'inventory.inventory_in_transit',\n  //       aggregate: 'average',\n  //       disableGroupBy: true,\n  //       align: 'left',\n  //       Cell: (props) => <div> {toUnit(props)} </div>,\n  //       downloadFormatter: toUnit,\n  //     },\n  //     {\n  //       Header: 'On order',\n  //       accessor: 'inventory.inventory_on_order',\n  //       aggregate: 'average',\n  //       disableGroupBy: true,\n  //       align: 'left',\n  //       Cell: (props) => <div> {toUnit(props)} </div>,\n  //       downloadFormatter: toUnit,\n  //     },\n  //     {\n  //       Header: 'In DC',\n  //       accessor: 'inventory.inventory_in_dc',\n  //       aggregate: 'average',\n  //       disableGroupBy: true,\n  //       align: 'left',\n  //       Cell: (props) => <div> {toUnit(props)} </div>,\n  //       downloadFormatter: toUnit,\n  //     },\n  //     {\n  //       Header: 'Weeks on hand',\n  //       accessor: 'wos',\n  //       disableGroupBy: true,\n  //       Aggregated: ({ value }) => `${value}`,\n  //       align: 'centre',\n  //       Cell: (props) => <div> {toUnit(props)} </div>,\n  //       downloadFormatter: toUnit,\n  //     },\n  //   ],\n  // },\n  {\n    Header: 'Markdown status',\n    columns: [{\n      Header: '',\n      downloadHeader: 'Markdown status',\n      accessor: 'mdStatus',\n      disableGroupBy: true,\n      align: 'centre',\n      showFilter: true,\n      Cell: function Cell(props) {\n        switch (props.row.original.mdStatus) {\n          case 'High':\n            return React.createElement(\"div\", {\n              className: \"high-status\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 291\n              },\n              __self: this\n            }, \"High\");\n\n          case 'Medium':\n            return React.createElement(\"div\", {\n              className: \"medium-status\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 293\n              },\n              __self: this\n            }, \"Medium\");\n\n          case 'Low':\n            return React.createElement(\"div\", {\n              className: \"low-status\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 295\n              },\n              __self: this\n            }, \"Low\");\n\n          default:\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 297\n              },\n              __self: this\n            });\n        }\n      },\n      disableSort: true\n    }]\n  }];\n  return header;\n});\n\nfunction roundedMedian(leafValues) {\n  var min = leafValues[0] || 0;\n  var max = leafValues[0] || 0;\n  leafValues.forEach(function (value) {\n    min = Math.min(min, value);\n    max = Math.max(max, value);\n  });\n  return Math.round((min + max) / 2);\n}","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/SKUCockpit/skuColdef.js"],"names":["React","toUnit","toDollar","toPercentage","header","Header","columns","downloadHeader","accessor","groupByID","disableGroupBy","align","showFilter","disableSort","Cell","row","original","custom_style_group","downloadFormatter","aggregate","props","value","roundedMedian","Aggregated","mdStatus","leafValues","min","max","forEach","Math","round"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { toUnit, toDollar, toPercentage } from '../../helper/formatter';\n\nexport default () => {\n  const header = [\n    {\n      Header: 'Style-Color',\n      columns: [\n        {\n          Header: '',\n          downloadHeader: 'Style-Color',\n          accessor: 'style_color',\n          groupByID: 'style_color',\n          disableGroupBy: true,\n          align: 'left',\n          showFilter: true,\n          disableSort: true,\n        },\n      ],\n    },\n    {\n      Header: 'Custom Style Color Group',\n      columns: [\n        {\n          Header: '',\n          downloadHeader: 'Custom Style Color Group',\n          accessor: 'custom_style_group',\n          groupByID: 'style_color',\n          disableGroupBy: true,\n          align: 'left',\n          showFilter: true,\n          disableSort: true,\n          Cell: ({ row }) => (\n            <div> {row.original.custom_style_group ? row.original.custom_style_group : '-'} </div>\n          ),\n        },\n      ],\n    },\n    {\n      Header: 'Sell through %',\n      columns: [\n        {\n          Header: 'TY',\n          downloadHeader: 'Sell through TY %',\n          downloadFormatter: toPercentage,\n          accessor: 'sell_through_ty',\n          aggregate: 'sum',\n          disableGroupBy: true,\n          align: 'left',\n          Cell: (props) => <div> {toPercentage({ value: props.value })} </div>,\n        },\n        {\n          Header: 'LY',\n          downloadHeader: 'Sell through LY %',\n          downloadFormatter: toPercentage,\n          accessor: 'sell_through_ly',\n          disableGroupBy: true,\n          align: 'left',\n          Cell: (props) => <div> {toPercentage({ value: props.value })} </div>,\n        },\n\n        {\n          Header: 'Avg.',\n          downloadHeader: 'Sell through Avg.',\n          downloadFormatter: toPercentage,\n          accessor: 'sell_through_avg',\n          disableGroupBy: true,\n          align: 'left',\n          Cell: (props) => <div> {toPercentage({ value: props.value })} </div>,\n        },\n      ],\n    },\n    {\n      Header: 'Margin %',\n      columns: [\n        {\n          Header: 'TY',\n          downloadHeader: 'Margin TY %',\n          downloadFormatter: toPercentage,\n          accessor: 'margin_ty',\n          disableGroupBy: true,\n          aggregate: roundedMedian,\n          Aggregated: ({ value }) => `${value}`,\n          align: 'left',\n          Cell: (props) => <div> {toPercentage({ value: props.value })} </div>,\n        },\n        {\n          Header: 'LY',\n          downloadHeader: 'Margin LY %',\n          downloadFormatter: toPercentage,\n          accessor: 'margin_ly',\n          disableGroupBy: true,\n          align: 'left',\n          Cell: (props) => <div> {toPercentage({ value: props.value })} </div>,\n        },\n      ],\n    },\n    {\n      Header: 'GM %',\n      columns: [\n        {\n          Header: '',\n          downloadHeader: 'GM %',\n          downloadFormatter: toPercentage,\n          accessor: 'GM%',\n          disableGroupBy: true,\n          align: 'left',\n          showFilter: true,\n          disableSort: true,\n          Cell: (props) => <div> {toPercentage({ value: props.value })} </div>,\n        },\n      ],\n    },\n    {\n      Header: 'Total Availabality',\n      columns: [\n        {\n          Header: '',\n          downloadHeader: 'Total availabality',\n          // downloadFormatter: toPercentage,\n          accessor: 'total_avail',\n          disableGroupBy: true,\n          align: 'left',\n          showFilter: true,\n          disableSort: true,\n          Cell: (props) => <div> {props.value ? props.value : '-'} </div>,\n        },\n      ],\n    },\n    {\n      Header: 'Size Integrity',\n      columns: [\n        {\n          Header: '',\n          downloadHeader: 'Size integrity',\n          // downloadFormatter: toPercentage,\n          accessor: 'size_integrity',\n          disableGroupBy: true,\n          align: 'left',\n          showFilter: true,\n          disableSort: true,\n          Cell: (props) => <div> {props.value ? props.value : '-'} </div>,\n        },\n      ],\n    },\n\n    {\n      Header: 'No. of doors',\n      columns: [\n        {\n          Header: '',\n          downloadHeader: 'No. of doors',\n          // downloadFormatter: toPercentage,\n          accessor: 'no_of_doors',\n          disableGroupBy: true,\n          align: 'left',\n          showFilter: true,\n          disableSort: true,\n          Cell: (props) => <div> {props.value ? props.value : '-'} </div>,\n        },\n      ],\n    },\n    // {\n    //   Header: 'Margin ',\n    //   columns: [\n    //     {\n    //       Header: 'Margin ($)',\n    //       accessor: 'margin$',\n    //       disableGroupBy: true,\n    //       Aggregated: ({ value }) => `${value}`,\n    //       align: 'centre',\n    //       Cell: (props) => <div> {toDollar(props)} </div>,\n    //       downloadFormatter: toDollar,\n    //     },\n\n    //     {\n    //       Header: 'AUM $',\n    //       accessor: 'aum',\n    //       disableGroupBy: true,\n    //       Aggregated: ({ value }) => `${value}`,\n    //       align: 'centre',\n    //       Cell: (props) => <div> {toDollar(props)} </div>,\n    //       downloadFormatter: toDollar,\n    //     },\n    //   ],\n    // },\n    // {\n    //   Header: 'Sales',\n    //   columns: [\n    //     {\n    //       Header: 'Actual sales (units)',\n    //       accessor: 'units_sold',\n    //       aggregate: 'average',\n    //       disableGroupBy: true,\n    //       Aggregated: ({ value }) => `${value}`,\n    //       align: 'centre',\n    //       Cell: (props) => <div> {toUnit(props)} </div>,\n    //       downloadFormatter: toUnit,\n    //     },\n    //     {\n    //       Header: 'Revenue ($)',\n    //       accessor: 'revenue$',\n    //       disableGroupBy: true,\n    //       Aggregated: ({ value }) => `${value}`,\n    //       align: 'centre',\n    //       Cell: (props) => <div> {toDollar(props)} </div>,\n    //       downloadFormatter: toDollar,\n    //     },\n    //     {\n    //       Header: 'AUR $',\n    //       accessor: 'aur',\n    //       disableGroupBy: true,\n    //       Aggregated: ({ value }) => `${value}`,\n    //       align: 'centre',\n    //       Cell: (props) => <div> {toDollar(props)} </div>,\n    //       downloadFormatter: toDollar,\n    //     },\n    //     {\n    //       Header: \"Last week's sales\",\n    //       accessor: 'last_week_sales',\n    //       disableGroupBy: true,\n    //       Aggregated: ({ value }) => `${value}`,\n    //       align: 'centre',\n    //     },\n    //   ],\n    // },\n\n    // {\n    //   Header: 'Current inventory',\n    //   columns: [\n    //     {\n    //       Header: 'On hand',\n    //       accessor: 'inventory.inventory_on_hand',\n    //       aggregate: 'average',\n    //       disableGroupBy: true,\n    //       align: 'left',\n    //       Cell: (props) => <div> {toUnit(props)} </div>,\n    //       downloadFormatter: toUnit,\n    //     },\n    //     {\n    //       Header: 'In transit',\n    //       accessor: 'inventory.inventory_in_transit',\n    //       aggregate: 'average',\n    //       disableGroupBy: true,\n    //       align: 'left',\n    //       Cell: (props) => <div> {toUnit(props)} </div>,\n    //       downloadFormatter: toUnit,\n    //     },\n    //     {\n    //       Header: 'On order',\n    //       accessor: 'inventory.inventory_on_order',\n    //       aggregate: 'average',\n    //       disableGroupBy: true,\n    //       align: 'left',\n    //       Cell: (props) => <div> {toUnit(props)} </div>,\n    //       downloadFormatter: toUnit,\n    //     },\n    //     {\n    //       Header: 'In DC',\n    //       accessor: 'inventory.inventory_in_dc',\n    //       aggregate: 'average',\n    //       disableGroupBy: true,\n    //       align: 'left',\n    //       Cell: (props) => <div> {toUnit(props)} </div>,\n    //       downloadFormatter: toUnit,\n    //     },\n    //     {\n    //       Header: 'Weeks on hand',\n    //       accessor: 'wos',\n    //       disableGroupBy: true,\n    //       Aggregated: ({ value }) => `${value}`,\n    //       align: 'centre',\n    //       Cell: (props) => <div> {toUnit(props)} </div>,\n    //       downloadFormatter: toUnit,\n    //     },\n    //   ],\n    // },\n    {\n      Header: 'Markdown status',\n      columns: [\n        {\n          Header: '',\n          downloadHeader: 'Markdown status',\n          accessor: 'mdStatus',\n          disableGroupBy: true,\n          align: 'centre',\n          showFilter: true,\n          Cell: (props) => {\n            switch (props.row.original.mdStatus) {\n              case 'High':\n                return <div className=\"high-status\">High</div>;\n              case 'Medium':\n                return <div className=\"medium-status\">Medium</div>;\n              case 'Low':\n                return <div className=\"low-status\">Low</div>;\n              default:\n                return <div></div>;\n            }\n          },\n          disableSort: true,\n        },\n      ],\n    },\n  ];\n  return header;\n};\nfunction roundedMedian(leafValues) {\n  let min = leafValues[0] || 0;\n  let max = leafValues[0] || 0;\n\n  leafValues.forEach((value) => {\n    min = Math.min(min, value);\n    max = Math.max(max, value);\n  });\n\n  return Math.round((min + max) / 2);\n}\n"]},"metadata":{},"sourceType":"module"}