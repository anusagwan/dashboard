{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/columnSelection/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 1rem;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: flex-start;\\n\\n  .custom-control {\\n    line-height: 1.5rem;\\n    margin: 0 1rem;\\n  }\\n\\n  .custom-control-label::before {\\n    top: 0.5rem;\\n  }\\n  .custom-control-label::after {\\n    top: 0.5rem;\\n  }\\n  .custom-checkbox label {\\n    vertical-align: -webkit-baseline-middle;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Select from '../../utils/reactDropDownSelect';\nimport '../markdowncss.css';\nimport styled from 'styled-components';\n\nfunction columnSelection(props) {\n  var labels = Object.keys(props.columnHeaders || []);\n  labels.splice(labels.indexOf('fixed'), 1);\n  labels.splice(labels.indexOf('default'), 1);\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, labels && !!labels.length && labels.map(function (label, i) {\n    var isLabelSelected = props.selLabels.indexOf(label) + 1;\n    return React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      checked: isLabelSelected ? true : false,\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: label === 'status' ? i : label + i,\n      onClick: function onClick(e) {\n        return props.onHandleCheckBox(e, label, i);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: label === 'status' ? i : label + i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, label));\n  }), React.createElement(\"label\", {\n    className: \"ml-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \" Add Metric\"), \"0074D9\", React.createElement(\"div\", {\n    className: \" ml-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Select, {\n    placeholder: \"Select Metric\",\n    multi: true // clearable={true}\n    ,\n    onHandleSelect: props.onHandleSelect,\n    options: props.columnOptions,\n    contentRenderer: true,\n    selectedItems: props.selectedItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })));\n}\n\nexport default withRouter(columnSelection);\nvar Styles = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/columnSelection/index.js"],"names":["React","withRouter","Select","styled","columnSelection","props","labels","Object","keys","columnHeaders","splice","indexOf","length","map","label","i","isLabelSelected","selLabels","e","onHandleCheckBox","onHandleSelect","columnOptions","selectedItems","Styles","div"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,MAAIC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,aAAN,IAAuB,EAAnC,CAAb;AACAH,EAAAA,MAAM,CAACI,MAAP,CAAcJ,MAAM,CAACK,OAAP,CAAe,OAAf,CAAd,EAAuC,CAAvC;AACAL,EAAAA,MAAM,CAACI,MAAP,CAAcJ,MAAM,CAACK,OAAP,CAAe,SAAf,CAAd,EAAyC,CAAzC;AACA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,MAAM,IACL,CAAC,CAACA,MAAM,CAACM,MADV,IAECN,MAAM,CAACO,GAAP,CAAW,UAACC,KAAD,EAAQC,CAAR,EAAc;AACvB,QAAIC,eAAe,GAAGX,KAAK,CAACY,SAAN,CAAgBN,OAAhB,CAAwBG,KAAxB,IAAiC,CAAvD;AACA,WACE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAEE,eAAe,GAAG,IAAH,GAAU,KADpC;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,SAAS,EAAC,sBAHZ;AAIE,MAAA,EAAE,EAAEF,KAAK,KAAK,QAAV,GAAqBC,CAArB,GAAyBD,KAAK,GAAGC,CAJvC;AAKE,MAAA,OAAO,EAAE,iBAACG,CAAD;AAAA,eAAOb,KAAK,CAACc,gBAAN,CAAuBD,CAAvB,EAA0BJ,KAA1B,EAAiCC,CAAjC,CAAP;AAAA,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE;AAAO,MAAA,SAAS,EAAC,sBAAjB;AAAwC,MAAA,OAAO,EAAED,KAAK,KAAK,QAAV,GAAqBC,CAArB,GAAyBD,KAAK,GAAGC,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KADH,CARF,CADF;AAcD,GAhBD,CAHJ,EAoBE;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBApBF,YAsBE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,eADd;AAEE,IAAA,KAAK,EAAE,IAFT,CAGE;AAHF;AAIE,IAAA,cAAc,EAAET,KAAK,CAACe,cAJxB;AAKE,IAAA,OAAO,EAAEf,KAAK,CAACgB,aALjB;AAME,IAAA,eAAe,EAAE,IANnB;AAOE,IAAA,aAAa,EAAEhB,KAAK,CAACiB,aAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtBF,CADF;AAoCD;;AAED,eAAerB,UAAU,CAACG,eAAD,CAAzB;AAEA,IAAMmB,MAAM,GAAGpB,MAAM,CAACqB,GAAV,mBAAZ","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Select from '../../utils/reactDropDownSelect';\nimport '../markdowncss.css';\nimport styled from 'styled-components';\n\nfunction columnSelection(props) {\n  let labels = Object.keys(props.columnHeaders || []);\n  labels.splice(labels.indexOf('fixed'), 1);\n  labels.splice(labels.indexOf('default'), 1);\n  return (\n    <Styles>\n      {labels &&\n        !!labels.length &&\n        labels.map((label, i) => {\n          let isLabelSelected = props.selLabels.indexOf(label) + 1;\n          return (\n            <div className=\"custom-control custom-checkbox\">\n              <input\n                checked={isLabelSelected ? true : false}\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id={label === 'status' ? i : label + i}\n                onClick={(e) => props.onHandleCheckBox(e, label, i)}\n              />\n              <label className=\"custom-control-label\" htmlFor={label === 'status' ? i : label + i}>\n                {label}\n              </label>\n            </div>\n          );\n        })}\n      <label className=\"ml-4\"> Add Metric</label>\n      0074D9\n      <div className=\" ml-2\">\n        <Select\n          placeholder=\"Select Metric\"\n          multi={true}\n          // clearable={true}\n          onHandleSelect={props.onHandleSelect}\n          options={props.columnOptions}\n          contentRenderer={true}\n          selectedItems={props.selectedItems}\n        />\n      </div>\n    </Styles>\n  );\n}\n\nexport default withRouter(columnSelection);\n\nconst Styles = styled.div`\n  padding: 1rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n\n  .custom-control {\n    line-height: 1.5rem;\n    margin: 0 1rem;\n  }\n\n  .custom-control-label::before {\n    top: 0.5rem;\n  }\n  .custom-control-label::after {\n    top: 0.5rem;\n  }\n  .custom-checkbox label {\n    vertical-align: -webkit-baseline-middle;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}