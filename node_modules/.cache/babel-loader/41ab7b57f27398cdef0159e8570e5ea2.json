{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _defineProperty from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Summary/Summary.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Filters from '../../services/filters';\nimport './summaryStyle.css';\nimport styled from 'styled-components';\nimport LoadingOverlay from '../../utils/Loader';\nimport NoData from '../noTableData';\nimport SummaryAction from '../../actions/summaryAction';\nimport plannedReportsAction from '../../actions/plannedReportsAction';\nimport { aggColDef, binToWeekColDef, weekToBinColDef, detailedColDef } from './aggColdef';\nimport _ from 'lodash';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport moment from 'moment';\nimport card1Image from '../../images/card1Image.png';\nimport card2Image from '../../images/card2Image.png';\nimport card3Image from '../../images/card3Image.png';\nimport card4Image from '../../images/card4Image.png';\nimport Switch from '../../services/toggleSwitch';\nimport CardComponent from '../../services/cardComponent/cardComponent';\nimport filterActions from '../../actions/filtersAction';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox';\nimport { toPercentageMultipliedByHundred, toUnit, toDollar } from '../../helper/formatter';\nimport { toast } from 'react-toastify';\nimport io from 'socket.io-client';\nimport { config } from '../../utils/config';\n\nvar Summary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Summary, _Component);\n\n  function Summary(_props) {\n    var _this$state4;\n\n    var _this;\n\n    _classCallCheck(this, Summary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Summary).call(this, _props));\n\n    _this.createRooms = function () {\n      var token = localStorage.getItem('token');\n      console.log(token, 'token');\n\n      _this.socket.emit('create room', {\n        token: token,\n        //token stored\n        summarykapi: 1\n      });\n    };\n\n    _this.setupSocketListeners =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              //this method has all the sockets events defined\n              _this.socket.on('connect', function () {\n                console.log('Connected in summary', _this.socket);\n\n                _this.createRooms();\n              });\n\n              _this.socket.on('disconnect',\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee(reason) {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          console.log('Disconnected in summary', reason);\n\n                        case 1:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n\n              _this.socket.on('roomDetails', function (data) {\n                var userId = localStorage.getItem('userId');\n                console.log('Testing back end room data in summary', data, userId);\n\n                if (userId == data.user_id) {\n                  //no need of type check, since the types are different\n                  _this.setState({\n                    room_id: data.room_id\n                  }, function () {\n                    console.log('roomId set', _this.state.room_id);\n                  });\n                }\n              });\n\n              _this.socket.on('updatesummarykpi', function (data) {\n                // this.socket.on('summaykpiroomDetails', (data) => {\n                console.log('updatesummarykpi', data);\n\n                if (_this.props.summaryKPIData && _this.state.aggTableData.week_to_bin_agg_data) {\n                  _this.loadKPIs();\n\n                  _this.setState({\n                    showProcessing: false\n                  }); //loader\n\n                }\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.loadKPIs = function () {\n      var payload = _this.state.reqObj;\n\n      _this.setState({\n        KPILoader: true\n      });\n\n      _this.props.getKPIdata(payload).then(function (res) {\n        if (res) _this.setState({\n          showKPIS: true,\n          KPILoader: false\n        });else _this.setState({\n          KPILoader: false\n        });\n      });\n    };\n\n    _this.findStatusColor = function (status, color) {\n      switch (status) {\n        case 'high':\n          return color.high;\n\n        case 'medium':\n          return color.medium;\n\n        case 'low':\n          return color.low;\n\n        default:\n          break;\n      }\n    };\n\n    _this.bgmCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var bgCol = {\n        high: '#F8E8E8',\n        medium: '#FCF3D1',\n        low: '#E8F8F5'\n      };\n      return _this.findStatusColor(status, bgCol);\n    };\n\n    _this.txtCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var txtCol = {\n        high: '#D38485',\n        medium: '#F0C53A',\n        low: '#66CFBA'\n      };\n      return _this.findStatusColor(status, txtCol);\n    };\n\n    _this.metricHandler = function (columns, selOptions, val) {\n      // val=detailed for detailed table, val=overall for agg-parent col and val=value for subcomponent cols\n      var headers = _.cloneDeep(columns);\n\n      _.remove(headers, function (item) {\n        return item.metric || item.hideColumn;\n      }); //removing metric:true and hideColumn: true cols\n\n\n      _.forEach(selOptions, function (item) {\n        var newTableCols = _.filter(headers, function (a) {\n          return a.accessor === item[val];\n        });\n\n        var found = _.find(columns, {\n          accessor: item[val]\n        });\n\n        if (newTableCols.length == 0) {\n          var spliceAt = headers.length - 0; //modify here if the new col needs to be added at a specific index\n\n          headers.splice(spliceAt, 0, found);\n        }\n      });\n\n      return headers;\n    };\n\n    _this.onHandleSelect = function (selOptions) {\n      var headers, weekToBinHeader, binToWeekHeader;\n\n      if (_this.state.switchedPlans) {\n        //detailed table case\n        headers = _this.metricHandler(detailedColDef, selOptions, 'detailed');\n\n        _this.setState({\n          columns: headers,\n          selectedItems: selOptions\n        });\n      } else {\n        //agg-table case: needs to update 3 coldefs,\n        //imported coldefs already has all of the required columns,\n        //we are just filtering out needed cols(filtering is done in metricHandler method)\n        var newAggColDef = _this.addMDPlanColumnHandler();\n\n        headers = _this.metricHandler(newAggColDef, selOptions, 'overall');\n        weekToBinHeader = _this.metricHandler(weekToBinColDef(_this.handleInputChange), selOptions, 'value');\n        binToWeekHeader = _this.metricHandler(binToWeekColDef(_this.handleInputChange), selOptions, 'value');\n\n        _this.setState({\n          aggColDef: headers,\n          weekToBinColDef: weekToBinHeader,\n          binToWeekColDef: binToWeekHeader,\n          selectedItems: selOptions\n        });\n      }\n    };\n\n    _this.handleInputChange = function (value, markdown_id, bin, week) {\n      //do not use setState in this method, bcs it'll cause table to rerender\n      var aggTableData = _this.state.aggTableData; //if state is not cloned this will update the state without rendering the component\n\n      _.map(Object.keys(aggTableData), function (level) {\n        var index = _.findIndex(aggTableData[level], {\n          markdown_id: markdown_id\n        });\n\n        var plan = aggTableData[level][index];\n\n        if (level === 'week_to_bin_agg_data') {\n          if (value === 'copyRefreshed') plan.overall_offer_value = plan.overall_refreshed_md;\n\n          for (var i = 0; i < plan.week_level_data.length; i++) {\n            var item = plan.week_level_data[i];\n            if (value === 'copyRefreshed') item.overall_week_offer_value = item.overall_week_refreshed_md;\n\n            if (value === 'copyRefreshed' || item.week === week) {\n              for (var j = 0; j < item.bin_level_data.length; j++) {\n                var itm = item.bin_level_data[j];\n                if (value === 'copyRefreshed') itm.offer_value = itm.refreshed_md;else if (itm.bin_num === bin) {\n                  itm.offer_value = value;\n                  return;\n                }\n              }\n            }\n          }\n        } else if (level === 'bin_to_week_agg_data') {\n          if (value === 'copyRefreshed') plan.overall_offer_value = plan && plan.overall_refreshed_md;\n\n          for (var _i = 0; _i < plan.bin_level_data.length; _i++) {\n            var _item = plan.bin_level_data[_i];\n            if (value === 'copyRefreshed') _item.overall_bin_offer_value = _item.overall_bin_refreshed_md;\n\n            if (value === 'copyRefreshed' || _item.bin === bin) {\n              for (var _j = 0; _j < _item.week_level_data.length; _j++) {\n                var _itm = _item.week_level_data[_j];\n\n                if (value === 'copyRefreshed') {\n                  _itm.offer_value = _itm.refreshed_md;\n\n                  _this.updateCadenceData(markdown_id, _item.bin, _itm.week_num, _itm.refreshed_md);\n                } else if (_itm.week_num === week) {\n                  _itm.offer_value = value; //update cadence data for respective plan\n\n                  _this.updateCadenceData(markdown_id, _item.bin, _itm.week_num, value);\n\n                  return;\n                }\n              }\n            }\n          }\n        }\n      });\n\n      return aggTableData;\n    };\n\n    _this.isSwitchedPaln = function (val) {\n      if (val && !_.isEmpty(_this.state.reqObj) && _.isEmpty(_this.props.detailedSummary)) _this.props.getSummaryDetails(_this.state.reqObj);\n\n      var newAggColDef = _this.addMDPlanColumnHandler();\n\n      _this.setState({\n        switchedPlans: val,\n        columns: _.filter(detailedColDef, function (item) {\n          return !item.hideColumn;\n        }),\n        aggColDef: _.filter(newAggColDef, function (item) {\n          return !item.hideColumn;\n        }),\n        weekToBinColDef: _.filter(weekToBinColDef(_this.handleInputChange), function (item) {\n          return !item.hideColumn;\n        }),\n        binToWeekColDef: _.filter(binToWeekColDef(_this.handleInputChange), function (item) {\n          return !item.hideColumn;\n        }),\n        selectedItems: [{\n          label: 'Margin %',\n          value: 'margin_perc',\n          overall: 'overall_margin_perc',\n          detailed: 'week_level_margin_perc'\n        }],\n        expandedRowDetails: []\n      });\n    };\n\n    _this.onFilter = function (_ref3) {\n      var filters = _ref3.filters;\n      var payload = {\n        filters: {\n          hierarchy1: filters.hierarchy1,\n          hierarchy2: filters.hierarchy2,\n          hierarchy3: filters.hierarchy3,\n          hierarchy4: filters.hierarchy4,\n          hierarchy5: filters.hierarchy5,\n          season: _this.props.selectedSeason,\n          clearance: _this.props.selectedClearance,\n          matrix: _this.props.selectedMatrix,\n          exclusion_list: _this.props.selectedExclusionList,\n          style_color: _this.props.selectedStyleColor,\n          country: _this.props.selectedCountry,\n          store_cluster: _this.props.selectedStoreCluster,\n          store: _this.props.selectedStore,\n          channel: _this.props.selectedChannel,\n          customStyleGroup: _this.props.selectedCustomStyleGroup,\n          customStoreGroup: _this.props.selectedCustomStoreGroup\n        },\n        startDate: moment(_this.props.startDate).format('YYYY-MM-DD'),\n        endDate: moment(_this.props.endDate).format('YYYY-MM-DD'),\n        week: _this.props.weeks,\n        page_num: 1,\n        page_count: 5\n      };\n      if (_this.props.selectedChannel[0] === 'Web') payload.filters['ecom_flag'] = [1];\n      if (_this.props.selectedChannel[0] === 'Outlet') payload.filters['retail_flag'] = [1];\n\n      _this.getSummary(payload);\n\n      _this.props.getKPIdata(payload).then(function (res) {\n        if (res) _this.setState({\n          showKPIS: true,\n          KPILoader: false\n        });else _this.setState({\n          KPILoader: false\n        });\n      });\n\n      _this.setState({\n        reqObj: payload,\n        pageNum: 2,\n        expandedRowDetails: [],\n        // KPILoader: true, Commented this to enable loader for KPIs only.\n        tableLoader: true,\n        switchedPlans: false\n      });\n    };\n\n    _this.roundOffNumber = function (val, key) {\n      if (!val && val !== 0 || val === 'NA') return val === 'NA' ? val : '-';\n\n      if (key === 'revenue' || key === 'margin' || key === 'cogs' || key === 'avg_retail') {\n        return toDollar({\n          value: val\n        });\n      }\n\n      if (key === 'margin_rate' || key === 'md_perc' || key === 'sell_through') {\n        return toPercentageMultipliedByHundred({\n          value: val\n        });\n      }\n\n      if (key === 'sales' || key === 'inv_oh' || key === 'wos') {\n        return toUnit({\n          value: val\n        });\n      }\n\n      return val;\n    };\n\n    _this.onScenarioSelection = function (rowData) {\n      var selectedRows = _this.state.selectedRows;\n\n      var foundEle = _.find(selectedRows, {\n        markdown_id: rowData.original.markdown_id\n      });\n\n      if (foundEle) {\n        _.remove(selectedRows, function (item) {\n          return item.markdown_id === rowData.original.markdown_id;\n        });\n      } else {\n        selectedRows.push(rowData.original);\n      }\n\n      _this.setState({\n        selectedRows: selectedRows\n      });\n\n      console.log(_this.state.selectedRows, 'rowwwww');\n    };\n\n    _this.addMDPlanColumnHandler = function () {\n      var newAggColDef = _.cloneDeep(aggColDef);\n\n      newAggColDef.splice(0, 0, {\n        id: 'selection',\n        groupByBoundary: true,\n        Header: 'Actions',\n        // fixed: 'left',\n        Cell: function Cell(props) {\n          var row = props.row,\n              rows = props.rows;\n\n          var mdPlan = row.original.markdown_id,\n              mainGrp = _.find(rows, {\n            isSelected: true,\n            original: {\n              markdown_id: mdPlan\n            }\n          }),\n              checkboxDisabled = mainGrp && !row.isSelected || row.original.level === 'sku' ? true : false;\n\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 444\n            },\n            __self: this\n          }, React.createElement(IndeterminateCheckbox, Object.assign({\n            row: row.id,\n            onClick: function onClick() {\n              _this.onScenarioSelection(row);\n            },\n            disabled: checkboxDisabled\n          }, row.getToggleRowSelectedProps(), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 445\n            },\n            __self: this\n          })));\n        }\n      });\n      newAggColDef.splice(1, 0, {\n        Header: 'MD Plan',\n        accessor: 'md_plan',\n        cellClassName: 'summary_md_plan',\n        Cell: function Cell(_ref4) {\n          var row = _ref4.row;\n          var dateCheck = moment().isBefore(row.original.end_date); //show edit btn only when current date is before plan end date, i.e.,for ongoing and future plans\n          //add isSameOrBefore to show edit btn when current date and end date are same, i.e., plan ends today\n\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 465\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 466\n            },\n            __self: this\n          }, row.original.md_plan ? row.original.md_plan : null), React.createElement(\"div\", {\n            className: \"mt-1 mb-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 467\n            },\n            __self: this\n          }, row.original.md_plan && dateCheck ? React.createElement(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick:\n            /*#__PURE__*/\n            _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee3() {\n              return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return _this.props.setRetainFilters(true);\n\n                    case 2:\n                      _this.props.updateSidebar('/vis/Markdown/create-markdown');\n\n                      _this.props.history.push({\n                        pathname: \"/vis/Markdown/create-markdown\",\n                        state: {\n                          isEdit: true,\n                          planId: row.original.markdown_id\n                        }\n                      }); // this.setState({ showEditModal: true, selectedPlanDetails: row.original });\n\n\n                    case 4:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3);\n            })),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 469\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 480\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-pencil color-blue\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 481\n            },\n            __self: this\n          }, \"Edit\"))) : ''));\n        },\n        align: 'center',\n        downloadValue: 'plan'\n      });\n      return newAggColDef;\n    };\n\n    _this.getSummary =\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(payload) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _this.props.getSummaryAggregated(payload).then(function (resp) {\n                  if (_.isEmpty(resp)) return;\n\n                  var newAggColDef = _this.addMDPlanColumnHandler();\n\n                  var planDetails = {};\n\n                  _.map(_toConsumableArray(resp.markdown_details), function (plan) {\n                    planDetails[plan.promo_code] = {\n                      cadenceData: plan.request_obj.cadenceData,\n                      validateDiscount: {\n                        min: plan.request_obj.min_discount,\n                        max: plan.request_obj.max_discount,\n                        interval: plan.request_obj.interval_discount\n                      }\n                    };\n                  });\n\n                  _this.setState({\n                    columns: _.filter(detailedColDef, function (item) {\n                      return !item.hideColumn;\n                    }),\n                    aggColDef: _.filter(newAggColDef, function (item) {\n                      return !item.hideColumn;\n                    }),\n                    weekToBinColDef: _.filter(weekToBinColDef(_this.handleInputChange), function (item) {\n                      return !item.hideColumn;\n                    }),\n                    binToWeekColDef: _.filter(binToWeekColDef(_this.handleInputChange), function (item) {\n                      return !item.hideColumn;\n                    }),\n                    tableLoader: false,\n                    aggTableData: {\n                      bin_to_week_agg_data: resp && resp.bin_to_week_agg_data,\n                      week_to_bin_agg_data: resp && resp.week_to_bin_agg_data\n                    },\n                    planDetails: planDetails\n                  });\n                });\n\n              case 2:\n                return _context4.abrupt(\"return\", true);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x2) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.renderRowSubComponent = function (_ref7) {\n      var row = _ref7.row;\n      var expandedRowDetails = _this.state.expandedRowDetails; //contains all the expanded rows details\n\n      var foundLevel = _.filter(expandedRowDetails, {\n        //check if this row is expanded\n        markdown_id: row.original.markdown_id\n      });\n\n      var data = [];\n      if (!foundLevel[0]) return; //if not expanded then return\n\n      if (foundLevel[0] && foundLevel[0].level === 'week_to_bin') {\n        //if row is expanded on week_to_bin level, directly take the data from row\n        var newData = _.cloneDeep(row.original.week_level_data);\n\n        if (!newData) return;\n\n        _.map(newData, function (item) {\n          item.subRows = item.bin_level_data; //changing bin_level_data key into subRows, to acquire Expandable feature from reatc-table\n\n          item.markdown_id = row.original.markdown_id;\n          delete item.bin_level_data;\n          return item;\n        });\n\n        data = newData;\n      }\n\n      if (foundLevel[0] && foundLevel[0].level === 'bin_to_week') {\n        //if row is expanded on bin_to_week level, then find row data using markdown_id from the reducer aggregatedSummary\n        var _newData = _.find(_this.state.aggTableData.bin_to_week_agg_data, {\n          markdown_id: row.original.markdown_id\n        });\n\n        if (!_newData) return;\n        _newData = _.cloneDeep(_newData);\n\n        _.map(_newData.bin_level_data, function (item) {\n          item.subRows = item.week_level_data; //changing name to subRows to get Expandable feature from react-table\n\n          item.start_date = _newData.start_date;\n          item.end_date = _newData.end_date;\n          item.markdown_id = row.original.markdown_id;\n          delete item.week_level_data;\n        });\n\n        data = _newData.bin_level_data;\n      }\n\n      var columns = foundLevel[0] && foundLevel[0].level === 'week_to_bin' && row.original.week_level_data ? _this.state.weekToBinColDef : foundLevel[0] && foundLevel[0].level === 'bin_to_week' ? _this.state.binToWeekColDef : []; //selecting colfdef according to the level user has choosen\n\n      return React.createElement(\"div\", {\n        className: \"child-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        columns: columns,\n        data: data,\n        isHeaderHidden: true,\n        isChildComp: true //true for only subComponents, added to make some styling changes\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }));\n    };\n\n    _this.expandedRowDetailsHandler = function (row, level) {\n      //called whenever user clicks on a \">\" icon in the cell\n      //this is to track expanded row details, and on which level its expanded(week to bin/bin to week)\n      var expandedRowDetails = _this.state.expandedRowDetails;\n\n      if (_.find(expandedRowDetails, {\n        markdown_id: row.markdown_id\n      })) {\n        _.remove(expandedRowDetails, {\n          markdown_id: row.markdown_id\n        });\n      } else {\n        expandedRowDetails.push({\n          markdown_id: row.markdown_id,\n          level: level\n        });\n      }\n\n      _this.setState({\n        expandedRowDetails: expandedRowDetails\n      });\n    };\n\n    _this.nextPageHandler =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var payload;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              payload = _.cloneDeep(_this.state.reqObj);\n              payload.page_num = _this.state.pageNum;\n\n              _this.setState({\n                pageNum: _this.state.pageNum + 1\n              });\n\n              _context5.next = 5;\n              return _this.getSummary(payload);\n\n            case 5:\n              return _context5.abrupt(\"return\", true);\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    _this.updateCadenceData = function (markdownId, binOrSku, week, value) {\n      var cadenceData = _this.state.planDetails[markdownId].cadenceData;\n      var cadence1 = cadenceData[Object.keys(cadenceData)[0]];\n\n      var findCadence = _.find(cadence1, {\n        bins: binOrSku.toString()\n      });\n\n      findCadence[\"W\".concat(week)] = value;\n    };\n\n    _this.validateCadenceValue = function () {\n      var _this$state = _this.state,\n          planDetails = _this$state.planDetails,\n          selectedRows = _this$state.selectedRows;\n      var markdownIdList = selectedRows.map(function (item) {\n        return item.markdown_id;\n      });\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = markdownIdList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var id = _step.value;\n          var planData = planDetails[id];\n          console.log(planDetails, 'idddd', id);\n\n          var array = _.cloneDeep(Object.values(planData && planData.cadenceData)[0]);\n\n          if (_.isEmpty(array) || _.isEmpty(array[0])) return false;\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = array[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var item = _step2.value;\n              var breakLoop = false;\n\n              for (var prop in item) {\n                var val = item[prop];\n                var isValid = val >= parseInt(planData.validateDiscount.min) && val <= parseInt(planData.validateDiscount.max) && val % parseInt(planData.validateDiscount.interval) == 0;\n\n                if (prop.includes('W') && !isValid) {\n                  toast.error(\"Please enter values between \".concat(planData.validateDiscount.min, \" and \").concat(planData.validateDiscount.max, \" in intervals of \").concat(planData.validateDiscount.interval), {\n                    autoClose: 15000,\n                    hideProgressBar: true\n                  });\n                  breakLoop = true;\n                  return;\n                }\n              }\n\n              if (breakLoop) return false;\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          return true;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    };\n\n    _this.onSaveAndResimulate = function () {\n      var cadenceValidation = _this.validateCadenceValue();\n\n      if (!cadenceValidation) return;\n      var _this$state2 = _this.state,\n          selectedRows = _this$state2.selectedRows,\n          planDetails = _this$state2.planDetails;\n      var markdown_idList = selectedRows.map(function (item) {\n        return item.markdown_id;\n      });\n      var markdown_cadence_details = [];\n\n      _.map(markdown_idList, function (item) {\n        var details = _.find(_this.props.markdownDetails, {\n          promo_code: item\n        });\n\n        markdown_cadence_details.push({\n          cadenceData: planDetails[item] && planDetails[item].cadenceData,\n          promo_code: details.promo_code\n        });\n      });\n\n      _this.props.sendResimulateAndSave({\n        markdown_cadence_details: markdown_cadence_details\n      }).then(function (resp) {\n        _this.setState({\n          selectedRows: selectedRows\n        });\n\n        var status = Object.values(resp.data.data).map(function (a) {\n          return a.status;\n        });\n        console.log(status, 'ssssssssss');\n\n        var payload = _.cloneDeep(_this.state.reqObj);\n\n        if (status) {\n          console.log('success');\n\n          _this.getSummary(payload);\n        }\n\n        console.log(resp.data, 'resssssssssssss');\n      });\n    };\n\n    _this.onCopyRefreshed = function () {\n      var markdownIdList = _.map(_this.state.selectedRows, function (data, i) {\n        return data.markdown_id;\n      });\n\n      var _this$state3 = _this.state,\n          aggTableData = _this$state3.aggTableData,\n          planDetails = _this$state3.planDetails,\n          selectedRows = _this$state3.selectedRows; //_.cloneDeep(this.state.aggTableData);\n      //if state is not cloned this will update the state without rendering the component\n\n      _.map(markdownIdList, function (id) {\n        aggTableData = _this.handleInputChange('copyRefreshed', id);\n      });\n\n      _this.setState({\n        aggTableData: aggTableData,\n        planDetails: planDetails\n      });\n    };\n\n    _this.state = (_this$state4 = {\n      switchedPlans: false,\n      //default aggregated view\n      textStr: 'Please select filters to show Markdown plans',\n      // firstCardText: 'KPIs to be decided',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'LW',\n      cardMonthText: 'TW',\n      cardTotalText: 'Total',\n      selectedRows: [],\n      selectedItems: [{\n        label: 'Margin %',\n        value: 'margin_perc',\n        //for subcomponents\n        overall: 'overall_margin_perc',\n        //for main table(agg-parent)\n        detailed: 'week_level_margin_perc' //for detailed table\n\n      }],\n      columnOptions: [{\n        label: 'Margin %',\n        value: 'margin_perc',\n        overall: 'overall_margin_perc',\n        detailed: 'week_level_margin_perc'\n      }, {\n        label: 'Margin $',\n        value: 'margin$',\n        overall: 'overall_margin$',\n        detailed: 'week_level_margin$'\n      }, {\n        label: 'AUM $',\n        value: 'aum',\n        overall: 'overall_aum',\n        detailed: 'week_level_aum'\n      }, {\n        label: 'Revenue $',\n        value: 'revenue$',\n        overall: 'overall_revenue$',\n        detailed: 'week_level_revenue$'\n      }, // {\n      //   label: 'Planned units',\n      //   value: 'planned_units',\n      //   overall: 'overall_planned_units',\n      //   detailed: 'week_level_planned_units',\n      // },\n      {\n        label: 'Markdown units',\n        value: 'markdown_units',\n        overall: 'overall_markdown_units',\n        detailed: 'week_level_markdown_units'\n      }, {\n        label: 'AUR $',\n        value: 'aur',\n        overall: 'overall_aur',\n        detailed: 'week_level_aur'\n      }],\n      selLabels: ['Margin', 'Sales'],\n      columns: [],\n      aggColDef: [],\n      weekToBinColDef: [],\n      binToWeekColDef: []\n    }, _defineProperty(_this$state4, \"selectedRows\", []), _defineProperty(_this$state4, \"aggTableData\", []), _defineProperty(_this$state4, \"showKPIS\", false), _defineProperty(_this$state4, \"expandedRowDetails\", []), _defineProperty(_this$state4, \"pageNum\", 1), _defineProperty(_this$state4, \"KPILoader\", false), _defineProperty(_this$state4, \"tableLoader\", false), _defineProperty(_this$state4, \"planDetails\", {}), _this$state4);\n    _this.socket = null;\n    return _this;\n  } //function definition\n\n\n  _createClass(Summary, [{\n    key: \"initSocketConnection\",\n    value: function initSocketConnection() {\n      //this method establishes the socket connection\n      this.socket = io(config.createMarkdownURL, {\n        transports: ['websocket']\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initSocketConnection();\n      this.setupSocketListeners();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    // Commented below to test updatesummarykpi event listening\n    // refreshKPIs = () => {\n    //   console.log('this.state.room_id', this.state.room_id);\n    //   this.socket.emit('summarykpi', () => console.log('summarykpi'));\n    // };\n    value: function componentWillUnmount() {\n      this.props.onResetSummaryTable();\n      this.socket.disconnect();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.aggTableData, 'aggTableData');\n      var imageArray = [card1Image, card2Image, card3Image, card4Image, card1Image, card2Image, card3Image, card4Image, card1Image, card2Image];\n      var cardStyle = ['card-border1', 'card-border2', 'card-border3', 'card-border4', 'card-border1', 'card-border2', 'card-border3', 'card-border4', 'card-border1', 'card-border2'];\n      return (//Added conditions to enable loader for KPIs only.\n        React.createElement(LoadingOverlay, {\n          loader: this.state.KPILoader ? false : this.props.getOverlayLoaderState || this.state.tableLoader,\n          spinner: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 721\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"createMd pl-2 pr-2 summary-comp\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 726\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card CalendarMain promoCalendarDiv1 mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 727\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 728\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          className: \"font-size-14  pad-10 markdown-heading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 729\n          },\n          __self: this\n        }, \"MarkSmart /\", React.createElement(\"span\", {\n          className: \"font-bold color-blue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 730\n          },\n          __self: this\n        }, \"Summary\"))), React.createElement(\"hr\", {\n          className: \"mb-2\",\n          style: {\n            marginTop: '-4px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 733\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"filterCol mb-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 739\n          },\n          __self: this\n        }, React.createElement(Filters, {\n          storeClusterDisable: true,\n          onReset: function onReset(e) {\n            _this2.setState({\n              textStr: 'Please select filters to show Markdown plans',\n              showKPIS: false\n            });\n\n            _this2.props.onResetSummaryTable();\n          },\n          hierarchy: this.state.filters,\n          onFilter: this.onFilter,\n          dateRange: true,\n          filtersOptions: [{\n            type: 'country',\n            isMandatory: true,\n            isMultiple: false\n          }, {\n            type: 'channel',\n            isMandatory: true,\n            isMultiple: false\n          }, {\n            type: 'storeCluster',\n            isMandatory: false,\n            isMultiple: true\n          }, {\n            type: 'customStoreGroup',\n            isMandatory: false,\n            isMultiple: true\n          }, {\n            type: 'store',\n            isMandatory: false,\n            isMultiple: true\n          }, {\n            type: 'hierarchy1',\n            isMandatory: true,\n            isMultiple: false,\n            isHierarchy: true\n          }, {\n            type: 'hierarchy2',\n            isMandatory: true,\n            isMultiple: false,\n            isHierarchy: true\n          }, {\n            type: 'hierarchy3',\n            isMandatory: true,\n            isMultiple: false,\n            isHierarchy: true\n          }, {\n            type: 'hierarchy4',\n            isMandatory: true,\n            isMultiple: false,\n            isHierarchy: true\n          }, {\n            type: 'hierarchy5',\n            isMandatory: true,\n            isMultiple: false,\n            isHierarchy: true\n          }, {\n            type: 'season',\n            isMandatory: false,\n            isMultiple: true\n          }, {\n            type: 'matrix',\n            isMandatory: false,\n            isMultiple: true\n          }, {\n            type: 'exclusionList',\n            isMandatory: false,\n            isMultiple: true\n          }, {\n            type: 'clearance',\n            isMandatory: false,\n            isMultiple: true\n          }, {\n            type: 'customStyleGroup',\n            isMandatory: false,\n            isMultiple: true\n          }, {\n            type: 'styleColor',\n            isMandatory: false,\n            isMultiple: true\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 740\n          },\n          __self: this\n        }))), this.props.summaryKPIData && this.state.showKPIS ? // <div className=\"cardContainerstyle\" style={{ marginTop: '10px' }}>\n        React.createElement(LoadingOverlay, {\n          loader: this.state.KPILoader,\n          spinner: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 801\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"cardContainerstyle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 802\n          },\n          __self: this\n        }, this.props.summaryKPIData && this.props.summaryKPIData.columnMapping && Array.isArray(Object.keys(this.props.summaryKPIData.columnMapping)) && Object.keys(this.props.summaryKPIData.columnMapping).map(function (key, index) {\n          return (// <div className=\"col-md-3 col-sm-3 col-xs-6 p-2\">\n            React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 809\n              },\n              __self: this\n            }, React.createElement(CardComponent, {\n              cardImage: imageArray[index] //item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1);\n              //cardText={key && key.charAt(0).toUpperCase() + key.slice(1)}\n              ,\n              cardText: _this2.props.summaryKPIData.columnMapping && _this2.props.summaryKPIData.columnMapping[key] && _this2.props.summaryKPIData.columnMapping[key].charAt(0) + _this2.props.summaryKPIData.columnMapping[key].slice(1).toLowerCase(),\n              cardValue: _this2.props.summaryKPIData.KPIS.lw && _this2.roundOffNumber(_this2.props.summaryKPIData.KPIS.lw[key], key),\n              cardValueSecond: _this2.props.summaryKPIData.KPIS.tw && _this2.roundOffNumber(_this2.props.summaryKPIData.KPIS.tw[key], key),\n              cardValueThird: _this2.props.summaryKPIData.KPIS.total && _this2.roundOffNumber(_this2.props.summaryKPIData.KPIS.total[key], key),\n              cardWeekText: _this2.state.cardWeekText,\n              cardMonthText: _this2.state.cardMonthText,\n              cardTotalText: _this2.state.cardTotalText,\n              cardStyles: {\n                cardClass: cardStyle[index] //cardValue: 'card1-value',\n                //cardImg: summaryKPIData.cardStyleImg,\n                //cardValueSecond: 'card-value-second',\n                //cardSubHeading: 'card-subHeading',\n\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 810\n              },\n              __self: this\n            }))\n          );\n        })), ' ') : null, !_.isEmpty(this.props.detailedSummary) || !_.isEmpty(this.state.aggTableData) ? React.createElement(\"div\", {\n          className: \"card pt-3 px-3 mt-3 summary-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 849\n          },\n          __self: this\n        }, React.createElement(ColSelBtn, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 850\n          },\n          __self: this\n        }, (this.state.switchedPlans && !_.isEmpty(this.state.columns) || !this.state.switchedPlans && !_.isEmpty(this.state.aggColDef)) && React.createElement(ColumnSelection, {\n          onHandleSelect: this.onHandleSelect,\n          columnOptions: this.state.columnOptions,\n          selectedItems: this.state.selectedItems,\n          selLabels: this.state.selLabels,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 853\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"switchCss\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 860\n          },\n          __self: this\n        }, React.createElement(Switch, {\n          checked: this.state.switchedPlans,\n          onSwitchHandler: this.isSwitchedPaln,\n          leftLabel: \"Aggregated\",\n          rightLabel: \"Detailed\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 861\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          style: {\n            padding: '1rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 868\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-primary\",\n          disabled: !this.state.selectedRows.length,\n          onClick: this.onCopyRefreshed,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 869\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 873\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-copy\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 874\n          },\n          __self: this\n        }), \"\\xA0 Copy refreshed\")), \"\\xA0\", React.createElement(\"button\", {\n          disabled: !this.state.selectedRows.length,\n          className: \"btn btn-primary\",\n          onClick: this.onSaveAndResimulate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 878\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 882\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-save\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 883\n          },\n          __self: this\n        }), \"\\xA0 Save\")))), this.state.switchedPlans ? React.createElement(DataTable, {\n          columns: this.state.columns,\n          isSort: true,\n          showExport: true,\n          fileName: \"Summary detailed data\",\n          data: this.props.detailedSummary,\n          updateMyData: this.updateMyData,\n          isPagination: true,\n          rowsPerPage: 5,\n          getCellProps: function getCellProps(cellInfo) {\n            return {\n              style: {\n                backgroundColor: _this2.bgmCol(cellInfo),\n                color: _this2.txtCol(cellInfo),\n                margin: '4px 4px',\n                borderRadius: '2px'\n              }\n            };\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 889\n          },\n          __self: this\n        }) : React.createElement(DataTable, {\n          columns: this.state.aggColDef,\n          isSort: true,\n          data: this.state.aggTableData.week_to_bin_agg_data,\n          updateMyData: this.updateMyData,\n          isPagination: true,\n          rowsPerPage: 5,\n          renderRowSubComponent: this.renderRowSubComponent,\n          nextPageHandler: this.nextPageHandler,\n          getCellProps: function getCellProps(cellInfo) {\n            return {\n              style: {\n                backgroundColor: _this2.bgmCol(cellInfo),\n                color: _this2.txtCol(cellInfo),\n                margin: '4px 4px',\n                borderRadius: '2px'\n              },\n              onClick: function onClick(e) {\n                //added to track on which cell user has clicked\n                var classList = e.target.classList;\n                if (classList && !(classList.contains('expanded-icon-size') || classList.contains('summary-table-icon'))) //user clicks on div(i.e, row is not expanded)  then return\n                  return;\n                if (cellInfo.column.id === 'expander') //expander is Date Range cell\n                  _this2.expandedRowDetailsHandler(cellInfo.row.original, 'week_to_bin');else if (cellInfo.column.id === 'expander1') //expander1 is Bins cell\n                  _this2.expandedRowDetailsHandler(cellInfo.row.original, 'bin_to_week');\n              }\n            };\n          },\n          RowCheck: function RowCheck(_ref9) {\n            var row = _ref9.row,\n                column = _ref9.column;\n            if (!(column.id === 'expander' || column.id === 'expander1')) return; //disables sibling cell within a row, when a particular row is expanded\n\n            var foundLevel = _.filter(_this2.state.expandedRowDetails, {\n              markdown_id: row.original.markdown_id\n            });\n\n            if (!foundLevel[0]) return;\n            return foundLevel[0].level === 'week_to_bin' && column.id === 'expander1' || foundLevel[0].level === 'bin_to_week' && column.id === 'expander' ? 'tdtd disable-summary-cell' : null;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 908\n          },\n          __self: this\n        })) : React.createElement(NoData, {\n          description: this.state.textStr,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 962\n          },\n          __self: this\n        })))\n      );\n    }\n  }]);\n\n  return Summary;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    finalizeMarkdownData: store.draftStatusReducer.markdowns,\n    getOverlayLoaderState: store.loaderReducer.overlayLoaderState,\n    getOverlayLoaderText: store.loaderReducer.loaderText,\n    getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    getMetricOptions: store.finalizeReducer.metricOptions,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks,\n    markdownDetails: store.summaryMDReducer.markdownDetails,\n    selectedSeason: store.filtersReducer.selectedSeason,\n    selectedClearance: store.filtersReducer.selectedClearance,\n    selectedMatrix: store.filtersReducer.selectedMatrix,\n    selectedExclusionList: store.filtersReducer.selectedExclusionList,\n    selectedStyleColor: store.filtersReducer.selectedStyleColor,\n    selectedCountry: store.filtersReducer.selectedCountry,\n    selectedStoreCluster: store.filtersReducer.selectedStoreCluster,\n    selectedStore: store.filtersReducer.selectedStore,\n    selectedChannel: store.filtersReducer.selectedChannel,\n    summaryKPIData: store.summaryMDReducer.summaryKPIData,\n    detailedSummary: store.summaryMDReducer.detailedSummary,\n    aggregatedSummary: store.summaryMDReducer.aggregatedSummary\n  };\n};\n\nvar mapActionToProps = {\n  getSummaryDetails: SummaryAction.getSummaryDetails,\n  getSummaryAggregated: SummaryAction.getSummaryAggregated,\n  onResetSummaryTable: SummaryAction.onResetSummaryTable,\n  getKPIdata: SummaryAction.getKPIdata,\n  updateSidebar: plannedReportsAction.updateSidebar,\n  setRetainFilters: filterActions.setRetainFilters,\n  sendResimulateAndSave: SummaryAction.sendResimulateAndSave\n};\nexport default connect(mapStateToProps, mapActionToProps)(withRouter(Summary));\nvar ColSelBtn = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Summary/Summary.js"],"names":["React","Component","connect","withRouter","Filters","styled","LoadingOverlay","NoData","SummaryAction","plannedReportsAction","aggColDef","binToWeekColDef","weekToBinColDef","detailedColDef","_","DataTable","ColumnSelection","moment","card1Image","card2Image","card3Image","card4Image","Switch","CardComponent","filterActions","IndeterminateCheckbox","toPercentageMultipliedByHundred","toUnit","toDollar","toast","io","config","Summary","props","createRooms","token","localStorage","getItem","console","log","socket","emit","summarykapi","setupSocketListeners","on","reason","data","userId","user_id","setState","room_id","state","summaryKPIData","aggTableData","week_to_bin_agg_data","loadKPIs","showProcessing","payload","reqObj","KPILoader","getKPIdata","then","res","showKPIS","findStatusColor","status","color","high","medium","low","bgmCol","cellInfo","column","id","row","original","md_status","bgCol","txtCol","metricHandler","columns","selOptions","val","headers","cloneDeep","remove","item","metric","hideColumn","forEach","newTableCols","filter","a","accessor","found","find","length","spliceAt","splice","onHandleSelect","weekToBinHeader","binToWeekHeader","switchedPlans","selectedItems","newAggColDef","addMDPlanColumnHandler","handleInputChange","value","markdown_id","bin","week","map","Object","keys","level","index","findIndex","plan","overall_offer_value","overall_refreshed_md","i","week_level_data","overall_week_offer_value","overall_week_refreshed_md","j","bin_level_data","itm","offer_value","refreshed_md","bin_num","overall_bin_offer_value","overall_bin_refreshed_md","updateCadenceData","week_num","isSwitchedPaln","isEmpty","detailedSummary","getSummaryDetails","label","overall","detailed","expandedRowDetails","onFilter","filters","hierarchy1","hierarchy2","hierarchy3","hierarchy4","hierarchy5","season","selectedSeason","clearance","selectedClearance","matrix","selectedMatrix","exclusion_list","selectedExclusionList","style_color","selectedStyleColor","country","selectedCountry","store_cluster","selectedStoreCluster","store","selectedStore","channel","selectedChannel","customStyleGroup","selectedCustomStyleGroup","customStoreGroup","selectedCustomStoreGroup","startDate","format","endDate","weeks","page_num","page_count","getSummary","pageNum","tableLoader","roundOffNumber","key","onScenarioSelection","rowData","selectedRows","foundEle","push","groupByBoundary","Header","Cell","rows","mdPlan","mainGrp","isSelected","checkboxDisabled","getToggleRowSelectedProps","cellClassName","dateCheck","isBefore","end_date","md_plan","setRetainFilters","updateSidebar","history","pathname","isEdit","planId","align","downloadValue","getSummaryAggregated","resp","planDetails","markdown_details","promo_code","cadenceData","request_obj","validateDiscount","min","min_discount","max","max_discount","interval","interval_discount","bin_to_week_agg_data","renderRowSubComponent","foundLevel","newData","subRows","start_date","expandedRowDetailsHandler","nextPageHandler","markdownId","binOrSku","cadence1","findCadence","bins","toString","validateCadenceValue","markdownIdList","planData","array","values","breakLoop","prop","isValid","parseInt","includes","error","autoClose","hideProgressBar","onSaveAndResimulate","cadenceValidation","markdown_idList","markdown_cadence_details","details","markdownDetails","sendResimulateAndSave","onCopyRefreshed","textStr","firstCardFirstValue","firstCardSecondValue","secondCardFirstValue","secondCardSecondValue","thirdCardFirstValue","thirdCardSecondValue","fourthCardFirstValue","fourthCardSecondValue","cardWeekText","cardMonthText","cardTotalText","columnOptions","selLabels","createMarkdownURL","transports","initSocketConnection","onResetSummaryTable","disconnect","imageArray","cardStyle","getOverlayLoaderState","marginTop","e","type","isMandatory","isMultiple","isHierarchy","columnMapping","Array","isArray","charAt","slice","toLowerCase","KPIS","lw","tw","total","cardClass","padding","updateMyData","style","backgroundColor","margin","borderRadius","onClick","classList","target","contains","mapStateToProps","finalizeMarkdownData","draftStatusReducer","markdowns","loaderReducer","overlayLoaderState","getOverlayLoaderText","loaderText","getColumnHeaders","columnHeaders","getMetricOptions","finalizeReducer","metricOptions","selectedHierarchy1","filtersReducer","selectedHierarchy2","selectedHierarchy3","selectedHierarchy4","selectedHierarchy5","summaryMDReducer","aggregatedSummary","mapActionToProps","ColSelBtn","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Filters from '../../services/filters';\nimport './summaryStyle.css';\nimport styled from 'styled-components';\nimport LoadingOverlay from '../../utils/Loader';\nimport NoData from '../noTableData';\nimport SummaryAction from '../../actions/summaryAction';\nimport plannedReportsAction from '../../actions/plannedReportsAction';\nimport { aggColDef, binToWeekColDef, weekToBinColDef, detailedColDef } from './aggColdef';\nimport _ from 'lodash';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport moment from 'moment';\nimport card1Image from '../../images/card1Image.png';\nimport card2Image from '../../images/card2Image.png';\nimport card3Image from '../../images/card3Image.png';\nimport card4Image from '../../images/card4Image.png';\nimport Switch from '../../services/toggleSwitch';\nimport CardComponent from '../../services/cardComponent/cardComponent';\nimport filterActions from '../../actions/filtersAction';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox';\nimport { toPercentageMultipliedByHundred, toUnit, toDollar } from '../../helper/formatter';\nimport { toast } from 'react-toastify';\nimport io from 'socket.io-client';\nimport { config } from '../../utils/config';\n\nclass Summary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      switchedPlans: false, //default aggregated view\n      textStr: 'Please select filters to show Markdown plans',\n      // firstCardText: 'KPIs to be decided',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'LW',\n      cardMonthText: 'TW',\n      cardTotalText: 'Total',\n      selectedRows: [],\n      selectedItems: [\n        {\n          label: 'Margin %',\n          value: 'margin_perc', //for subcomponents\n          overall: 'overall_margin_perc', //for main table(agg-parent)\n          detailed: 'week_level_margin_perc', //for detailed table\n        },\n      ],\n      columnOptions: [\n        {\n          label: 'Margin %',\n          value: 'margin_perc',\n          overall: 'overall_margin_perc',\n          detailed: 'week_level_margin_perc',\n        },\n        {\n          label: 'Margin $',\n          value: 'margin$',\n          overall: 'overall_margin$',\n          detailed: 'week_level_margin$',\n        },\n        {\n          label: 'AUM $',\n          value: 'aum',\n          overall: 'overall_aum',\n          detailed: 'week_level_aum',\n        },\n        {\n          label: 'Revenue $',\n          value: 'revenue$',\n          overall: 'overall_revenue$',\n          detailed: 'week_level_revenue$',\n        },\n        // {\n        //   label: 'Planned units',\n        //   value: 'planned_units',\n        //   overall: 'overall_planned_units',\n        //   detailed: 'week_level_planned_units',\n        // },\n        {\n          label: 'Markdown units',\n          value: 'markdown_units',\n          overall: 'overall_markdown_units',\n          detailed: 'week_level_markdown_units',\n        },\n        {\n          label: 'AUR $',\n          value: 'aur',\n          overall: 'overall_aur',\n          detailed: 'week_level_aur',\n        },\n      ],\n      selLabels: ['Margin', 'Sales'],\n      columns: [],\n      aggColDef: [],\n      weekToBinColDef: [],\n      binToWeekColDef: [],\n      selectedRows: [],\n      aggTableData: [],\n      showKPIS: false,\n      expandedRowDetails: [],\n      pageNum: 1,\n      KPILoader: false,\n      tableLoader: false,\n      planDetails: {},\n    };\n    this.socket = null;\n  }\n  //function definition\n  initSocketConnection() {\n    //this method establishes the socket connection\n    this.socket = io(config.createMarkdownURL, { transports: ['websocket'] });\n  }\n  componentDidMount() {\n    this.initSocketConnection();\n    this.setupSocketListeners();\n  }\n\n  createRooms = () => {\n    let token = localStorage.getItem('token');\n    console.log(token, 'token');\n    this.socket.emit('create room', {\n      token: token, //token stored\n      summarykapi: 1,\n    });\n  };\n  //function definition\n  setupSocketListeners = async () => {\n    //this method has all the sockets events defined\n    this.socket.on('connect', () => {\n      console.log('Connected in summary', this.socket);\n      this.createRooms();\n    });\n\n    this.socket.on('disconnect', async (reason) => {\n      console.log('Disconnected in summary', reason);\n    });\n\n    this.socket.on('roomDetails', (data) => {\n      let userId = localStorage.getItem('userId');\n      console.log('Testing back end room data in summary', data, userId);\n      if (userId == data.user_id) {\n        //no need of type check, since the types are different\n        this.setState(\n          {\n            room_id: data.room_id,\n          },\n          () => {\n            console.log('roomId set', this.state.room_id);\n          }\n        );\n      }\n    });\n    this.socket.on('updatesummarykpi', (data) => {\n      // this.socket.on('summaykpiroomDetails', (data) => {\n      console.log('updatesummarykpi', data);\n      if (this.props.summaryKPIData && this.state.aggTableData.week_to_bin_agg_data) {\n        this.loadKPIs();\n        this.setState({ showProcessing: false }); //loader\n      }\n    });\n  };\n  loadKPIs = () => {\n    let payload = this.state.reqObj;\n    this.setState({ KPILoader: true });\n    this.props.getKPIdata(payload).then((res) => {\n      if (res) this.setState({ showKPIS: true, KPILoader: false });\n      else this.setState({ KPILoader: false });\n    });\n  };\n  // Commented below to test updatesummarykpi event listening\n  // refreshKPIs = () => {\n  //   console.log('this.state.room_id', this.state.room_id);\n  //   this.socket.emit('summarykpi', () => console.log('summarykpi'));\n  // };\n  componentWillUnmount() {\n    this.props.onResetSummaryTable();\n    this.socket.disconnect();\n  }\n  findStatusColor = (status, color) => {\n    switch (status) {\n      case 'high':\n        return color.high;\n      case 'medium':\n        return color.medium;\n      case 'low':\n        return color.low;\n      default:\n        break;\n    }\n  };\n\n  bgmCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let bgCol = {\n      high: '#F8E8E8',\n      medium: '#FCF3D1',\n      low: '#E8F8F5',\n    };\n    return this.findStatusColor(status, bgCol);\n  };\n  txtCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let txtCol = {\n      high: '#D38485',\n      medium: '#F0C53A',\n      low: '#66CFBA',\n    };\n    return this.findStatusColor(status, txtCol);\n  };\n  metricHandler = (columns, selOptions, val) => {\n    // val=detailed for detailed table, val=overall for agg-parent col and val=value for subcomponent cols\n    let headers = _.cloneDeep(columns);\n    _.remove(headers, (item) => item.metric || item.hideColumn); //removing metric:true and hideColumn: true cols\n    _.forEach(selOptions, (item) => {\n      let newTableCols = _.filter(headers, (a) => {\n        return a.accessor === item[val];\n      });\n      let found = _.find(columns, { accessor: item[val] });\n      if (newTableCols.length == 0) {\n        let spliceAt = headers.length - 0; //modify here if the new col needs to be added at a specific index\n        headers.splice(spliceAt, 0, found);\n      }\n    });\n\n    return headers;\n  };\n  onHandleSelect = (selOptions) => {\n    let headers, weekToBinHeader, binToWeekHeader;\n    if (this.state.switchedPlans) {\n      //detailed table case\n      headers = this.metricHandler(detailedColDef, selOptions, 'detailed');\n      this.setState({\n        columns: headers,\n        selectedItems: selOptions,\n      });\n    } else {\n      //agg-table case: needs to update 3 coldefs,\n      //imported coldefs already has all of the required columns,\n      //we are just filtering out needed cols(filtering is done in metricHandler method)\n      let newAggColDef = this.addMDPlanColumnHandler();\n      headers = this.metricHandler(newAggColDef, selOptions, 'overall');\n      weekToBinHeader = this.metricHandler(\n        weekToBinColDef(this.handleInputChange),\n        selOptions,\n        'value'\n      );\n      binToWeekHeader = this.metricHandler(\n        binToWeekColDef(this.handleInputChange),\n        selOptions,\n        'value'\n      );\n\n      this.setState({\n        aggColDef: headers,\n        weekToBinColDef: weekToBinHeader,\n        binToWeekColDef: binToWeekHeader,\n        selectedItems: selOptions,\n      });\n    }\n  };\n  handleInputChange = (value, markdown_id, bin, week) => {\n    //do not use setState in this method, bcs it'll cause table to rerender\n    let { aggTableData } = this.state;\n    //if state is not cloned this will update the state without rendering the component\n\n    _.map(Object.keys(aggTableData), (level) => {\n      let index = _.findIndex(aggTableData[level], { markdown_id: markdown_id });\n      let plan = aggTableData[level][index];\n\n      if (level === 'week_to_bin_agg_data') {\n        if (value === 'copyRefreshed') plan.overall_offer_value = plan.overall_refreshed_md;\n\n        for (let i = 0; i < plan.week_level_data.length; i++) {\n          let item = plan.week_level_data[i];\n          if (value === 'copyRefreshed')\n            item.overall_week_offer_value = item.overall_week_refreshed_md;\n\n          if (value === 'copyRefreshed' || item.week === week) {\n            for (let j = 0; j < item.bin_level_data.length; j++) {\n              let itm = item.bin_level_data[j];\n\n              if (value === 'copyRefreshed') itm.offer_value = itm.refreshed_md;\n              else if (itm.bin_num === bin) {\n                itm.offer_value = value;\n                return;\n              }\n            }\n          }\n        }\n      } else if (level === 'bin_to_week_agg_data') {\n        if (value === 'copyRefreshed') plan.overall_offer_value = plan && plan.overall_refreshed_md;\n\n        for (let i = 0; i < plan.bin_level_data.length; i++) {\n          let item = plan.bin_level_data[i];\n          if (value === 'copyRefreshed')\n            item.overall_bin_offer_value = item.overall_bin_refreshed_md;\n\n          if (value === 'copyRefreshed' || item.bin === bin) {\n            for (let j = 0; j < item.week_level_data.length; j++) {\n              let itm = item.week_level_data[j];\n\n              if (value === 'copyRefreshed') {\n                itm.offer_value = itm.refreshed_md;\n                this.updateCadenceData(markdown_id, item.bin, itm.week_num, itm.refreshed_md);\n              } else if (itm.week_num === week) {\n                itm.offer_value = value;\n                //update cadence data for respective plan\n                this.updateCadenceData(markdown_id, item.bin, itm.week_num, value);\n                return;\n              }\n            }\n          }\n        }\n      }\n    });\n\n    return aggTableData;\n  };\n\n  isSwitchedPaln = (val) => {\n    if (val && !_.isEmpty(this.state.reqObj) && _.isEmpty(this.props.detailedSummary))\n      this.props.getSummaryDetails(this.state.reqObj);\n    let newAggColDef = this.addMDPlanColumnHandler();\n\n    this.setState({\n      switchedPlans: val,\n      columns: _.filter(detailedColDef, (item) => !item.hideColumn),\n      aggColDef: _.filter(newAggColDef, (item) => !item.hideColumn),\n      weekToBinColDef: _.filter(\n        weekToBinColDef(this.handleInputChange),\n        (item) => !item.hideColumn\n      ),\n      binToWeekColDef: _.filter(\n        binToWeekColDef(this.handleInputChange),\n        (item) => !item.hideColumn\n      ),\n      selectedItems: [\n        {\n          label: 'Margin %',\n          value: 'margin_perc',\n          overall: 'overall_margin_perc',\n          detailed: 'week_level_margin_perc',\n        },\n      ],\n      expandedRowDetails: [],\n    });\n  };\n  onFilter = ({ filters }) => {\n    let payload = {\n      filters: {\n        hierarchy1: filters.hierarchy1,\n        hierarchy2: filters.hierarchy2,\n        hierarchy3: filters.hierarchy3,\n        hierarchy4: filters.hierarchy4,\n        hierarchy5: filters.hierarchy5,\n        season: this.props.selectedSeason,\n        clearance: this.props.selectedClearance,\n        matrix: this.props.selectedMatrix,\n        exclusion_list: this.props.selectedExclusionList,\n        style_color: this.props.selectedStyleColor,\n        country: this.props.selectedCountry,\n        store_cluster: this.props.selectedStoreCluster,\n        store: this.props.selectedStore,\n        channel: this.props.selectedChannel,\n        customStyleGroup: this.props.selectedCustomStyleGroup,\n        customStoreGroup: this.props.selectedCustomStoreGroup,\n      },\n      startDate: moment(this.props.startDate).format('YYYY-MM-DD'),\n      endDate: moment(this.props.endDate).format('YYYY-MM-DD'),\n      week: this.props.weeks,\n      page_num: 1,\n      page_count: 5,\n    };\n    if (this.props.selectedChannel[0] === 'Web') payload.filters['ecom_flag'] = [1];\n    if (this.props.selectedChannel[0] === 'Outlet') payload.filters['retail_flag'] = [1];\n\n    this.getSummary(payload);\n    this.props.getKPIdata(payload).then((res) => {\n      if (res) this.setState({ showKPIS: true, KPILoader: false });\n      else this.setState({ KPILoader: false });\n    });\n    this.setState({\n      reqObj: payload,\n      pageNum: 2,\n      expandedRowDetails: [],\n      // KPILoader: true, Commented this to enable loader for KPIs only.\n      tableLoader: true,\n      switchedPlans: false,\n    });\n  };\n  roundOffNumber = (val, key) => {\n    if ((!val && val !== 0) || val === 'NA') return val === 'NA' ? val : '-';\n    if (key === 'revenue' || key === 'margin' || key === 'cogs' || key === 'avg_retail') {\n      return toDollar({ value: val });\n    }\n    if (key === 'margin_rate' || key === 'md_perc' || key === 'sell_through') {\n      return toPercentageMultipliedByHundred({ value: val });\n    }\n    if (key === 'sales' || key === 'inv_oh' || key === 'wos') {\n      return toUnit({ value: val });\n    }\n    return val;\n  };\n  onScenarioSelection = (rowData) => {\n    let { selectedRows } = this.state;\n    let foundEle = _.find(selectedRows, { markdown_id: rowData.original.markdown_id });\n    if (foundEle) {\n      _.remove(selectedRows, (item) => item.markdown_id === rowData.original.markdown_id);\n    } else {\n      selectedRows.push(rowData.original);\n    }\n    this.setState({\n      selectedRows,\n    });\n    console.log(this.state.selectedRows, 'rowwwww');\n  };\n\n  addMDPlanColumnHandler = () => {\n    let newAggColDef = _.cloneDeep(aggColDef);\n    newAggColDef.splice(0, 0, {\n      id: 'selection',\n      groupByBoundary: true,\n      Header: 'Actions',\n      // fixed: 'left',\n      Cell: (props) => {\n        let { row, rows } = props;\n        let mdPlan = row.original.markdown_id,\n          mainGrp = _.find(rows, {\n            isSelected: true,\n            original: { markdown_id: mdPlan },\n          }),\n          checkboxDisabled =\n            (mainGrp && !row.isSelected) || row.original.level === 'sku' ? true : false;\n\n        return (\n          <div>\n            <IndeterminateCheckbox\n              row={row.id}\n              onClick={() => {\n                this.onScenarioSelection(row);\n              }}\n              disabled={checkboxDisabled}\n              {...row.getToggleRowSelectedProps()}\n            />\n          </div>\n        );\n      },\n    });\n    newAggColDef.splice(1, 0, {\n      Header: 'MD Plan',\n      accessor: 'md_plan',\n      cellClassName: 'summary_md_plan',\n      Cell: ({ row }) => {\n        let dateCheck = moment().isBefore(row.original.end_date); //show edit btn only when current date is before plan end date, i.e.,for ongoing and future plans\n        //add isSameOrBefore to show edit btn when current date and end date are same, i.e., plan ends today\n        return (\n          <div>\n            <span>{row.original.md_plan ? row.original.md_plan : null}</span>\n            <div className=\"mt-1 mb-2\">\n              {row.original.md_plan && dateCheck ? (\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={async () => {\n                    await this.props.setRetainFilters(true);\n                    this.props.updateSidebar('/vis/Markdown/create-markdown');\n                    this.props.history.push({\n                      pathname: `/vis/Markdown/create-markdown`,\n                      state: { isEdit: true, planId: row.original.markdown_id },\n                    });\n                    // this.setState({ showEditModal: true, selectedPlanDetails: row.original });\n                  }}>\n                  <span>\n                    <i className=\"fa fa-pencil color-blue\">Edit</i>\n                  </span>\n                </button>\n              ) : (\n                ''\n              )}\n            </div>\n          </div>\n        );\n      },\n      align: 'center',\n      downloadValue: 'plan',\n    });\n    return newAggColDef;\n  };\n  getSummary = async (payload) => {\n    await this.props.getSummaryAggregated(payload).then((resp) => {\n      if (_.isEmpty(resp)) return;\n      let newAggColDef = this.addMDPlanColumnHandler();\n      let planDetails = {};\n      _.map([...resp.markdown_details], (plan) => {\n        planDetails[plan.promo_code] = {\n          cadenceData: plan.request_obj.cadenceData,\n          validateDiscount: {\n            min: plan.request_obj.min_discount,\n            max: plan.request_obj.max_discount,\n            interval: plan.request_obj.interval_discount,\n          },\n        };\n      });\n      this.setState({\n        columns: _.filter(detailedColDef, (item) => !item.hideColumn),\n        aggColDef: _.filter(newAggColDef, (item) => !item.hideColumn),\n        weekToBinColDef: _.filter(\n          weekToBinColDef(this.handleInputChange),\n          (item) => !item.hideColumn\n        ),\n        binToWeekColDef: _.filter(\n          binToWeekColDef(this.handleInputChange),\n          (item) => !item.hideColumn\n        ),\n        tableLoader: false,\n        aggTableData: {\n          bin_to_week_agg_data: resp && resp.bin_to_week_agg_data,\n          week_to_bin_agg_data: resp && resp.week_to_bin_agg_data,\n        },\n        planDetails,\n      });\n    });\n    return true;\n  };\n  renderRowSubComponent = ({ row }) => {\n    let { expandedRowDetails } = this.state; //contains all the expanded rows details\n    let foundLevel = _.filter(expandedRowDetails, {\n      //check if this row is expanded\n      markdown_id: row.original.markdown_id,\n    });\n    let data = [];\n    if (!foundLevel[0]) return; //if not expanded then return\n\n    if (foundLevel[0] && foundLevel[0].level === 'week_to_bin') {\n      //if row is expanded on week_to_bin level, directly take the data from row\n      let newData = _.cloneDeep(row.original.week_level_data);\n      if (!newData) return;\n      _.map(newData, (item) => {\n        item.subRows = item.bin_level_data; //changing bin_level_data key into subRows, to acquire Expandable feature from reatc-table\n        item.markdown_id = row.original.markdown_id;\n        delete item.bin_level_data;\n        return item;\n      });\n      data = newData;\n    }\n    if (foundLevel[0] && foundLevel[0].level === 'bin_to_week') {\n      //if row is expanded on bin_to_week level, then find row data using markdown_id from the reducer aggregatedSummary\n      let newData = _.find(this.state.aggTableData.bin_to_week_agg_data, {\n        markdown_id: row.original.markdown_id,\n      });\n      if (!newData) return;\n      newData = _.cloneDeep(newData);\n      _.map(newData.bin_level_data, (item) => {\n        item.subRows = item.week_level_data; //changing name to subRows to get Expandable feature from react-table\n        item.start_date = newData.start_date;\n        item.end_date = newData.end_date;\n        item.markdown_id = row.original.markdown_id;\n        delete item.week_level_data;\n      });\n\n      data = newData.bin_level_data;\n    }\n    let columns =\n      foundLevel[0] && foundLevel[0].level === 'week_to_bin' && row.original.week_level_data\n        ? this.state.weekToBinColDef\n        : foundLevel[0] && foundLevel[0].level === 'bin_to_week'\n        ? this.state.binToWeekColDef\n        : []; //selecting colfdef according to the level user has choosen\n    return (\n      <div className=\"child-table\">\n        <DataTable\n          columns={columns}\n          data={data}\n          isHeaderHidden={true}\n          isChildComp={true} //true for only subComponents, added to make some styling changes\n        />\n      </div>\n    );\n  };\n  expandedRowDetailsHandler = (row, level) => {\n    //called whenever user clicks on a \">\" icon in the cell\n    //this is to track expanded row details, and on which level its expanded(week to bin/bin to week)\n    let { expandedRowDetails } = this.state;\n    if (_.find(expandedRowDetails, { markdown_id: row.markdown_id })) {\n      _.remove(expandedRowDetails, { markdown_id: row.markdown_id });\n    } else {\n      expandedRowDetails.push({\n        markdown_id: row.markdown_id,\n        level,\n      });\n    }\n    this.setState({ expandedRowDetails });\n  };\n  nextPageHandler = async () => {\n    let payload = _.cloneDeep(this.state.reqObj);\n    payload.page_num = this.state.pageNum;\n    this.setState({ pageNum: this.state.pageNum + 1 });\n    await this.getSummary(payload);\n    return true;\n  };\n  updateCadenceData = (markdownId, binOrSku, week, value) => {\n    let cadenceData = this.state.planDetails[markdownId].cadenceData;\n    let cadence1 = cadenceData[Object.keys(cadenceData)[0]];\n    let findCadence = _.find(cadence1, { bins: binOrSku.toString() });\n    findCadence[`W${week}`] = value;\n  };\n  validateCadenceValue = () => {\n    let { planDetails, selectedRows } = this.state;\n    let markdownIdList = selectedRows.map((item) => item.markdown_id);\n\n    for (let id of markdownIdList) {\n      let planData = planDetails[id];\n      console.log(planDetails, 'idddd', id);\n      let array = _.cloneDeep(Object.values(planData && planData.cadenceData)[0]);\n      if (_.isEmpty(array) || _.isEmpty(array[0])) return false;\n      for (let item of array) {\n        let breakLoop = false;\n        for (const prop in item) {\n          let val = item[prop];\n          let isValid =\n            val >= parseInt(planData.validateDiscount.min) &&\n            val <= parseInt(planData.validateDiscount.max) &&\n            val % parseInt(planData.validateDiscount.interval) == 0;\n\n          if (prop.includes('W') && !isValid) {\n            toast.error(\n              `Please enter values between ${planData.validateDiscount.min} and ${planData.validateDiscount.max} in intervals of ${planData.validateDiscount.interval}`,\n              {\n                autoClose: 15000,\n                hideProgressBar: true,\n              }\n            );\n            breakLoop = true;\n            return;\n          }\n        }\n        if (breakLoop) return false;\n      }\n      return true;\n    }\n  };\n  onSaveAndResimulate = () => {\n    let cadenceValidation = this.validateCadenceValue();\n    if (!cadenceValidation) return;\n\n    let { selectedRows, planDetails } = this.state;\n    let markdown_idList = selectedRows.map((item) => item.markdown_id);\n    let markdown_cadence_details = [];\n    _.map(markdown_idList, (item) => {\n      let details = _.find(this.props.markdownDetails, {\n        promo_code: item,\n      });\n      markdown_cadence_details.push({\n        cadenceData: planDetails[item] && planDetails[item].cadenceData,\n        promo_code: details.promo_code,\n      });\n    });\n    this.props.sendResimulateAndSave({ markdown_cadence_details }).then((resp) => {\n      this.setState({\n        selectedRows,\n      });\n      let status = Object.values(resp.data.data).map((a) => a.status);\n      console.log(status, 'ssssssssss');\n      let payload = _.cloneDeep(this.state.reqObj);\n\n      if (status) {\n        console.log('success');\n        this.getSummary(payload);\n      }\n      console.log(resp.data, 'resssssssssssss');\n    });\n  };\n  onCopyRefreshed = () => {\n    let markdownIdList = _.map(this.state.selectedRows, (data, i) => {\n      return data.markdown_id;\n    });\n\n    let { aggTableData, planDetails, selectedRows } = this.state; //_.cloneDeep(this.state.aggTableData);\n    //if state is not cloned this will update the state without rendering the component\n    _.map(markdownIdList, (id) => {\n      aggTableData = this.handleInputChange('copyRefreshed', id);\n    });\n    this.setState({ aggTableData, planDetails });\n  };\n  render() {\n    console.log(this.state.aggTableData, 'aggTableData');\n    const imageArray = [\n      card1Image,\n      card2Image,\n      card3Image,\n      card4Image,\n      card1Image,\n      card2Image,\n      card3Image,\n      card4Image,\n      card1Image,\n      card2Image,\n    ];\n    const cardStyle = [\n      'card-border1',\n      'card-border2',\n      'card-border3',\n      'card-border4',\n      'card-border1',\n      'card-border2',\n      'card-border3',\n      'card-border4',\n      'card-border1',\n      'card-border2',\n    ];\n\n    return (\n      //Added conditions to enable loader for KPIs only.\n      <LoadingOverlay\n        loader={\n          this.state.KPILoader ? false : this.props.getOverlayLoaderState || this.state.tableLoader\n        }\n        spinner>\n        <div className=\"createMd pl-2 pr-2 summary-comp\">\n          <div className=\"card CalendarMain promoCalendarDiv1 mt-3\">\n            <div>\n              <h4 className=\"font-size-14  pad-10 markdown-heading\">\n                MarkSmart /<span className=\"font-bold color-blue\">Summary</span>\n              </h4>\n            </div>\n            <hr\n              className=\"mb-2\"\n              style={{\n                marginTop: '-4px',\n              }}\n            />\n            <div className=\"filterCol mb-4\">\n              <Filters\n                storeClusterDisable={true}\n                onReset={(e) => {\n                  this.setState({\n                    textStr: 'Please select filters to show Markdown plans',\n                    showKPIS: false,\n                  });\n                  this.props.onResetSummaryTable();\n                }}\n                hierarchy={this.state.filters}\n                onFilter={this.onFilter}\n                dateRange\n                filtersOptions={[\n                  { type: 'country', isMandatory: true, isMultiple: false },\n                  { type: 'channel', isMandatory: true, isMultiple: false },\n                  { type: 'storeCluster', isMandatory: false, isMultiple: true },\n                  { type: 'customStoreGroup', isMandatory: false, isMultiple: true },\n                  { type: 'store', isMandatory: false, isMultiple: true },\n                  {\n                    type: 'hierarchy1',\n                    isMandatory: true,\n                    isMultiple: false,\n                    isHierarchy: true,\n                  },\n                  {\n                    type: 'hierarchy2',\n                    isMandatory: true,\n                    isMultiple: false,\n                    isHierarchy: true,\n                  },\n                  {\n                    type: 'hierarchy3',\n                    isMandatory: true,\n                    isMultiple: false,\n                    isHierarchy: true,\n                  },\n                  {\n                    type: 'hierarchy4',\n                    isMandatory: true,\n                    isMultiple: false,\n                    isHierarchy: true,\n                  },\n                  {\n                    type: 'hierarchy5',\n                    isMandatory: true,\n                    isMultiple: false,\n                    isHierarchy: true,\n                  },\n                  { type: 'season', isMandatory: false, isMultiple: true },\n                  { type: 'matrix', isMandatory: false, isMultiple: true },\n                  { type: 'exclusionList', isMandatory: false, isMultiple: true },\n                  { type: 'clearance', isMandatory: false, isMultiple: true },\n                  { type: 'customStyleGroup', isMandatory: false, isMultiple: true },\n                  { type: 'styleColor', isMandatory: false, isMultiple: true },\n                ]}\n              />\n            </div>\n          </div>\n\n          {this.props.summaryKPIData && this.state.showKPIS ? (\n            // <div className=\"cardContainerstyle\" style={{ marginTop: '10px' }}>\n            <LoadingOverlay loader={this.state.KPILoader} spinner>\n              <div className=\"cardContainerstyle\">\n                {this.props.summaryKPIData &&\n                  this.props.summaryKPIData.columnMapping &&\n                  Array.isArray(Object.keys(this.props.summaryKPIData.columnMapping)) &&\n                  Object.keys(this.props.summaryKPIData.columnMapping).map((key, index) => (\n                    // <div className=\"col-md-3 col-sm-3 col-xs-6 p-2\">\n\n                    <div>\n                      <CardComponent\n                        cardImage={imageArray[index]}\n                        //item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1);\n                        //cardText={key && key.charAt(0).toUpperCase() + key.slice(1)}\n                        cardText={\n                          this.props.summaryKPIData.columnMapping &&\n                          this.props.summaryKPIData.columnMapping[key] &&\n                          this.props.summaryKPIData.columnMapping[key].charAt(0) +\n                            this.props.summaryKPIData.columnMapping[key].slice(1).toLowerCase()\n                        }\n                        cardValue={\n                          this.props.summaryKPIData.KPIS.lw &&\n                          this.roundOffNumber(this.props.summaryKPIData.KPIS.lw[key], key)\n                        }\n                        cardValueSecond={\n                          this.props.summaryKPIData.KPIS.tw &&\n                          this.roundOffNumber(this.props.summaryKPIData.KPIS.tw[key], key)\n                        }\n                        cardValueThird={\n                          this.props.summaryKPIData.KPIS.total &&\n                          this.roundOffNumber(this.props.summaryKPIData.KPIS.total[key], key)\n                        }\n                        cardWeekText={this.state.cardWeekText}\n                        cardMonthText={this.state.cardMonthText}\n                        cardTotalText={this.state.cardTotalText}\n                        cardStyles={{\n                          cardClass: cardStyle[index],\n                          //cardValue: 'card1-value',\n                          //cardImg: summaryKPIData.cardStyleImg,\n                          //cardValueSecond: 'card-value-second',\n                          //cardSubHeading: 'card-subHeading',\n                        }}\n                      />\n                    </div>\n                  ))}\n              </div>{' '}\n            </LoadingOverlay>\n          ) : null}\n          {!_.isEmpty(this.props.detailedSummary) || !_.isEmpty(this.state.aggTableData) ? (\n            <div className=\"card pt-3 px-3 mt-3 summary-card\">\n              <ColSelBtn>\n                {((this.state.switchedPlans && !_.isEmpty(this.state.columns)) ||\n                  (!this.state.switchedPlans && !_.isEmpty(this.state.aggColDef))) && (\n                  <ColumnSelection\n                    onHandleSelect={this.onHandleSelect}\n                    columnOptions={this.state.columnOptions}\n                    selectedItems={this.state.selectedItems}\n                    selLabels={this.state.selLabels}\n                  />\n                )}\n                <div className=\"switchCss\">\n                  <Switch\n                    checked={this.state.switchedPlans}\n                    onSwitchHandler={this.isSwitchedPaln}\n                    leftLabel=\"Aggregated\"\n                    rightLabel=\"Detailed\"\n                  />\n                </div>\n                <div style={{ padding: '1rem' }}>\n                  <button\n                    className=\"btn btn-primary\"\n                    disabled={!this.state.selectedRows.length}\n                    onClick={this.onCopyRefreshed}>\n                    <span>\n                      <i className=\"fa fa-copy\"></i>&nbsp; Copy refreshed\n                    </span>\n                  </button>\n                  &nbsp;\n                  <button\n                    disabled={!this.state.selectedRows.length}\n                    className=\"btn btn-primary\"\n                    onClick={this.onSaveAndResimulate}>\n                    <span>\n                      <i className=\"fa fa-save\"></i>&nbsp; Save\n                    </span>\n                  </button>\n                </div>\n              </ColSelBtn>\n              {this.state.switchedPlans ? (\n                <DataTable\n                  columns={this.state.columns}\n                  isSort={true}\n                  showExport={true}\n                  fileName=\"Summary detailed data\"\n                  data={this.props.detailedSummary}\n                  updateMyData={this.updateMyData}\n                  isPagination={true}\n                  rowsPerPage={5}\n                  getCellProps={(cellInfo) => ({\n                    style: {\n                      backgroundColor: this.bgmCol(cellInfo),\n                      color: this.txtCol(cellInfo),\n                      margin: '4px 4px',\n                      borderRadius: '2px',\n                    },\n                  })}\n                />\n              ) : (\n                <DataTable\n                  columns={this.state.aggColDef}\n                  isSort={true}\n                  data={this.state.aggTableData.week_to_bin_agg_data}\n                  updateMyData={this.updateMyData}\n                  isPagination={true}\n                  rowsPerPage={5}\n                  renderRowSubComponent={this.renderRowSubComponent}\n                  nextPageHandler={this.nextPageHandler}\n                  getCellProps={(cellInfo) => ({\n                    style: {\n                      backgroundColor: this.bgmCol(cellInfo),\n                      color: this.txtCol(cellInfo),\n                      margin: '4px 4px',\n                      borderRadius: '2px',\n                    },\n                    onClick: (e) => {\n                      //added to track on which cell user has clicked\n                      let classList = e.target.classList;\n                      if (\n                        classList &&\n                        !(\n                          classList.contains('expanded-icon-size') ||\n                          classList.contains('summary-table-icon')\n                        )\n                      )\n                        //user clicks on div(i.e, row is not expanded)  then return\n                        return;\n\n                      if (cellInfo.column.id === 'expander')\n                        //expander is Date Range cell\n                        this.expandedRowDetailsHandler(cellInfo.row.original, 'week_to_bin');\n                      else if (cellInfo.column.id === 'expander1')\n                        //expander1 is Bins cell\n                        this.expandedRowDetailsHandler(cellInfo.row.original, 'bin_to_week');\n                    },\n                  })}\n                  RowCheck={({ row, column }) => {\n                    if (!(column.id === 'expander' || column.id === 'expander1')) return;\n                    //disables sibling cell within a row, when a particular row is expanded\n                    let foundLevel = _.filter(this.state.expandedRowDetails, {\n                      markdown_id: row.original.markdown_id,\n                    });\n                    if (!foundLevel[0]) return;\n\n                    return (foundLevel[0].level === 'week_to_bin' && column.id === 'expander1') ||\n                      (foundLevel[0].level === 'bin_to_week' && column.id === 'expander')\n                      ? 'tdtd disable-summary-cell'\n                      : null;\n                  }}\n                />\n              )}\n            </div>\n          ) : (\n            <NoData description={this.state.textStr} />\n          )}\n        </div>\n      </LoadingOverlay>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    finalizeMarkdownData: store.draftStatusReducer.markdowns,\n    getOverlayLoaderState: store.loaderReducer.overlayLoaderState,\n    getOverlayLoaderText: store.loaderReducer.loaderText,\n    getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    getMetricOptions: store.finalizeReducer.metricOptions,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks,\n    markdownDetails: store.summaryMDReducer.markdownDetails,\n    selectedSeason: store.filtersReducer.selectedSeason,\n    selectedClearance: store.filtersReducer.selectedClearance,\n    selectedMatrix: store.filtersReducer.selectedMatrix,\n    selectedExclusionList: store.filtersReducer.selectedExclusionList,\n    selectedStyleColor: store.filtersReducer.selectedStyleColor,\n    selectedCountry: store.filtersReducer.selectedCountry,\n    selectedStoreCluster: store.filtersReducer.selectedStoreCluster,\n    selectedStore: store.filtersReducer.selectedStore,\n    selectedChannel: store.filtersReducer.selectedChannel,\n    summaryKPIData: store.summaryMDReducer.summaryKPIData,\n    detailedSummary: store.summaryMDReducer.detailedSummary,\n    aggregatedSummary: store.summaryMDReducer.aggregatedSummary,\n  };\n};\n\nconst mapActionToProps = {\n  getSummaryDetails: SummaryAction.getSummaryDetails,\n  getSummaryAggregated: SummaryAction.getSummaryAggregated,\n  onResetSummaryTable: SummaryAction.onResetSummaryTable,\n  getKPIdata: SummaryAction.getKPIdata,\n  updateSidebar: plannedReportsAction.updateSidebar,\n  setRetainFilters: filterActions.setRetainFilters,\n  sendResimulateAndSave: SummaryAction.sendResimulateAndSave,\n};\nexport default connect(mapStateToProps, mapActionToProps)(withRouter(Summary));\nconst ColSelBtn = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n"]},"metadata":{},"sourceType":"module"}