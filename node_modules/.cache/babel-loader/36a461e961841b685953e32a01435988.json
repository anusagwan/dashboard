{"ast":null,"code":"import _objectSpread from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  reportingData: {}\n};\n\nvar getData = function getData(obj, year) {\n  return Object.keys(obj).map(function (e) {\n    return obj[e][year];\n  });\n};\n\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET_REPORTING_DATA':\n      return _objectSpread({}, state, {\n        reportingData: {\n          sellThroughData: {\n            labels: Object.keys(action.payload.sell_through),\n            datasets: [{\n              label: 'TY',\n              fill: false,\n              borderColor: '#44677b',\n              data: getData(action.payload.sell_through, 'ty')\n            }, {\n              label: 'LY',\n              fill: false,\n              borderColor: '#a6cee3',\n              data: getData(action.payload.sell_through, 'ly')\n            }]\n          },\n          inventoryData: {\n            labels: Object.keys(action.payload.inventory),\n            datasets: [{\n              label: 'TY',\n              fill: false,\n              borderColor: '#44677b',\n              data: getData(action.payload.inventory, 'ty')\n            }, {\n              label: 'LY',\n              fill: false,\n              borderColor: '#a6cee3',\n              data: getData(action.payload.inventory, 'ly')\n            }]\n          },\n          marginData: {\n            labels: Object.keys(action.payload.margin),\n            datasets: [{\n              label: 'TY',\n              fill: false,\n              borderColor: '#44677b',\n              data: getData(action.payload.margin, 'ty')\n            }, {\n              label: 'LY',\n              fill: false,\n              borderColor: '#a6cee3',\n              data: getData(action.payload.margin, 'ly')\n            }]\n          },\n          salesData: {\n            labels: ['Last year', 'Actual'],\n            datasets: [{\n              fill: false,\n              backgroundColor: ['#44677b', '#a6cee3'],\n              data: [action.payload.sales.ly, action.payload.sales.ty]\n            }]\n          }\n        }\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n}","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/reducers/reportingReducer.js"],"names":["initialState","reportingData","getData","obj","year","Object","keys","map","e","state","action","type","sellThroughData","labels","payload","sell_through","datasets","label","fill","borderColor","data","inventoryData","inventory","marginData","margin","salesData","backgroundColor","sales","ly","ty"],"mappings":"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","sourcesContent":["const initialState = {\n  reportingData: {},\n};\nconst getData = (obj, year) => {\n  return Object.keys(obj).map((e) => obj[e][year]);\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case 'SET_REPORTING_DATA':\n      return {\n        ...state,\n        reportingData: {\n          sellThroughData: {\n            labels: Object.keys(action.payload.sell_through),\n            datasets: [\n              {\n                label: 'TY',\n                fill: false,\n                borderColor: '#44677b',\n                data: getData(action.payload.sell_through, 'ty'),\n              },\n              {\n                label: 'LY',\n                fill: false,\n                borderColor: '#a6cee3',\n                data: getData(action.payload.sell_through, 'ly'),\n              },\n            ],\n          },\n          inventoryData: {\n            labels: Object.keys(action.payload.inventory),\n            datasets: [\n              {\n                label: 'TY',\n                fill: false,\n                borderColor: '#44677b',\n                data: getData(action.payload.inventory, 'ty'),\n              },\n              {\n                label: 'LY',\n                fill: false,\n                borderColor: '#a6cee3',\n                data: getData(action.payload.inventory, 'ly'),\n              },\n            ],\n          },\n          marginData: {\n            labels: Object.keys(action.payload.margin),\n            datasets: [\n              {\n                label: 'TY',\n                fill: false,\n                borderColor: '#44677b',\n                data: getData(action.payload.margin, 'ty'),\n              },\n              {\n                label: 'LY',\n                fill: false,\n                borderColor: '#a6cee3',\n                data: getData(action.payload.margin, 'ly'),\n              },\n            ],\n          },\n          salesData: {\n            labels: ['Last year', 'Actual'],\n            datasets: [\n              {\n                fill: false,\n                backgroundColor: ['#44677b', '#a6cee3'],\n                data: [action.payload.sales.ly, action.payload.sales.ty],\n              },\n            ],\n          },\n        },\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}