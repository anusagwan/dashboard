{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/MardownDetailedTable.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport DataTable from '../../services/reactTable';\nimport cloneDeep from 'clone-deep'; // import { toPercentage } from '../../helper/formatter';\n\nimport ColumnSelection from '../../components/columnSelection';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport { toPercentage, toDollarWithlDraft, toUnitDraft } from '../../helper/formatter';\n\nfunction FormatterStyling(props, value, val) {\n  var val1 = val || val == 0 ? val : props.value;\n  var props1 = val || val == 0 ? {\n    value: val\n  } : props;\n\n  if (value == 'pvh_units' || value == 'units') {\n    return val1 || val1 == 0 ? toUnitDraft(props1) : '-';\n  } else if (value == 'revenue' || value == 'aur' || value == 'margin' || value == 'aum') {\n    return val1 || val1 == 0 ? toDollarWithlDraft(props1) : '-';\n  }\n\n  return '-';\n}\n\nvar MarkdownDetailedTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MarkdownDetailedTable, _Component);\n\n  function MarkdownDetailedTable() {\n    var _this;\n\n    _classCallCheck(this, MarkdownDetailedTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MarkdownDetailedTable).call(this));\n\n    _this.updateHeader = function (newColumns) {\n      var headers = [{\n        Header: 'Style/Style Group',\n        accessor: 'SKU_Id',\n        width: 300\n      }]; //cloneDeep(this.state.headers);\n\n      _.map(_this.props.data.weeks, function (week) {\n        var column = newColumns ? cloneDeep(newColumns) : cloneDeep(_this.state.column);\n        column.Header = week.toUpperCase();\n\n        _.map(column.columns, function (item, index) {\n          item.accessor = \"\".concat(week).concat(item.accessor);\n          return item;\n        });\n\n        headers.push(column);\n      });\n\n      _this.setState({\n        headers: headers\n      });\n    };\n\n    _this.onHandleCheckBox = function (e, label, index) {\n      //adding\n      if (e.target.checked) {\n        if (_this.state.selLabels.indexOf(label) === -1) {\n          var labels = [].concat(_toConsumableArray(_this.state.selLabels), [label]);\n          var tempArr = [];\n          labels.forEach(function (label) {\n            var columns = _this.props.columnHeaders[label];\n            var labelColumns = Object.keys(columns);\n            var options = labelColumns.map(function (label) {\n              return {\n                label: label,\n                value: columns[label]\n              };\n            });\n            tempArr.push.apply(tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selLabels: labels,\n            columnOptions: tempArr\n          });\n        }\n      } else {\n        //removing\n        var _index = _this.state.selLabels.indexOf(label);\n\n        if (_index !== -1) {\n          var selectedLabel = _.cloneDeep(_this.state.selLabels);\n\n          selectedLabel.splice(_index, 1);\n          var _tempArr = [];\n          selectedLabel.forEach(function (label) {\n            var columns = _this.props.columnHeaders[label];\n            var labelColumns = Object.keys(columns);\n            var options = labelColumns.map(function (label) {\n              return {\n                label: label,\n                value: columns[label]\n              };\n            });\n\n            _tempArr.push.apply(_tempArr, _toConsumableArray(options));\n          });\n\n          var selectedItemsClone = _.cloneDeep(_this.state.selectedItems);\n\n          var newSelectedItems = [];\n          var labelArr = Object.keys(_this.props.columnHeaders[label]);\n          selectedItemsClone.forEach(function (item) {\n            if (!labelArr.includes(item.label)) {\n              newSelectedItems.push(item);\n            }\n          });\n\n          _this.onHandleDropdownSelect(newSelectedItems);\n\n          _this.setState({\n            selLabels: selectedLabel,\n            columnOptions: _tempArr,\n            selectedItems: newSelectedItems\n          });\n        }\n      }\n    };\n\n    _this.onHandleDropdownSelect = function (options) {\n      var headers = cloneDeep(_this.state.headers);\n      var column = cloneDeep(_this.state.column);\n\n      _.remove(headers, function (item) {\n        return item.metric;\n      });\n\n      _.map(options, function (item) {\n        column.columns.push({\n          Header: item.label,\n          accessor: item.value,\n          metric: true,\n          Cell: function Cell(props) {\n            return FormatterStyling(props, item.value);\n          }\n        });\n      });\n\n      _this.updateHeader(column);\n\n      _this.setState({\n        selectedItems: options\n      });\n    };\n\n    _this.state = {\n      columnOptions: [],\n      selLabels: [],\n      selectedItems: [],\n      column: {\n        Header: '',\n        columns: [{\n          Header: 'ST %',\n          accessor: 'sellThrough',\n          // minWidth: 600,\n          width: 500,\n          Cell: function Cell(props) {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35\n              },\n              __self: this\n            }, \" \", toPercentage(props), \" \");\n          }\n        }, {\n          Header: 'Margin %',\n          accessor: 'margin_percentage',\n          // minWidth: 600,\n          width: 500,\n          Cell: function Cell(props) {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42\n              },\n              __self: this\n            }, \" \", toPercentage(props), \" \");\n          }\n        }]\n      },\n      headers: []\n    };\n    return _this;\n  }\n\n  _createClass(MarkdownDetailedTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateHeader();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.data && !_.isEqual(prevProps.data.weeks, this.props.data.weeks)) {\n        this.updateHeader();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(ColSelBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(ColumnSelection, {\n        onHandleCheckBox: this.onHandleCheckBox,\n        columnHeaders: this.props.columnHeaders,\n        onHandleSelect: this.onHandleDropdownSelect,\n        columnOptions: this.state.columnOptions,\n        selectedItems: this.state.selectedItems,\n        selLabels: this.state.selLabels,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          overflowX: 'auto',\n          width: '100%',\n          paddingBottom: '28px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        showExport: true,\n        columns: this.state.headers,\n        data: this.props.data.data,\n        isPagination: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MarkdownDetailedTable;\n}(Component);\n\nexport default MarkdownDetailedTable;\nvar ColSelBtn = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/MardownDetailedTable.js"],"names":["React","Component","DataTable","cloneDeep","ColumnSelection","styled","_","toPercentage","toDollarWithlDraft","toUnitDraft","FormatterStyling","props","value","val","val1","props1","MarkdownDetailedTable","updateHeader","newColumns","headers","Header","accessor","width","map","data","weeks","week","column","state","toUpperCase","columns","item","index","push","setState","onHandleCheckBox","e","label","target","checked","selLabels","indexOf","labels","tempArr","forEach","columnHeaders","labelColumns","Object","keys","options","columnOptions","selectedLabel","splice","selectedItemsClone","selectedItems","newSelectedItems","labelArr","includes","onHandleDropdownSelect","remove","metric","Cell","prevProps","isEqual","overflowX","paddingBottom","ColSelBtn","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DataTable from '../../services/reactTable';\nimport cloneDeep from 'clone-deep';\n// import { toPercentage } from '../../helper/formatter';\nimport ColumnSelection from '../../components/columnSelection';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport { toPercentage, toDollarWithlDraft, toUnitDraft } from '../../helper/formatter';\n\nfunction FormatterStyling(props, value, val) {\n  let val1 = val || val == 0 ? val : props.value;\n  let props1 = val || val == 0 ? { value: val } : props;\n  if (value == 'pvh_units' || value == 'units') {\n    return val1 || val1 == 0 ? toUnitDraft(props1) : '-';\n  } else if (value == 'revenue' || value == 'aur' || value == 'margin' || value == 'aum') {\n    return val1 || val1 == 0 ? toDollarWithlDraft(props1) : '-';\n  }\n  return '-';\n}\nclass MarkdownDetailedTable extends Component {\n  constructor() {\n    super();\n    this.state = {\n      columnOptions: [],\n      selLabels: [],\n      selectedItems: [],\n      column: {\n        Header: '',\n        columns: [\n          {\n            Header: 'ST %',\n            accessor: 'sellThrough',\n            // minWidth: 600,\n            width: 500,\n            Cell: (props) => <div> {toPercentage(props)} </div>,\n          },\n          {\n            Header: 'Margin %',\n            accessor: 'margin_percentage',\n            // minWidth: 600,\n            width: 500,\n            Cell: (props) => <div> {toPercentage(props)} </div>,\n          },\n        ],\n      },\n      headers: [],\n    };\n  }\n  componentDidMount() {\n    this.updateHeader();\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.data && !_.isEqual(prevProps.data.weeks, this.props.data.weeks)) {\n      this.updateHeader();\n    }\n  }\n  updateHeader = (newColumns) => {\n    let headers = [\n      {\n        Header: 'Style/Style Group',\n        accessor: 'SKU_Id',\n        width: 300,\n      },\n    ]; //cloneDeep(this.state.headers);\n    _.map(this.props.data.weeks, (week) => {\n      let column = newColumns ? cloneDeep(newColumns) : cloneDeep(this.state.column);\n      column.Header = week.toUpperCase();\n      _.map(column.columns, (item, index) => {\n        item.accessor = `${week}${item.accessor}`;\n        return item;\n      });\n      headers.push(column);\n    });\n\n    this.setState({ headers });\n  };\n  onHandleCheckBox = (e, label, index) => {\n    //adding\n    if (e.target.checked) {\n      if (this.state.selLabels.indexOf(label) === -1) {\n        let labels = [...this.state.selLabels, label];\n        let tempArr = [];\n        labels.forEach((label) => {\n          let columns = this.props.columnHeaders[label];\n          let labelColumns = Object.keys(columns);\n          let options = labelColumns.map((label) => {\n            return {\n              label: label,\n              value: columns[label],\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selLabels: labels,\n          columnOptions: tempArr,\n        });\n      }\n    } else {\n      //removing\n      let index = this.state.selLabels.indexOf(label);\n      if (index !== -1) {\n        let selectedLabel = _.cloneDeep(this.state.selLabels);\n        selectedLabel.splice(index, 1);\n        let tempArr = [];\n        selectedLabel.forEach((label) => {\n          let columns = this.props.columnHeaders[label];\n          let labelColumns = Object.keys(columns);\n          let options = labelColumns.map((label) => {\n            return {\n              label: label,\n              value: columns[label],\n            };\n          });\n          tempArr.push(...options);\n        });\n\n        let selectedItemsClone = _.cloneDeep(this.state.selectedItems);\n        let newSelectedItems = [];\n        let labelArr = Object.keys(this.props.columnHeaders[label]);\n        selectedItemsClone.forEach((item) => {\n          if (!labelArr.includes(item.label)) {\n            newSelectedItems.push(item);\n          }\n        });\n\n        this.onHandleDropdownSelect(newSelectedItems);\n        this.setState({\n          selLabels: selectedLabel,\n          columnOptions: tempArr,\n          selectedItems: newSelectedItems,\n        });\n      }\n    }\n  };\n  onHandleDropdownSelect = (options) => {\n    let headers = cloneDeep(this.state.headers);\n    let column = cloneDeep(this.state.column);\n    _.remove(headers, (item) => item.metric);\n\n    _.map(options, (item) => {\n      column.columns.push({\n        Header: item.label,\n        accessor: item.value,\n        metric: true,\n        Cell: (props) => FormatterStyling(props, item.value),\n      });\n    });\n    this.updateHeader(column);\n    this.setState({\n      selectedItems: options,\n    });\n  };\n  render() {\n    return (\n      <div>\n        <ColSelBtn>\n          <ColumnSelection\n            onHandleCheckBox={this.onHandleCheckBox}\n            columnHeaders={this.props.columnHeaders}\n            onHandleSelect={this.onHandleDropdownSelect}\n            columnOptions={this.state.columnOptions}\n            selectedItems={this.state.selectedItems}\n            selLabels={this.state.selLabels}\n          />\n        </ColSelBtn>\n        <div style={{ overflowX: 'auto', width: '100%', paddingBottom: '28px' }}>\n          <DataTable\n            showExport={true}\n            columns={this.state.headers}\n            data={this.props.data.data}\n            isPagination={true}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MarkdownDetailedTable;\n\nconst ColSelBtn = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n"]},"metadata":{},"sourceType":"module"}