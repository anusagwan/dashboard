{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/draftStatus/draft/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport DraftAction from '../../../actions/draftStausFinalizeAction';\nimport Filters from '../../../services/filters';\nimport DataTable from '../../../services/reactTable';\nimport ColumnSelection from '../../columnSelection';\nimport Coldef from './coldef';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport cloneDeep from 'clone-deep';\nimport RowData from './data';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport '../draftStatus.css';\nimport NoData from '../../noTableData';\nimport IndeterminateCheckbox from '../../../components/cellRenders/inderterminateCheckbox';\nimport { disabled } from 'glamor';\n\nvar Draft =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Draft, _Component);\n\n  function Draft(props) {\n    var _this;\n\n    _classCallCheck(this, Draft);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Draft).call(this, props));\n\n    _this.findStatusColor = function (status, color) {\n      switch (status) {\n        case 'high':\n          return color.high;\n\n        case 'medium':\n          return color.medium;\n\n        case 'low':\n          return color.low;\n\n        default:\n          break;\n      }\n    };\n\n    _this.bgmCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var bgCol = {\n        high: '#F8E8E8',\n        medium: '#FCF3D1',\n        low: '#E8F8F5'\n      };\n      return _this.findStatusColor(status, bgCol);\n    };\n\n    _this.txtCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var txtCol = {\n        high: '#D38485',\n        medium: '#F0C53A',\n        low: '#66CFBA'\n      };\n      return _this.findStatusColor(status, txtCol);\n    };\n\n    _this.sendForApproval = function () {\n      var msg = [];\n      var payload = {\n        markdown_data: _this.state.selectedRows.map(function (item, i) {\n          var arrLength = _this.state.selectedRows.length;\n          var msgStr = \"Scenario '\".concat(item.scenario, \"' of Plan '\").concat(item.md_plan, \"'\").concat(i === arrLength - 2 ? ' and ' : i === arrLength - 1 ? '' : ', ');\n          msg.push(msgStr);\n          return {\n            id: item.markdown_id,\n            scenario: item.scenario\n          };\n        }),\n        update_status: 'pending'\n      };\n\n      _this.props.sendForApproval(payload).then(function (resp) {\n        if (resp && resp.data.status == true) {\n          var successMsg = \"\".concat(msg.join(''), \" has been sent for Approval successfully\");\n          toast.success(successMsg, {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n          var _payload = {\n            filters: {\n              hierarchy1: _this.props.selectedHierarchy1,\n              hierarchy2: _this.props.selectedHierarchy2,\n              hierarchy3: _this.props.selectedHierarchy3,\n              hierarchy4: _this.props.selectedHierarchy4,\n              hierarchy5: _this.props.selectedHierarchy5,\n              season: _this.props.selectedSeason,\n              clearance: _this.props.selectedClearance,\n              matrix: _this.props.selectedMatrix,\n              exclusionList: _this.props.selectedExclusionList,\n              styleColor: _this.props.selectedStyleColor,\n              country: _this.props.selectedCountry,\n              storeCluster: _this.props.selectedStoreCluster,\n              store: _this.props.selectedStore,\n              channel: _this.props.selectedChannel,\n              customStyleGroup: _this.props.selectedCustomStyleGroup,\n              customStoreGroup: _this.props.selectedCustomStoreGroup,\n              tiers: _this.props.selectedStores\n            },\n            startDate: _this.props.startDate ? moment(_this.props.startDate).format('YYYY-MM-DD') : null,\n            endDate: _this.props.endDate ? moment(_this.props.endDate).format('YYYY-MM-DD') : null,\n            status: 'draft'\n          };\n\n          _this.props.getMarkdowns(_payload);\n\n          _this.setState({\n            selectedRows: []\n          });\n        }\n      }).catch(function (err) {\n        toast.error(err.message, {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n      });\n    };\n\n    _this.updateMyData = function (rowIndex, columnId, value) {\n      // We also turn on the flag to not reset the page\n      _this.setState(function (old) {\n        var val = old.tableData.map(function (row, index) {\n          if (index === rowIndex) {\n            return _objectSpread({}, row, _defineProperty({}, columnId, value));\n          }\n\n          return row;\n        });\n        return {\n          tableData: val\n        };\n      });\n    };\n\n    _this.mandatoryFiltersVal = function (_ref) {\n      var filters = _ref.filters,\n          startDate = _ref.startDate,\n          endDate = _ref.endDate;\n      return !_.isEmpty(filters.hierarchy1) && !_.isEmpty(filters.hierarchy2) && startDate && endDate;\n    };\n\n    _this.onFilter = function (_ref2) {\n      var filters = _ref2.filters,\n          startDate = _ref2.startDate,\n          endDate = _ref2.endDate;\n\n      if (!_this.mandatoryFiltersVal({\n        filters: filters,\n        startDate: startDate,\n        endDate: endDate\n      })) {\n        toast.error(\"Please select mandatory filters\", {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        return;\n      }\n\n      var payload = {\n        filters: {\n          hierarchy1: filters.hierarchy1,\n          hierarchy2: filters.hierarchy2,\n          hierarchy3: filters.hierarchy3,\n          hierarchy4: filters.hierarchy4,\n          hierarchy5: filters.hierarchy5,\n          season: _this.props.selectedSeason,\n          clearance: _this.props.selectedClearance,\n          matrix: _this.props.selectedMatrix,\n          exclusionList: _this.props.selectedExclusionList,\n          styleColor: _this.props.selectedStyleColor,\n          country: _this.props.selectedCountry,\n          storeCluster: _this.props.selectedStoreCluster,\n          store: _this.props.selectedStore,\n          channel: _this.props.selectedChannel,\n          customStyleGroup: _this.props.selectedCustomStyleGroup,\n          customStoreGroup: _this.props.selectedCustomStoreGroup,\n          tiers: filters.stores\n        },\n        startDate: startDate ? moment(startDate).format('YYYY-MM-DD') : null,\n        endDate: endDate ? moment(endDate).format('YYYY-MM-DD') : null,\n        status: 'draft'\n      };\n\n      _this.props.getMarkdowns(payload);\n    };\n\n    _this.onScenarioSelection = function (rowData) {\n      var selectedRows = _this.state.selectedRows;\n\n      var foundEle = _.find(selectedRows, {\n        markdown_id: rowData.original.markdown_id\n      });\n\n      if (foundEle) {\n        _.remove(selectedRows, function (item) {\n          return item.markdown_id === rowData.original.markdown_id;\n        });\n      } else {\n        selectedRows.push(rowData.original);\n      }\n\n      _this.setState({\n        selectedRows: selectedRows\n      });\n    };\n\n    _this.state = {\n      // tableData: RowData,\n      columnOptions: [],\n      selLabels: [],\n      columns: [],\n      selectedRows: []\n    };\n    return _this;\n  }\n\n  _createClass(Draft, [{\n    key: \"componentDidUpdate\",\n    ////////// handling reset issues rising bcs of tabs end///////////\n    value: function componentDidUpdate() {\n      if (this.props.scenarioSelected.value) {\n        this.props.scenarioSelectedHandler(false, []);\n        this.onScenarioSelection(this.props.scenarioSelected.row);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"createMd pl-2 pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"font-size-14  pad-10 markdown-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"MarkSmart /\", React.createElement(\"span\", {\n        className: \"font-bold color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Draft\"))), React.createElement(\"hr\", {\n        className: \"mb-2\",\n        style: {\n          marginTop: '-4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"filterCol mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Filters, {\n        onFilter: this.onFilter,\n        onReset: function onReset(e) {\n          _this2.props.textStrHandler(true);\n\n          _this2.props.onResetDraftTable(e);\n        },\n        dateRange: true,\n        filtersOptions: [{\n          type: 'country',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'channel',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'storeCluster',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'customStoreGroup',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'store',\n          isMandatory: false,\n          isMultiple: true\n        }].concat(_toConsumableArray(this.state.filters), [{\n          type: 'season',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'matrix',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'exclusionList',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'clearance',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'customStyleGroup',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'styleColor',\n          isMandatory: false,\n          isMultiple: true\n        }]),\n        hierarchy: [{\n          type: 'hierarchy1',\n          isMandatory: true,\n          isMultiple: false\n        }, {\n          type: 'hierarchy2',\n          isMultiple: true,\n          isMandatory: true\n        }, {\n          type: 'hierarchy3',\n          isMultiple: true\n        }, {\n          type: 'hierarchy4',\n          isMultiple: true\n        }, {\n          type: 'hierarchy5',\n          isMultiple: true\n        }, {\n          type: 'hierarchy6',\n          isMultiple: true\n        }, {\n          type: 'hierarchy7',\n          isMultiple: true\n        }, {\n          type: 'hierarchy8',\n          isMultiple: true\n        }],\n        storeIsNotMandatory: true,\n        from: \"draft/status\" ////////// handling reset issues rising bcs of tabs\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }))), this.props.draftMarkdowns && this.props.draftMarkdowns.length ? React.createElement(\"div\", {\n        className: \"card pl-3 pr-3 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(ColSelBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, this.props.draftColumnHeaders && Object.keys(this.props.draftColumnHeaders).length && React.createElement(ColumnSelection, {\n        onHandleCheckBox: this.props.onHandleCheckBox,\n        columnHeaders: this.props.draftColumnHeaders,\n        onHandleSelect: this.props.onHandleSelect,\n        columnOptions: this.props.columnOptions,\n        selectedItems: this.props.selectedItems,\n        selLabels: this.props.selLabels,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          padding: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.sendForApproval,\n        disabled: !this.state.selectedRows.length,\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"Send for Approval\"), \"\\xA0\")), React.createElement(\"div\", {\n        className: \"tablel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        columns: this.props.columns,\n        data: this.props.draftMarkdowns,\n        isSort: true,\n        isExpanded: true,\n        updateMyData: this.updateMyData,\n        isPagination: true,\n        NoDataComponent: \"This is the dynamic title\",\n        getCellProps: function getCellProps(cellInfo) {\n          return {\n            // onClick: () => this.onCellClick(cellInfo),\n            style: {\n              backgroundColor: _this2.bgmCol(cellInfo),\n              color: _this2.txtCol(cellInfo),\n              margin: '4px 4px',\n              borderRadius: '2px'\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }))) : React.createElement(NoData, {\n        description: this.props.draftTextStr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Draft;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    // markdowns: store.draftStatusReducer.markdowns,\n    // columnHeaders: store.draftStatusReducer.columnHeaders,\n    draftMarkdowns: store.draftStatusReducer.draftMarkdowns,\n    draftColumnHeaders: store.draftStatusReducer.draftColumnHeaders,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    selectedStores: store.filtersReducer.selectedStores,\n    selectedSeason: store.filtersReducer.selectedSeason,\n    selectedClearance: store.filtersReducer.selectedClearance,\n    selectedMatrix: store.filtersReducer.selectedMatrix,\n    selectedExclusionList: store.filtersReducer.selectedExclusionList,\n    selectedStyleColor: store.filtersReducer.selectedStyleColor,\n    selectedCountry: store.filtersReducer.selectedCountry,\n    selectedStoreCluster: store.filtersReducer.selectedStoreCluster,\n    selectedStore: store.filtersReducer.selectedStore,\n    selectedChannel: store.filtersReducer.selectedChannel,\n    selectedCustomStyleGroup: store.filtersReducer.selectedCustomStyleGroup,\n    selectedCustomStoreGroup: store.filtersReducer.selectedCustomStoreGroup,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate\n  };\n};\n\nvar mapActionToProps = {\n  sendForApproval: DraftAction.sendForApproval,\n  onResetDraftTable: DraftAction.onResetDraftTable\n};\nexport default connect(mapStateToProps, mapActionToProps)(Draft);\nvar ColSelBtn = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/draftStatus/draft/index.js"],"names":["React","Component","connect","DraftAction","Filters","DataTable","ColumnSelection","Coldef","styled","_","cloneDeep","RowData","moment","toast","NoData","IndeterminateCheckbox","disabled","Draft","props","findStatusColor","status","color","high","medium","low","bgmCol","cellInfo","column","id","row","original","md_status","bgCol","txtCol","sendForApproval","msg","payload","markdown_data","state","selectedRows","map","item","i","arrLength","length","msgStr","scenario","md_plan","push","markdown_id","update_status","then","resp","data","successMsg","join","success","autoClose","hideProgressBar","filters","hierarchy1","selectedHierarchy1","hierarchy2","selectedHierarchy2","hierarchy3","selectedHierarchy3","hierarchy4","selectedHierarchy4","hierarchy5","selectedHierarchy5","season","selectedSeason","clearance","selectedClearance","matrix","selectedMatrix","exclusionList","selectedExclusionList","styleColor","selectedStyleColor","country","selectedCountry","storeCluster","selectedStoreCluster","store","selectedStore","channel","selectedChannel","customStyleGroup","selectedCustomStyleGroup","customStoreGroup","selectedCustomStoreGroup","tiers","selectedStores","startDate","format","endDate","getMarkdowns","setState","catch","err","error","message","updateMyData","rowIndex","columnId","value","old","val","tableData","index","mandatoryFiltersVal","isEmpty","onFilter","stores","onScenarioSelection","rowData","foundEle","find","remove","columnOptions","selLabels","columns","scenarioSelected","scenarioSelectedHandler","marginTop","e","textStrHandler","onResetDraftTable","type","isMandatory","isMultiple","draftMarkdowns","draftColumnHeaders","Object","keys","onHandleCheckBox","onHandleSelect","selectedItems","padding","style","backgroundColor","margin","borderRadius","draftTextStr","mapStateToProps","draftStatusReducer","filtersReducer","selectedHierarchy6","selectedHierarchy7","selectedHierarchy8","mapActionToProps","ColSelBtn","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport DraftAction from '../../../actions/draftStausFinalizeAction';\nimport Filters from '../../../services/filters';\nimport DataTable from '../../../services/reactTable';\nimport ColumnSelection from '../../columnSelection';\nimport Coldef from './coldef';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport cloneDeep from 'clone-deep';\nimport RowData from './data';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport '../draftStatus.css';\nimport NoData from '../../noTableData';\nimport IndeterminateCheckbox from '../../../components/cellRenders/inderterminateCheckbox';\nimport { disabled } from 'glamor';\n\nclass Draft extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // tableData: RowData,\n      columnOptions: [],\n      selLabels: [],\n      columns: [],\n      selectedRows: [],\n    };\n  }\n\n  findStatusColor = (status, color) => {\n    switch (status) {\n      case 'high':\n        return color.high;\n      case 'medium':\n        return color.medium;\n      case 'low':\n        return color.low;\n      default:\n        break;\n    }\n  };\n\n  bgmCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let bgCol = {\n      high: '#F8E8E8',\n      medium: '#FCF3D1',\n      low: '#E8F8F5',\n    };\n    return this.findStatusColor(status, bgCol);\n  };\n  txtCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let txtCol = {\n      high: '#D38485',\n      medium: '#F0C53A',\n      low: '#66CFBA',\n    };\n    return this.findStatusColor(status, txtCol);\n  };\n  sendForApproval = () => {\n    let msg = [];\n    let payload = {\n      markdown_data: this.state.selectedRows.map((item, i) => {\n        let arrLength = this.state.selectedRows.length;\n        let msgStr = `Scenario '${item.scenario}' of Plan '${item.md_plan}'${\n          i === arrLength - 2 ? ' and ' : i === arrLength - 1 ? '' : ', '\n        }`;\n        msg.push(msgStr);\n        return {\n          id: item.markdown_id,\n          scenario: item.scenario,\n        };\n      }),\n      update_status: 'pending',\n    };\n    this.props\n      .sendForApproval(payload)\n      .then((resp) => {\n        if (resp && resp.data.status == true) {\n          let successMsg = `${msg.join('')} has been sent for Approval successfully`;\n          toast.success(successMsg, {\n            autoClose: 15000,\n            hideProgressBar: true,\n          });\n          let payload = {\n            filters: {\n              hierarchy1: this.props.selectedHierarchy1,\n              hierarchy2: this.props.selectedHierarchy2,\n              hierarchy3: this.props.selectedHierarchy3,\n              hierarchy4: this.props.selectedHierarchy4,\n              hierarchy5: this.props.selectedHierarchy5,\n              season: this.props.selectedSeason,\n              clearance: this.props.selectedClearance,\n              matrix: this.props.selectedMatrix,\n              exclusionList: this.props.selectedExclusionList,\n              styleColor: this.props.selectedStyleColor,\n              country: this.props.selectedCountry,\n              storeCluster: this.props.selectedStoreCluster,\n              store: this.props.selectedStore,\n              channel: this.props.selectedChannel,\n              customStyleGroup: this.props.selectedCustomStyleGroup,\n              customStoreGroup: this.props.selectedCustomStoreGroup,\n              tiers: this.props.selectedStores,\n            },\n            startDate: this.props.startDate\n              ? moment(this.props.startDate).format('YYYY-MM-DD')\n              : null,\n            endDate: this.props.endDate ? moment(this.props.endDate).format('YYYY-MM-DD') : null,\n            status: 'draft',\n          };\n          this.props.getMarkdowns(payload);\n          this.setState({\n            selectedRows: [],\n          });\n        }\n      })\n      .catch((err) => {\n        toast.error(err.message, {\n          autoClose: 15000,\n          hideProgressBar: true,\n        });\n      });\n  };\n  updateMyData = (rowIndex, columnId, value) => {\n    // We also turn on the flag to not reset the page\n    this.setState((old) => {\n      let val = old.tableData.map((row, index) => {\n        if (index === rowIndex) {\n          return {\n            ...row,\n            [columnId]: value,\n          };\n        }\n        return row;\n      });\n      return { tableData: val };\n    });\n  };\n  ////////// handling reset issues rising bcs of tabs start///////////\n  mandatoryFiltersVal = ({ filters, startDate, endDate }) => {\n    return !_.isEmpty(filters.hierarchy1) && !_.isEmpty(filters.hierarchy2) && startDate && endDate;\n  };\n  onFilter = ({ filters, startDate, endDate }) => {\n    if (!this.mandatoryFiltersVal({ filters, startDate, endDate })) {\n      toast.error(`Please select mandatory filters`, {\n        autoClose: 15000,\n        hideProgressBar: true,\n      });\n      return;\n    }\n    let payload = {\n      filters: {\n        hierarchy1: filters.hierarchy1,\n        hierarchy2: filters.hierarchy2,\n        hierarchy3: filters.hierarchy3,\n        hierarchy4: filters.hierarchy4,\n        hierarchy5: filters.hierarchy5,\n        season: this.props.selectedSeason,\n        clearance: this.props.selectedClearance,\n        matrix: this.props.selectedMatrix,\n        exclusionList: this.props.selectedExclusionList,\n        styleColor: this.props.selectedStyleColor,\n        country: this.props.selectedCountry,\n        storeCluster: this.props.selectedStoreCluster,\n        store: this.props.selectedStore,\n        channel: this.props.selectedChannel,\n        customStyleGroup: this.props.selectedCustomStyleGroup,\n        customStoreGroup: this.props.selectedCustomStoreGroup,\n        tiers: filters.stores,\n      },\n      startDate: startDate ? moment(startDate).format('YYYY-MM-DD') : null,\n      endDate: endDate ? moment(endDate).format('YYYY-MM-DD') : null,\n      status: 'draft',\n    };\n    this.props.getMarkdowns(payload);\n  };\n  ////////// handling reset issues rising bcs of tabs end///////////\n\n  componentDidUpdate() {\n    if (this.props.scenarioSelected.value) {\n      this.props.scenarioSelectedHandler(false, []);\n      this.onScenarioSelection(this.props.scenarioSelected.row);\n    }\n  }\n  onScenarioSelection = (rowData) => {\n    let { selectedRows } = this.state;\n    let foundEle = _.find(selectedRows, {\n      markdown_id: rowData.original.markdown_id,\n    });\n    if (foundEle) {\n      _.remove(selectedRows, (item) => item.markdown_id === rowData.original.markdown_id);\n    } else {\n      selectedRows.push(rowData.original);\n    }\n    this.setState({\n      selectedRows,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"createMd pl-2 pr-2\">\n        <div className=\"card\">\n          <div>\n            <h4 className=\"font-size-14  pad-10 markdown-heading\">\n              MarkSmart /<span className=\"font-bold color-blue\">Draft</span>\n            </h4>\n          </div>\n          <hr\n            className=\"mb-2\"\n            style={{\n              marginTop: '-4px',\n            }}\n          />\n          <div className=\"filterCol mb-4\">\n            <Filters\n              onFilter={this.onFilter}\n              onReset={(e) => {\n                this.props.textStrHandler(true);\n                this.props.onResetDraftTable(e);\n              }}\n              dateRange\n              filtersOptions={[\n                { type: 'country', isMandatory: false, isMultiple: true },\n                { type: 'channel', isMandatory: false, isMultiple: true },\n                { type: 'storeCluster', isMandatory: false, isMultiple: true },\n                { type: 'customStoreGroup', isMandatory: false, isMultiple: true },\n                { type: 'store', isMandatory: false, isMultiple: true },\n                ...this.state.filters,\n                { type: 'season', isMandatory: false, isMultiple: true },\n                { type: 'matrix', isMandatory: false, isMultiple: true },\n                { type: 'exclusionList', isMandatory: false, isMultiple: true },\n                { type: 'clearance', isMandatory: false, isMultiple: true },\n                { type: 'customStyleGroup', isMandatory: false, isMultiple: true },\n                { type: 'styleColor', isMandatory: false, isMultiple: true },\n              ]}\n              hierarchy={[\n                {\n                  type: 'hierarchy1',\n                  isMandatory: true,\n                  isMultiple: false,\n                },\n                {\n                  type: 'hierarchy2',\n                  isMultiple: true,\n                  isMandatory: true,\n                },\n                {\n                  type: 'hierarchy3',\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy4',\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy5',\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy6',\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy7',\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy8',\n                  isMultiple: true,\n                },\n              ]}\n              storeIsNotMandatory={true}\n              from=\"draft/status\" ////////// handling reset issues rising bcs of tabs\n            />\n          </div>\n        </div>\n        {this.props.draftMarkdowns && this.props.draftMarkdowns.length ? (\n          <div className=\"card pl-3 pr-3 mt-3\">\n            <ColSelBtn>\n              {this.props.draftColumnHeaders &&\n                Object.keys(this.props.draftColumnHeaders).length && (\n                  <ColumnSelection\n                    onHandleCheckBox={this.props.onHandleCheckBox}\n                    columnHeaders={this.props.draftColumnHeaders}\n                    onHandleSelect={this.props.onHandleSelect}\n                    columnOptions={this.props.columnOptions}\n                    selectedItems={this.props.selectedItems}\n                    selLabels={this.props.selLabels}\n                  />\n                )}\n              <div style={{ padding: '1rem' }}>\n                <button\n                  onClick={this.sendForApproval}\n                  disabled={!this.state.selectedRows.length}\n                  className=\"btn btn-primary\">\n                  Send for Approval\n                </button>\n                &nbsp;\n              </div>\n            </ColSelBtn>\n            <div className=\"tablel\">\n              <DataTable\n                columns={this.props.columns}\n                data={this.props.draftMarkdowns}\n                isSort={true}\n                isExpanded={true}\n                updateMyData={this.updateMyData}\n                isPagination={true}\n                NoDataComponent=\"This is the dynamic title\"\n                getCellProps={(cellInfo) => ({\n                  // onClick: () => this.onCellClick(cellInfo),\n                  style: {\n                    backgroundColor: this.bgmCol(cellInfo),\n                    color: this.txtCol(cellInfo),\n                    margin: '4px 4px',\n                    borderRadius: '2px',\n                  },\n                })}\n              />\n            </div>\n          </div>\n        ) : (\n          <NoData description={this.props.draftTextStr} />\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (store) => {\n  return {\n    // markdowns: store.draftStatusReducer.markdowns,\n    // columnHeaders: store.draftStatusReducer.columnHeaders,\n    draftMarkdowns: store.draftStatusReducer.draftMarkdowns,\n    draftColumnHeaders: store.draftStatusReducer.draftColumnHeaders,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    selectedStores: store.filtersReducer.selectedStores,\n    selectedSeason: store.filtersReducer.selectedSeason,\n    selectedClearance: store.filtersReducer.selectedClearance,\n    selectedMatrix: store.filtersReducer.selectedMatrix,\n    selectedExclusionList: store.filtersReducer.selectedExclusionList,\n    selectedStyleColor: store.filtersReducer.selectedStyleColor,\n    selectedCountry: store.filtersReducer.selectedCountry,\n    selectedStoreCluster: store.filtersReducer.selectedStoreCluster,\n    selectedStore: store.filtersReducer.selectedStore,\n    selectedChannel: store.filtersReducer.selectedChannel,\n    selectedCustomStyleGroup: store.filtersReducer.selectedCustomStyleGroup,\n    selectedCustomStoreGroup: store.filtersReducer.selectedCustomStoreGroup,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n  };\n};\n\nconst mapActionToProps = {\n  sendForApproval: DraftAction.sendForApproval,\n  onResetDraftTable: DraftAction.onResetDraftTable,\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(Draft);\n\nconst ColSelBtn = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n"]},"metadata":{},"sourceType":"module"}