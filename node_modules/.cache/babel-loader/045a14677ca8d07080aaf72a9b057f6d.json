{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/ComparisonTable.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-family: arial, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%;\\n\\n  td,\\n  th {\\n    border: 1px solid #dddddd;\\n    text-align: center;\\n    padding: 8px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport cloneDeep from 'clone-deep';\n\nvar ComparisonTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ComparisonTable, _Component);\n\n  function ComparisonTable(props) {\n    var _this;\n\n    _classCallCheck(this, ComparisonTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ComparisonTable).call(this, props));\n\n    _this.onCheckboxClick = function (e, col, row, index) {\n      var selectedRows = cloneDeep(_this.state.selectedRow);\n\n      if (e.target.checked) {\n        selectedRows.push(row);\n      } else {\n        selectedRows.forEach(function (rows, index) {\n          if (rows.scenarios === row.scenarios) {\n            selectedRows.splice(index, 1);\n          }\n        });\n      }\n\n      _this.setState({\n        selectedRow: selectedRows\n      }); // let comparisonRowVal = row;\n      // console.log(comparisonRowVal, 'abc');\n\n\n      _this.props.compariosnCheckbox(selectedRows, index);\n    };\n\n    _this.state = {\n      data: _this.props.data,\n      selectedRow: []\n    };\n    return _this;\n  }\n\n  _createClass(ComparisonTable, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      this.setState({\n        data: this.props.data\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        data: this.props.data\n      });\n    }\n  }, {\n    key: \"onCadenceValue\",\n    value: function onCadenceValue(event, col, row, rowNumber) {\n      console.log(col, row, rowNumber, 'onComparisonInputChange');\n      var data = cloneDeep(this.props.data);\n      row[col] = event.target.value;\n      data[rowNumber] = row;\n      this.setState({\n        data: data\n      });\n      this.props.onUpdateMarkdownPercentage(data, this.props.index);\n      console.log(this.state.data, 'dadadadd');\n    }\n  }, {\n    key: \"getHeader\",\n    value: function getHeader() {\n      if (this.state.data && this.state.data.length) {\n        var headers = Object.keys(this.state.data[0]);\n        headers.unshift('');\n        return headers.map(function (header, index) {\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, header ? header[0].toUpperCase() + header.slice(1) : '');\n        });\n      }\n    } // onCadenceValue() {}\n\n  }, {\n    key: \"getInputWithPercentageTag\",\n    value: function getInputWithPercentageTag(col, row, i, rowNumber, index) {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"col\",\n        key: i + 1,\n        style: {\n          width: '200px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        style: {\n          width: '90%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(event) {\n          return _this2.onCadenceValue(event, col, row, rowNumber, index, i);\n        } // onChange={(e) => this.onComparisonInputChange(e, col, row, rowNumber, index, i)}\n        ,\n        className: \"form-control border-style\",\n        value: row[col],\n        disabled: row.scenarios == 'Optimal' ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-side-percent\",\n        type: \"button\",\n        style: {\n          zIndex: 'unset'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-percent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"getTags\",\n    value: function getTags(col, row, index, rowNumber) {\n      var _this3 = this;\n\n      console.log(row, 'rowcom');\n\n      if (col.toLowerCase().startsWith('w')) {\n        return this.getInputWithPercentageTag(col, row, rowNumber);\n      } else if (col.toLowerCase().startsWith('scenarios')) {\n        return row[col];\n      } else {\n        return React.createElement(\"input\", {\n          type: \"checkbox\",\n          onChange: function onChange(e) {\n            return _this3.onCheckboxClick(e, col, row, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"tableScroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Styles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.getHeader()), this.state.data.map(function (row, rowNumber) {\n        var rows = Object.keys(row);\n        rows.unshift('');\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, rows.map(function (col, index) {\n          return React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, _this4.getTags(col, row, rowNumber));\n        }));\n      })))));\n    }\n  }]);\n\n  return ComparisonTable;\n}(Component);\n\nexport default ComparisonTable;\nvar Styles = styled.table(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/ComparisonTable.js"],"names":["React","Component","styled","cloneDeep","ComparisonTable","props","onCheckboxClick","e","col","row","index","selectedRows","state","selectedRow","target","checked","push","forEach","rows","scenarios","splice","setState","compariosnCheckbox","data","event","rowNumber","console","log","value","onUpdateMarkdownPercentage","length","headers","Object","keys","unshift","map","header","toUpperCase","slice","i","width","onCadenceValue","zIndex","toLowerCase","startsWith","getInputWithPercentageTag","getHeader","getTags","Styles","table"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IACMC,e;;;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,yFAAMA,KAAN;;AADiB,UAsCnBC,eAtCmB,GAsCD,UAACC,CAAD,EAAIC,GAAJ,EAASC,GAAT,EAAcC,KAAd,EAAwB;AACxC,UAAIC,YAAY,GAAGR,SAAS,CAAC,MAAKS,KAAL,CAAWC,WAAZ,CAA5B;;AACA,UAAIN,CAAC,CAACO,MAAF,CAASC,OAAb,EAAsB;AACpBJ,QAAAA,YAAY,CAACK,IAAb,CAAkBP,GAAlB;AACD,OAFD,MAEO;AACLE,QAAAA,YAAY,CAACM,OAAb,CAAqB,UAACC,IAAD,EAAOR,KAAP,EAAiB;AACpC,cAAIQ,IAAI,CAACC,SAAL,KAAmBV,GAAG,CAACU,SAA3B,EAAsC;AACpCR,YAAAA,YAAY,CAACS,MAAb,CAAoBV,KAApB,EAA2B,CAA3B;AACD;AACF,SAJD;AAKD;;AACD,YAAKW,QAAL,CAAc;AACZR,QAAAA,WAAW,EAAEF;AADD,OAAd,EAXwC,CAcxC;AACA;;;AACA,YAAKN,KAAL,CAAWiB,kBAAX,CAA8BX,YAA9B,EAA4CD,KAA5C;AACD,KAvDkB;;AAEjB,UAAKE,KAAL,GAAa;AACXW,MAAAA,IAAI,EAAE,MAAKlB,KAAL,CAAWkB,IADN;AAEXV,MAAAA,WAAW,EAAE;AAFF,KAAb;AAFiB;AAMlB;;;;8CACyBR,K,EAAO;AAC/B,WAAKgB,QAAL,CAAc;AACZE,QAAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWkB;AADL,OAAd;AAGD;;;wCACmB;AAClB,WAAKF,QAAL,CAAc;AACZE,QAAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWkB;AADL,OAAd;AAGD;;;mCACcC,K,EAAOhB,G,EAAKC,G,EAAKgB,S,EAAW;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAYnB,GAAZ,EAAiBC,GAAjB,EAAsBgB,SAAtB,EAAiC,yBAAjC;AACA,UAAIF,IAAI,GAAGpB,SAAS,CAAC,KAAKE,KAAL,CAAWkB,IAAZ,CAApB;AACAd,MAAAA,GAAG,CAACD,GAAD,CAAH,GAAWgB,KAAK,CAACV,MAAN,CAAac,KAAxB;AACAL,MAAAA,IAAI,CAACE,SAAD,CAAJ,GAAkBhB,GAAlB;AACA,WAAKY,QAAL,CAAc;AACZE,QAAAA,IAAI,EAAEA;AADM,OAAd;AAGA,WAAKlB,KAAL,CAAWwB,0BAAX,CAAsCN,IAAtC,EAA4C,KAAKlB,KAAL,CAAWK,KAAvD;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWW,IAAvB,EAA6B,UAA7B;AACD;;;gCACW;AACV,UAAI,KAAKX,KAAL,CAAWW,IAAX,IAAmB,KAAKX,KAAL,CAAWW,IAAX,CAAgBO,MAAvC,EAA+C;AAC7C,YAAIC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKrB,KAAL,CAAWW,IAAX,CAAgB,CAAhB,CAAZ,CAAd;AACAQ,QAAAA,OAAO,CAACG,OAAR,CAAgB,EAAhB;AACA,eAAOH,OAAO,CAACI,GAAR,CAAY,UAACC,MAAD,EAAS1B,KAAT,EAAmB;AACpC,iBAAO;AAAI,YAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiB0B,MAAM,GAAGA,MAAM,CAAC,CAAD,CAAN,CAAUC,WAAV,KAA0BD,MAAM,CAACE,KAAP,CAAa,CAAb,CAA7B,GAA+C,EAAtE,CAAP;AACD,SAFM,CAAP;AAGD;AACF,K,CACD;;;;8CAmB0B9B,G,EAAKC,G,EAAK8B,C,EAAGd,S,EAAWf,K,EAAO;AAAA;;AACvD,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,GAAG,EAAE6B,CAAC,GAAG,CAA9B;AAAiC,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAE,kBAAChB,KAAD;AAAA,iBAAW,MAAI,CAACiB,cAAL,CAAoBjB,KAApB,EAA2BhB,GAA3B,EAAgCC,GAAhC,EAAqCgB,SAArC,EAAgDf,KAAhD,EAAuD6B,CAAvD,CAAX;AAAA,SAFZ,CAGE;AAHF;AAIE,QAAA,SAAS,EAAC,2BAJZ;AAKE,QAAA,KAAK,EAAE9B,GAAG,CAACD,GAAD,CALZ;AAME,QAAA,QAAQ,EAAEC,GAAG,CAACU,SAAJ,IAAiB,SAAjB,GAA6B,IAA7B,GAAoC,KANhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,IAAI,EAAC,QAA9C;AAAuD,QAAA,KAAK,EAAE;AAAEuB,UAAAA,MAAM,EAAE;AAAV,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CATF,CADF,CADF;AAmBD;;;4BAEOlC,G,EAAKC,G,EAAKC,K,EAAOe,S,EAAW;AAAA;;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAYlB,GAAZ,EAAiB,QAAjB;;AACA,UAAID,GAAG,CAACmC,WAAJ,GAAkBC,UAAlB,CAA6B,GAA7B,CAAJ,EAAuC;AACrC,eAAO,KAAKC,yBAAL,CAA+BrC,GAA/B,EAAoCC,GAApC,EAAyCgB,SAAzC,CAAP;AACD,OAFD,MAEO,IAAIjB,GAAG,CAACmC,WAAJ,GAAkBC,UAAlB,CAA6B,WAA7B,CAAJ,EAA+C;AACpD,eAAOnC,GAAG,CAACD,GAAD,CAAV;AACD,OAFM,MAEA;AACL,eACE;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,QAAQ,EAAE,kBAACD,CAAD;AAAA,mBAAO,MAAI,CAACD,eAAL,CAAqBC,CAArB,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,KAAlC,CAAP;AAAA,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AACF;;;6BAEQ;AAAA;;AACP,aACE,0CACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKoC,SAAL,EAAL,CADF,EAEG,KAAKlC,KAAL,CAAWW,IAAX,CAAgBY,GAAhB,CAAoB,UAAC1B,GAAD,EAAMgB,SAAN,EAAoB;AACvC,YAAIP,IAAI,GAAGc,MAAM,CAACC,IAAP,CAAYxB,GAAZ,CAAX;AACAS,QAAAA,IAAI,CAACgB,OAAL,CAAa,EAAb;AACA,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGhB,IAAI,CAACiB,GAAL,CAAS,UAAC3B,GAAD,EAAME,KAAN,EAAgB;AACxB,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAK,MAAI,CAACqC,OAAL,CAAavC,GAAb,EAAkBC,GAAlB,EAAuBgB,SAAvB,CAAL,CAAP;AACD,SAFA,CADH,CADF;AAOD,OAVA,CAFH,CADF,CADF,CADF,CADF;AAsBD;;;;EAnH2BxB,S;;AAsH9B,eAAeG,eAAf;AAEA,IAAM4C,MAAM,GAAG9C,MAAM,CAAC+C,KAAV,mBAAZ","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport cloneDeep from 'clone-deep';\nclass ComparisonTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.data,\n      selectedRow: [],\n    };\n  }\n  componentWillReceiveProps(props) {\n    this.setState({\n      data: this.props.data,\n    });\n  }\n  componentDidMount() {\n    this.setState({\n      data: this.props.data,\n    });\n  }\n  onCadenceValue(event, col, row, rowNumber) {\n    console.log(col, row, rowNumber, 'onComparisonInputChange');\n    let data = cloneDeep(this.props.data);\n    row[col] = event.target.value;\n    data[rowNumber] = row;\n    this.setState({\n      data: data,\n    });\n    this.props.onUpdateMarkdownPercentage(data, this.props.index);\n    console.log(this.state.data, 'dadadadd');\n  }\n  getHeader() {\n    if (this.state.data && this.state.data.length) {\n      let headers = Object.keys(this.state.data[0]);\n      headers.unshift('');\n      return headers.map((header, index) => {\n        return <th key={index}>{header ? header[0].toUpperCase() + header.slice(1) : ''}</th>;\n      });\n    }\n  }\n  // onCadenceValue() {}\n  onCheckboxClick = (e, col, row, index) => {\n    let selectedRows = cloneDeep(this.state.selectedRow);\n    if (e.target.checked) {\n      selectedRows.push(row);\n    } else {\n      selectedRows.forEach((rows, index) => {\n        if (rows.scenarios === row.scenarios) {\n          selectedRows.splice(index, 1);\n        }\n      });\n    }\n    this.setState({\n      selectedRow: selectedRows,\n    });\n    // let comparisonRowVal = row;\n    // console.log(comparisonRowVal, 'abc');\n    this.props.compariosnCheckbox(selectedRows, index);\n  };\n  getInputWithPercentageTag(col, row, i, rowNumber, index) {\n    return (\n      <div className=\"col\" key={i + 1} style={{ width: '200px' }}>\n        <div className=\"input-group\" style={{ width: '90%' }}>\n          <input\n            type=\"text\"\n            onChange={(event) => this.onCadenceValue(event, col, row, rowNumber, index, i)}\n            // onChange={(e) => this.onComparisonInputChange(e, col, row, rowNumber, index, i)}\n            className=\"form-control border-style\"\n            value={row[col]}\n            disabled={row.scenarios == 'Optimal' ? true : false}\n          />\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-side-percent\" type=\"button\" style={{ zIndex: 'unset' }}>\n              <i className=\"fa fa-percent\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  getTags(col, row, index, rowNumber) {\n    console.log(row, 'rowcom');\n    if (col.toLowerCase().startsWith('w')) {\n      return this.getInputWithPercentageTag(col, row, rowNumber);\n    } else if (col.toLowerCase().startsWith('scenarios')) {\n      return row[col];\n    } else {\n      return (\n        <input type=\"checkbox\" onChange={(e) => this.onCheckboxClick(e, col, row, index)}></input>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"tableScroll\">\n          <Styles>\n            <tbody>\n              <tr>{this.getHeader()}</tr>\n              {this.state.data.map((row, rowNumber) => {\n                let rows = Object.keys(row);\n                rows.unshift('');\n                return (\n                  <tr>\n                    {rows.map((col, index) => {\n                      return <td>{this.getTags(col, row, rowNumber)}</td>;\n                    })}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Styles>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ComparisonTable;\n\nconst Styles = styled.table`\n  font-family: arial, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n\n  td,\n  th {\n    border: 1px solid #dddddd;\n    text-align: center;\n    padding: 8px;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}