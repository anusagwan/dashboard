{"ast":null,"code":"import _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/PricingModule/sharedComponents/charts/ScatterChart.js\";\nimport React, { Component } from \"react\";\nimport { Scatter } from \"react-chartjs-2\";\n\nvar ScatterChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScatterChart, _Component);\n\n  function ScatterChart() {\n    _classCallCheck(this, ScatterChart);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ScatterChart).apply(this, arguments));\n  }\n\n  _createClass(ScatterChart, [{\n    key: \"render\",\n    value: function render() {\n      var data1 = this.props.data1.map(function (val) {\n        return {\n          x: val.x.toFixed(2),\n          y: val.y\n        };\n      });\n      var dataset = {\n        datasets: [{\n          pointBorderWidth: 0,\n          pointRadius: 1,\n          pointHoverRadius: 1,\n          borderColor: \"#44677b\",\n          datalabels: {\n            display: false\n          },\n          backgroundColor: \"#44677b\",\n          data: data1,\n          showLine: true,\n          fill: false,\n          borderWidth: 1\n        }]\n      };\n      var options = {\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: \"Price\",\n              // labelString: this.props.lang[this.props.language].chart_labels.margin_lift,\n              fontSize: 13,\n              fontColor: \"#45677b\",\n              fontStyle: \"bold\"\n            }\n          }],\n          yAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: \"Quantity\",\n              // labelString: this.props.lang[this.props.language].chart_labels.margin_lift,\n              fontSize: 13,\n              fontColor: \"#45677b\",\n              fontStyle: \"bold\"\n            }\n          }]\n        },\n        responsive: true,\n        maintainAspectRatio: true\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Scatter, {\n        data: dataset,\n        options: options,\n        width: 500,\n        height: this.props.height || 150,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ScatterChart;\n}(Component);\n\nexport default ScatterChart;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/PricingModule/sharedComponents/charts/ScatterChart.js"],"names":["React","Component","Scatter","ScatterChart","data1","props","map","val","x","toFixed","y","dataset","datasets","pointBorderWidth","pointRadius","pointHoverRadius","borderColor","datalabels","display","backgroundColor","data","showLine","fill","borderWidth","options","legend","scales","xAxes","scaleLabel","labelString","fontSize","fontColor","fontStyle","yAxes","responsive","maintainAspectRatio","height"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,iBAAxB;;IAEMC,Y;;;;;;;;;;;;;6BAEK;AACP,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAX,CAAiBE,GAAjB,CAAqB,UAAUC,GAAV,EAAe;AAC9C,eAAO;AAAEC,UAAAA,CAAC,EAAED,GAAG,CAACC,CAAJ,CAAMC,OAAN,CAAc,CAAd,CAAL;AAAuBC,UAAAA,CAAC,EAAEH,GAAG,CAACG;AAA9B,SAAP;AACD,OAFW,CAAZ;AAIA,UAAIC,OAAO,GAAG;AACZC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,gBAAgB,EAAE,CADpB;AAEEC,UAAAA,WAAW,EAAE,CAFf;AAGEC,UAAAA,gBAAgB,EAAE,CAHpB;AAIEC,UAAAA,WAAW,EAAE,SAJf;AAKEC,UAAAA,UAAU,EAAE;AACVC,YAAAA,OAAO,EAAE;AADC,WALd;AAQEC,UAAAA,eAAe,EAAE,SARnB;AASEC,UAAAA,IAAI,EAAEhB,KATR;AAUEiB,UAAAA,QAAQ,EAAE,IAVZ;AAWEC,UAAAA,IAAI,EAAE,KAXR;AAYEC,UAAAA,WAAW,EAAE;AAZf,SADQ;AADE,OAAd;AAsBA,UAAIC,OAAO,GAAG;AACZC,QAAAA,MAAM,EAAE;AACNP,UAAAA,OAAO,EAAE;AADH,SADI;AAKZQ,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CAAC;AACNC,YAAAA,UAAU,EAAE;AACVV,cAAAA,OAAO,EAAE,IADC;AAEVW,cAAAA,WAAW,EAAE,OAFH;AAGV;AACAC,cAAAA,QAAQ,EAAE,EAJA;AAKVC,cAAAA,SAAS,EAAE,SALD;AAMVC,cAAAA,SAAS,EAAE;AAND;AADN,WAAD,CADD;AAYNC,UAAAA,KAAK,EAAE,CACL;AACEL,YAAAA,UAAU,EAAE;AACVV,cAAAA,OAAO,EAAE,IADC;AAEVW,cAAAA,WAAW,EAAE,UAFH;AAGV;AACAC,cAAAA,QAAQ,EAAE,EAJA;AAKVC,cAAAA,SAAS,EAAE,SALD;AAMVC,cAAAA,SAAS,EAAE;AAND;AADd,WADK;AAZD,SALI;AA8BZE,QAAAA,UAAU,EAAE,IA9BA;AA+BZC,QAAAA,mBAAmB,EAAE;AA/BT,OAAd;AAmCA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAExB,OAAf;AAAwB,QAAA,OAAO,EAAEa,OAAjC;AAA0C,QAAA,KAAK,EAAE,GAAjD;AACE,QAAA,MAAM,EAAE,KAAKnB,KAAL,CAAW+B,MAAX,IAAqB,GAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAMD;;;;EAtEwBnC,S;;AA2E3B,eAAeE,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Scatter } from \"react-chartjs-2\";\n\nclass ScatterChart extends Component {\n\n  render() {\n    let data1 = this.props.data1.map(function (val) {\n      return { x: val.x.toFixed(2), y: val.y }\n    })\n\n    let dataset = {\n      datasets: [\n        {\n          pointBorderWidth: 0,\n          pointRadius: 1,\n          pointHoverRadius: 1,\n          borderColor: \"#44677b\",\n          datalabels: {\n            display: false\n          },\n          backgroundColor: \"#44677b\",\n          data: data1,\n          showLine: true,\n          fill: false,\n          borderWidth: 1,\n        },\n      ],\n\n    }\n\n\n\n    let options = {\n      legend: {\n        display: false,\n      },\n\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: \"Price\",\n            // labelString: this.props.lang[this.props.language].chart_labels.margin_lift,\n            fontSize: 13,\n            fontColor: \"#45677b\",\n            fontStyle: \"bold\"\n          }\n        }\n        ],\n        yAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"Quantity\",\n              // labelString: this.props.lang[this.props.language].chart_labels.margin_lift,\n              fontSize: 13,\n              fontColor: \"#45677b\",\n              fontStyle: \"bold\"\n            }\n          }\n        ]\n      },\n      responsive: true,\n      maintainAspectRatio: true\n    }\n\n\n    return (\n      <div>\n        <Scatter data={dataset} options={options} width={500}\n          height={this.props.height || 150} />\n      </div>\n    );\n  }\n\n\n}\n\nexport default ScatterChart;"]},"metadata":{},"sourceType":"module"}