{"ast":null,"code":"import axios from 'axios';\nimport { GET_PLANNED_REPORTS_DATA, GET_PLANNED_REPORTS_SUCCESS, GET_PLANNED_REPORTS_ERROR } from './types';\nimport { config } from '../utils/config';\nvar plannedReportsActions = {\n  fetchPlannedReports: function fetchPlannedReports(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getActualAndPlanned/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        console.log('Data', resp.data.data.data);\n        dispatch({\n          type: ' GET_PLANNED_REPORTS_DATA',\n          payload: resp.data.data\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      }).catch(function (err) {\n        dispatch({\n          type: GET_PLANNED_REPORTS_ERROR,\n          payload: err\n        });\n      });\n    };\n  }\n};\nexport default plannedReportsActions;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/plannedReportsAction.js"],"names":["axios","GET_PLANNED_REPORTS_DATA","GET_PLANNED_REPORTS_SUCCESS","GET_PLANNED_REPORTS_ERROR","config","plannedReportsActions","fetchPlannedReports","reqObj","dispatch","type","payload","status","url","createMarkdownURL","method","data","then","resp","console","log","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,wBADF,EAEEC,2BAFF,EAGEC,yBAHF,QAIO,SAJP;AAKA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,IAAMC,qBAAqB,GAAG;AAC5BC,EAAAA,mBAAmB,EAAE,6BAACC,MAAD,EAAY;AAC/B,WAAO,UAACC,QAAD,EAAc;AACnBA,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,cADC;AAEPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE;AADD;AAFF,OAAD,CAAR;AAMAX,MAAAA,KAAK,CAAC;AACJY,QAAAA,GAAG,YAAKR,MAAM,CAACS,iBAAZ,0BADC;AAEJC,QAAAA,MAAM,EAAE,MAFJ;AAGJC,QAAAA,IAAI,EAAER;AAHF,OAAD,CAAL,CAKGS,IALH,CAKQ,UAACC,IAAD,EAAU;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAAI,CAACF,IAAL,CAAUA,IAAV,CAAeA,IAAnC;AACAP,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAE,2BADC;AAEPC,UAAAA,OAAO,EAAEO,IAAI,CAACF,IAAL,CAAUA;AAFZ,SAAD,CAAR;AAIAP,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAE,cADC;AAEPC,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE;AADD;AAFF,SAAD,CAAR;AAMD,OAjBH,EAkBGS,KAlBH,CAkBS,UAACC,GAAD,EAAS;AACdb,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEN,yBADC;AAEPO,UAAAA,OAAO,EAAEW;AAFF,SAAD,CAAR;AAID,OAvBH;AAwBD,KA/BD;AAgCD;AAlC2B,CAA9B;AAqCA,eAAehB,qBAAf","sourcesContent":["import axios from 'axios';\nimport {\n  GET_PLANNED_REPORTS_DATA,\n  GET_PLANNED_REPORTS_SUCCESS,\n  GET_PLANNED_REPORTS_ERROR,\n} from './types';\nimport { config } from '../utils/config';\n\nconst plannedReportsActions = {\n  fetchPlannedReports: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        url: `${config.createMarkdownURL}/getActualAndPlanned/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          console.log('Data', resp.data.data.data);\n          dispatch({\n            type: ' GET_PLANNED_REPORTS_DATA',\n            payload: resp.data.data,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        })\n        .catch((err) => {\n          dispatch({\n            type: GET_PLANNED_REPORTS_ERROR,\n            payload: err,\n          });\n        });\n    };\n  },\n};\n\nexport default plannedReportsActions;\n"]},"metadata":{},"sourceType":"module"}