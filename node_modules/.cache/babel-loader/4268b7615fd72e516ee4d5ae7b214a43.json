{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Finalize/FinalizeMarkdown.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Filters from '../../services/filters';\nimport './finalizeMarkdownStyle.css';\nimport styled from 'styled-components';\nimport NoData from '../noTableData';\nimport FinalizeAction from '../../actions/draftStausFinalizeAction';\nimport Coldef from './coldef';\nimport { toPercentage, toPercentageWithDecimalDraft, toDollarWithlDraft, toUnitDraft, toFixedToTwoDraft } from '../../helper/formatter';\nimport _ from 'lodash';\nimport cloneDeep from 'clone-deep';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport AlertWarning from '../../utils/AlertMessage/alertDanger';\nimport AlertSuccess from '../../utils/AlertMessage/alertSuccess';\nimport CardComponent from '../../services/cardComponent/cardComponent';\nimport moment from 'moment';\nimport card1Image from '../../images/card1Image.png';\nimport card2Image from '../../images/card2Image.png';\nimport card3Image from '../../images/card3Image.png';\nimport card4Image from '../../images/card4Image.png';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox';\n\nfunction FormatterStyling(props, value, val) {\n  console.log(val, 'formval');\n  console.log(props.row.original.margin$, 'anaajajaj');\n\n  if (value == 'aum') {\n    return toUnitDraft(props);\n  } else if (value == 'revenue$' || value == 'aur' || value == 'margin$' || value == 'markdown_units') {\n    return toDollarWithlDraft(props);\n  } else if (value == 'overall_revenue$' || value == 'overall_aur' || value == 'overall_aum' || value == 'overall_planned_units' || value == 'overall_pvh_units' || value == 'overall_margin$' || value == 'overall_markdown_units') {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, val ? parseInt(val).toLocaleString('en') : '-');\n  }\n}\n\nvar FinalizeMarkdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FinalizeMarkdown, _Component);\n\n  function FinalizeMarkdown(props) {\n    var _this;\n\n    _classCallCheck(this, FinalizeMarkdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FinalizeMarkdown).call(this, props));\n\n    _this.findStatusColor = function (status, color) {\n      switch (status) {\n        case 'high':\n          return color.high;\n\n        case 'medium':\n          return color.medium;\n\n        case 'low':\n          return color.low;\n\n        default:\n          break;\n      }\n    };\n\n    _this.bgmCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var bgCol = {\n        high: '#F8E8E8',\n        medium: '#FCF3D1',\n        low: '#E8F8F5'\n      };\n      return _this.findStatusColor(status, bgCol);\n    };\n\n    _this.txtCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var txtCol = {\n        high: '#D38485',\n        medium: '#F0C53A',\n        low: '#66CFBA'\n      };\n      return _this.findStatusColor(status, txtCol);\n    };\n\n    _this.sendForReject = function () {\n      var payload = {\n        markdown_data: _this.state.selectedRows.map(function (item) {\n          return {\n            id: item.markdown_id\n          };\n        }),\n        update_status: 'rejected'\n      };\n      console.log(payload, 'sendForReject');\n\n      _this.props.sendForApproval(payload);\n    };\n\n    _this.sendForApprove = function () {\n      var payload = {\n        markdown_data: _this.state.selectedRows.map(function (item) {\n          return {\n            id: item.markdown_id // scenario: item.scenario,\n\n          };\n        }),\n        update_status: 'approved'\n      };\n      console.log(payload, 'sendForApprove');\n\n      _this.props.sendForApproval(payload);\n    };\n\n    _this.onActionSelection = function (rowData) {\n      var selectedRows = _this.state.selectedRows;\n\n      var foundEle = _.find(selectedRows, {\n        markdown_id: rowData.original.markdown_id\n      });\n\n      if (foundEle) {\n        _.remove(selectedRows, function (item) {\n          return item.markdown_id === rowData.original.markdown_id;\n        });\n      } else {\n        selectedRows.push(rowData.original);\n      }\n\n      console.log(selectedRows, 'onActionSelection', rowData);\n\n      _this.setState({\n        selectedRows: selectedRows\n      });\n    };\n\n    _this.onScenarioSelection = function (rowData) {\n      var selectedRows = _this.state.selectedRows;\n\n      var foundEle = _.find(selectedRows, {\n        markdown_id: rowData.original.markdown_id\n      });\n\n      if (foundEle) {\n        _.remove(selectedRows, function (item) {\n          return item.markdown_id === rowData.original.markdown_id;\n        });\n      } else {\n        selectedRows.push(rowData.original);\n      }\n\n      console.log(selectedRows, 'asdfmasdf', rowData);\n\n      _this.setState({\n        selectedRows: selectedRows\n      });\n    };\n\n    _this.onHandleSelect = function (selOptions) {\n      console.log('option:', selOptions);\n      var headers = cloneDeep(_this.state.columns);\n\n      _.remove(headers, function (item) {\n        return item.metric;\n      });\n\n      console.log(headers, 'selheader');\n      selOptions.forEach(function (item) {\n        console.log(item, 'itemitemitemitemd');\n        var newTableCols = headers.filter(function (a) {\n          return a.accessor === item.value;\n        });\n        console.log(newTableCols, 'neww');\n\n        if (newTableCols.length == 0) {\n          headers.push({\n            Header: item.label,\n            accessor: item.value,\n            Aggregated: function Aggregated(_ref) {\n              var row = _ref.row;\n              var accessorName = \"overall_\".concat(item.value);\n              var val = row.original[accessorName];\n              var check = row.original.checked_for_approval;\n              return check ? React.createElement(\"span\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 221\n                },\n                __self: this\n              }, val ? Math.round(val) : '-') : null; // return <span>{val ? Math.round(val) : '-'}</span>;\n            },\n            Cell: function Cell(_ref2) {\n              var row = _ref2.row;\n              var check = row.original.checked_for_approval;\n              return !check ? null : check ? React.createElement(\"span\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 227\n                },\n                __self: this\n              }, row.original[item.value]) : '-';\n            },\n            metric: true\n          });\n        }\n      });\n      console.log(headers, 'headeererererer');\n\n      _this.setState({\n        columns: headers\n      });\n    };\n\n    _this.onHandleCheckBox = function (e, label, index) {\n      //adding\n      if (e.target.checked) {\n        if (_this.state.selLabels.indexOf(label) === -1) {\n          var labels = [].concat(_toConsumableArray(_this.state.selLabels), [label]);\n          var tempArr = [];\n          labels.forEach(function (label) {\n            var columns = _this.props.getColumnHeaders[label];\n            var labelColumns = Object.keys(columns);\n            var options = labelColumns.map(function (label) {\n              return {\n                label: label,\n                value: columns[label]\n              };\n            });\n            tempArr.push.apply(tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selLabels: labels,\n            columnOptions: tempArr\n          });\n        }\n      } else {\n        //removing\n        var _index = _this.state.selLabels.indexOf(label);\n\n        if (_index !== -1) {\n          var selectedLabel = cloneDeep(_this.state.selLabels);\n          selectedLabel.splice(_index, 1);\n          var _tempArr = [];\n          selectedLabel.forEach(function (label) {\n            var columns = _this.props.getColumnHeaders[label];\n            var labelColumns = Object.keys(columns);\n            var options = labelColumns.map(function (label) {\n              return {\n                label: label,\n                value: columns[label]\n              };\n            });\n\n            _tempArr.push.apply(_tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selLabels: selectedLabel,\n            columnOptions: _tempArr\n          });\n        }\n      }\n    };\n\n    _this.onFilter = function () {\n      var payload = {\n        filters: {\n          hierarchy1: _this.props.selectedHierarchy1,\n          hierarchy2: _this.props.selectedHierarchy2,\n          hierarchy3: _this.props.selectedHierarchy3,\n          hierarchy4: _this.props.selectedHierarchy4,\n          hierarchy5: _this.props.selectedHierarchy5,\n          hierarchy6: _this.props.selectedHierarchy6,\n          hierarchy7: _this.props.selectedHierarchy7,\n          hierarchy8: _this.props.selectedHierarchy8,\n          tiers: _this.props.selectedStores\n        },\n        startDate: moment(_this.props.startDate).format('YYYY-MM-DD'),\n        endDate: moment(_this.props.endDate).format('YYYY-MM-DD'),\n        status: 'pending'\n      };\n      console.log(payload, 'finalizepayl');\n\n      _this.props.getMarkdowns(payload);\n    };\n\n    _this.state = {\n      attributes: ['Margin', 'Sales', 'Inventory'],\n      firstCardText: 'KPIs to be decided',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month',\n      selectedItems: [],\n      columnOptions: [],\n      selLabels: [],\n      columns: [],\n      selectedRows: []\n    };\n    return _this;\n  }\n\n  _createClass(FinalizeMarkdown, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.setMarkDowns([]);\n      this.props.setMDColumnHeaders({});\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.getMarkdowns({\n        status: 'pending'\n      });\n      var cols = Coldef();\n      cols.push({\n        id: 'selection',\n        groupByBoundary: true,\n        Header: 'Actions',\n        Cell: function Cell(props) {\n          var row = props.row,\n              rows = props.rows;\n\n          var mdPlan = row.values.md_plan,\n              mainGrp = _.find(rows, {\n            isSelected: true,\n            values: {\n              md_plan: mdPlan\n            }\n          }),\n              checkboxDisabled = mainGrp && !row.isSelected ? true : false;\n\n          return row.canExpand && row.original.checked_for_approval ? React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          }, React.createElement(IndeterminateCheckbox, Object.assign({\n            row: row.id,\n            onClick: function onClick() {\n              _this2.onActionSelection(row);\n            },\n            disabled: checkboxDisabled\n          }, row.getToggleRowSelectedProps(), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }))) : null;\n        }\n      });\n      this.setState({\n        columns: cols\n      });\n    }\n  }, {\n    key: \"render\",\n    // onFilter = (selectedFilters) => {\n    //   let payload = { ...selectedFilters };\n    //   payload.startDate = moment(payload.startDate).format('MM-DD-YYYY');\n    //   payload.endDate = moment(payload.endDate).format('MM-DD-YYYY');\n    //   payload['week'] = '';\n    //   payload['status'] = 'draft';\n    //   this.props.getMarkDowns(payload).then((resp) => {\n    //     console.log(resp, 'aaaaaaaaaa');\n    //     if (resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n    //       let setDefaultColDef = Coldef().filter((col) =>\n    //         resp.columnHeaders.default.includes(col.Header)\n    //       );\n    //       let setDefaultLabel = [];\n    //       let setDefaultColumnOptions = [];\n    //       let setDefaultItems = [];\n    //       let colHeaders = _.cloneDeep(resp.columnHeaders);\n    //       let labels = Object.keys(colHeaders);\n    //       labels.splice(labels.indexOf('fixed'), 1);\n    //       labels.splice(labels.indexOf('default'), 1);\n    //       for (const label of labels) {\n    //         function diff(A = resp.columnHeaders[label], B = resp.columnHeaders.default) {\n    //           return A.filter(function (a) {\n    //             return B.indexOf(a) !== -1;\n    //           });\n    //         }\n    //         if (diff().length) {\n    //           setDefaultColumnOptions.push(...resp.columnHeaders[label]);\n    //           setDefaultItems.push(...diff());\n    //           setDefaultLabel.push(label);\n    //         }\n    //       }\n    //       let options = setDefaultColumnOptions.map((label) => {\n    //         return {\n    //           label: label,\n    //           value: label,\n    //         };\n    //       });\n    //       let selectedItems = setDefaultItems.map((label) => {\n    //         return {\n    //           label: label,\n    //           value: label,\n    //         };\n    //       });\n    //       this.setState({\n    //         columns: setDefaultColDef,\n    //         selLabels: setDefaultLabel,\n    //         selectedItems: selectedItems,\n    //         columnOptions: options,\n    //       });\n    //     }\n    //   });\n    // };\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.props.finalizeMarkdownData, 'finalizeMarkdownData');\n      return React.createElement(\"div\", {\n        className: \"createMd pl-2 pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"alertDivs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, this.state.showAlertWarning ? React.createElement(AlertWarning, {\n        message: \"Markdown Finalization Failed!\",\n        show: this.state.showAlertWarning,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }) : null, this.state.showAlertSuccess ? React.createElement(AlertSuccess, {\n        message: 'Markdown(s) are ' + this.state.message,\n        show: this.state.showAlertSuccess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }) : null), React.createElement(\"div\", {\n        className: \"card CalendarMain promoCalendarDiv1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"font-size-14  pad-10 markdown-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, \"Markdown Optimization /\", React.createElement(\"span\", {\n        className: \"font-bold color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, \"Finalize\"))), React.createElement(\"hr\", {\n        className: \"mb-2\",\n        style: {\n          marginTop: '-4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"filterCol mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(Filters, {\n        onFilter: this.onFilter,\n        stores: true,\n        dateRange: true,\n        hierarchy: [{\n          type: 'hierarchy1',\n          isMandatory: true,\n          isMultiple: false\n        }, {\n          type: 'hierarchy2',\n          isMandatory: true,\n          isMultiple: true\n        }, {\n          type: 'hierarchy3',\n          isMandatory: true,\n          isMultiple: true\n        }, {\n          type: 'hierarchy4',\n          isMandatory: true,\n          isMultiple: true\n        }, {\n          type: 'hierarchy5',\n          isMandatory: true,\n          isMultiple: true\n        }, {\n          type: 'hierarchy6',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'hierarchy7',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'hierarchy8',\n          isMandatory: false,\n          isMultiple: true\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }))), this.props.finalizeMarkdownData && this.props.finalizeMarkdownData.length ? React.createElement(\"div\", {\n        className: \"card pl-3 pr-3 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, React.createElement(ColSelBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }, this.props.getColumnHeaders && Object.keys(this.props.getColumnHeaders).length && React.createElement(ColumnSelection, {\n        onHandleCheckBox: this.onHandleCheckBox,\n        columnHeaders: this.props.getColumnHeaders,\n        onHandleSelect: this.onHandleSelect,\n        columnOptions: this.state.columnOptions,\n        selectedItems: this.state.selectedItems,\n        selLabels: this.state.selLabels,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          padding: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.sendForApprove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, \"Approve\"), \"\\xA0\", React.createElement(\"button\", {\n        className: \"btn btn-primary  btn-filter-reset\",\n        onClick: this.sendForReject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }, \"Reject\"))), React.createElement(DataTable, {\n        columns: this.state.columns,\n        isSort: true // isColumnFilter={true}\n        ,\n        data: this.props.finalizeMarkdownData,\n        updateMyData: this.updateMyData // visibleColumns=\"markDownDrafts\"\n        ,\n        isPagination: true,\n        getColumnProps: function getColumnProps(column) {\n          return {// onClick: () => this.onColumnClick(column),\n          };\n        },\n        getCellProps: function getCellProps(cellInfo) {\n          return {\n            style: {\n              backgroundColor: _this3.bgmCol(cellInfo),\n              color: _this3.txtCol(cellInfo),\n              // textAlign: \"center\",\n              margin: '4px 4px',\n              borderRadius: '2px'\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      })) : React.createElement(NoData, {\n        description: \"Please select filters to show Markdown plans.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FinalizeMarkdown;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  console.log(store, 'storestore');\n  console.log(store.draftStatusReducer.markdowns, 'markdownsstore');\n  return {\n    finalizeMarkdownData: store.draftStatusReducer.markdowns,\n    getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    getMetricOptions: store.finalizeReducer.metricOptions,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    selectedStores: store.filtersReducer.selectedStores,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate\n  };\n};\n\nvar mapActionToProps = {\n  getMarkdowns: FinalizeAction.getMarkdowns,\n  setMarkDowns: FinalizeAction.setMarkDowns,\n  setMDColumnHeaders: FinalizeAction.setMDColumnHeaders,\n  sendForApproval: FinalizeAction.sendForApproval\n};\nexport default connect(mapStateToProps, mapActionToProps)(withRouter(FinalizeMarkdown));\nvar ColSelBtn = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Finalize/FinalizeMarkdown.js"],"names":["React","Component","connect","withRouter","Filters","styled","NoData","FinalizeAction","Coldef","toPercentage","toPercentageWithDecimalDraft","toDollarWithlDraft","toUnitDraft","toFixedToTwoDraft","_","cloneDeep","DataTable","ColumnSelection","AlertWarning","AlertSuccess","CardComponent","moment","card1Image","card2Image","card3Image","card4Image","IndeterminateCheckbox","FormatterStyling","props","value","val","console","log","row","original","margin$","parseInt","toLocaleString","FinalizeMarkdown","findStatusColor","status","color","high","medium","low","bgmCol","cellInfo","column","id","md_status","bgCol","txtCol","sendForReject","payload","markdown_data","state","selectedRows","map","item","markdown_id","update_status","sendForApproval","sendForApprove","onActionSelection","rowData","foundEle","find","remove","push","setState","onScenarioSelection","onHandleSelect","selOptions","headers","columns","metric","forEach","newTableCols","filter","a","accessor","length","Header","label","Aggregated","accessorName","check","checked_for_approval","Math","round","Cell","onHandleCheckBox","e","index","target","checked","selLabels","indexOf","labels","tempArr","getColumnHeaders","labelColumns","Object","keys","options","columnOptions","selectedLabel","splice","onFilter","filters","hierarchy1","selectedHierarchy1","hierarchy2","selectedHierarchy2","hierarchy3","selectedHierarchy3","hierarchy4","selectedHierarchy4","hierarchy5","selectedHierarchy5","hierarchy6","selectedHierarchy6","hierarchy7","selectedHierarchy7","hierarchy8","selectedHierarchy8","tiers","selectedStores","startDate","format","endDate","getMarkdowns","attributes","firstCardText","firstCardFirstValue","firstCardSecondValue","secondCardFirstValue","secondCardSecondValue","thirdCardFirstValue","thirdCardSecondValue","fourthCardFirstValue","fourthCardSecondValue","cardWeekText","cardMonthText","selectedItems","setMarkDowns","setMDColumnHeaders","cols","groupByBoundary","rows","mdPlan","values","md_plan","mainGrp","isSelected","checkboxDisabled","canExpand","getToggleRowSelectedProps","finalizeMarkdownData","showAlertWarning","showAlertSuccess","message","marginTop","type","isMandatory","isMultiple","padding","updateMyData","style","backgroundColor","margin","borderRadius","mapStateToProps","store","draftStatusReducer","markdowns","columnHeaders","getMetricOptions","finalizeReducer","metricOptions","filtersReducer","mapActionToProps","ColSelBtn","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Filters from '../../services/filters';\nimport './finalizeMarkdownStyle.css';\nimport styled from 'styled-components';\nimport NoData from '../noTableData';\nimport FinalizeAction from '../../actions/draftStausFinalizeAction';\nimport Coldef from './coldef';\nimport {\n  toPercentage,\n  toPercentageWithDecimalDraft,\n  toDollarWithlDraft,\n  toUnitDraft,\n  toFixedToTwoDraft,\n} from '../../helper/formatter';\nimport _ from 'lodash';\nimport cloneDeep from 'clone-deep';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport AlertWarning from '../../utils/AlertMessage/alertDanger';\nimport AlertSuccess from '../../utils/AlertMessage/alertSuccess';\nimport CardComponent from '../../services/cardComponent/cardComponent';\nimport moment from 'moment';\nimport card1Image from '../../images/card1Image.png';\nimport card2Image from '../../images/card2Image.png';\nimport card3Image from '../../images/card3Image.png';\nimport card4Image from '../../images/card4Image.png';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox';\nfunction FormatterStyling(props, value, val) {\n  console.log(val, 'formval');\n  console.log(props.row.original.margin$, 'anaajajaj');\n\n  if (value == 'aum') {\n    return toUnitDraft(props);\n  } else if (\n    value == 'revenue$' ||\n    value == 'aur' ||\n    value == 'margin$' ||\n    value == 'markdown_units'\n  ) {\n    return toDollarWithlDraft(props);\n  } else if (\n    value == 'overall_revenue$' ||\n    value == 'overall_aur' ||\n    value == 'overall_aum' ||\n    value == 'overall_planned_units' ||\n    value == 'overall_pvh_units' ||\n    value == 'overall_margin$' ||\n    value == 'overall_markdown_units'\n  ) {\n    return <span>{val ? parseInt(val).toLocaleString('en') : '-'}</span>;\n  }\n}\nclass FinalizeMarkdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      attributes: ['Margin', 'Sales', 'Inventory'],\n      firstCardText: 'KPIs to be decided',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month',\n      selectedItems: [],\n      columnOptions: [],\n      selLabels: [],\n      columns: [],\n      selectedRows: [],\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.setMarkDowns([]);\n    this.props.setMDColumnHeaders({});\n  }\n\n  findStatusColor = (status, color) => {\n    switch (status) {\n      case 'high':\n        return color.high;\n      case 'medium':\n        return color.medium;\n      case 'low':\n        return color.low;\n      default:\n        break;\n    }\n  };\n\n  bgmCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let bgCol = {\n      high: '#F8E8E8',\n      medium: '#FCF3D1',\n      low: '#E8F8F5',\n    };\n    return this.findStatusColor(status, bgCol);\n  };\n  txtCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let txtCol = {\n      high: '#D38485',\n      medium: '#F0C53A',\n      low: '#66CFBA',\n    };\n    return this.findStatusColor(status, txtCol);\n  };\n  sendForReject = () => {\n    let payload = {\n      markdown_data: this.state.selectedRows.map((item) => {\n        return {\n          id: item.markdown_id,\n        };\n      }),\n      update_status: 'rejected',\n    };\n    console.log(payload, 'sendForReject');\n    this.props.sendForApproval(payload);\n  };\n  sendForApprove = () => {\n    let payload = {\n      markdown_data: this.state.selectedRows.map((item) => {\n        return {\n          id: item.markdown_id,\n          // scenario: item.scenario,\n        };\n      }),\n      update_status: 'approved',\n    };\n\n    console.log(payload, 'sendForApprove');\n    this.props.sendForApproval(payload);\n  };\n  onActionSelection = (rowData) => {\n    let { selectedRows } = this.state;\n    let foundEle = _.find(selectedRows, { markdown_id: rowData.original.markdown_id });\n    if (foundEle) {\n      _.remove(selectedRows, (item) => item.markdown_id === rowData.original.markdown_id);\n    } else {\n      selectedRows.push(rowData.original);\n    }\n    console.log(selectedRows, 'onActionSelection', rowData);\n\n    this.setState({\n      selectedRows,\n    });\n  };\n  componentDidMount() {\n    this.props.getMarkdowns({ status: 'pending' });\n    let cols = Coldef();\n    cols.push({\n      id: 'selection',\n      groupByBoundary: true,\n      Header: 'Actions',\n      Cell: (props) => {\n        let { row, rows } = props;\n        let mdPlan = row.values.md_plan,\n          mainGrp = _.find(rows, { isSelected: true, values: { md_plan: mdPlan } }),\n          checkboxDisabled = mainGrp && !row.isSelected ? true : false;\n\n        return row.canExpand && row.original.checked_for_approval ? (\n          <div>\n            <IndeterminateCheckbox\n              row={row.id}\n              onClick={() => {\n                this.onActionSelection(row);\n              }}\n              disabled={checkboxDisabled}\n              {...row.getToggleRowSelectedProps()}\n            />\n          </div>\n        ) : null;\n      },\n    });\n\n    this.setState({\n      columns: cols,\n    });\n  }\n\n  onScenarioSelection = (rowData) => {\n    let { selectedRows } = this.state;\n    let foundEle = _.find(selectedRows, { markdown_id: rowData.original.markdown_id });\n    if (foundEle) {\n      _.remove(selectedRows, (item) => item.markdown_id === rowData.original.markdown_id);\n    } else {\n      selectedRows.push(rowData.original);\n    }\n    console.log(selectedRows, 'asdfmasdf', rowData);\n\n    this.setState({\n      selectedRows,\n    });\n  };\n  onHandleSelect = (selOptions) => {\n    console.log('option:', selOptions);\n    let headers = cloneDeep(this.state.columns);\n    _.remove(headers, (item) => item.metric);\n    console.log(headers, 'selheader');\n    selOptions.forEach((item) => {\n      console.log(item, 'itemitemitemitemd');\n      let newTableCols = headers.filter((a) => {\n        return a.accessor === item.value;\n      });\n      console.log(newTableCols, 'neww');\n      if (newTableCols.length == 0) {\n        headers.push({\n          Header: item.label,\n          accessor: item.value,\n          Aggregated: ({ row }) => {\n            let accessorName = `overall_${item.value}`;\n            let val = row.original[accessorName];\n            let check = row.original.checked_for_approval;\n            return check ? <span>{val ? Math.round(val) : '-'}</span> : null;\n            // return <span>{val ? Math.round(val) : '-'}</span>;\n          },\n\n          Cell: ({ row }) => {\n            let check = row.original.checked_for_approval;\n            return !check ? null : check ? <span>{row.original[item.value]}</span> : '-';\n          },\n          metric: true,\n        });\n      }\n    });\n    console.log(headers, 'headeererererer');\n    this.setState({\n      columns: headers,\n    });\n  };\n  onHandleCheckBox = (e, label, index) => {\n    //adding\n    if (e.target.checked) {\n      if (this.state.selLabels.indexOf(label) === -1) {\n        let labels = [...this.state.selLabels, label];\n        let tempArr = [];\n        labels.forEach((label) => {\n          let columns = this.props.getColumnHeaders[label];\n          let labelColumns = Object.keys(columns);\n          let options = labelColumns.map((label) => {\n            return {\n              label: label,\n              value: columns[label],\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selLabels: labels,\n          columnOptions: tempArr,\n        });\n      }\n    } else {\n      //removing\n      let index = this.state.selLabels.indexOf(label);\n      if (index !== -1) {\n        let selectedLabel = cloneDeep(this.state.selLabels);\n        selectedLabel.splice(index, 1);\n        let tempArr = [];\n        selectedLabel.forEach((label) => {\n          let columns = this.props.getColumnHeaders[label];\n          let labelColumns = Object.keys(columns);\n          let options = labelColumns.map((label) => {\n            return {\n              label: label,\n              value: columns[label],\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selLabels: selectedLabel,\n          columnOptions: tempArr,\n        });\n      }\n    }\n  };\n  onFilter = () => {\n    let payload = {\n      filters: {\n        hierarchy1: this.props.selectedHierarchy1,\n        hierarchy2: this.props.selectedHierarchy2,\n        hierarchy3: this.props.selectedHierarchy3,\n        hierarchy4: this.props.selectedHierarchy4,\n        hierarchy5: this.props.selectedHierarchy5,\n        hierarchy6: this.props.selectedHierarchy6,\n        hierarchy7: this.props.selectedHierarchy7,\n        hierarchy8: this.props.selectedHierarchy8,\n        tiers: this.props.selectedStores,\n      },\n      startDate: moment(this.props.startDate).format('YYYY-MM-DD'),\n      endDate: moment(this.props.endDate).format('YYYY-MM-DD'),\n      status: 'pending',\n    };\n    console.log(payload, 'finalizepayl');\n    this.props.getMarkdowns(payload);\n  };\n  // onFilter = (selectedFilters) => {\n  //   let payload = { ...selectedFilters };\n  //   payload.startDate = moment(payload.startDate).format('MM-DD-YYYY');\n  //   payload.endDate = moment(payload.endDate).format('MM-DD-YYYY');\n  //   payload['week'] = '';\n  //   payload['status'] = 'draft';\n  //   this.props.getMarkDowns(payload).then((resp) => {\n  //     console.log(resp, 'aaaaaaaaaa');\n  //     if (resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n  //       let setDefaultColDef = Coldef().filter((col) =>\n  //         resp.columnHeaders.default.includes(col.Header)\n  //       );\n  //       let setDefaultLabel = [];\n  //       let setDefaultColumnOptions = [];\n  //       let setDefaultItems = [];\n  //       let colHeaders = _.cloneDeep(resp.columnHeaders);\n  //       let labels = Object.keys(colHeaders);\n  //       labels.splice(labels.indexOf('fixed'), 1);\n  //       labels.splice(labels.indexOf('default'), 1);\n  //       for (const label of labels) {\n  //         function diff(A = resp.columnHeaders[label], B = resp.columnHeaders.default) {\n  //           return A.filter(function (a) {\n  //             return B.indexOf(a) !== -1;\n  //           });\n  //         }\n\n  //         if (diff().length) {\n  //           setDefaultColumnOptions.push(...resp.columnHeaders[label]);\n  //           setDefaultItems.push(...diff());\n  //           setDefaultLabel.push(label);\n  //         }\n  //       }\n  //       let options = setDefaultColumnOptions.map((label) => {\n  //         return {\n  //           label: label,\n  //           value: label,\n  //         };\n  //       });\n  //       let selectedItems = setDefaultItems.map((label) => {\n  //         return {\n  //           label: label,\n  //           value: label,\n  //         };\n  //       });\n  //       this.setState({\n  //         columns: setDefaultColDef,\n  //         selLabels: setDefaultLabel,\n  //         selectedItems: selectedItems,\n  //         columnOptions: options,\n  //       });\n  //     }\n  //   });\n  // };\n\n  render() {\n    console.log(this.props.finalizeMarkdownData, 'finalizeMarkdownData');\n    return (\n      <div className=\"createMd pl-2 pr-2\">\n        <div className=\"alertDivs\">\n          {this.state.showAlertWarning ? (\n            <AlertWarning\n              message=\"Markdown Finalization Failed!\"\n              show={this.state.showAlertWarning}\n            />\n          ) : null}\n          {this.state.showAlertSuccess ? (\n            <AlertSuccess\n              message={'Markdown(s) are ' + this.state.message}\n              show={this.state.showAlertSuccess}\n            />\n          ) : null}\n        </div>\n        <div className=\"card CalendarMain promoCalendarDiv1 mt-3\">\n          <div>\n            <h4 className=\"font-size-14  pad-10 markdown-heading\">\n              Markdown Optimization /<span className=\"font-bold color-blue\">Finalize</span>\n            </h4>\n          </div>\n          <hr\n            className=\"mb-2\"\n            style={{\n              marginTop: '-4px',\n            }}\n          />\n          <div className=\"filterCol mb-4\">\n            <Filters\n              onFilter={this.onFilter}\n              stores\n              dateRange\n              hierarchy={[\n                {\n                  type: 'hierarchy1',\n                  isMandatory: true,\n                  isMultiple: false,\n                },\n                {\n                  type: 'hierarchy2',\n                  isMandatory: true,\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy3',\n                  isMandatory: true,\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy4',\n                  isMandatory: true,\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy5',\n                  isMandatory: true,\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy6',\n                  isMandatory: false,\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy7',\n                  isMandatory: false,\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy8',\n                  isMandatory: false,\n                  isMultiple: true,\n                },\n              ]}\n            />\n          </div>\n        </div>\n        {/* <div className=\"row\" style={{ marginTop: '15px' }}>\n          <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n            <CardComponent\n              cardImage={card1Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.firstCardFirstValue}\n              cardValueSecond={this.state.firstCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border1',\n                cardValue: 'card1-value',\n                cardImg: 'card1-img',\n                cardValueSecond: 'card-value-second',\n                cardSubHeading: 'card-subHeading',\n              }}\n            />\n          </div>\n          <div className=\"col-md-3 col-sm-3 col-xs-6\">\n            <CardComponent\n              cardImage={card2Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.secondCardFirstValue}\n              cardValueSecond={this.state.secondCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border2',\n                cardValue: 'card1-value',\n                cardImg: 'card2-img',\n                cardValueSecond: 'card-value-second',\n                cardSubHeading: 'card-subHeading',\n              }}\n            />\n          </div>\n          <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n            <CardComponent\n              cardImage={card3Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.thirdCardFirstValue}\n              cardValueSecond={this.state.thirdCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border3',\n                cardValue: 'card1-value',\n                cardImg: 'card3-img',\n                cardValueSecond: 'card-value-second',\n                cardSubHeading: 'card-subHeading',\n              }}\n            />\n          </div>\n          <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n            <CardComponent\n              cardImage={card4Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.fourthCardFirstValue}\n              cardValueSecond={this.state.fourthCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border4',\n                cardValue: 'card1-value',\n                cardImg: 'card4-img',\n              }}\n            />\n          </div>\n        </div> */}\n        {this.props.finalizeMarkdownData && this.props.finalizeMarkdownData.length ? (\n          <div className=\"card pl-3 pr-3 mt-3\">\n            <ColSelBtn>\n              {this.props.getColumnHeaders && Object.keys(this.props.getColumnHeaders).length && (\n                <ColumnSelection\n                  onHandleCheckBox={this.onHandleCheckBox}\n                  columnHeaders={this.props.getColumnHeaders}\n                  onHandleSelect={this.onHandleSelect}\n                  columnOptions={this.state.columnOptions}\n                  selectedItems={this.state.selectedItems}\n                  selLabels={this.state.selLabels}\n                />\n              )}\n              <div style={{ padding: '1rem' }}>\n                <button className=\"btn btn-primary\" onClick={this.sendForApprove}>\n                  Approve\n                </button>\n                &nbsp;\n                <button className=\"btn btn-primary  btn-filter-reset\" onClick={this.sendForReject}>\n                  Reject\n                </button>\n              </div>\n            </ColSelBtn>\n            <DataTable\n              columns={this.state.columns}\n              isSort={true}\n              // isColumnFilter={true}\n              data={this.props.finalizeMarkdownData}\n              updateMyData={this.updateMyData}\n              // visibleColumns=\"markDownDrafts\"\n              isPagination={true}\n              getColumnProps={(column) => ({\n                // onClick: () => this.onColumnClick(column),\n              })}\n              getCellProps={(cellInfo) => ({\n                style: {\n                  backgroundColor: this.bgmCol(cellInfo),\n                  color: this.txtCol(cellInfo),\n                  // textAlign: \"center\",\n                  margin: '4px 4px',\n                  borderRadius: '2px',\n                },\n              })}\n            />\n          </div>\n        ) : (\n          <NoData description=\"Please select filters to show Markdown plans.\" />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  console.log(store, 'storestore');\n  console.log(store.draftStatusReducer.markdowns, 'markdownsstore');\n  return {\n    finalizeMarkdownData: store.draftStatusReducer.markdowns,\n    getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    getMetricOptions: store.finalizeReducer.metricOptions,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    selectedStores: store.filtersReducer.selectedStores,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n  };\n};\n\nconst mapActionToProps = {\n  getMarkdowns: FinalizeAction.getMarkdowns,\n  setMarkDowns: FinalizeAction.setMarkDowns,\n  setMDColumnHeaders: FinalizeAction.setMDColumnHeaders,\n  sendForApproval: FinalizeAction.sendForApproval,\n};\nexport default connect(mapStateToProps, mapActionToProps)(withRouter(FinalizeMarkdown));\n\nconst ColSelBtn = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n"]},"metadata":{},"sourceType":"module"}