{"ast":null,"code":"import axios from '../utils/axios';\nimport { config } from '../utils/config';\nvar summaryAction = {\n  onResetSummaryTable: function onResetSummaryTable() {\n    return function (dispatch) {\n      dispatch({\n        type: 'RESET_SUMMARY'\n      });\n    };\n  },\n  getSummaryDetails: function getSummaryDetails(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/summaryDetail/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        var detailed_data = resp.data.data.detailed_data;\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        dispatch({\n          type: 'SET_DETAILED_SUMMARY',\n          payload: detailed_data\n        });\n        return resp.data.data;\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  getSummaryAggregated: function getSummaryAggregated(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/summaryAgg/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        console.log(resp.data.data, 'resp');\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        dispatch({\n          type: 'SET_AGGREGATED_SUMMARY',\n          payload: resp.data.data,\n          pageNum: reqObj.page_num\n        });\n        return resp.data.data;\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  getKPIdata: function getKPIdata(payload) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/summaryKPI/\"),\n        method: 'POST',\n        data: payload\n      }).then(function (resp) {\n        var data = resp.data.data;\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        dispatch({\n          type: 'SET_KPI_DATA',\n          value: data\n        });\n        return data;\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  }\n};\nexport default summaryAction;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/summaryAction.js"],"names":["axios","config","summaryAction","onResetSummaryTable","dispatch","type","getSummaryDetails","reqObj","payload","status","url","createMarkdownURL","method","data","then","resp","detailed_data","catch","err","getSummaryAggregated","console","log","pageNum","page_num","getKPIdata","value"],"mappings":"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","sourcesContent":["import axios from '../utils/axios';\nimport { config } from '../utils/config';\n\nconst summaryAction = {\n  onResetSummaryTable: () => {\n    return (dispatch) => {\n      dispatch({\n        type: 'RESET_SUMMARY',\n      });\n    };\n  },\n  getSummaryDetails: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/summaryDetail/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          const { detailed_data } = resp.data.data;\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          dispatch({\n            type: 'SET_DETAILED_SUMMARY',\n            payload: detailed_data,\n          });\n          return resp.data.data;\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n\n  getSummaryAggregated: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/summaryAgg/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          console.log(resp.data.data, 'resp');\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          dispatch({\n            type: 'SET_AGGREGATED_SUMMARY',\n            payload: resp.data.data,\n            pageNum: reqObj.page_num,\n          });\n          return resp.data.data;\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n  getKPIdata: (payload) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/summaryKPI/`,\n        method: 'POST',\n        data: payload,\n      })\n        .then((resp) => {\n          const { data } = resp.data;\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          dispatch({\n            type: 'SET_KPI_DATA',\n            value: data,\n          });\n          return data;\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n};\n\nexport default summaryAction;\n"]},"metadata":{},"sourceType":"module"}