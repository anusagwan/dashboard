{"ast":null,"code":"import _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/Markdown/components/MarkdownAnalysis/index.js\";\nimport React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport AnalysisTable from \"../MarkdownAnalysis/AnalysisTable\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport LineChart from \"../../../components/support/Charts/LineChart\";\nimport \"./index.css\";\nvar options2 = {\n  plugins: {\n    datalabels: {\n      display: false\n    }\n  },\n  legend: {\n    display: false,\n    position: \"bottom\",\n    labels: {\n      boxWidth: 12\n    },\n    fontFamily: \"Helvetica\",\n    fontSize: \"12px\"\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [{\n      gridLines: {\n        display: true\n      },\n      ticks: {\n        fontSize: 13\n      },\n      scaleLabel: {\n        show: true,\n        display: true,\n        fontSize: 14,\n        fontStyle: \"bold\",\n        fontColor: \"#000\",\n        labelString: \"Margin %\"\n      }\n    }],\n    xAxes: [{\n      id: \"x-axis-0\",\n      gridLines: {\n        // color: '#aeaeae5e',\n        display: false\n      },\n      ticks: {\n        autoSkip: true,\n        autoSkipPadding: 40,\n        maxRotation: 0\n      },\n      scaleLabel: {\n        display: true,\n        // labelString: \"Time (week)\",\n        fontWeight: 900,\n        fontStyle: \"bold\"\n      }\n    }]\n  }\n};\nvar options = {\n  plugins: {\n    datalabels: {\n      display: false\n    }\n  },\n  legend: {\n    display: false,\n    position: \"bottom\",\n    labels: {\n      boxWidth: 12\n    },\n    fontFamily: \"Helvetica\",\n    fontSize: \"12px\"\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [{\n      gridLines: {\n        display: true\n      },\n      ticks: {\n        fontSize: 13\n      },\n      scaleLabel: {\n        show: true,\n        display: true,\n        fontSize: 14,\n        fontStyle: \"bold\",\n        fontColor: \"#000\",\n        labelString: \"Sell Through %\"\n      }\n    }],\n    xAxes: [{\n      id: \"x-axis-0\",\n      gridLines: {\n        // color: '#aeaeae5e',\n        display: false\n      },\n      ticks: {\n        autoSkip: true,\n        autoSkipPadding: 40,\n        maxRotation: 0\n      },\n      scaleLabel: {\n        display: true,\n        // labelString: \"Time (week)\",\n        fontWeight: 900,\n        fontStyle: \"bold\"\n      }\n    }]\n  }\n};\n\nvar MarkdownAnalysis =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MarkdownAnalysis, _Component);\n\n  function MarkdownAnalysis(props) {\n    var _this;\n\n    _classCallCheck(this, MarkdownAnalysis);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MarkdownAnalysis).call(this, props));\n    _this.state = {\n      selectedSku: {\n        label: null,\n        value: null\n      }\n    };\n    return _this;\n  }\n\n  _createClass(MarkdownAnalysis, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var borderColors = [\"#7b8ec9\", \"#c099b7\", \"#e5ce6b\"];\n      var backgroundColors = [\"#eaecf6\", \"#f1e8ef\", \"#faf4de\"]; // const { selectedCadenceSet } = this.props;\n\n      var legendPercentages = _toConsumableArray(new Set(this.props.markdownAnalysisGraphData.sampleData.overall.weekly_markdown));\n\n      console.log(legendPercentages, \"legendPercentages\");\n      var datasets = legendPercentages.map(function () {\n        return [];\n      });\n      console.log(datasets, \"datatst\");\n      this.props.markdownAnalysisGraphData.sampleData.overall.weekly_markdown.forEach(function (markdown, index) {\n        if (datasets[legendPercentages.indexOf(markdown)].length == 0 && index !== 0) {\n          datasets[legendPercentages.indexOf(markdown)] = _toConsumableArray(datasets[legendPercentages.indexOf(markdown) - 1]);\n        }\n\n        datasets[legendPercentages.indexOf(markdown)].push(_this2.props.markdownAnalysisGraphData.sampleData.overall.weekly_revenue_new[index]);\n      });\n      var labels = this.props.markdownAnalysisGraphData.sampleData.overall.start_weeks.map(function (date) {\n        return moment(date).format(\"MMM DD\");\n      });\n      var lineChartData = {\n        labels: labels,\n        datasets: datasets.map(function (item, index) {\n          return console.log(data, \"data\");\n        }) // datasets: datasets.map((item, index) =>  ({\n        //   data: item,\n        //   borderColor: borderColors[index],\n        //   backgroundColor: backgroundColors[index],\n        // })),\n\n      };\n      legendPercentages = legendPercentages.map(function (percentage) {\n        return \"\".concat((Number(percentage) * 100).toFixed(2), \"%\");\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row skuLabelStyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"skuLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"SKU\"), React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Select, {\n        name: \"category\",\n        value: this.state.selectedSku,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8\",\n        style: {\n          paddingLeft: \"4rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"sellThroughLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Sell Through %\"), React.createElement(\"div\", {\n        className: \"chartContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row j-c-c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, legendPercentages.map(function (percentage, index) {\n        return React.createElement(\"div\", {\n          className: \"col-md-3 d-flex\",\n          key: \"\".concat(Math.random() + index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"colorBox\",\n          style: {\n            backgroundColor: backgroundColors[index]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"left-space\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, percentage));\n      }))), React.createElement(LineChart, {\n        data: lineChartData,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"sellThroughLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Margin %\"), React.createElement(\"div\", {\n        className: \"chartContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row j-c-c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, legendPercentages.map(function (percentage, index) {\n        return React.createElement(\"div\", {\n          className: \"col-md-3 d-flex\",\n          key: \"\".concat(Math.random() + index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"colorBox\",\n          style: {\n            backgroundColor: backgroundColors[index]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"left-space\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, percentage));\n      }))), React.createElement(LineChart, {\n        data: lineChartData,\n        options: options2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        style: {\n          paddingTop: \"4rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(AnalysisTable, {\n        tableData: this.props.analysisTabledata,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return MarkdownAnalysis;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    markdownAnalysisGraphData: state.markdownAnalysisData.markdownAnalysisGraphData,\n    analysisTabledata: state.markdownAnalysisData.analysisTabledata //   state.markdownAnalysisLineGraphData.markdownAnalysisGraphData,\n\n  };\n};\n\nexport default connect(mapStateToProps)(MarkdownAnalysis);","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/Markdown/components/MarkdownAnalysis/index.js"],"names":["React","Component","Select","AnalysisTable","moment","connect","LineChart","options2","plugins","datalabels","display","legend","position","labels","boxWidth","fontFamily","fontSize","maintainAspectRatio","scales","yAxes","gridLines","ticks","scaleLabel","show","fontStyle","fontColor","labelString","xAxes","id","autoSkip","autoSkipPadding","maxRotation","fontWeight","options","MarkdownAnalysis","props","state","selectedSku","label","value","borderColors","backgroundColors","legendPercentages","Set","markdownAnalysisGraphData","sampleData","overall","weekly_markdown","console","log","datasets","map","forEach","markdown","index","indexOf","length","push","weekly_revenue_new","start_weeks","date","format","lineChartData","item","data","percentage","Number","toFixed","paddingLeft","Math","random","backgroundColor","paddingTop","analysisTabledata","mapStateToProps","markdownAnalysisData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport AnalysisTable from \"../MarkdownAnalysis/AnalysisTable\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport LineChart from \"../../../components/support/Charts/LineChart\";\nimport \"./index.css\";\n\nconst options2 = {\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  legend: {\n    display: false,\n    position: \"bottom\",\n    labels: {\n      boxWidth: 12,\n    },\n    fontFamily: \"Helvetica\",\n    fontSize: \"12px\",\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n        },\n        ticks: {\n          fontSize: 13,\n        },\n        scaleLabel: {\n          show: true,\n          display: true,\n          fontSize: 14,\n          fontStyle: \"bold\",\n          fontColor: \"#000\",\n          labelString: \"Margin %\",\n        },\n      },\n    ],\n    xAxes: [\n      {\n        id: \"x-axis-0\",\n        gridLines: {\n          // color: '#aeaeae5e',\n          display: false,\n        },\n        ticks: {\n          autoSkip: true,\n          autoSkipPadding: 40,\n          maxRotation: 0,\n        },\n        scaleLabel: {\n          display: true,\n          // labelString: \"Time (week)\",\n          fontWeight: 900,\n          fontStyle: \"bold\",\n        },\n      },\n    ],\n  },\n};\nconst options = {\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  legend: {\n    display: false,\n    position: \"bottom\",\n    labels: {\n      boxWidth: 12,\n    },\n    fontFamily: \"Helvetica\",\n    fontSize: \"12px\",\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n        },\n        ticks: {\n          fontSize: 13,\n        },\n        scaleLabel: {\n          show: true,\n          display: true,\n          fontSize: 14,\n          fontStyle: \"bold\",\n          fontColor: \"#000\",\n          labelString: \"Sell Through %\",\n        },\n      },\n    ],\n    xAxes: [\n      {\n        id: \"x-axis-0\",\n        gridLines: {\n          // color: '#aeaeae5e',\n          display: false,\n        },\n        ticks: {\n          autoSkip: true,\n          autoSkipPadding: 40,\n          maxRotation: 0,\n        },\n        scaleLabel: {\n          display: true,\n          // labelString: \"Time (week)\",\n          fontWeight: 900,\n          fontStyle: \"bold\",\n        },\n      },\n    ],\n  },\n};\nclass MarkdownAnalysis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedSku: { label: null, value: null },\n    };\n  }\n  render() {\n    const borderColors = [\"#7b8ec9\", \"#c099b7\", \"#e5ce6b\"];\n    const backgroundColors = [\"#eaecf6\", \"#f1e8ef\", \"#faf4de\"];\n    // const { selectedCadenceSet } = this.props;\n    let legendPercentages = [\n      ...new Set(\n        this.props.markdownAnalysisGraphData.sampleData.overall.weekly_markdown\n      ),\n    ];\n    console.log(legendPercentages,\"legendPercentages\")\n\n    const datasets = legendPercentages.map(() => []);\n    console.log(datasets,\"datatst\")\n    this.props.markdownAnalysisGraphData.sampleData.overall.weekly_markdown.forEach(\n      (markdown, index) => {\n        if (\n          datasets[legendPercentages.indexOf(markdown)].length == 0 &&\n          index !== 0\n        ) {\n          datasets[legendPercentages.indexOf(markdown)] = [\n            ...datasets[legendPercentages.indexOf(markdown) - 1],\n          ];\n        }\n        datasets[legendPercentages.indexOf(markdown)].push(\n          this.props.markdownAnalysisGraphData.sampleData.overall\n            .weekly_revenue_new[index]\n        );\n      }\n    );\n\n    const labels = this.props.markdownAnalysisGraphData.sampleData.overall.start_weeks.map(\n      (date) => moment(date).format(\"MMM DD\")\n    );\n    let lineChartData = {\n      labels: labels,\n        datasets: datasets.map((item,index) => console.log(data,\"data\")   )\n      // datasets: datasets.map((item, index) =>  ({\n      //   data: item,\n      //   borderColor: borderColors[index],\n      //   backgroundColor: backgroundColors[index],\n      // })),\n    };\n\n    legendPercentages = legendPercentages.map(\n      (percentage) => `${(Number(percentage) * 100).toFixed(2)}%`\n    );\n    return (\n      <div>\n        <div className=\"mb-4\">\n          <div className=\"row skuLabelStyle\">\n            <label className=\"skuLabel\">SKU</label>\n            <div className=\"col-md-2\">\n              <Select name=\"category\" value={this.state.selectedSku} />\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-8\" style={{ paddingLeft: \"4rem\" }}>\n              <label className=\"sellThroughLabel\">Sell Through %</label>\n              <div className=\"chartContainer\">\n                <div className=\"row j-c-c\">\n                  {legendPercentages.map((percentage, index) => (\n                    <div\n                      className=\"col-md-3 d-flex\"\n                      key={`${Math.random() + index}`}\n                    >\n                      <p\n                        className=\"colorBox\"\n                        style={{ backgroundColor: backgroundColors[index] }}\n                      />\n                      <span className=\"left-space\">{percentage}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <LineChart data={lineChartData} options={options} />\n              <label className=\"sellThroughLabel\">Margin %</label>\n              <div className=\"chartContainer\">\n                <div className=\"row j-c-c\">\n                  {legendPercentages.map((percentage, index) => (\n                    <div\n                      className=\"col-md-3 d-flex\"\n                      key={`${Math.random() + index}`}\n                    >\n                      <p\n                        className=\"colorBox\"\n                        style={{ backgroundColor: backgroundColors[index] }}\n                      />\n                      <span className=\"left-space\">{percentage}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <LineChart data={lineChartData} options={options2} />\n            </div>\n            <div className=\"col-md-4\" style={{ paddingTop: \"4rem\" }}>\n              <AnalysisTable tableData={this.props.analysisTabledata} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    markdownAnalysisGraphData:\n      state.markdownAnalysisData.markdownAnalysisGraphData,\n    analysisTabledata: state.markdownAnalysisData.analysisTabledata,\n    //   state.markdownAnalysisLineGraphData.markdownAnalysisGraphData,\n  };\n};\nexport default connect(mapStateToProps)(MarkdownAnalysis);\n"]},"metadata":{},"sourceType":"module"}