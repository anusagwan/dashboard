{"ast":null,"code":"import moment from 'moment';\nimport numeral from 'numeral';\nvar ranges = [{\n  divider: 1e9,\n  suffix: 'B'\n}, {\n  divider: 1e6,\n  suffix: 'M'\n}, {\n  divider: 1e3,\n  suffix: 'k'\n}];\nexport function formatThousands(n) {\n  for (var i = 0; i < ranges.length; i++) {\n    if (n >= ranges[i].divider) {\n      var newNumber = (n / ranges[i].divider).toFixed(2);\n      var roundOffNumber = Math.abs(newNumber);\n      return roundOffNumber.toString() + ranges[i].suffix;\n    }\n  }\n\n  return n;\n}\nexport var dateFormatter = function dateFormatter(params) {\n  return moment(params.value).format('MM-DD-YYYY');\n};\nexport var toPercentage = function toPercentage(params) {\n  return params.value || params.value == 0 ? numeral(params.value / 100).format('0%') : '-';\n};\nexport var toPercentageWithDecimal = function toPercentageWithDecimal(params) {\n  return numeral(params.value / 100).format('0.00%');\n};\nexport var toFixedToTwo = function toFixedToTwo(params) {\n  return numeral(params.value / 100).format('0.00');\n};\nexport var toDollar = function toDollar(params) {\n  return numeral(params.value).format('($0,00)');\n};\nexport var toDollarWithDecimal = function toDollarWithDecimal(params) {\n  return numeral(params.value).format('$0.00');\n};\nexport var toUnit = function toUnit(params) {\n  return numeral(params.value).format('0,0');\n};\nexport var decimalFormatter = function decimalFormatter(params) {\n  if (params.value) {\n    return numeral(params.value).format('0.00');\n  } else {\n    return '-';\n  }\n};\nexport var toDollarWithlDraft = function toDollarWithlDraft(params) {\n  if (params.value || params.value == 0) {\n    return numeral(params.value).format('($0,00)');\n  } else {\n    return '-';\n  }\n};\nexport var toPercentageWithDecimalDraft = function toPercentageWithDecimalDraft(params) {\n  if (params.value) {\n    return numeral(params.value / 100).format('0.00%');\n  } else {\n    return '-';\n  }\n};\nexport var toUnitDraft = function toUnitDraft(params) {\n  if (params.value || params.value == 0) {\n    return numeral(params.value).format('0,0');\n  } else {\n    return '-';\n  }\n};\nexport var toFixedToTwoDraft = function toFixedToTwoDraft(params) {\n  if (params.value) {\n    return numeral(params.value / 100).format('0.00');\n  } else {\n    return '-';\n  }\n};\nexport var currencyFormat = function currencyFormat(params) {\n  console.log('$' + params.value || '$' + params.value == 0 ? '$' + params.value : '-');\n  return '$' + params.value || params.value == 0 ? params.value : '-';\n};","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/helper/formatter.js"],"names":["moment","numeral","ranges","divider","suffix","formatThousands","n","i","length","newNumber","toFixed","roundOffNumber","Math","abs","toString","dateFormatter","params","value","format","toPercentage","toPercentageWithDecimal","toFixedToTwo","toDollar","toDollarWithDecimal","toUnit","decimalFormatter","toDollarWithlDraft","toPercentageWithDecimalDraft","toUnitDraft","toFixedToTwoDraft","currencyFormat","console","log"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport numeral from 'numeral';\n\nconst ranges = [\n  { divider: 1e9, suffix: 'B' },\n  { divider: 1e6, suffix: 'M' },\n  { divider: 1e3, suffix: 'k' },\n];\nexport function formatThousands(n) {\n  for (var i = 0; i < ranges.length; i++) {\n    if (n >= ranges[i].divider) {\n      let newNumber = (n / ranges[i].divider).toFixed(2);\n      let roundOffNumber = Math.abs(newNumber);\n      return roundOffNumber.toString() + ranges[i].suffix;\n    }\n  }\n  return n;\n}\nexport var dateFormatter = function (params) {\n  return moment(params.value).format('MM-DD-YYYY');\n};\nexport var toPercentage = function (params) {\n  return params.value || params.value == 0 ? numeral(params.value / 100).format('0%') : '-';\n};\nexport var toPercentageWithDecimal = function (params) {\n  return numeral(params.value / 100).format('0.00%');\n};\nexport var toFixedToTwo = function (params) {\n  return numeral(params.value / 100).format('0.00');\n};\nexport var toDollar = function (params) {\n  return numeral(params.value).format('($0,00)');\n};\nexport var toDollarWithDecimal = function (params) {\n  return numeral(params.value).format('$0.00');\n};\nexport var toUnit = function (params) {\n  return numeral(params.value).format('0,0');\n};\nexport var decimalFormatter = function (params) {\n  if (params.value) {\n    return numeral(params.value).format('0.00');\n  } else {\n    return '-';\n  }\n};\nexport var toDollarWithlDraft = function (params) {\n  if (params.value || params.value == 0) {\n    return numeral(params.value).format('($0,00)');\n  } else {\n    return '-';\n  }\n};\nexport var toPercentageWithDecimalDraft = function (params) {\n  if (params.value) {\n    return numeral(params.value / 100).format('0.00%');\n  } else {\n    return '-';\n  }\n};\nexport var toUnitDraft = function (params) {\n  if (params.value || params.value == 0) {\n    return numeral(params.value).format('0,0');\n  } else {\n    return '-';\n  }\n};\nexport var toFixedToTwoDraft = function (params) {\n  if (params.value) {\n    return numeral(params.value / 100).format('0.00');\n  } else {\n    return '-';\n  }\n};\nexport var currencyFormat = function (params) {\n  console.log('$' + params.value || '$' + params.value == 0 ? '$' + params.value : '-');\n  return '$' + params.value || params.value == 0 ? params.value : '-';\n};\n"]},"metadata":{},"sourceType":"module"}