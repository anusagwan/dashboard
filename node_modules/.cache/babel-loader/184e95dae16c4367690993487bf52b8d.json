{"ast":null,"code":"import _defineProperty from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/draftStatus/draft/coldef.js\";\n\nimport React from 'react';\nimport { toPercentage } from '../../../helper/formatter';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport numeral from 'numeral';\n\nvar colDef = function colDef(props) {\n  var _ref2;\n\n  var colDef = [(_ref2 = {\n    Header: 'MD Plan',\n    accessor: 'md_plan',\n    disableGroupBy: true,\n    enableRowSpan: 'markdown_id',\n    filter: function filter(rows, id, filterType) {\n      return rows.filter(function (row) {\n        return row.original.md_plan ? row.original.md_plan.startsWith(filterType) : null;\n      });\n    },\n    Cell: function Cell(_ref) {\n      var row = _ref.row;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, row.original.md_plan ? row.original.md_plan : null), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: function onClick() {\n          // this.props.updateSidebar('/vis/Markdown/create-markdown');\n          _this.props.history.push({\n            pathname: \"/vis/Markdown/create-markdown\",\n            state: {\n              isEdit: true,\n              planId: row.original.markdown_id\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-pencil color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Edit\")))));\n    },\n    align: 'center'\n  }, _defineProperty(_ref2, \"enableRowSpan\", true), _defineProperty(_ref2, \"downloadValue\", 'plan'), _ref2), // {\n  //   Header: 'MD Plan',\n  //   accessor: 'md_plan',\n  //   disableGroupBy: true,\n  //   // showFilter: true,\n  //   filter: (rows, id, filterType) =>\n  //     rows.filter((row) => {\n  //       return row.original.md_plan ? row.original.md_plan.startsWith(filterType) : null;\n  //     }),\n  //   width: 50,\n  //   align: 'left',\n  //   enableRowSpan: 'markdown_id',\n  //   Cell: ({ row }) => {\n  //     return row.original.md_plan ? row.original.md_plan : null;\n  //   },\n  // },\n  {\n    Header: 'Scenario',\n    accessor: 'scenario',\n    // showFilter: true,\n    disableGroupBy: true,\n    enableRowSpan: 'markdown_id',\n    width: 50\n  }, {\n    // Build our expander column\n    id: 'expander',\n    // Make sure it has an ID\n    // Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n    //   <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}</span>\n    // ),\n    Header: 'Date Range',\n    width: 15,\n    Cell: function Cell(_ref3) {\n      var row = _ref3.row;\n      // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n      // to build the toggle for expanding a row\n      return row.canExpand ? React.createElement(\"span\", Object.assign({}, row.getToggleRowExpandedProps({\n        style: {\n          // We can even use the row.depth property\n          // and paddingLeft to indicate the depth\n          // of the row\n          paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n        }\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), moment(row.original.start_date).format('YYYY/MM/DD'), \" -\", ' ', moment(row.original.end_date).format('YYYY/MM/DD'), \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n        class: \"fa fa-angle-down expanded-icon-size color-blue\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }) : React.createElement(\"i\", {\n        class: \"fa fa-angle-right expanded-icon-size color-blue\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })) : null;\n    }\n  }, {\n    Header: 'Time Period',\n    accessor: 'week_num',\n    disableGroupBy: false,\n    isGroupBy: false,\n    width: 50,\n    Aggregated: function Aggregated(_ref4) {\n      var value = _ref4.value,\n          row = _ref4.row;\n      return \"weeks (\".concat(row.subRows.length, \")\");\n    }\n  }, {\n    Header: 'Sell through %',\n    accessor: 'sell_through',\n    disableGroupBy: true,\n    width: 50,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    },\n    Aggregated: function Aggregated(row) {\n      var val = parseFloat(row.row.original.overall_sell_through);\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, val ? numeral(val / 100).format('0%') : '-');\n    }\n  }, {\n    Header: 'Markdown %',\n    accessor: 'markdown_perc',\n    disableGroupBy: true,\n    width: 70,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    },\n    aggregate: 'average',\n    Aggregated: function Aggregated(_ref5) {\n      var row = _ref5.row;\n      var val = parseFloat(row.original.overall_markdown_perc);\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, val ? numeral(val / 100).format('0%') : '-');\n    }\n  }, // {\n  //   Header: 'Margin %',\n  //   accessor: 'margin_perc',\n  //   disableGroupBy: true,\n  //   width: 70,\n  //   Cell: (props) => <div> {toPercentage(props)} </div>,\n  //   Aggregated: (row) => {\n  //     let val = row.row.original.overall_margin;\n  //     return <span>{val ? parseFloat(val).toFixed(2) : '-'}</span>;\n  //   },\n  // },\n  {\n    Header: 'Status',\n    accessor: 'status',\n    disableGroupBy: true,\n    // showFilter: true,\n    Cell: StatusCellStyling\n  }];\n  return colDef;\n}; // export default () => {\n//   const colDef = [\n//     {\n//       Header: 'MD Plan',\n//       accessor: 'md_plan',\n//       disableGroupBy: true,\n//       enableRowSpan: 'markdown_id',\n//       filter: (rows, id, filterType) =>\n//         rows.filter((row) => {\n//           return row.original.md_plan ? row.original.md_plan.startsWith(filterType) : null;\n//         }),\n//       Cell: ({ row }) => (\n//         <div>\n//           <span>{row.original.md_plan ? row.original.md_plan : null}</span>\n//           <div>\n//             <button\n//               className=\"btn btn-secondary\"\n//               onClick={() => {\n//                 // this.props.updateSidebar('/vis/Markdown/create-markdown');\n//                 this.props.history.push({\n//                   pathname: `/vis/Markdown/create-markdown`,\n//                   state: { isEdit: true, planId: row.original.promo_id },\n//                 });\n//               }}>\n//               <span>\n//                 <i className=\"fa fa-pencil color-blue\">Edit</i>\n//               </span>\n//             </button>\n//           </div>\n//         </div>\n//       ),\n//       align: 'center',\n//       enableRowSpan: true,\n//       downloadValue: 'plan',\n//     },\n//     // {\n//     //   Header: 'MD Plan',\n//     //   accessor: 'md_plan',\n//     //   disableGroupBy: true,\n//     //   // showFilter: true,\n//     //   filter: (rows, id, filterType) =>\n//     //     rows.filter((row) => {\n//     //       return row.original.md_plan ? row.original.md_plan.startsWith(filterType) : null;\n//     //     }),\n//     //   width: 50,\n//     //   align: 'left',\n//     //   enableRowSpan: 'markdown_id',\n//     //   Cell: ({ row }) => {\n//     //     return row.original.md_plan ? row.original.md_plan : null;\n//     //   },\n//     // },\n//     {\n//       Header: 'Scenario',\n//       accessor: 'scenario',\n//       // showFilter: true,\n//       disableGroupBy: true,\n//       enableRowSpan: 'markdown_id',\n//       width: 50,\n//     },\n//     {\n//       // Build our expander column\n//       id: 'expander', // Make sure it has an ID\n//       // Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n//       //   <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}</span>\n//       // ),\n//       Header: 'Date Range',\n//       width: 15,\n//       Cell: ({ row }) => {\n//         // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n//         // to build the toggle for expanding a row\n//         return row.canExpand ? (\n//           <span\n//             {...row.getToggleRowExpandedProps({\n//               style: {\n//                 // We can even use the row.depth property\n//                 // and paddingLeft to indicate the depth\n//                 // of the row\n//                 paddingLeft: `${row.depth * 2}rem`,\n//               },\n//             })}>\n//             {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n//             {moment(row.original.end_date).format('YYYY/MM/DD')}&nbsp;&nbsp;&nbsp;\n//             {row.isExpanded ? (\n//               <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n//             ) : (\n//               <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n//             )}\n//           </span>\n//         ) : null;\n//       },\n//     },\n//     {\n//       Header: 'Time Period',\n//       accessor: 'week_num',\n//       disableGroupBy: false,\n//       isGroupBy: false,\n//       width: 50,\n//       Aggregated: ({ value, row }) => `weeks (${row.subRows.length})`,\n//     },\n//     {\n//       Header: 'Sell through %',\n//       accessor: 'sell_through',\n//       disableGroupBy: true,\n//       width: 50,\n//       Cell: (props) => <div> {toPercentage(props)} </div>,\n//       Aggregated: (row) => {\n//         let val = parseFloat(row.row.original.overall_sell_through);\n//         return <span>{val ? numeral(val / 100).format('0%') : '-'}</span>;\n//       },\n//     },\n//     {\n//       Header: 'Markdown %',\n//       accessor: 'markdown_perc',\n//       disableGroupBy: true,\n//       width: 70,\n//       Cell: (props) => <div> {toPercentage(props)} </div>,\n//       aggregate: 'average',\n//       Aggregated: ({ row }) => {\n//         let val = parseFloat(row.original.overall_markdown_perc);\n//         return <span>{val ? numeral(val / 100).format('0%') : '-'}</span>;\n//       },\n//     },\n//     // {\n//     //   Header: 'Margin %',\n//     //   accessor: 'margin_perc',\n//     //   disableGroupBy: true,\n//     //   width: 70,\n//     //   Cell: (props) => <div> {toPercentage(props)} </div>,\n//     //   Aggregated: (row) => {\n//     //     let val = row.row.original.overall_margin;\n//     //     return <span>{val ? parseFloat(val).toFixed(2) : '-'}</span>;\n//     //   },\n//     // },\n//     {\n//       Header: 'Status',\n//       accessor: 'status',\n//       disableGroupBy: true,\n//       // showFilter: true,\n//       Cell: StatusCellStyling,\n//     },\n//   ];\n//   return colDef;\n// };\n\n\nexport default colDef;\n\nfunction StatusCellStyling(_ref6) {\n  var value = _ref6.value;\n\n  switch (value) {\n    case 'rejected':\n      return React.createElement(\"span\", {\n        style: {\n          textTransform: 'capitalize'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-ban fa-lg\",\n        \"aria-hidden\": \"true\",\n        style: {\n          color: '#D84039'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }), ' ', value, \" \\xA0 \\xA0\", ' ');\n\n    case 'draft':\n      return React.createElement(\"span\", {\n        style: {\n          textTransform: 'capitalize'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-edit fa-lg\",\n        \"aria-hidden\": \"true\",\n        style: {\n          color: '#44677B'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), ' ', value, \" \\xA0 \\xA0\", ' ');\n\n    case 'pending':\n      return React.createElement(\"span\", {\n        style: {\n          textTransform: 'capitalize'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-exclamation-circle fa-lg\",\n        style: {\n          color: '#E0D337'\n        },\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }), ' ', value);\n\n    case 'approved':\n      return React.createElement(\"span\", {\n        style: {\n          textTransform: 'capitalize'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-check-circle fa-lg\",\n        \"aria-hidden\": \"true\",\n        style: {\n          color: '#59C770'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }), ' ', value);\n\n    default:\n      return '';\n  }\n}","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/draftStatus/draft/coldef.js"],"names":["React","toPercentage","_","moment","numeral","colDef","props","Header","accessor","disableGroupBy","enableRowSpan","filter","rows","id","filterType","row","original","md_plan","startsWith","Cell","history","push","pathname","state","isEdit","planId","markdown_id","align","width","canExpand","getToggleRowExpandedProps","style","paddingLeft","depth","start_date","format","end_date","isExpanded","isGroupBy","Aggregated","value","subRows","length","val","parseFloat","overall_sell_through","aggregate","overall_markdown_perc","StatusCellStyling","textTransform","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { toPercentage } from '../../../helper/formatter';\nimport _ from 'lodash';\n\nimport moment from 'moment';\nimport numeral from 'numeral';\nconst colDef = (props) => {\n  const colDef = [\n    {\n      Header: 'MD Plan',\n      accessor: 'md_plan',\n      disableGroupBy: true,\n      enableRowSpan: 'markdown_id',\n      filter: (rows, id, filterType) =>\n        rows.filter((row) => {\n          return row.original.md_plan ? row.original.md_plan.startsWith(filterType) : null;\n        }),\n      Cell: ({ row }) => (\n        <div>\n          <span>{row.original.md_plan ? row.original.md_plan : null}</span>\n          <div>\n            <button\n              className=\"btn btn-secondary\"\n              onClick={() => {\n                // this.props.updateSidebar('/vis/Markdown/create-markdown');\n                this.props.history.push({\n                  pathname: `/vis/Markdown/create-markdown`,\n                  state: { isEdit: true, planId: row.original.markdown_id },\n                });\n              }}>\n              <span>\n                <i className=\"fa fa-pencil color-blue\">Edit</i>\n              </span>\n            </button>\n          </div>\n        </div>\n      ),\n      align: 'center',\n      enableRowSpan: true,\n      downloadValue: 'plan',\n    },\n    // {\n    //   Header: 'MD Plan',\n    //   accessor: 'md_plan',\n    //   disableGroupBy: true,\n    //   // showFilter: true,\n    //   filter: (rows, id, filterType) =>\n    //     rows.filter((row) => {\n    //       return row.original.md_plan ? row.original.md_plan.startsWith(filterType) : null;\n    //     }),\n    //   width: 50,\n    //   align: 'left',\n    //   enableRowSpan: 'markdown_id',\n    //   Cell: ({ row }) => {\n    //     return row.original.md_plan ? row.original.md_plan : null;\n    //   },\n    // },\n    {\n      Header: 'Scenario',\n      accessor: 'scenario',\n      // showFilter: true,\n      disableGroupBy: true,\n      enableRowSpan: 'markdown_id',\n      width: 50,\n    },\n    {\n      // Build our expander column\n      id: 'expander', // Make sure it has an ID\n      // Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n      //   <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}</span>\n      // ),\n      Header: 'Date Range',\n      width: 15,\n      Cell: ({ row }) => {\n        // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n        // to build the toggle for expanding a row\n\n        return row.canExpand ? (\n          <span\n            {...row.getToggleRowExpandedProps({\n              style: {\n                // We can even use the row.depth property\n                // and paddingLeft to indicate the depth\n                // of the row\n                paddingLeft: `${row.depth * 2}rem`,\n              },\n            })}>\n            {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n            {moment(row.original.end_date).format('YYYY/MM/DD')}&nbsp;&nbsp;&nbsp;\n            {row.isExpanded ? (\n              <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n            ) : (\n              <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n            )}\n          </span>\n        ) : null;\n      },\n    },\n    {\n      Header: 'Time Period',\n      accessor: 'week_num',\n      disableGroupBy: false,\n      isGroupBy: false,\n      width: 50,\n      Aggregated: ({ value, row }) => `weeks (${row.subRows.length})`,\n    },\n    {\n      Header: 'Sell through %',\n      accessor: 'sell_through',\n      disableGroupBy: true,\n      width: 50,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n      Aggregated: (row) => {\n        let val = parseFloat(row.row.original.overall_sell_through);\n        return <span>{val ? numeral(val / 100).format('0%') : '-'}</span>;\n      },\n    },\n    {\n      Header: 'Markdown %',\n      accessor: 'markdown_perc',\n      disableGroupBy: true,\n      width: 70,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n      aggregate: 'average',\n      Aggregated: ({ row }) => {\n        let val = parseFloat(row.original.overall_markdown_perc);\n        return <span>{val ? numeral(val / 100).format('0%') : '-'}</span>;\n      },\n    },\n    // {\n    //   Header: 'Margin %',\n    //   accessor: 'margin_perc',\n    //   disableGroupBy: true,\n    //   width: 70,\n    //   Cell: (props) => <div> {toPercentage(props)} </div>,\n    //   Aggregated: (row) => {\n    //     let val = row.row.original.overall_margin;\n\n    //     return <span>{val ? parseFloat(val).toFixed(2) : '-'}</span>;\n    //   },\n    // },\n    {\n      Header: 'Status',\n      accessor: 'status',\n      disableGroupBy: true,\n      // showFilter: true,\n      Cell: StatusCellStyling,\n    },\n  ];\n  return colDef;\n};\n// export default () => {\n//   const colDef = [\n//     {\n//       Header: 'MD Plan',\n//       accessor: 'md_plan',\n//       disableGroupBy: true,\n//       enableRowSpan: 'markdown_id',\n//       filter: (rows, id, filterType) =>\n//         rows.filter((row) => {\n//           return row.original.md_plan ? row.original.md_plan.startsWith(filterType) : null;\n//         }),\n//       Cell: ({ row }) => (\n//         <div>\n//           <span>{row.original.md_plan ? row.original.md_plan : null}</span>\n//           <div>\n//             <button\n//               className=\"btn btn-secondary\"\n//               onClick={() => {\n//                 // this.props.updateSidebar('/vis/Markdown/create-markdown');\n//                 this.props.history.push({\n//                   pathname: `/vis/Markdown/create-markdown`,\n//                   state: { isEdit: true, planId: row.original.promo_id },\n//                 });\n//               }}>\n//               <span>\n//                 <i className=\"fa fa-pencil color-blue\">Edit</i>\n//               </span>\n//             </button>\n//           </div>\n//         </div>\n//       ),\n//       align: 'center',\n//       enableRowSpan: true,\n//       downloadValue: 'plan',\n//     },\n//     // {\n//     //   Header: 'MD Plan',\n//     //   accessor: 'md_plan',\n//     //   disableGroupBy: true,\n//     //   // showFilter: true,\n//     //   filter: (rows, id, filterType) =>\n//     //     rows.filter((row) => {\n//     //       return row.original.md_plan ? row.original.md_plan.startsWith(filterType) : null;\n//     //     }),\n//     //   width: 50,\n//     //   align: 'left',\n//     //   enableRowSpan: 'markdown_id',\n//     //   Cell: ({ row }) => {\n//     //     return row.original.md_plan ? row.original.md_plan : null;\n//     //   },\n//     // },\n//     {\n//       Header: 'Scenario',\n//       accessor: 'scenario',\n//       // showFilter: true,\n//       disableGroupBy: true,\n//       enableRowSpan: 'markdown_id',\n//       width: 50,\n//     },\n//     {\n//       // Build our expander column\n//       id: 'expander', // Make sure it has an ID\n//       // Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n//       //   <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}</span>\n//       // ),\n//       Header: 'Date Range',\n//       width: 15,\n//       Cell: ({ row }) => {\n//         // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n//         // to build the toggle for expanding a row\n\n//         return row.canExpand ? (\n//           <span\n//             {...row.getToggleRowExpandedProps({\n//               style: {\n//                 // We can even use the row.depth property\n//                 // and paddingLeft to indicate the depth\n//                 // of the row\n//                 paddingLeft: `${row.depth * 2}rem`,\n//               },\n//             })}>\n//             {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n//             {moment(row.original.end_date).format('YYYY/MM/DD')}&nbsp;&nbsp;&nbsp;\n//             {row.isExpanded ? (\n//               <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n//             ) : (\n//               <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n//             )}\n//           </span>\n//         ) : null;\n//       },\n//     },\n//     {\n//       Header: 'Time Period',\n//       accessor: 'week_num',\n//       disableGroupBy: false,\n//       isGroupBy: false,\n//       width: 50,\n//       Aggregated: ({ value, row }) => `weeks (${row.subRows.length})`,\n//     },\n//     {\n//       Header: 'Sell through %',\n//       accessor: 'sell_through',\n//       disableGroupBy: true,\n//       width: 50,\n//       Cell: (props) => <div> {toPercentage(props)} </div>,\n//       Aggregated: (row) => {\n//         let val = parseFloat(row.row.original.overall_sell_through);\n//         return <span>{val ? numeral(val / 100).format('0%') : '-'}</span>;\n//       },\n//     },\n//     {\n//       Header: 'Markdown %',\n//       accessor: 'markdown_perc',\n//       disableGroupBy: true,\n//       width: 70,\n//       Cell: (props) => <div> {toPercentage(props)} </div>,\n//       aggregate: 'average',\n//       Aggregated: ({ row }) => {\n//         let val = parseFloat(row.original.overall_markdown_perc);\n//         return <span>{val ? numeral(val / 100).format('0%') : '-'}</span>;\n//       },\n//     },\n//     // {\n//     //   Header: 'Margin %',\n//     //   accessor: 'margin_perc',\n//     //   disableGroupBy: true,\n//     //   width: 70,\n//     //   Cell: (props) => <div> {toPercentage(props)} </div>,\n//     //   Aggregated: (row) => {\n//     //     let val = row.row.original.overall_margin;\n\n//     //     return <span>{val ? parseFloat(val).toFixed(2) : '-'}</span>;\n//     //   },\n//     // },\n//     {\n//       Header: 'Status',\n//       accessor: 'status',\n//       disableGroupBy: true,\n//       // showFilter: true,\n//       Cell: StatusCellStyling,\n//     },\n//   ];\n//   return colDef;\n// };\nexport default colDef;\nfunction StatusCellStyling({ value }) {\n  switch (value) {\n    case 'rejected':\n      return (\n        <span style={{ textTransform: 'capitalize' }}>\n          <i className=\"fa fa-ban fa-lg\" aria-hidden=\"true\" style={{ color: '#D84039' }}></i>{' '}\n          {value} &nbsp; &nbsp;{' '}\n          {/* <i\n            className=\"fa fa-commenting fa-lg\"\n            aria-hidden=\"true\"\n            style={{ cursor: 'pointer' }}></i> */}\n        </span>\n      );\n    case 'draft':\n      return (\n        <span style={{ textTransform: 'capitalize' }}>\n          <i className=\"fa fa-edit fa-lg\" aria-hidden=\"true\" style={{ color: '#44677B' }}></i>{' '}\n          {value} &nbsp; &nbsp;{' '}\n        </span>\n      );\n    case 'pending':\n      return (\n        <span style={{ textTransform: 'capitalize' }}>\n          <i\n            className=\"fa fa-exclamation-circle fa-lg\"\n            style={{ color: '#E0D337' }}\n            aria-hidden=\"true\"></i>{' '}\n          {value}\n        </span>\n      );\n    case 'approved':\n      return (\n        <span style={{ textTransform: 'capitalize' }}>\n          <i\n            className=\"fa fa-check-circle fa-lg\"\n            aria-hidden=\"true\"\n            style={{ color: '#59C770' }}></i>{' '}\n          {value}\n        </span>\n      );\n\n    default:\n      return '';\n  }\n}\n"]},"metadata":{},"sourceType":"module"}