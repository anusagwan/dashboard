{"ast":null,"code":"import axios from '../utils/axios';\nimport { config } from '../utils/config';\nimport { toast } from 'react-toastify';\nimport _ from 'lodash';\nimport { ErrorMessage } from 'formik';\nvar summaryAction = {\n  onResetSummaryTable: function onResetSummaryTable() {\n    return function (dispatch) {\n      dispatch({\n        type: 'RESET_SUMMARY'\n      });\n    };\n  },\n  getSummaryDetails: function getSummaryDetails(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/summaryDetail/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        var detailed_data = resp.data.data.detailed_data;\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        dispatch({\n          type: 'SET_DETAILED_SUMMARY',\n          payload: detailed_data\n        });\n        return resp.data.data;\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  getSummaryAggregated: function getSummaryAggregated(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/summaryAgg/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        dispatch({\n          type: 'SET_AGGREGATED_SUMMARY',\n          payload: resp.data.data,\n          pageNum: reqObj.page_num\n        });\n        dispatch({\n          type: 'SET_MARKDOWN_DETAILS',\n          payload: resp.data.data.markdown_details\n        });\n        return resp.data.data;\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  getKPIdata: function getKPIdata(payload) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/summaryKPI/\"),\n        method: 'POST',\n        data: payload\n      }).then(function (resp) {\n        var data = resp.data.data;\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        dispatch({\n          type: 'SET_KPI_DATA',\n          value: data\n        });\n        return data;\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  sendResimulateAndSave: function sendResimulateAndSave(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/reSimulateAndSave/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        console.log(resp.data.data, 'resppppp');\n        var data = resp.data.data;\n        var successMessage = null;\n        var errorMessage = null;\n\n        _.map(Object.keys(data), function (promo_code) {\n          var msg = data[promo_code];\n\n          if (msg.status) {\n            successMessage = successMessage ? successMessage + ', ' + msg.message : msg.message; // toast.success(`${msg.message}`, {\n            //   autoClose: 15000,\n            //   hideProgressBar: true,\n            // });\n          } else {\n            errorMessage = errorMessage ? errorMessage + ', ' + promo_code : msg.message + ' ' + promo_code; // toast.error(`${msg.message[0]} for promo code :  ${promo_code}`, {\n            //   autoClose: 15000,\n            //   hideProgressBar: true,\n            // });\n          }\n        });\n\n        successMessage && toast.success(\"\".concat(successMessage), {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        errorMessage && toast.error(\"\".concat(errorMessage), {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return resp;\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return err;\n      });\n    };\n  }\n};\nexport default summaryAction;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/summaryAction.js"],"names":["axios","config","toast","_","ErrorMessage","summaryAction","onResetSummaryTable","dispatch","type","getSummaryDetails","reqObj","payload","status","url","createMarkdownURL","method","data","then","resp","detailed_data","catch","err","getSummaryAggregated","pageNum","page_num","markdown_details","getKPIdata","value","sendResimulateAndSave","console","log","successMessage","errorMessage","map","Object","keys","promo_code","msg","message","success","autoClose","hideProgressBar","error"],"mappings":"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","sourcesContent":["import axios from '../utils/axios';\nimport { config } from '../utils/config';\nimport { toast } from 'react-toastify';\nimport _ from 'lodash';\nimport { ErrorMessage } from 'formik';\n\nconst summaryAction = {\n  onResetSummaryTable: () => {\n    return (dispatch) => {\n      dispatch({\n        type: 'RESET_SUMMARY',\n      });\n    };\n  },\n  getSummaryDetails: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/summaryDetail/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          const { detailed_data } = resp.data.data;\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          dispatch({\n            type: 'SET_DETAILED_SUMMARY',\n            payload: detailed_data,\n          });\n          return resp.data.data;\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n\n  getSummaryAggregated: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/summaryAgg/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          dispatch({\n            type: 'SET_AGGREGATED_SUMMARY',\n            payload: resp.data.data,\n            pageNum: reqObj.page_num,\n          });\n          dispatch({\n            type: 'SET_MARKDOWN_DETAILS',\n            payload: resp.data.data.markdown_details,\n          });\n          return resp.data.data;\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n  getKPIdata: (payload) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/summaryKPI/`,\n        method: 'POST',\n        data: payload,\n      })\n        .then((resp) => {\n          const { data } = resp.data;\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          dispatch({\n            type: 'SET_KPI_DATA',\n            value: data,\n          });\n          return data;\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n  sendResimulateAndSave: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/reSimulateAndSave/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          console.log(resp.data.data, 'resppppp');\n          let data = resp.data.data;\n          let successMessage = null;\n          let errorMessage = null;\n          _.map(Object.keys(data), (promo_code) => {\n            let msg = data[promo_code];\n            if (msg.status) {\n              successMessage = successMessage ? successMessage + ', ' + msg.message : msg.message;\n              // toast.success(`${msg.message}`, {\n              //   autoClose: 15000,\n              //   hideProgressBar: true,\n              // });\n            } else {\n              errorMessage = errorMessage\n                ? errorMessage + ', ' + promo_code\n                : msg.message + ' ' + promo_code;\n              // toast.error(`${msg.message[0]} for promo code :  ${promo_code}`, {\n              //   autoClose: 15000,\n              //   hideProgressBar: true,\n              // });\n            }\n          });\n          successMessage &&\n            toast.success(`${successMessage}`, {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n          errorMessage &&\n            toast.error(`${errorMessage}`, {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return resp;\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return err;\n        });\n    };\n  },\n};\n\nexport default summaryAction;\n"]},"metadata":{},"sourceType":"module"}