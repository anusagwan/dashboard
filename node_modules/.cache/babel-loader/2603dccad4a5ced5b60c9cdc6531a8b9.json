{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Planned Reports/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Filters from '../../services/filters';\nimport DataTable from '../../services/reactTable';\nimport styled from 'styled-components';\nimport plannedReportsAction from '../../actions/plannedReportsAction';\nimport _ from 'lodash';\nimport LoadingOverlay from '../../utils/Loader';\nimport NoData from '../noTableData'; // import card1Image from '../../images/card1Image.png';\n// import card2Image from '../../images/card2Image.png';\n// import card3Image from '../../images/card3Image.png';\n// import card4Image from '../../images/card4Image.png';\n\nimport { toUnit } from '../../helper/formatter';\nimport { toast } from 'react-toastify';\nimport EditMDModal from '../editMDModal';\nimport moment from 'moment';\n\nvar planedReport =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(planedReport, _Component);\n\n  function planedReport(_props) {\n    var _this;\n\n    _classCallCheck(this, planedReport);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(planedReport).call(this, _props));\n\n    _this.onHandleSelect = function (selectValues) {\n      return _this.setState({\n        selectValues: selectValues\n      });\n    };\n\n    _this.validateFilters = function () {\n      return _this.props.selectedHierarchy1 && _this.props.selectedHierarchy2.length && _this.props.startDate && _this.props.endDate;\n    };\n\n    _this.onFilter = function (filtersData) {\n      _this.setState({\n        showTable: true\n      });\n\n      var req = {\n        filters: filtersData.filters,\n        startDate: filtersData.dateRange && filtersData.dateRange.startDate,\n        // endDate: filtersData.dateRange && filtersData.dateRange.endDate,\n        week: filtersData.dateRange && filtersData.dateRange.weeks\n      }; // if (this.props.selectedChannel[0] === 'Web') req.filters['ecom_flag'] = [1];\n      // if (this.props.selectedChannel[0] === 'Outlet') req.filters['retail_flag'] = [1];\n\n      _this.props.fetchPlannedReports(req).then(function (res) {\n        if (_.isEmpty(res)) {\n          _this.setState({\n            textStr: 'No data found. Please try with different filters.'\n          });\n        }\n      });\n    };\n\n    _this.coldef = function () {\n      if (_this.props.getPlannedTableData.length) {\n        var columns = [// {\n        //   Header: 'Plan ID',\n        //   accessor: 'promo_code',\n        //   disableGroupBy: true,\n        //   //   width: 50,\n        //   align: 'left',\n        //   enableRowSpan: true,\n        //   // cells:\n        // },\n        {\n          Header: 'Plan',\n          accessor: 'promo_id',\n          disableGroupBy: true,\n          Cell: function Cell(_ref) {\n            var row = _ref.row;\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 129\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 130\n              },\n              __self: this\n            }, row.original.plan ? row.original.plan : null), React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 131\n              },\n              __self: this\n            }, React.createElement(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: function onClick() {\n                _this.props.updateSidebar('/vis/Markdown/create-markdown');\n\n                _this.props.history.push({\n                  pathname: \"/vis/Markdown/create-markdown\",\n                  state: {\n                    isEdit: true,\n                    planId: row.original.promo_id\n                  }\n                }); // this.setState({ showEditModal: true, selectedPlanDetails: row.original });\n\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 132\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fa fa-pencil color-blue\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 143\n              },\n              __self: this\n            }, \"Edit\")))));\n          },\n          align: 'center',\n          enableRowSpan: true,\n          downloadValue: 'plan'\n        }, {\n          Header: 'Scenario',\n          accessor: function accessor(d) {\n            return d.promo_id + d.promo_id;\n          },\n          disableGroupBy: true,\n          Cell: function Cell(_ref2) {\n            var row = _ref2.row,\n                rows = _ref2.rows;\n            return row.original.scenario ? row.original.scenario : null;\n          },\n          enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n          downloadValue: 'scenario'\n        }, {\n          Header: 'Start Date',\n          // accessor: 'startDate',\n          disableGroupBy: true,\n          accessor: 'promo_code',\n          Cell: function Cell(_ref3) {\n            var row = _ref3.row,\n                rows = _ref3.rows;\n            return row.original.startDate ? row.original.startDate : null;\n          },\n          enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n          downloadValue: 'startDate'\n        }, {\n          Header: 'End Date',\n          accessor: 'promotion_id',\n          disableGroupBy: true,\n          // accessor: 'promo_code',\n          Cell: function Cell(_ref4) {\n            var row = _ref4.row,\n                rows = _ref4.rows;\n            return row.original.endDate ? row.original.endDate : null;\n          },\n          enableRowSpan: true,\n          // enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n          downloadValue: 'endDate'\n        }, {\n          Header: 'Metrics',\n          accessor: 'metrices',\n          disableGroupBy: true,\n          //   width: 50,\n          align: 'left'\n        }]; // Object.keys(this.props.getPlannedTableData[0]).forEach((i) => {\n        //   if (!columns.map((c) => c.accessor).includes(i)) {\n        //     columns.push({\n        //       Header: i,\n        //       accessor: i,\n        //       disableGroupBy: true,\n        //       Cell: (props) => <div> {toUnit(props)} </div>,\n        //     });\n        //   }\n        // });\n        // let finalArr = this.props.weeks.length || arr;\n\n        if (_this.props.fiscalWeek) {\n          _this.props.fiscalWeek && _.map(_this.props.fiscalWeek, function (week) {\n            var value = Object.values(week)[0];\n            var sMonth = moment(value && value.start_of_week_date).format('MMM');\n            var eMonth = moment(value && value.end_of_week_date).format('MMM');\n            var sDay = moment(value && value.start_of_week_date).format('DD');\n            var eDay = moment(value && value.end_of_week_date).format('DD');\n            var header = sMonth + ' ' + sDay + ' - ' + eMonth + ' ' + eDay;\n            if (_.isEmpty(value)) return columns;\n            columns.push({\n              Header: header,\n              accessor: 'w' + value.week_num,\n              disableGroupBy: true,\n              downloadFormatter: toUnit,\n              Cell: function Cell(props) {\n                return React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 223\n                  },\n                  __self: this\n                }, \" \", props.value ? toUnit(props) : '-', \" \");\n              }\n            });\n          });\n        } else {\n          var arr = Object.keys(_this.props.getPlannedTableData[0]).filter(function (tableData) {\n            return tableData.startsWith('w');\n          });\n          arr.forEach(function (week) {\n            columns.push({\n              Header: week,\n              accessor: week,\n              disableGroupBy: true,\n              downloadFormatter: toUnit,\n              Cell: function Cell(props) {\n                return React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 236\n                  },\n                  __self: this\n                }, \" \", props.value ? toUnit(props) : '-', \" \");\n              }\n            });\n          });\n        }\n\n        return columns;\n      } else return [];\n    };\n\n    _this.showEditModalHandler = function (val) {\n      if (!val) document.body.setAttribute('style', '');\n\n      _this.setState({\n        showEditModal: val\n      });\n    };\n\n    _this.state = {\n      textStr: 'Please select filters',\n      showTable: false,\n      filters: [{\n        type: 'hierarchy1',\n        isMandatory: true,\n        isMultiple: false,\n        isHierarchy: true\n      }, {\n        type: 'hierarchy2',\n        isMandatory: true,\n        isMultiple: false,\n        isHierarchy: true\n      }, {\n        type: 'hierarchy3',\n        isMandatory: true,\n        isMultiple: false,\n        isHierarchy: true\n      }, {\n        type: 'hierarchy4',\n        isMandatory: true,\n        isMultiple: false,\n        isHierarchy: true\n      }, {\n        type: 'hierarchy5',\n        isMandatory: true,\n        isMultiple: false,\n        isHierarchy: true\n      }],\n      selectedItems: [],\n      firstCardText: 'Avg Markdown',\n      secondCardText: 'Sell through %',\n      thirdCardText: 'Margin %',\n      fourthCardText: 'Quantity Sold',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month',\n      showEditModal: false,\n      selectedPlanDetails: null\n    };\n    return _this;\n  }\n\n  _createClass(planedReport, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        showTable: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.fiscalWeek, 'fisss');\n      var _this$props = this.props,\n          getPlannedMetricOptions = _this$props.getPlannedMetricOptions,\n          getPlannedTableData = _this$props.getPlannedTableData;\n      return React.createElement(\"div\", {\n        className: \"planned-report pl-2 pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(LoadingOverlay, {\n        loader: this.props.overlayLoaderState,\n        spinner: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"font-size-14  pad-10 markdown-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"MarkSmart /\", React.createElement(\"span\", {\n        className: \"font-bold color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Actual Vs Planned Reports\"))), React.createElement(\"hr\", {\n        className: \"mb-2\",\n        style: {\n          marginTop: '-4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(Filters, {\n        onFilter: this.onFilter,\n        from: \"plannedReports\",\n        onReset: function onReset(e) {\n          _this2.setState({\n            textStr: 'Please select filters to show Markdown plans'\n          });\n\n          _this2.props.onReset(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }))), this.state.showTable && getPlannedTableData.length > 0 ? React.createElement(\"div\", {\n        className: \"card CalendarMain promoCalendarDiv1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(ColSelBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"pad-15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        fileName: \"Actual vs planned report\",\n        showExport: true,\n        columns: this.coldef(),\n        data: getPlannedTableData,\n        isPagination: true,\n        rowsPerPage: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }))) : React.createElement(NoData, {\n        description: this.state.textStr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }), this.state.showEditModal ? React.createElement(EditMDModal, {\n        showEditModalHandler: this.showEditModalHandler,\n        selectedPlanDetails: this.state.selectedPlanDetails,\n        from: \"actualVsPlanned\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }) : null));\n    }\n  }]);\n\n  return planedReport;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    overlayLoaderState: store.loaderReducer.overlayLoaderState,\n    getPlannedTableData: store.plannedReportReducer.plannedReportsTableData,\n    fiscalWeek: store.plannedReportReducer.fiscalWeek,\n    getPlannedMetricOptions: store.plannedReportReducer.metricOptions.draft\n  };\n};\n\nvar mapActionsToProps = {\n  fetchPlannedReports: plannedReportsAction.fetchPlannedReports,\n  onReset: plannedReportsAction.onReset,\n  updateSidebar: plannedReportsAction.updateSidebar\n};\nexport default connect(mapStateToProps, mapActionsToProps)(planedReport); // export default planedReport;\n\nvar ColSelBtn = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Planned Reports/index.js"],"names":["React","Component","connect","Filters","DataTable","styled","plannedReportsAction","_","LoadingOverlay","NoData","toUnit","toast","EditMDModal","moment","planedReport","props","onHandleSelect","selectValues","setState","validateFilters","selectedHierarchy1","selectedHierarchy2","length","startDate","endDate","onFilter","filtersData","showTable","req","filters","dateRange","week","weeks","fetchPlannedReports","then","res","isEmpty","textStr","coldef","getPlannedTableData","columns","Header","accessor","disableGroupBy","Cell","row","original","plan","updateSidebar","history","push","pathname","state","isEdit","planId","promo_id","align","enableRowSpan","downloadValue","d","rows","scenario","fiscalWeek","map","value","Object","values","sMonth","start_of_week_date","format","eMonth","end_of_week_date","sDay","eDay","header","week_num","downloadFormatter","arr","keys","filter","tableData","startsWith","forEach","showEditModalHandler","val","document","body","setAttribute","showEditModal","type","isMandatory","isMultiple","isHierarchy","selectedItems","firstCardText","secondCardText","thirdCardText","fourthCardText","firstCardFirstValue","firstCardSecondValue","secondCardFirstValue","secondCardSecondValue","thirdCardFirstValue","thirdCardSecondValue","fourthCardFirstValue","fourthCardSecondValue","cardWeekText","cardMonthText","selectedPlanDetails","console","log","getPlannedMetricOptions","overlayLoaderState","marginTop","e","onReset","mapStateToProps","store","loaderReducer","plannedReportReducer","plannedReportsTableData","metricOptions","draft","mapActionsToProps","ColSelBtn","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Filters from '../../services/filters';\nimport DataTable from '../../services/reactTable';\nimport styled from 'styled-components';\nimport plannedReportsAction from '../../actions/plannedReportsAction';\nimport _ from 'lodash';\nimport LoadingOverlay from '../../utils/Loader';\nimport NoData from '../noTableData';\n// import card1Image from '../../images/card1Image.png';\n// import card2Image from '../../images/card2Image.png';\n// import card3Image from '../../images/card3Image.png';\n// import card4Image from '../../images/card4Image.png';\nimport { toUnit } from '../../helper/formatter';\nimport { toast } from 'react-toastify';\nimport EditMDModal from '../editMDModal';\nimport moment from 'moment';\n\nclass planedReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textStr: 'Please select filters',\n      showTable: false,\n      filters: [\n        {\n          type: 'hierarchy1',\n          isMandatory: true,\n          isMultiple: false,\n          isHierarchy: true,\n        },\n        {\n          type: 'hierarchy2',\n          isMandatory: true,\n          isMultiple: false,\n          isHierarchy: true,\n        },\n        {\n          type: 'hierarchy3',\n          isMandatory: true,\n          isMultiple: false,\n          isHierarchy: true,\n        },\n        {\n          type: 'hierarchy4',\n          isMandatory: true,\n          isMultiple: false,\n          isHierarchy: true,\n        },\n        {\n          type: 'hierarchy5',\n          isMandatory: true,\n          isMultiple: false,\n          isHierarchy: true,\n        },\n      ],\n\n      selectedItems: [],\n      firstCardText: 'Avg Markdown',\n      secondCardText: 'Sell through %',\n      thirdCardText: 'Margin %',\n      fourthCardText: 'Quantity Sold',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month',\n      showEditModal: false,\n      selectedPlanDetails: null,\n    };\n  }\n  onHandleSelect = (selectValues) => this.setState({ selectValues });\n  validateFilters = () => {\n    return (\n      this.props.selectedHierarchy1 &&\n      this.props.selectedHierarchy2.length &&\n      this.props.startDate &&\n      this.props.endDate\n    );\n  };\n  onFilter = (filtersData) => {\n    this.setState({\n      showTable: true,\n    });\n\n    let req = {\n      filters: filtersData.filters,\n      startDate: filtersData.dateRange && filtersData.dateRange.startDate,\n      // endDate: filtersData.dateRange && filtersData.dateRange.endDate,\n      week: filtersData.dateRange && filtersData.dateRange.weeks,\n    };\n    // if (this.props.selectedChannel[0] === 'Web') req.filters['ecom_flag'] = [1];\n    // if (this.props.selectedChannel[0] === 'Outlet') req.filters['retail_flag'] = [1];\n\n    this.props.fetchPlannedReports(req).then((res) => {\n      if (_.isEmpty(res)) {\n        this.setState({\n          textStr: 'No data found. Please try with different filters.',\n        });\n      }\n    });\n  };\n\n  coldef = () => {\n    if (this.props.getPlannedTableData.length) {\n      let columns = [\n        // {\n        //   Header: 'Plan ID',\n\n        //   accessor: 'promo_code',\n        //   disableGroupBy: true,\n        //   //   width: 50,\n\n        //   align: 'left',\n        //   enableRowSpan: true,\n        //   // cells:\n        // },\n\n        {\n          Header: 'Plan',\n          accessor: 'promo_id',\n          disableGroupBy: true,\n          Cell: ({ row }) => (\n            <div>\n              <span>{row.original.plan ? row.original.plan : null}</span>\n              <div>\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={() => {\n                    this.props.updateSidebar('/vis/Markdown/create-markdown');\n                    this.props.history.push({\n                      pathname: `/vis/Markdown/create-markdown`,\n                      state: { isEdit: true, planId: row.original.promo_id },\n                    });\n                    // this.setState({ showEditModal: true, selectedPlanDetails: row.original });\n                  }}>\n                  <span>\n                    <i className=\"fa fa-pencil color-blue\">Edit</i>\n                  </span>\n                </button>\n              </div>\n            </div>\n          ),\n          align: 'center',\n          enableRowSpan: true,\n          downloadValue: 'plan',\n        },\n        {\n          Header: 'Scenario',\n          accessor: (d) => d.promo_id + d.promo_id,\n          disableGroupBy: true,\n          Cell: ({ row, rows }) => (row.original.scenario ? row.original.scenario : null),\n          enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n          downloadValue: 'scenario',\n        },\n        {\n          Header: 'Start Date',\n          // accessor: 'startDate',\n          disableGroupBy: true,\n          accessor: 'promo_code',\n          Cell: ({ row, rows }) => (row.original.startDate ? row.original.startDate : null),\n          enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n          downloadValue: 'startDate',\n        },\n        {\n          Header: 'End Date',\n          accessor: 'promotion_id',\n          disableGroupBy: true,\n          // accessor: 'promo_code',\n          Cell: ({ row, rows }) => (row.original.endDate ? row.original.endDate : null),\n          enableRowSpan: true,\n          // enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n          downloadValue: 'endDate',\n        },\n        {\n          Header: 'Metrics',\n          accessor: 'metrices',\n          disableGroupBy: true,\n          //   width: 50,\n          align: 'left',\n        },\n      ];\n      // Object.keys(this.props.getPlannedTableData[0]).forEach((i) => {\n      //   if (!columns.map((c) => c.accessor).includes(i)) {\n      //     columns.push({\n      //       Header: i,\n      //       accessor: i,\n      //       disableGroupBy: true,\n      //       Cell: (props) => <div> {toUnit(props)} </div>,\n      //     });\n      //   }\n      // });\n\n      // let finalArr = this.props.weeks.length || arr;\n\n      if (this.props.fiscalWeek) {\n        this.props.fiscalWeek &&\n          _.map(this.props.fiscalWeek, (week) => {\n            let value = Object.values(week)[0];\n            let sMonth = moment(value && value.start_of_week_date).format('MMM');\n            let eMonth = moment(value && value.end_of_week_date).format('MMM');\n            let sDay = moment(value && value.start_of_week_date).format('DD');\n            let eDay = moment(value && value.end_of_week_date).format('DD');\n            let header = sMonth + ' ' + sDay + ' - ' + eMonth + ' ' + eDay;\n\n            if (_.isEmpty(value)) return columns;\n            columns.push({\n              Header: header,\n              accessor: 'w' + value.week_num,\n              disableGroupBy: true,\n              downloadFormatter: toUnit,\n              Cell: (props) => <div> {props.value ? toUnit(props) : '-'} </div>,\n            });\n          });\n      } else {\n        let arr = Object.keys(this.props.getPlannedTableData[0]).filter((tableData) =>\n          tableData.startsWith('w')\n        );\n        arr.forEach((week) => {\n          columns.push({\n            Header: week,\n            accessor: week,\n            disableGroupBy: true,\n            downloadFormatter: toUnit,\n            Cell: (props) => <div> {props.value ? toUnit(props) : '-'} </div>,\n          });\n        });\n      }\n\n      return columns;\n    } else return [];\n  };\n\n  componentDidMount() {\n    this.setState({\n      showTable: false,\n    });\n  }\n  showEditModalHandler = (val) => {\n    if (!val) document.body.setAttribute('style', '');\n    this.setState({ showEditModal: val });\n  };\n  render() {\n    console.log(this.props.fiscalWeek, 'fisss');\n    let { getPlannedMetricOptions, getPlannedTableData } = this.props;\n    return (\n      <div className=\"planned-report pl-2 pr-2\">\n        <LoadingOverlay loader={this.props.overlayLoaderState} spinner>\n          <div className=\"card mb-4\">\n            <div>\n              <h4 className=\"font-size-14  pad-10 markdown-heading\">\n                MarkSmart /<span className=\"font-bold color-blue\">Actual Vs Planned Reports</span>\n              </h4>\n            </div>\n            <hr\n              className=\"mb-2\"\n              style={{\n                marginTop: '-4px',\n              }}\n            />\n            <div className=\"mb-4\">\n              <Filters\n                onFilter={this.onFilter}\n                from=\"plannedReports\"\n                onReset={(e) => {\n                  this.setState({\n                    textStr: 'Please select filters to show Markdown plans',\n                  });\n                  this.props.onReset(e);\n                }}\n              />\n            </div>\n          </div>\n          {/* <div className=\"row\" style={{ padding: '1px 18px' }}> */}\n          {/* <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n              <CardComponent\n                cardImage={card1Image}\n                cardText={this.state.firstCardText}\n                cardValue={this.state.firstCardFirstValue}\n                cardValueSecond={this.state.firstCardSecondValue}\n \n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border1',\n                  cardValue: 'card1-value',\n                  cardImg: 'card1-img',\n                  cardValueSecond: 'card-value-second',\n                  cardSubHeading: 'card-subHeading',\n                }}\n              />\n            </div>\n            <div className=\"col-md-3 col-sm-3 col-xs-6\">\n              <CardComponent\n                cardImage={card2Image}\n                cardText={this.state.secondCardText}\n                cardValue={this.state.secondCardFirstValue}\n                cardValueSecond={this.state.secondCardSecondValue}\n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border2',\n                  cardValue: 'card1-value',\n                  cardImg: 'card2-img',\n                  cardValueSecond: 'card-value-second',\n                  cardSubHeading: 'card-subHeading',\n                }}\n              />\n            </div>\n            <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n              <CardComponent\n                cardImage={card3Image}\n                cardText={this.state.thirdCardText}\n                cardValue={this.state.thirdCardFirstValue}\n                cardValueSecond={this.state.thirdCardSecondValue}\n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border3',\n                  cardValue: 'card1-value',\n                  cardImg: 'card3-img',\n                  cardValueSecond: 'card-value-second',\n                  cardSubHeading: 'card-subHeading',\n                }}\n              />\n            </div>\n            <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n              <CardComponent\n                cardImage={card4Image}\n                cardText={this.state.fourthCardText}\n                cardValue={this.state.fourthCardFirstValue}\n                cardValueSecond={this.state.fourthCardSecondValue}\n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border4',\n                  cardValue: 'card1-value',\n                  cardImg: 'card4-img',\n                }}\n              />\n            </div>\n          </div> */}\n          {this.state.showTable && getPlannedTableData.length > 0 ? (\n            <div className=\"card CalendarMain promoCalendarDiv1 mt-3\">\n              <ColSelBtn>\n                {/* <ColumnSelection\n                tab=\"draft\"\n                options={getPlannedMetricOptions}\n                onHandleSelect={this.onHandleSelect}\n                selectedItems={this.state.selectedItems}\n                attributes={attributes}\n                contentRenderer={true}\n              /> */}\n                {/* <Download data={getPlannedTableData} /> */}\n              </ColSelBtn>\n\n              <div className=\"pad-15\">\n                <DataTable\n                  fileName=\"Actual vs planned report\"\n                  showExport={true}\n                  columns={this.coldef()}\n                  data={getPlannedTableData}\n                  isPagination={true}\n                  rowsPerPage={12}\n                />\n              </div>\n            </div>\n          ) : (\n            <NoData description={this.state.textStr} />\n          )}\n\n          {this.state.showEditModal ? (\n            <EditMDModal\n              showEditModalHandler={this.showEditModalHandler}\n              selectedPlanDetails={this.state.selectedPlanDetails}\n              from=\"actualVsPlanned\"\n            />\n          ) : null}\n        </LoadingOverlay>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (store) => {\n  return {\n    overlayLoaderState: store.loaderReducer.overlayLoaderState,\n    getPlannedTableData: store.plannedReportReducer.plannedReportsTableData,\n    fiscalWeek: store.plannedReportReducer.fiscalWeek,\n    getPlannedMetricOptions: store.plannedReportReducer.metricOptions.draft,\n  };\n};\nconst mapActionsToProps = {\n  fetchPlannedReports: plannedReportsAction.fetchPlannedReports,\n  onReset: plannedReportsAction.onReset,\n  updateSidebar: plannedReportsAction.updateSidebar,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(planedReport);\n// export default planedReport;\nconst ColSelBtn = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n"]},"metadata":{},"sourceType":"module"}