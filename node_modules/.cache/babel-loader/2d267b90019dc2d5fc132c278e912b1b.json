{"ast":null,"code":"import _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/DataTable/index.js\";\nimport React, { Component } from 'react';\nimport { AgGridReact } from \"ag-grid-react\";\nimport { isEqual } from 'lodash';\n\nvar index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(index, _Component);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(index).call(this, props));\n\n    _this.onGridReady = function (params) {\n      _this.props.isSizetoFit && params.api.sizeColumnsToFit();\n\n      _this.setState({\n        data: _this.props.rowData\n      });\n    };\n\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      console.log('ag grid didupdate', this.props.rowData, prevProps.rowData);\n\n      if (!isEqual(prevProps.rowData, this.props.rowData)) {\n        var newData = this.props.rowData;\n        var sum = 0;\n        newData.forEach(function (element) {\n          if (element.metric != 'Total') {\n            sum = sum + Math.round(element.value);\n          }\n\n          if (element.metric == 'Total') {\n            element.value = sum;\n          }\n        });\n        this.setState({\n          data: newData\n        }, function () {\n          console.log('state updfated to  ', _this2.state.data);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"ag-theme-balham\",\n        style: this.props.style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(AgGridReact, {\n        onGridReady: this.onGridReady,\n        isSizetoFit: this.props.isSizetoFit,\n        columnDefs: this.props.columnDefs,\n        rowData: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return index;\n}(Component);\n\nexport default index;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/DataTable/index.js"],"names":["React","Component","AgGridReact","isEqual","index","props","onGridReady","params","isSizetoFit","api","sizeColumnsToFit","setState","data","rowData","state","prevProps","console","log","newData","sum","forEach","element","metric","Math","round","value","style","columnDefs"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,OAAT,QAAwB,QAAxB;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AADiB,UAOnBC,WAPmB,GAOL,UAAAC,MAAM,EAAI;AACtB,YAAKF,KAAL,CAAWG,WAAX,IAA0BD,MAAM,CAACE,GAAP,CAAWC,gBAAX,EAA1B;;AACA,YAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE,MAAKP,KAAL,CAAWQ;AADL,OAAd;AAGD,KAZkB;;AAGjB,UAAKC,KAAL,GAAa;AACTF,MAAAA,IAAI,EAAE;AADG,KAAb;AAHiB;AAMlB;;;;uCAQkBG,S,EAAW;AAAA;;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKZ,KAAL,CAAWQ,OAA5C,EAAqDE,SAAS,CAACF,OAA/D;;AACA,UAAG,CAACV,OAAO,CAACY,SAAS,CAACF,OAAX,EAAoB,KAAKR,KAAL,CAAWQ,OAA/B,CAAX,EAAoD;AAClD,YAAIK,OAAO,GAAG,KAAKb,KAAL,CAAWQ,OAAzB;AACA,YAAIM,GAAG,GAAC,CAAR;AACAD,QAAAA,OAAO,CAACE,OAAR,CAAgB,UAAAC,OAAO,EAAI;AACzB,cAAGA,OAAO,CAACC,MAAR,IAAgB,OAAnB,EAA2B;AACzBH,YAAAA,GAAG,GAACA,GAAG,GAACI,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACI,KAAnB,CAAR;AACD;;AACD,cAAGJ,OAAO,CAACC,MAAR,IAAgB,OAAnB,EAA2B;AACzBD,YAAAA,OAAO,CAACI,KAAR,GAAcN,GAAd;AACD;AACF,SAPD;AAQA,aAAKR,QAAL,CAAc;AACZC,UAAAA,IAAI,EAAEM;AADM,SAAd,EAEE,YAAI;AACJF,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkC,MAAI,CAACH,KAAL,CAAWF,IAA7C;AACD,SAJD;AAKD;AACF;;;6BAEQ;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWqB,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,WAAW,EAAE,KAAKpB,WADpB;AAEE,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWG,WAF1B;AAGE,QAAA,UAAU,EAAE,KAAKH,KAAL,CAAWsB,UAHzB;AAIE,QAAA,OAAO,EAAE,KAAKb,KAAL,CAAWF,IAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAUD;;;;EAhDiBX,S;;AAmDpB,eAAeG,KAAf","sourcesContent":["import React, { Component } from 'react'\nimport { AgGridReact } from \"ag-grid-react\";\nimport { isEqual } from 'lodash';\n\nclass index extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n        data: [] \n    }\n  }\n  onGridReady = params => {\n    this.props.isSizetoFit && params.api.sizeColumnsToFit();\n    this.setState({\n      data: this.props.rowData\n    })\n  };\n\n  componentDidUpdate(prevProps) {\n    console.log('ag grid didupdate', this.props.rowData, prevProps.rowData)\n    if(!isEqual(prevProps.rowData, this.props.rowData)) {\n      var newData = this.props.rowData;\n      var sum=0\n      newData.forEach(element => {\n        if(element.metric!='Total'){\n          sum=sum+Math.round(element.value)\n        }\n        if(element.metric=='Total'){\n          element.value=sum\n        }\n      });\n      this.setState({\n        data: newData\n      },()=>{\n        console.log('state updfated to  ',this.state.data)\n      })\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"ag-theme-balham\" style={this.props.style}>\n        <AgGridReact\n          onGridReady={this.onGridReady}\n          isSizetoFit={this.props.isSizetoFit}\n          columnDefs={this.props.columnDefs}\n          rowData={this.state.data}\n        />\n      </div>\n    );\n  }\n}\n\nexport default index;\n\n"]},"metadata":{},"sourceType":"module"}