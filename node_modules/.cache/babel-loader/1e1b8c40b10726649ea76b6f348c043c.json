{"ast":null,"code":"import _regeneratorRuntime from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Configuration/StoreConfigContainers/CreateStoreGroup.jsx\";\nimport React, { Component } from 'react';\nimport '../StoreConfigContainers/StoreConfig';\nimport { connect } from 'react-redux';\nimport DataTable from '../../../services/reactTable';\nimport '../../Configuration/StoreConfigContainers/StoreConfig.css';\nimport { cloneDeep, differenceBy } from 'lodash';\nimport excelIcon from \"../../../images/leftPanel/status.svg\";\nimport StoreConfigActions from '../../../actions/storeConfigActions';\nimport FilterActions from '../../../actions/filtersAction';\nimport _ from 'lodash';\nimport { toast } from 'react-toastify';\nexport var CreateStoreGroup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateStoreGroup, _Component);\n\n  function CreateStoreGroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateStoreGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateStoreGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      storeGroupName: '',\n      allStores: [],\n      currentStores: [],\n      selectedAllStores: [],\n      selectedCurrentStores: [],\n      fromEdit: false,\n      storeGroupId: null\n    };\n    _this.header = [{\n      Header: 'Store Number',\n      accessor: 'store_code'\n    }, {\n      Header: 'Store Name',\n      accessor: 'store_name'\n    }];\n\n    _this.onStoreGroupNameChangeHandler = function (e) {\n      _this.setState({\n        storeGroupName: e.target.value\n      });\n    };\n\n    _this.onCurrentStoresSelectionChangeHandler = function (rowInfo) {\n      var selectedCurrentStores = _this.state.selectedCurrentStores;\n\n      var foundEle = _.find(selectedCurrentStores, {\n        store_code: rowInfo.original.store_code\n      });\n\n      if (foundEle) {\n        _.remove(selectedCurrentStores, function (item) {\n          return item.store_code === rowInfo.original.store_code;\n        });\n      } else {\n        selectedCurrentStores.push(rowInfo.original);\n      }\n\n      _this.setState({\n        selectedCurrentStores: selectedCurrentStores\n      });\n    };\n\n    _this.onAddClickHandler = function () {\n      var allStores = cloneDeep(_this.state.allStores);\n      var currentStores = cloneDeep(_this.state.currentStores);\n\n      var newcurrentStores = _.unionWith(currentStores, _this.state.selectedAllStores, _.isEqual);\n\n      var mainArray = allStores,\n          childArray = _this.state.selectedAllStores;\n\n      if (allStores.length < _this.state.selectedAllStores.length) {\n        mainArray = _this.state.selectedAllStores;\n        childArray = allStores;\n      }\n\n      var newAllStores = _.differenceBy(mainArray, childArray, 'store_code');\n\n      _this.setState({\n        allStores: newAllStores,\n        currentStores: newcurrentStores,\n        selectedAllStores: []\n      });\n    };\n\n    _this.onAllStoresSelectionChangeHandler = function (rowInfo) {\n      var selectedAllStores = _this.state.selectedAllStores;\n\n      var foundEle = _.find(selectedAllStores, {\n        store_code: rowInfo.original.store_code\n      });\n\n      if (foundEle) {\n        _.remove(selectedAllStores, function (item) {\n          return item.store_code === rowInfo.original.store_code;\n        });\n      } else {\n        selectedAllStores.push(rowInfo.original);\n      }\n\n      _this.setState({\n        selectedAllStores: selectedAllStores\n      });\n    };\n\n    _this.onCreateStoreGroup = function () {\n      if (_this.state.fromEdit) {\n        var _this$state = _this.state,\n            storeGroupId = _this$state.storeGroupId,\n            storeGroupName = _this$state.storeGroupName,\n            currentStores = _this$state.currentStores;\n        var storeCodes = [];\n        currentStores.map(function (ele) {\n          return storeCodes.push(ele.store_code);\n        });\n\n        _this.props.editStoreGroup({\n          title: storeGroupName,\n          store_codes: storeCodes,\n          customStoreGroupId: storeGroupId\n        }).then(function (res) {\n          console.log(res, 'resssssss');\n\n          if (res) {\n            _this.onCancelButtonHandler();\n          }\n        });\n      } else {\n        var _storeCodes = _this.state.currentStores.map(function (ele) {\n          return ele.store_code;\n        });\n\n        var _storeGroupName = _this.state.storeGroupName;\n\n        if (!_storeGroupName.trim()) {\n          toast.error('Please enter Store  Group name!', {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n          return;\n        }\n\n        _this.props.createStoreGroup({\n          title: _storeGroupName,\n          store_codes: _storeCodes\n        }).then(function (res) {\n          console.log(res, 'resssssss');\n\n          if (res) {\n            _this.onCancelButtonHandler();\n          }\n        });\n      }\n    };\n\n    _this.onCancelButtonHandler = function () {\n      _this.setState({\n        allStores: []\n      }); // this.props.history.goBack();\n\n\n      _this.props.history.push(\"/vis/Markdown/configuration/store\");\n    };\n\n    _this.onRemoveClickHandler = function () {\n      var currentStores = cloneDeep(_this.state.currentStores);\n      var allStores = cloneDeep(_this.state.allStores);\n      var mainArray = currentStores,\n          childArray = _this.state.selectedCurrentStores;\n\n      if (currentStores.length < _this.state.selectedCurrentStores.length) {\n        mainArray = _this.state.selectedCurrentStores;\n        childArray = currentStores;\n      }\n\n      var newCurrentStStores = differenceBy(mainArray, childArray, 'store_code');\n\n      var newallStores = _.unionWith(allStores, _this.state.selectedCurrentStores, _.isEqual);\n\n      _this.setState({\n        allStores: newallStores,\n        currentStores: newCurrentStStores,\n        selectedCurrentStores: []\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateStoreGroup, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, match, id, payload, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // this.props.fetchStoreGroups();\n                this.props.getCustomStores();\n                _context.next = 3;\n                return this.props.getStoreGroupTableData();\n\n              case 3:\n                response = _context.sent;\n                match = this.props.match;\n\n                if (!(match && match.params && match.params.id)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                id = match.params.id;\n                payload = {\n                  filters: {\n                    customStoreGroup: [id]\n                  }\n                };\n                _context.next = 10;\n                return this.props.getStoreGroupTableData(payload);\n\n              case 10:\n                res = _context.sent;\n                this.setState({\n                  fromEdit: true,\n                  storeGroupId: id,\n                  currentStores: res\n                });\n\n              case 12:\n                this.setState({\n                  allStores: response\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.state.fromEdit && !this.state.storeGroupName && this.props.storeGroups) {\n        var groupName = _.find(this.props.storeGroups, {\n          value: parseInt(this.state.storeGroupId)\n        });\n\n        if (groupName) {\n          this.setState({\n            storeGroupName: groupName.label\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          storeGroupName = _this$state2.storeGroupName,\n          currentStores = _this$state2.currentStores,\n          allStores = _this$state2.allStores;\n      return React.createElement(\"div\", {\n        className: \"card p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"font-size-14  pad-10 markdown-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Store Configuration/\", React.createElement(\"span\", {\n        className: \"font-bold color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, this.state.fromEdit ? 'Edit Store Group' : 'Create Store Group')), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.onCancelButtonHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Back\"))), React.createElement(\"hr\", {\n        className: \"mb-3\",\n        style: {\n          marginTop: '-4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"mr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"*\"), \"Store group name:\"), this.state.fromEdit ? React.createElement(\"input\", {\n        style: {\n          background: '#dddddd',\n          border: '1px solid #CCC'\n        },\n        className: \"inputText\",\n        disabled: true,\n        type: \"text\",\n        value: storeGroupName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }) : // <span className=\"store-name\">{storeGroupName}</span>\n      React.createElement(\"input\", {\n        className: \"inputText\",\n        type: \"text\",\n        onChange: this.onStoreGroupNameChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row mx-2 create-store-grp-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"All Stores\"), React.createElement(\"div\", {\n        className: \"styleStoreTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        visibleColumns: \"onlyRowSelection\",\n        getRowProps: function getRowProps(rowInfo) {\n          return {\n            onClick: function onClick() {\n              return _this2.onAllStoresSelectionChangeHandler(rowInfo);\n            }\n          };\n        },\n        columns: this.header,\n        data: allStores,\n        isPagination: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btnStyle btn btn-primary\",\n        onClick: this.onAddClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Add\"))), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Current Stores : \", currentStores && currentStores.length)), React.createElement(\"div\", {\n        className: \"styleStoreTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        visibleColumns: \"onlyRowSelection\",\n        getRowProps: function getRowProps(rowInfo) {\n          return {\n            onClick: function onClick() {\n              return _this2.onCurrentStoresSelectionChangeHandler(rowInfo);\n            }\n          };\n        },\n        columns: this.header,\n        data: currentStores,\n        isPagination: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btnStyle btn btn-primary\",\n        onClick: this.onRemoveClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Remove\")))), React.createElement(\"div\", {\n        className: \"mb-3 mt-4\",\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          width: '7%'\n        },\n        className: \" btn btn-primary\",\n        onClick: this.onCreateStoreGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, this.state.fromEdit ? 'Update' : 'Create'), React.createElement(\"button\", {\n        className: \" btn ml-1 cancel-button\",\n        style: {\n          width: '7%'\n        },\n        onClick: this.onCancelButtonHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return CreateStoreGroup;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    // storeGroups: store.storeConfigReducer.storeGroups,\n    storeGroups: store.filtersReducer.customStoreGroup,\n    storeGroupTableData: store.storeConfigReducer.storeGroupTableData,\n    currentStoreGroupTableData: store.storeConfigReducer.currentStoreGroupTableData\n  };\n};\n\nvar mapDispatchToProps = {\n  // fetchStoreGroups: StoreConfigActions.fetchStoreGroups,\n  getCustomStores: FilterActions.getCustomStores,\n  getStoreGroupTableData: StoreConfigActions.getStoreGroupTableData,\n  createStoreGroup: StoreConfigActions.createStoreGroup,\n  editStoreGroup: StoreConfigActions.editStoreGroup\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateStoreGroup);","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Configuration/StoreConfigContainers/CreateStoreGroup.jsx"],"names":["React","Component","connect","DataTable","cloneDeep","differenceBy","StoreConfigActions","FilterActions","_","toast","CreateStoreGroup","state","storeGroupName","allStores","currentStores","selectedAllStores","selectedCurrentStores","fromEdit","storeGroupId","header","Header","accessor","onStoreGroupNameChangeHandler","e","setState","target","value","onCurrentStoresSelectionChangeHandler","rowInfo","foundEle","find","store_code","original","remove","item","push","onAddClickHandler","newcurrentStores","unionWith","isEqual","mainArray","childArray","length","newAllStores","onAllStoresSelectionChangeHandler","onCreateStoreGroup","storeCodes","map","ele","props","editStoreGroup","title","store_codes","customStoreGroupId","then","res","console","log","onCancelButtonHandler","trim","error","autoClose","hideProgressBar","createStoreGroup","history","onRemoveClickHandler","newCurrentStStores","newallStores","getCustomStores","getStoreGroupTableData","response","match","params","id","payload","filters","customStoreGroup","prevProps","prevState","storeGroups","groupName","parseInt","label","display","justifyContent","marginTop","color","background","border","onClick","textAlign","width","mapStateToProps","store","filtersReducer","storeGroupTableData","storeConfigReducer","currentStoreGroupTableData","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../StoreConfigContainers/StoreConfig';\nimport { connect } from 'react-redux';\nimport DataTable from '../../../services/reactTable';\nimport '../../Configuration/StoreConfigContainers/StoreConfig.css';\nimport { cloneDeep, differenceBy } from 'lodash';\nimport excelIcon from '../../../images/leftPanel/status.svg';\nimport StoreConfigActions from '../../../actions/storeConfigActions';\nimport FilterActions from '../../../actions/filtersAction';\nimport _ from 'lodash';\nimport { toast } from 'react-toastify';\n\nexport class CreateStoreGroup extends Component {\n  state = {\n    storeGroupName: '',\n    allStores: [],\n    currentStores: [],\n    selectedAllStores: [],\n    selectedCurrentStores: [],\n    fromEdit: false,\n    storeGroupId: null,\n  };\n  header = [\n    {\n      Header: 'Store Number',\n      accessor: 'store_code',\n    },\n    {\n      Header: 'Store Name',\n      accessor: 'store_name',\n    },\n    // {\n    //   Header: 'Chain Description',\n    //   accessor: 'chain_description',\n    // },\n    // {\n    //   Header: 'Region Description',\n    //   accessor: 'region_description',\n    // },\n  ];\n\n  async componentDidMount() {\n    // this.props.fetchStoreGroups();\n    this.props.getCustomStores();\n\n    let response = await this.props.getStoreGroupTableData();\n    let { match } = this.props;\n    if (match && match.params && match.params.id) {\n      let { id } = match.params;\n      let payload = {\n        filters: {\n          customStoreGroup: [id],\n        },\n      };\n      let res = await this.props.getStoreGroupTableData(payload);\n      this.setState({ fromEdit: true, storeGroupId: id, currentStores: res });\n    }\n    this.setState({ allStores: response });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.fromEdit && !this.state.storeGroupName && this.props.storeGroups) {\n      let groupName = _.find(this.props.storeGroups, { value: parseInt(this.state.storeGroupId) });\n      if (groupName) {\n        this.setState({ storeGroupName: groupName.label });\n      }\n    }\n  }\n\n  onStoreGroupNameChangeHandler = (e) => {\n    this.setState({\n      storeGroupName: e.target.value,\n    });\n  };\n\n  onCurrentStoresSelectionChangeHandler = (rowInfo) => {\n    let { selectedCurrentStores } = this.state;\n    let foundEle = _.find(selectedCurrentStores, {\n      store_code: rowInfo.original.store_code,\n    });\n    if (foundEle) {\n      _.remove(selectedCurrentStores, (item) => item.store_code === rowInfo.original.store_code);\n    } else {\n      selectedCurrentStores.push(rowInfo.original);\n    }\n    this.setState({\n      selectedCurrentStores,\n    });\n  };\n\n  onAddClickHandler = () => {\n    const allStores = cloneDeep(this.state.allStores);\n    const currentStores = cloneDeep(this.state.currentStores);\n    let newcurrentStores = _.unionWith(currentStores, this.state.selectedAllStores, _.isEqual);\n\n    let mainArray = allStores,\n      childArray = this.state.selectedAllStores;\n\n    if (allStores.length < this.state.selectedAllStores.length) {\n      mainArray = this.state.selectedAllStores;\n      childArray = allStores;\n    }\n    let newAllStores = _.differenceBy(mainArray, childArray, 'store_code');\n    this.setState({\n      allStores: newAllStores,\n      currentStores: newcurrentStores,\n      selectedAllStores: [],\n    });\n  };\n  onAllStoresSelectionChangeHandler = (rowInfo) => {\n    let { selectedAllStores } = this.state;\n    let foundEle = _.find(selectedAllStores, { store_code: rowInfo.original.store_code });\n    if (foundEle) {\n      _.remove(selectedAllStores, (item) => item.store_code === rowInfo.original.store_code);\n    } else {\n      selectedAllStores.push(rowInfo.original);\n    }\n\n    this.setState({\n      selectedAllStores,\n    });\n  };\n  onCreateStoreGroup = () => {\n    if (this.state.fromEdit) {\n      let { storeGroupId, storeGroupName, currentStores } = this.state;\n      let storeCodes = [];\n      currentStores.map((ele) => storeCodes.push(ele.store_code));\n      this.props\n        .editStoreGroup({\n          title: storeGroupName,\n          store_codes: storeCodes,\n          customStoreGroupId: storeGroupId,\n        })\n        .then((res) => {\n          console.log(res, 'resssssss');\n          if (res) {\n            this.onCancelButtonHandler();\n          }\n        });\n    } else {\n      let storeCodes = this.state.currentStores.map((ele) => ele.store_code);\n      let { storeGroupName } = this.state;\n      if (!storeGroupName.trim()) {\n        toast.error('Please enter Store  Group name!', {\n          autoClose: 15000,\n          hideProgressBar: true,\n        });\n        return;\n      }\n      this.props\n        .createStoreGroup({\n          title: storeGroupName,\n          store_codes: storeCodes,\n        })\n        .then((res) => {\n          console.log(res, 'resssssss');\n\n          if (res) {\n            this.onCancelButtonHandler();\n          }\n        });\n    }\n  };\n  onCancelButtonHandler = () => {\n    this.setState({ allStores: [] });\n    // this.props.history.goBack();\n    this.props.history.push(`/vis/Markdown/configuration/store`);\n  };\n  onRemoveClickHandler = () => {\n    const currentStores = cloneDeep(this.state.currentStores);\n    const allStores = cloneDeep(this.state.allStores);\n    let mainArray = currentStores,\n      childArray = this.state.selectedCurrentStores;\n\n    if (currentStores.length < this.state.selectedCurrentStores.length) {\n      mainArray = this.state.selectedCurrentStores;\n      childArray = currentStores;\n    }\n    const newCurrentStStores = differenceBy(mainArray, childArray, 'store_code');\n    let newallStores = _.unionWith(allStores, this.state.selectedCurrentStores, _.isEqual);\n\n    this.setState({\n      allStores: newallStores,\n      currentStores: newCurrentStStores,\n      selectedCurrentStores: [],\n    });\n  };\n\n  render() {\n    let { storeGroupName, currentStores, allStores } = this.state;\n    return (\n      <div className=\"card p-2\">\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <h4 className=\"font-size-14  pad-10 markdown-heading\">\n            Store Configuration/\n            <span className=\"font-bold color-blue\">\n              {this.state.fromEdit ? 'Edit Store Group' : 'Create Store Group'}\n            </span>\n          </h4>\n          <div>\n            <button className=\"btn btn-primary\" onClick={this.onCancelButtonHandler}>\n              Back\n            </button>\n          </div>\n        </div>\n        <hr\n          className=\"mb-3\"\n          style={{\n            marginTop: '-4px',\n          }}\n        />\n        <div className=\"row justify-content-between\">\n          <div className=\"col-md-6\">\n            <label className=\"mr-1\">\n              <span style={{ color: 'red' }}>*</span>Store group name:\n            </label>\n            {this.state.fromEdit ? (\n              <input\n                style={{ background: '#dddddd', border: '1px solid #CCC' }}\n                className=\"inputText\"\n                disabled\n                type=\"text\"\n                value={storeGroupName}\n              />\n            ) : (\n              // <span className=\"store-name\">{storeGroupName}</span>\n              <input\n                className=\"inputText\"\n                type=\"text\"\n                onChange={this.onStoreGroupNameChangeHandler}\n              />\n            )}\n          </div>\n          <div className=\"col-md-2\">\n            {/* <button className=\"col-md-5 btn btn-primary\" onClick={() => {}}>\n              Upload &nbsp;&nbsp;\n              <span>\n                <img className=\"img-icons-create-promo\" src={excelIcon} alt=\"\" />\n              </span>\n            </button> */}\n          </div>\n        </div>\n        <hr />\n        <div className=\"row mx-2 create-store-grp-table\">\n          <div className=\"col-md-6\">\n            <div>All Stores</div>\n            <div className=\"styleStoreTable\">\n              <DataTable\n                visibleColumns=\"onlyRowSelection\"\n                getRowProps={(rowInfo) => ({\n                  onClick: () => this.onAllStoresSelectionChangeHandler(rowInfo),\n                })}\n                columns={this.header}\n                data={allStores}\n                isPagination={true}\n              />\n            </div>\n            <div className=\"mt-4\">\n              <button className=\"btnStyle btn btn-primary\" onClick={this.onAddClickHandler}>\n                Add\n              </button>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div>\n              <span className=\"mr-2\">Current Stores : {currentStores && currentStores.length}</span>\n            </div>\n            <div className=\"styleStoreTable\">\n              <DataTable\n                visibleColumns=\"onlyRowSelection\"\n                getRowProps={(rowInfo) => ({\n                  onClick: () => this.onCurrentStoresSelectionChangeHandler(rowInfo),\n                })}\n                columns={this.header}\n                data={currentStores}\n                isPagination={true}\n              />\n            </div>\n            <div className=\"mt-4\">\n              <button className=\"btnStyle btn btn-primary\" onClick={this.onRemoveClickHandler}>\n                Remove\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"mb-3 mt-4\" style={{ textAlign: 'center' }}>\n          <button\n            style={{ width: '7%' }}\n            className=\" btn btn-primary\"\n            onClick={this.onCreateStoreGroup}>\n            {this.state.fromEdit ? 'Update' : 'Create'}\n          </button>\n          <button\n            className=\" btn ml-1 cancel-button\"\n            style={{ width: '7%' }}\n            onClick={this.onCancelButtonHandler}>\n            Cancel\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    // storeGroups: store.storeConfigReducer.storeGroups,\n    storeGroups: store.filtersReducer.customStoreGroup,\n    storeGroupTableData: store.storeConfigReducer.storeGroupTableData,\n    currentStoreGroupTableData: store.storeConfigReducer.currentStoreGroupTableData,\n  };\n};\nconst mapDispatchToProps = {\n  // fetchStoreGroups: StoreConfigActions.fetchStoreGroups,\n\n  getCustomStores: FilterActions.getCustomStores,\n  getStoreGroupTableData: StoreConfigActions.getStoreGroupTableData,\n  createStoreGroup: StoreConfigActions.createStoreGroup,\n  editStoreGroup: StoreConfigActions.editStoreGroup,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateStoreGroup);\n"]},"metadata":{},"sourceType":"module"}