{"ast":null,"code":"import _slicedToArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/MinMaxRenderer.js\";\nimport React, { useState, useEffect } from 'react';\n\nvar MinMaxRenderer = function MinMaxRenderer(_ref) {\n  var fieldData = _ref.fieldData,\n      fieldName = _ref.fieldName,\n      label = _ref.label,\n      discdiffstyle = _ref.discdiffstyle,\n      discountBins = _ref.discountBins,\n      constraintHandler = _ref.constraintHandler,\n      setFormInvalid = _ref.setFormInvalid;\n  var regex = /^[0-9\\b]+$/;\n\n  var _useState = useState(fieldData.min),\n      _useState2 = _slicedToArray(_useState, 2),\n      min = _useState2[0],\n      setMin = _useState2[1];\n\n  var _useState3 = useState(fieldData.max),\n      _useState4 = _slicedToArray(_useState3, 2),\n      max = _useState4[0],\n      setMax = _useState4[1];\n\n  var _useState5 = useState(fieldData.interval),\n      _useState6 = _slicedToArray(_useState5, 2),\n      interval = _useState6[0],\n      setInterval = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMsg = _useState8[0],\n      setErrorMsg = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      minError = _useState10[0],\n      setMinError = _useState10[1]; // Boolean for min &\n\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      maxError = _useState12[0],\n      setMaxError = _useState12[1]; // max error message\n\n\n  useEffect(function () {\n    if (min !== fieldData.min) setMin(fieldData.min);\n    if (max !== fieldData.max) setMax(fieldData.max);\n    if (fieldData.interval && interval !== fieldData.interval) setInterval(fieldData.interval);\n  }, [fieldData]);\n\n  var minChange = function minChange(e) {\n    // Validation for min value\n    var minValue = e.target.value;\n    setMin(e.target.value);\n\n    if (minValue && !(regex.test(minValue) && parseInt(minValue) >= parseInt(fieldData.min) && parseInt(minValue) <= parseInt(fieldData.max) && parseInt(minValue) < parseInt(max)) || !minValue) {\n      setErrorMsg(\"Valid values are \".concat(fieldData.min, \" to \").concat(fieldData.max));\n      setMinError(true);\n      setFormInvalid(true);\n    } else if (fieldData.interval && !(parseInt(minValue) % parseInt(fieldData.interval) === 0)) {\n      setErrorMsg(\"Valid values are \".concat(fieldData.min, \" to \").concat(fieldData.max, \" in intervals of \").concat(fieldData.interval));\n      setMinError(true);\n      setFormInvalid(true);\n    } else {\n      setErrorMsg('');\n      setMinError(false);\n      setFormInvalid(false);\n    }\n  };\n\n  var maxChange = function maxChange(e) {\n    // Validation for max value\n    var maxValue = e.target.value;\n    setMax(e.target.value);\n\n    if (maxValue && !(regex.test(maxValue) && parseInt(maxValue) >= parseInt(fieldData.min) && parseInt(maxValue) <= parseInt(fieldData.max) && parseInt(maxValue) > parseInt(min)) || !maxValue) {\n      setErrorMsg(\"Valid values are \".concat(fieldData.min, \" to \").concat(fieldData.max));\n      setMaxError(true);\n      setFormInvalid(true);\n    } else if (fieldData.interval && !(parseInt(maxValue) % parseInt(fieldData.interval) === 0)) {\n      setErrorMsg(\"Valid values are \".concat(fieldData.min, \" to \").concat(fieldData.max, \" in intervals of \").concat(fieldData.interval));\n      setMaxError(true);\n      setFormInvalid(true);\n    } else {\n      setErrorMsg('');\n      setMaxError(false);\n      setFormInvalid(false);\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"row mt-4 mx-4 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"input-label d-inline\",\n    style: discdiffstyle ? discdiffstyle : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, label)), React.createElement(\"div\", {\n    className: \"col-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \" row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-6 pr-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Min\",\n    className: minError ? 'form-control-error' : 'form-control border-style',\n    onChange: function onChange(e) {\n      return minChange(e);\n    },\n    onBlur: !errorMsg ? function () {\n      return constraintHandler({\n        min: min,\n        max: max,\n        interval: interval\n      }, fieldName);\n    } : setFormInvalid(true),\n    value: min,\n    min: fieldData.min,\n    max: fieldData.max,\n    step: fieldData.interval ? fieldData.interval : 1,\n    disabled: discountBins && (discountBins > 1 ? false : true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-6 pr-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Max\",\n    className: maxError ? 'form-control-error' : 'form-control border-style',\n    onChange: function onChange(e) {\n      return maxChange(e);\n    },\n    onBlur: !errorMsg ? function () {\n      return constraintHandler({\n        min: min,\n        max: max,\n        interval: interval\n      }, fieldName);\n    } : setFormInvalid(true),\n    value: max,\n    min: fieldData.min,\n    max: fieldData.max,\n    step: fieldData.interval ? fieldData.interval : 1,\n    disabled: discountBins && (discountBins > 1 ? false : true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \" \", React.createElement(\"div\", {\n    className: \"row mt-0 pr-0 errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, errorMsg)))));\n};\n\nexport default MinMaxRenderer;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/MinMaxRenderer.js"],"names":["React","useState","useEffect","MinMaxRenderer","fieldData","fieldName","label","discdiffstyle","discountBins","constraintHandler","setFormInvalid","regex","min","setMin","max","setMax","interval","setInterval","errorMsg","setErrorMsg","minError","setMinError","maxError","setMaxError","minChange","e","minValue","target","value","test","parseInt","maxChange","maxValue"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst MinMaxRenderer = ({\n  fieldData,\n  fieldName,\n  label,\n  discdiffstyle, // For discountDiff, disable\n  discountBins, //  for single discountBin\n  constraintHandler,\n  setFormInvalid,\n}) => {\n  const regex = /^[0-9\\b]+$/;\n  const [min, setMin] = useState(fieldData.min);\n  const [max, setMax] = useState(fieldData.max);\n  const [interval, setInterval] = useState(fieldData.interval);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [minError, setMinError] = useState(false); // Boolean for min &\n  const [maxError, setMaxError] = useState(false); // max error message\n\n  useEffect(() => {\n    if (min !== fieldData.min) setMin(fieldData.min);\n    if (max !== fieldData.max) setMax(fieldData.max);\n    if (fieldData.interval && interval !== fieldData.interval) setInterval(fieldData.interval);\n  }, [fieldData]);\n\n  const minChange = (e) => {\n    // Validation for min value\n    let minValue = e.target.value;\n    setMin(e.target.value);\n    if (\n      (minValue &&\n        !(\n          regex.test(minValue) &&\n          parseInt(minValue) >= parseInt(fieldData.min) &&\n          parseInt(minValue) <= parseInt(fieldData.max) &&\n          parseInt(minValue) < parseInt(max)\n        )) ||\n      !minValue\n    ) {\n      setErrorMsg(`Valid values are ${fieldData.min} to ${fieldData.max}`);\n      setMinError(true);\n      setFormInvalid(true);\n    } else if (fieldData.interval && !(parseInt(minValue) % parseInt(fieldData.interval) === 0)) {\n      setErrorMsg(\n        `Valid values are ${fieldData.min} to ${fieldData.max} in intervals of ${fieldData.interval}`\n      );\n      setMinError(true);\n      setFormInvalid(true);\n    } else {\n      setErrorMsg('');\n      setMinError(false);\n      setFormInvalid(false);\n    }\n  };\n  const maxChange = (e) => {\n    // Validation for max value\n    let maxValue = e.target.value;\n    setMax(e.target.value);\n    if (\n      (maxValue &&\n        !(\n          regex.test(maxValue) &&\n          parseInt(maxValue) >= parseInt(fieldData.min) &&\n          parseInt(maxValue) <= parseInt(fieldData.max) &&\n          parseInt(maxValue) > parseInt(min)\n        )) ||\n      !maxValue\n    ) {\n      setErrorMsg(`Valid values are ${fieldData.min} to ${fieldData.max}`);\n      setMaxError(true);\n      setFormInvalid(true);\n    } else if (fieldData.interval && !(parseInt(maxValue) % parseInt(fieldData.interval) === 0)) {\n      setErrorMsg(\n        `Valid values are ${fieldData.min} to ${fieldData.max} in intervals of ${fieldData.interval}`\n      );\n      setMaxError(true);\n      setFormInvalid(true);\n    } else {\n      setErrorMsg('');\n      setMaxError(false);\n      setFormInvalid(false);\n    }\n  };\n  return (\n    <>\n      <div className=\"row mt-4 mx-4 \">\n        <div className=\"col-5\">\n          <label className=\"input-label d-inline\" style={discdiffstyle ? discdiffstyle : null}>\n            {label}\n          </label>\n        </div>\n        <div className=\"col-6\">\n          <div className=\" row\">\n            <div className=\"col-6 pr-0\">\n              <input\n                type=\"number\"\n                placeholder=\"Min\"\n                className={minError ? 'form-control-error' : 'form-control border-style'}\n                onChange={(e) => minChange(e)}\n                onBlur={\n                  !errorMsg\n                    ? () => constraintHandler({ min: min, max: max, interval: interval }, fieldName)\n                    : setFormInvalid(true)\n                }\n                value={min}\n                min={fieldData.min}\n                max={fieldData.max}\n                step={fieldData.interval ? fieldData.interval : 1}\n                disabled={discountBins && (discountBins > 1 ? false : true)}\n              />\n            </div>\n            <div className=\"col-6 pr-0\">\n              <input\n                type=\"number\"\n                placeholder=\"Max\"\n                className={maxError ? 'form-control-error' : 'form-control border-style'}\n                onChange={(e) => maxChange(e)}\n                onBlur={\n                  !errorMsg\n                    ? () => constraintHandler({ min: min, max: max, interval: interval }, fieldName)\n                    : setFormInvalid(true)\n                }\n                value={max}\n                min={fieldData.min}\n                max={fieldData.max}\n                step={fieldData.interval ? fieldData.interval : 1}\n                disabled={discountBins && (discountBins > 1 ? false : true)}\n              />\n            </div>\n          </div>\n          <div> {<div className=\"row mt-0 pr-0 errorMessage\">{errorMsg}</div>}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MinMaxRenderer;\n"]},"metadata":{},"sourceType":"module"}