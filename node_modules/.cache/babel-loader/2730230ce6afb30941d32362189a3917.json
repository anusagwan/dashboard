{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Planned Reports/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Filters from '../../services/filters';\nimport DataTable from '../../services/reactTable';\nimport styled from 'styled-components';\nimport plannedReportsAction from '../../actions/plannedReportsAction';\nimport _ from 'lodash';\nimport LoadingOverlay from '../../utils/Loader';\nimport NoData from '../noTableData'; // import card1Image from '../../images/card1Image.png';\n// import card2Image from '../../images/card2Image.png';\n// import card3Image from '../../images/card3Image.png';\n// import card4Image from '../../images/card4Image.png';\n\nimport { toUnit } from '../../helper/formatter';\nimport { toast } from 'react-toastify';\n\nvar planedReport =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(planedReport, _Component);\n\n  function planedReport(_props) {\n    var _this;\n\n    _classCallCheck(this, planedReport);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(planedReport).call(this, _props));\n\n    _this.onHandleSelect = function (selectValues) {\n      return _this.setState({\n        selectValues: selectValues\n      });\n    };\n\n    _this.validateFilters = function () {\n      return _this.props.selectedHierarchy1 && _this.props.selectedHierarchy2.length && _this.props.selectedHierarchy3.length && _this.props.startDate && _this.props.endDate;\n    };\n\n    _this.onFilter = function (filters) {\n      if (!_this.validateFilters()) {\n        toast.error(\"Please select mandatory filters\", {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        return;\n      }\n\n      _this.setState({\n        showTable: true\n      });\n\n      var req = {\n        filters: {\n          hierarchy1: _this.props.selectedHierarchy1.map(function (e) {\n            return e.replace(/'/g, \"''\");\n          }),\n          hierarchy2: _this.props.selectedHierarchy2.map(function (e) {\n            return e.replace(/'/g, \"''\");\n          }),\n          hierarchy3: _this.props.selectedHierarchy3.map(function (e) {\n            return e.replace(/'/g, \"''\");\n          }),\n          hierarchy4: _this.props.selectedHierarchy4.map(function (e) {\n            return e.replace(/'/g, \"''\");\n          }),\n          hierarchy5: _this.props.selectedHierarchy5.map(function (e) {\n            return e.replace(/'/g, \"''\");\n          }),\n          hierarchy6: _this.props.selectedHierarchy6.map(function (e) {\n            return e.replace(/'/g, \"''\");\n          })\n        },\n        startDate: _this.props.startDate,\n        endDate: _this.props.endDate,\n        week: _this.props.weeks\n      }; // req = {\n      //   filters: {\n      //     hierarchy1: ['MENS'],\n      //     hierarchy2: ['SPORTSWEAR MENS TEES'],\n      //     hierarchy3: ['SPW MENS TEES'],\n      //     hierarchy4: ['LS TEE'],\n      //     hierarchy5: ['seasonal key items'],\n      //     hierarchy6: ['Prior to Jan20'],\n      //   },\n      //   startDate: '06-01-2020',\n      //   endDate: '08-02-2020',\n      //   week: [23, 24, 25, 26, 27, 28, 29, 30, 31],\n      // };\n      // req = {\n      //   filters: {\n      //     hierarchy1: ['MENS'],\n      //     hierarchy2: ['SPORTSWEAR MENS TEES'],\n      //     hierarchy3: ['SPW MENS TEES'],\n      //     hierarchy4: ['LS TEE'],\n      //   },\n      //   hierarchyType: 'HIERARCHY5',\n      // };\n\n      _this.props.fetchPlannedReports(req).then(function (res) {\n        if (_.isEmpty(res)) {\n          _this.setState({\n            textStr: 'No data found. Please try with different filters.'\n          });\n        }\n      });\n    };\n\n    _this.coldef = function () {\n      if (_this.props.getPlannedTableData.length) {\n        var columns = [// {\n        //   Header: 'Plan ID',\n        //   accessor: 'promo_code',\n        //   disableGroupBy: true,\n        //   //   width: 50,\n        //   align: 'left',\n        //   enableRowSpan: true,\n        //   // cells:\n        // },\n        {\n          Header: 'Plan',\n          accessor: 'promo_id',\n          disableGroupBy: true,\n          Cell: function Cell(_ref) {\n            var row = _ref.row;\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 158\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 159\n              },\n              __self: this\n            }, row.original.plan ? row.original.plan : null));\n          },\n          align: 'center',\n          enableRowSpan: true,\n          downloadValue: 'plan'\n        }, {\n          Header: 'Scenario',\n          accessor: function accessor(d) {\n            return d.promo_id + d.promo_id;\n          },\n          disableGroupBy: true,\n          Cell: function Cell(_ref2) {\n            var row = _ref2.row,\n                rows = _ref2.rows;\n            return row.original.scenario ? row.original.scenario : null;\n          },\n          enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n          downloadValue: 'scenario'\n        }, {\n          Header: 'Start Date',\n          // accessor: 'startDate',\n          disableGroupBy: true,\n          accessor: 'promo_code',\n          Cell: function Cell(_ref3) {\n            var row = _ref3.row,\n                rows = _ref3.rows;\n            return row.original.startDate ? row.original.startDate : null;\n          },\n          enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n          downloadValue: 'startDate'\n        }, {\n          Header: 'End Date',\n          accessor: 'promotion_id',\n          disableGroupBy: true,\n          // accessor: 'promo_code',\n          Cell: function Cell(_ref4) {\n            var row = _ref4.row,\n                rows = _ref4.rows;\n            return row.original.endDate ? row.original.endDate : null;\n          },\n          enableRowSpan: true,\n          // enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n          downloadValue: 'endDate'\n        }, {\n          Header: 'Metrics',\n          accessor: 'metrices',\n          disableGroupBy: true,\n          //   width: 50,\n          align: 'left'\n        }]; // Object.keys(this.props.getPlannedTableData[0]).forEach((i) => {\n        //   if (!columns.map((c) => c.accessor).includes(i)) {\n        //     columns.push({\n        //       Header: i,\n        //       accessor: i,\n        //       disableGroupBy: true,\n        //       Cell: (props) => <div> {toUnit(props)} </div>,\n        //     });\n        //   }\n        // });\n        // let finalArr = this.props.weeks.length || arr;\n\n        if (_this.props.weeks.length) {\n          _this.props.weeks.forEach(function (week) {\n            columns.push({\n              Header: 'w' + week,\n              accessor: 'w' + week,\n              disableGroupBy: true,\n              downloadFormatter: toUnit,\n              Cell: function Cell(props) {\n                return React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 241\n                  },\n                  __self: this\n                }, \" \", props.value ? toUnit(props) : '-', \" \");\n              }\n            });\n          });\n        } else {\n          var arr = Object.keys(_this.props.getPlannedTableData[0]).filter(function (tableData) {\n            return tableData.startsWith('w');\n          });\n          arr.forEach(function (week) {\n            columns.push({\n              Header: week,\n              accessor: week,\n              disableGroupBy: true,\n              downloadFormatter: toUnit,\n              Cell: function Cell(props) {\n                return React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 254\n                  },\n                  __self: this\n                }, \" \", props.value ? toUnit(props) : '-', \" \");\n              }\n            });\n          });\n        }\n\n        return columns;\n      } else return [];\n    };\n\n    _this.state = {\n      textStr: 'Please select filters',\n      showTable: false,\n      filters: [{\n        type: 'hierarchy1',\n        isMandatory: true,\n        isMultiple: false\n      }, {\n        type: 'hierarchy2',\n        isMandatory: true,\n        isMultiple: true\n      }, {\n        type: 'hierarchy3',\n        isMandatory: true,\n        isMultiple: true\n      }, {\n        type: 'hierarchy4',\n        isMandatory: true,\n        isMultiple: true\n      }, {\n        type: 'hierarchy5',\n        isMandatory: true,\n        isMultiple: true\n      }, {\n        type: 'hierarchy6',\n        isMandatory: true,\n        isMultiple: true\n      }],\n      selectedItems: [],\n      firstCardText: 'Avg Markdown',\n      secondCardText: 'Sell through %',\n      thirdCardText: 'Margin %',\n      fourthCardText: 'Quantity Sold',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month'\n    };\n    return _this;\n  }\n\n  _createClass(planedReport, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        showTable: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          getPlannedMetricOptions = _this$props.getPlannedMetricOptions,\n          getPlannedTableData = _this$props.getPlannedTableData;\n      return React.createElement(\"div\", {\n        className: \"planned-report pl-2 pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(LoadingOverlay, {\n        loader: this.props.overlayLoaderState,\n        spinner: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"font-size-14  pad-10 markdown-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Markdown Optimization /\", React.createElement(\"span\", {\n        className: \"font-bold color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Actual Vs Planned Reports\"))), React.createElement(\"hr\", {\n        className: \"mb-2\",\n        style: {\n          marginTop: '-4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(Filters, {\n        onFilter: this.onFilter,\n        drop: true,\n        stores: true // dateRange\n        ,\n        hierarchy: this.state.filters,\n        onReset: function onReset(e) {\n          _this2.setState({\n            textStr: 'Please select filters to show Markdown plans'\n          });\n\n          _this2.props.onReset(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }))), this.state.showTable && getPlannedTableData.length > 0 ? React.createElement(\"div\", {\n        className: \"card CalendarMain promoCalendarDiv1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, React.createElement(ColSelBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"pad-15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        fileName: \"Actual vs planned report\",\n        showExport: true,\n        columns: this.coldef(),\n        data: getPlannedTableData,\n        isPagination: true,\n        rowsPerPage: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }))) : React.createElement(NoData, {\n        description: this.state.textStr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return planedReport;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    overlayLoaderState: store.loaderReducer.overlayLoaderState,\n    getPlannedTableData: store.plannedReportReducer.plannedReportsTableData,\n    getPlannedMetricOptions: store.plannedReportReducer.metricOptions.draft,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    selectedStores: store.filtersReducer.selectedStores,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks\n  };\n};\n\nvar mapActionsToProps = {\n  fetchPlannedReports: plannedReportsAction.fetchPlannedReports,\n  onReset: plannedReportsAction.onReset,\n  updateSidebar: plannedReportsAction.updateSidebar\n};\nexport default connect(mapStateToProps, mapActionsToProps)(planedReport); // export default planedReport;\n\nvar ColSelBtn = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Planned Reports/index.js"],"names":["React","Component","connect","Filters","DataTable","styled","plannedReportsAction","_","LoadingOverlay","NoData","toUnit","toast","planedReport","props","onHandleSelect","selectValues","setState","validateFilters","selectedHierarchy1","selectedHierarchy2","length","selectedHierarchy3","startDate","endDate","onFilter","filters","error","autoClose","hideProgressBar","showTable","req","hierarchy1","map","e","replace","hierarchy2","hierarchy3","hierarchy4","selectedHierarchy4","hierarchy5","selectedHierarchy5","hierarchy6","selectedHierarchy6","week","weeks","fetchPlannedReports","then","res","isEmpty","textStr","coldef","getPlannedTableData","columns","Header","accessor","disableGroupBy","Cell","row","original","plan","align","enableRowSpan","downloadValue","d","promo_id","rows","scenario","forEach","push","downloadFormatter","value","arr","Object","keys","filter","tableData","startsWith","state","type","isMandatory","isMultiple","selectedItems","firstCardText","secondCardText","thirdCardText","fourthCardText","firstCardFirstValue","firstCardSecondValue","secondCardFirstValue","secondCardSecondValue","thirdCardFirstValue","thirdCardSecondValue","fourthCardFirstValue","fourthCardSecondValue","cardWeekText","cardMonthText","getPlannedMetricOptions","overlayLoaderState","marginTop","onReset","mapStateToProps","store","loaderReducer","plannedReportReducer","plannedReportsTableData","metricOptions","draft","filtersReducer","selectedStores","mapActionsToProps","updateSidebar","ColSelBtn","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Filters from '../../services/filters';\nimport DataTable from '../../services/reactTable';\nimport styled from 'styled-components';\nimport plannedReportsAction from '../../actions/plannedReportsAction';\nimport _ from 'lodash';\nimport LoadingOverlay from '../../utils/Loader';\nimport NoData from '../noTableData';\n// import card1Image from '../../images/card1Image.png';\n// import card2Image from '../../images/card2Image.png';\n// import card3Image from '../../images/card3Image.png';\n// import card4Image from '../../images/card4Image.png';\nimport { toUnit } from '../../helper/formatter';\nimport { toast } from 'react-toastify';\n\nclass planedReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textStr: 'Please select filters',\n      showTable: false,\n      filters: [\n        {\n          type: 'hierarchy1',\n          isMandatory: true,\n          isMultiple: false,\n        },\n        {\n          type: 'hierarchy2',\n          isMandatory: true,\n          isMultiple: true,\n        },\n        {\n          type: 'hierarchy3',\n          isMandatory: true,\n          isMultiple: true,\n        },\n        {\n          type: 'hierarchy4',\n          isMandatory: true,\n          isMultiple: true,\n        },\n        {\n          type: 'hierarchy5',\n          isMandatory: true,\n          isMultiple: true,\n        },\n        {\n          type: 'hierarchy6',\n          isMandatory: true,\n          isMultiple: true,\n        },\n      ],\n\n      selectedItems: [],\n      firstCardText: 'Avg Markdown',\n      secondCardText: 'Sell through %',\n      thirdCardText: 'Margin %',\n      fourthCardText: 'Quantity Sold',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month',\n    };\n  }\n  onHandleSelect = (selectValues) => this.setState({ selectValues });\n  validateFilters = () => {\n    return (\n      this.props.selectedHierarchy1 &&\n      this.props.selectedHierarchy2.length &&\n      this.props.selectedHierarchy3.length &&\n      this.props.startDate &&\n      this.props.endDate\n    );\n  };\n  onFilter = (filters) => {\n    if (!this.validateFilters()) {\n      toast.error(`Please select mandatory filters`, {\n        autoClose: 15000,\n        hideProgressBar: true,\n      });\n      return;\n    }\n    this.setState({\n      showTable: true,\n    });\n    let req = {\n      filters: {\n        hierarchy1: this.props.selectedHierarchy1.map((e) => e.replace(/'/g, \"''\")),\n        hierarchy2: this.props.selectedHierarchy2.map((e) => e.replace(/'/g, \"''\")),\n        hierarchy3: this.props.selectedHierarchy3.map((e) => e.replace(/'/g, \"''\")),\n        hierarchy4: this.props.selectedHierarchy4.map((e) => e.replace(/'/g, \"''\")),\n        hierarchy5: this.props.selectedHierarchy5.map((e) => e.replace(/'/g, \"''\")),\n        hierarchy6: this.props.selectedHierarchy6.map((e) => e.replace(/'/g, \"''\")),\n      },\n      startDate: this.props.startDate,\n      endDate: this.props.endDate,\n      week: this.props.weeks,\n    };\n    // req = {\n    //   filters: {\n    //     hierarchy1: ['MENS'],\n    //     hierarchy2: ['SPORTSWEAR MENS TEES'],\n    //     hierarchy3: ['SPW MENS TEES'],\n    //     hierarchy4: ['LS TEE'],\n    //     hierarchy5: ['seasonal key items'],\n    //     hierarchy6: ['Prior to Jan20'],\n    //   },\n    //   startDate: '06-01-2020',\n    //   endDate: '08-02-2020',\n    //   week: [23, 24, 25, 26, 27, 28, 29, 30, 31],\n    // };\n    // req = {\n    //   filters: {\n    //     hierarchy1: ['MENS'],\n    //     hierarchy2: ['SPORTSWEAR MENS TEES'],\n    //     hierarchy3: ['SPW MENS TEES'],\n    //     hierarchy4: ['LS TEE'],\n    //   },\n    //   hierarchyType: 'HIERARCHY5',\n    // };\n    this.props.fetchPlannedReports(req).then((res) => {\n      if (_.isEmpty(res)) {\n        this.setState({\n          textStr: 'No data found. Please try with different filters.',\n        });\n      }\n    });\n  };\n\n  coldef = () => {\n    if (this.props.getPlannedTableData.length) {\n      let columns = [\n        // {\n        //   Header: 'Plan ID',\n\n        //   accessor: 'promo_code',\n        //   disableGroupBy: true,\n        //   //   width: 50,\n\n        //   align: 'left',\n        //   enableRowSpan: true,\n        //   // cells:\n        // },\n\n        {\n          Header: 'Plan',\n          accessor: 'promo_id',\n          disableGroupBy: true,\n          Cell: ({ row }) => (\n            <div>\n              <span>{row.original.plan ? row.original.plan : null}</span>\n              {/* <div>\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={() => {\n                    this.props.updateSidebar('/vis/Markdown/create-markdown');\n                    this.props.history.push({\n                      pathname: `/vis/Markdown/create-markdown`,\n                      state: { isEdit: true, planId: row.original.promo_id },\n                    });\n                  }}>\n                  <span>\n                    <i className=\"fa fa-pencil color-blue\">Edit</i>\n                  </span>\n                </button>\n              </div> */}\n            </div>\n          ),\n          align: 'center',\n          enableRowSpan: true,\n          downloadValue: 'plan',\n        },\n        {\n          Header: 'Scenario',\n          accessor: (d) => d.promo_id + d.promo_id,\n          disableGroupBy: true,\n          Cell: ({ row, rows }) => (row.original.scenario ? row.original.scenario : null),\n          enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n          downloadValue: 'scenario',\n        },\n        {\n          Header: 'Start Date',\n          // accessor: 'startDate',\n          disableGroupBy: true,\n          accessor: 'promo_code',\n          Cell: ({ row, rows }) => (row.original.startDate ? row.original.startDate : null),\n          enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n          downloadValue: 'startDate',\n        },\n        {\n          Header: 'End Date',\n          accessor: 'promotion_id',\n          disableGroupBy: true,\n          // accessor: 'promo_code',\n          Cell: ({ row, rows }) => (row.original.endDate ? row.original.endDate : null),\n          enableRowSpan: true,\n          // enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n          downloadValue: 'endDate',\n        },\n        {\n          Header: 'Metrics',\n          accessor: 'metrices',\n          disableGroupBy: true,\n          //   width: 50,\n          align: 'left',\n        },\n      ];\n      // Object.keys(this.props.getPlannedTableData[0]).forEach((i) => {\n      //   if (!columns.map((c) => c.accessor).includes(i)) {\n      //     columns.push({\n      //       Header: i,\n      //       accessor: i,\n      //       disableGroupBy: true,\n      //       Cell: (props) => <div> {toUnit(props)} </div>,\n      //     });\n      //   }\n      // });\n\n      // let finalArr = this.props.weeks.length || arr;\n      if (this.props.weeks.length) {\n        this.props.weeks.forEach((week) => {\n          columns.push({\n            Header: 'w' + week,\n            accessor: 'w' + week,\n            disableGroupBy: true,\n            downloadFormatter: toUnit,\n            Cell: (props) => <div> {props.value ? toUnit(props) : '-'} </div>,\n          });\n        });\n      } else {\n        let arr = Object.keys(this.props.getPlannedTableData[0]).filter((tableData) =>\n          tableData.startsWith('w')\n        );\n        arr.forEach((week) => {\n          columns.push({\n            Header: week,\n            accessor: week,\n            disableGroupBy: true,\n            downloadFormatter: toUnit,\n            Cell: (props) => <div> {props.value ? toUnit(props) : '-'} </div>,\n          });\n        });\n      }\n\n      return columns;\n    } else return [];\n  };\n\n  componentDidMount() {\n    this.setState({\n      showTable: false,\n    });\n  }\n  render() {\n    let { getPlannedMetricOptions, getPlannedTableData } = this.props;\n    return (\n      <div className=\"planned-report pl-2 pr-2\">\n        <LoadingOverlay loader={this.props.overlayLoaderState} spinner>\n          <div className=\"card mb-4\">\n            <div>\n              <h4 className=\"font-size-14  pad-10 markdown-heading\">\n                Markdown Optimization /\n                <span className=\"font-bold color-blue\">Actual Vs Planned Reports</span>\n              </h4>\n            </div>\n            <hr\n              className=\"mb-2\"\n              style={{\n                marginTop: '-4px',\n              }}\n            />\n            <div className=\"mb-4\">\n              <Filters\n                onFilter={this.onFilter}\n                drop\n                stores\n                // dateRange\n                hierarchy={this.state.filters}\n                onReset={(e) => {\n                  this.setState({\n                    textStr: 'Please select filters to show Markdown plans',\n                  });\n                  this.props.onReset(e);\n                }}\n              />\n            </div>\n          </div>\n          {/* <div className=\"row\" style={{ padding: '1px 18px' }}> */}\n          {/* <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n              <CardComponent\n                cardImage={card1Image}\n                cardText={this.state.firstCardText}\n                cardValue={this.state.firstCardFirstValue}\n                cardValueSecond={this.state.firstCardSecondValue}\n \n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border1',\n                  cardValue: 'card1-value',\n                  cardImg: 'card1-img',\n                  cardValueSecond: 'card-value-second',\n                  cardSubHeading: 'card-subHeading',\n                }}\n              />\n            </div>\n            <div className=\"col-md-3 col-sm-3 col-xs-6\">\n              <CardComponent\n                cardImage={card2Image}\n                cardText={this.state.secondCardText}\n                cardValue={this.state.secondCardFirstValue}\n                cardValueSecond={this.state.secondCardSecondValue}\n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border2',\n                  cardValue: 'card1-value',\n                  cardImg: 'card2-img',\n                  cardValueSecond: 'card-value-second',\n                  cardSubHeading: 'card-subHeading',\n                }}\n              />\n            </div>\n            <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n              <CardComponent\n                cardImage={card3Image}\n                cardText={this.state.thirdCardText}\n                cardValue={this.state.thirdCardFirstValue}\n                cardValueSecond={this.state.thirdCardSecondValue}\n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border3',\n                  cardValue: 'card1-value',\n                  cardImg: 'card3-img',\n                  cardValueSecond: 'card-value-second',\n                  cardSubHeading: 'card-subHeading',\n                }}\n              />\n            </div>\n            <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n              <CardComponent\n                cardImage={card4Image}\n                cardText={this.state.fourthCardText}\n                cardValue={this.state.fourthCardFirstValue}\n                cardValueSecond={this.state.fourthCardSecondValue}\n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border4',\n                  cardValue: 'card1-value',\n                  cardImg: 'card4-img',\n                }}\n              />\n            </div>\n          </div> */}\n          {this.state.showTable && getPlannedTableData.length > 0 ? (\n            <div className=\"card CalendarMain promoCalendarDiv1 mt-3\">\n              <ColSelBtn>\n                {/* <ColumnSelection\n                tab=\"draft\"\n                options={getPlannedMetricOptions}\n                onHandleSelect={this.onHandleSelect}\n                selectedItems={this.state.selectedItems}\n                attributes={attributes}\n                contentRenderer={true}\n              /> */}\n                {/* <Download data={getPlannedTableData} /> */}\n              </ColSelBtn>\n\n              <div className=\"pad-15\">\n                <DataTable\n                  fileName=\"Actual vs planned report\"\n                  showExport={true}\n                  columns={this.coldef()}\n                  data={getPlannedTableData}\n                  isPagination={true}\n                  rowsPerPage={12}\n                />\n              </div>\n            </div>\n          ) : (\n            <NoData description={this.state.textStr} />\n          )}\n        </LoadingOverlay>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (store) => {\n  return {\n    overlayLoaderState: store.loaderReducer.overlayLoaderState,\n    getPlannedTableData: store.plannedReportReducer.plannedReportsTableData,\n    getPlannedMetricOptions: store.plannedReportReducer.metricOptions.draft,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    selectedStores: store.filtersReducer.selectedStores,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks,\n  };\n};\nconst mapActionsToProps = {\n  fetchPlannedReports: plannedReportsAction.fetchPlannedReports,\n  onReset: plannedReportsAction.onReset,\n  updateSidebar: plannedReportsAction.updateSidebar,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(planedReport);\n// export default planedReport;\nconst ColSelBtn = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n"]},"metadata":{},"sourceType":"module"}