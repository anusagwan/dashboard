{"ast":null,"code":"import axios from '../utils/axios';\nimport { config } from '../utils/config';\nvar summaryAction = {\n  onResetDraftTable: function onResetDraftTable() {\n    return function (dispatch) {\n      dispatch({\n        type: 'RESET_DRAFT_MARKDOWNS'\n      });\n    };\n  },\n  onResetStatusTable: function onResetStatusTable() {\n    return function (dispatch) {\n      dispatch({\n        type: 'RESET_STATUS_MARKDOWNS'\n      });\n    };\n  },\n  onResetFinalizeTable: function onResetFinalizeTable() {\n    return function (dispatch) {\n      dispatch({\n        type: 'RESET_FINALIZE_MARKDOWNS'\n      });\n    };\n  },\n  getMarkdowns: function getMarkdowns(payload) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getMarkDowns/\"),\n        method: 'POST',\n        data: payload\n      }).then(function (resp) {\n        var _resp$data$data = resp.data.data,\n            columnHeaders = _resp$data$data.columnHeaders,\n            markdown_data = _resp$data$data.markdown_data;\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n\n        if (payload.status === 'draft') {\n          dispatch({\n            type: 'SET_DRAFT_MARK_DOWNS',\n            value: markdown_data\n          });\n          dispatch({\n            type: 'SET_DRAFT_MD_COLUMN_HEADERS',\n            value: columnHeaders\n          });\n        }\n\n        if (!payload.status) {\n          dispatch({\n            type: 'SET_STATUS_MARK_DOWNS',\n            value: markdown_data\n          });\n          dispatch({\n            type: 'SET_STATUS_MD_COLUMN_HEADERS',\n            value: columnHeaders\n          });\n        }\n\n        dispatch({\n          type: 'SET_MARK_DOWNS',\n          value: markdown_data\n        });\n        dispatch({\n          type: 'SET_MD_COLUMN_HEADERS',\n          value: columnHeaders\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return resp.data.data;\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  setMarkDowns: function setMarkDowns(payload) {\n    return function (dispatch) {\n      dispatch({\n        type: 'SET_MARK_DOWNS',\n        value: payload\n      });\n      dispatch({\n        type: 'SET_DRAFT_MARK_DOWNS',\n        value: payload\n      });\n      dispatch({\n        type: 'SET_STATUS_MARK_DOWNS',\n        value: payload\n      });\n    };\n  },\n  setMDColumnHeaders: function setMDColumnHeaders(payload) {\n    return function (dispatch) {\n      dispatch({\n        type: 'SET_MD_COLUMN_HEADERS',\n        value: payload\n      });\n      dispatch({\n        type: 'SET_DRAFT_MD_COLUMN_HEADERS',\n        value: payload\n      });\n      dispatch({\n        type: 'SET_STATUS_MD_COLUMN_HEADERS',\n        value: payload\n      });\n    };\n  },\n  sendForApproval: function sendForApproval(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/updateMarkdownStatus/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return resp;\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return err;\n      });\n    };\n  },\n  getKPIdata: function getKPIdata(payload) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getMarkDowns/\"),\n        method: 'POST',\n        data: payload\n      }).then(function (resp) {\n        var kpiResponse = resp.kpiResponse;\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        dispatch({\n          type: 'SET_KPI_DATA',\n          value: kpiResponse\n        });\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  }\n};\nexport default summaryAction;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/summaryAction.js"],"names":["axios","config","summaryAction","onResetDraftTable","dispatch","type","onResetStatusTable","onResetFinalizeTable","getMarkdowns","payload","status","url","createMarkdownURL","method","data","then","resp","columnHeaders","markdown_data","value","catch","err","setMarkDowns","setMDColumnHeaders","sendForApproval","reqObj","getKPIdata","kpiResponse"],"mappings":"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","sourcesContent":["import axios from '../utils/axios';\nimport { config } from '../utils/config';\n\nconst summaryAction = {\n  onResetDraftTable: () => {\n    return (dispatch) => {\n      dispatch({\n        type: 'RESET_DRAFT_MARKDOWNS',\n      });\n    };\n  },\n  onResetStatusTable: () => {\n    return (dispatch) => {\n      dispatch({\n        type: 'RESET_STATUS_MARKDOWNS',\n      });\n    };\n  },\n  onResetFinalizeTable: () => {\n    return (dispatch) => {\n      dispatch({\n        type: 'RESET_FINALIZE_MARKDOWNS',\n      });\n    };\n  },\n  getMarkdowns: (payload) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/getMarkDowns/`,\n        method: 'POST',\n        data: payload,\n      })\n        .then((resp) => {\n          const { columnHeaders, markdown_data } = resp.data.data;\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          if (payload.status === 'draft') {\n            dispatch({\n              type: 'SET_DRAFT_MARK_DOWNS',\n              value: markdown_data,\n            });\n            dispatch({\n              type: 'SET_DRAFT_MD_COLUMN_HEADERS',\n              value: columnHeaders,\n            });\n          }\n          if (!payload.status) {\n            dispatch({\n              type: 'SET_STATUS_MARK_DOWNS',\n              value: markdown_data,\n            });\n            dispatch({\n              type: 'SET_STATUS_MD_COLUMN_HEADERS',\n              value: columnHeaders,\n            });\n          }\n\n          dispatch({\n            type: 'SET_MARK_DOWNS',\n            value: markdown_data,\n          });\n          dispatch({\n            type: 'SET_MD_COLUMN_HEADERS',\n            value: columnHeaders,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return resp.data.data;\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n  setMarkDowns: (payload) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'SET_MARK_DOWNS',\n        value: payload,\n      });\n      dispatch({\n        type: 'SET_DRAFT_MARK_DOWNS',\n        value: payload,\n      });\n      dispatch({\n        type: 'SET_STATUS_MARK_DOWNS',\n        value: payload,\n      });\n    };\n  },\n  setMDColumnHeaders: (payload) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'SET_MD_COLUMN_HEADERS',\n        value: payload,\n      });\n      dispatch({\n        type: 'SET_DRAFT_MD_COLUMN_HEADERS',\n        value: payload,\n      });\n      dispatch({\n        type: 'SET_STATUS_MD_COLUMN_HEADERS',\n        value: payload,\n      });\n    };\n  },\n  sendForApproval: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/updateMarkdownStatus/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return resp;\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return err;\n        });\n    };\n  },\n  getKPIdata: (payload) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/getMarkDowns/`,\n        method: 'POST',\n        data: payload,\n      })\n        .then((resp) => {\n          const { kpiResponse } = resp;\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          dispatch({\n            type: 'SET_KPI_DATA',\n            value: kpiResponse,\n          });\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n};\n\nexport default summaryAction;\n"]},"metadata":{},"sourceType":"module"}