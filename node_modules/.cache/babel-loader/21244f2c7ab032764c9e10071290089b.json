{"ast":null,"code":"import axios from 'axios';\nimport { config } from '../utils/config';\nvar plannedReportsActions = {\n  onReset: function onReset() {\n    return function (dispatch) {\n      dispatch({\n        type: 'RESET_PLANNED_REPORTS_DATA'\n      });\n    };\n  },\n  fetchPlannedReports: function fetchPlannedReports(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getActualAndPlanned/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        dispatch({\n          type: 'GET_PLANNED_REPORTS_DATA',\n          payload: resp.data.data.length > 0 ? resp.data.data.map(function (d) {\n            return d.data;\n          }) : []\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      }).catch(function (err) {\n        dispatch({\n          type: 'GET_PLANNED_REPORTS_ERROR',\n          payload: err\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  }\n};\nexport default plannedReportsActions;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/plannedReportsAction.js"],"names":["axios","config","plannedReportsActions","onReset","dispatch","type","fetchPlannedReports","reqObj","payload","status","url","createMarkdownURL","method","data","then","resp","length","map","d","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,IAAMC,qBAAqB,GAAG;AAC5BC,EAAAA,OAAO,EAAE,mBAAM;AACb,WAAO,UAACC,QAAD,EAAc;AACnBA,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGD,KAJD;AAKD,GAP2B;AAQ5BC,EAAAA,mBAAmB,EAAE,6BAACC,MAAD,EAAY;AAC/B,WAAO,UAACH,QAAD,EAAc;AACnBA,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAE,cADC;AAEPG,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE;AADD;AAFF,OAAD,CAAR;AAMAT,MAAAA,KAAK,CAAC;AACJU,QAAAA,GAAG,YAAKT,MAAM,CAACU,iBAAZ,0BADC;AAEJC,QAAAA,MAAM,EAAE,MAFJ;AAGJC,QAAAA,IAAI,EAAEN;AAHF,OAAD,CAAL,CAKGO,IALH,CAKQ,UAACC,IAAD,EAAU;AACdX,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAE,0BADC;AAEPG,UAAAA,OAAO,EAAEO,IAAI,CAACF,IAAL,CAAUA,IAAV,CAAeG,MAAf,GAAwB,CAAxB,GAA4BD,IAAI,CAACF,IAAL,CAAUA,IAAV,CAAeI,GAAf,CAAmB,UAACC,CAAD;AAAA,mBAAOA,CAAC,CAACL,IAAT;AAAA,WAAnB,CAA5B,GAAgE;AAFlE,SAAD,CAAR;AAIAT,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAE,cADC;AAEPG,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE;AADD;AAFF,SAAD,CAAR;AAMD,OAhBH,EAiBGU,KAjBH,CAiBS,UAACC,GAAD,EAAS;AACdhB,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAE,2BADC;AAEPG,UAAAA,OAAO,EAAEY;AAFF,SAAD,CAAR;AAIAhB,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAE,cADC;AAEPG,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE;AADD;AAFF,SAAD,CAAR;AAMD,OA5BH;AA6BD,KApCD;AAqCD;AA9C2B,CAA9B;AAiDA,eAAeP,qBAAf","sourcesContent":["import axios from 'axios';\nimport { config } from '../utils/config';\n\nconst plannedReportsActions = {\n  onReset: () => {\n    return (dispatch) => {\n      dispatch({\n        type: 'RESET_PLANNED_REPORTS_DATA',\n      });\n    };\n  },\n  fetchPlannedReports: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        url: `${config.createMarkdownURL}/getActualAndPlanned/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          dispatch({\n            type: 'GET_PLANNED_REPORTS_DATA',\n            payload: resp.data.data.length > 0 ? resp.data.data.map((d) => d.data) : [],\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'GET_PLANNED_REPORTS_ERROR',\n            payload: err,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n};\n\nexport default plannedReportsActions;\n"]},"metadata":{},"sourceType":"module"}