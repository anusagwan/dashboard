{"ast":null,"code":"import _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Header/Header.js\";\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser, someAction } from '../../actions/auth';\nimport { clearCurrentChartdata } from '../../actions/chart';\nimport { dataLoadStatusCheck } from '../../actions/dataLoadProcess';\nimport './headerStyle.css';\nvar isApiStillRunning = false;\n\nvar Header =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Header, _Component);\n\n  function Header() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Header)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.dataLoadStatusCheck = function () {\n      _this.props.dataLoadStatusCheck().then(function (res) {\n        isApiStillRunning = false;\n      });\n    };\n\n    _this.onLogout = function (e) {\n      _this.props.history.push('/QuIQ');\n    };\n\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.dataLoadStatusCheck();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!isApiStillRunning && this.props.overlayLoaderState && prevProps !== this.props) {\n        isApiStillRunning = true;\n        this.dataLoadStatusCheck();\n      }\n    }\n  }, {\n    key: \"onLogoutClick\",\n    value: function onLogoutClick() {\n      this.props.history.push('/login');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: this.props.dataLoadStatus ? 'headerContainer batch-process' : 'headerContainer',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.props.dataLoadStatus ? React.createElement(\"div\", {\n        className: \"batch-process-notification\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Data Load process currently underway. Create Markdown will be disabled for time being!\") : null, React.createElement(\"nav\", {\n        className: \"navbar navbar-expand-sm navbar-light bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"navbar-brand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"titleColor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"MarkSmart\")), React.createElement(\"button\", {\n        className: \"navbar-toggler\",\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#navbarMenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"collapse navbar-collapse\",\n        id: \"navbar-menu-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"navbar-nav ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"btn HeaderNamebutton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, localStorage.getItem('name')[0]))), React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"header-username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Hi \", localStorage.getItem('name')))), React.createElement(\"li\", {\n        title: \"Settings\",\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-cog iconHeader\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        title: \"Logout\",\n        onClick: function onClick() {\n          _this2.onLogoutClick();\n        },\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        onClick: function onClick() {\n          return _this2.props.logoutUser();\n        },\n        className: \"fa fa-sign-out iconHeader\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return Header;\n}(Component);\n\nHeader.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  authReducer: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    authReducer: state.authReducer,\n    dataLoadStatus: state.dataLoadReducer.dataLoadStatus,\n    overlayLoaderState: state.loaderReducer.overlayLoaderState\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logoutUser: logoutUser,\n  clearCurrentChartdata: clearCurrentChartdata,\n  someAction: someAction,\n  dataLoadStatusCheck: dataLoadStatusCheck\n})(withRouter(Header));","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Header/Header.js"],"names":["React","Component","withRouter","Link","PropTypes","connect","logoutUser","someAction","clearCurrentChartdata","dataLoadStatusCheck","isApiStillRunning","Header","props","then","res","onLogout","e","history","push","prevProps","overlayLoaderState","dataLoadStatus","localStorage","getItem","onLogoutClick","propTypes","func","isRequired","authReducer","object","mapStateToProps","state","ownProps","dataLoadReducer","loaderReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser, someAction } from '../../actions/auth';\nimport { clearCurrentChartdata } from '../../actions/chart';\nimport { dataLoadStatusCheck } from '../../actions/dataLoadProcess';\nimport './headerStyle.css';\n\nvar isApiStillRunning = false;\n\nclass Header extends Component {\n  componentDidMount() {\n    this.dataLoadStatusCheck();\n  }\n  dataLoadStatusCheck = () => {\n    this.props.dataLoadStatusCheck().then((res) => {\n      isApiStillRunning = false;\n    });\n  };\n  componentDidUpdate(prevProps) {\n    if (!isApiStillRunning && this.props.overlayLoaderState && prevProps !== this.props) {\n      isApiStillRunning = true;\n      this.dataLoadStatusCheck();\n    }\n  }\n  onLogout = (e) => {\n    this.props.history.push('/QuIQ');\n  };\n\n  onLogoutClick() {\n    this.props.history.push('/login');\n  }\n  render() {\n    return (\n      <div\n        className={this.props.dataLoadStatus ? 'headerContainer batch-process' : 'headerContainer'}>\n        {this.props.dataLoadStatus ? (\n          <div className=\"batch-process-notification\">\n            Data Load process currently underway. Create Markdown will be disabled for time being!\n          </div>\n        ) : null}\n        <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n          <p className=\"navbar-brand\">\n            <span id=\"titleColor\">MarkSmart</span>\n          </p>\n          <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarMenu\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbar-menu-right\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <span>\n                  <div className=\"btn HeaderNamebutton\">{localStorage.getItem('name')[0]}</div>\n                </span>\n              </li>\n              <li className=\"nav-item\">\n                <span>\n                  <p className=\"header-username\">Hi {localStorage.getItem('name')}</p>\n                </span>\n              </li>\n              <li title=\"Settings\" className=\"nav-item\">\n                <span>\n                  <i className=\"fa fa-cog iconHeader\" aria-hidden=\"true\"></i>\n                </span>\n              </li>\n              <li\n                title=\"Logout\"\n                onClick={() => {\n                  this.onLogoutClick();\n                }}\n                className=\"nav-item\">\n                <Link to=\"/\">\n                  <i\n                    onClick={() => this.props.logoutUser()}\n                    className=\"fa fa-sign-out iconHeader\"\n                    aria-hidden=\"true\"></i>\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  authReducer: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  authReducer: state.authReducer,\n  dataLoadStatus: state.dataLoadReducer.dataLoadStatus,\n  overlayLoaderState: state.loaderReducer.overlayLoaderState,\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser,\n  clearCurrentChartdata,\n  someAction,\n  dataLoadStatusCheck,\n})(withRouter(Header));\n"]},"metadata":{},"sourceType":"module"}