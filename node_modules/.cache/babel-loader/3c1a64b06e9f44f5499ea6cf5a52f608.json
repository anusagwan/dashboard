{"ast":null,"code":"var _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/draftStatus/draft/coldef.js\";\nimport React from 'react';\nimport { toPercentage } from '../../../helper/formatter';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport numeral from 'numeral';\nexport default (function () {\n  var colDef = [// {\n  //   Header: 'MD Plan',\n  //   accessor: 'md_plan',\n  //   disableGroupBy: true,\n  //   enableRowSpan: 'markdown_id',\n  //   filter: (rows, id, filterType) =>\n  //     rows.filter((row) => {\n  //       return row.original.md_plan ? row.original.md_plan.startsWith(filterType) : null;\n  //     }),\n  //   Cell: ({ row }) => (\n  //     <div>\n  //       <span>{row.original.md_plan ? row.original.md_plan : null}</span>\n  //       <div className=\"mt-2 mb-2\">\n  //         {row.original.md_plan ? (\n  //           <button\n  //             className=\"btn btn-secondary\"\n  //             onClick={() => {\n  //               // console.log(history.location, 'wiiiiii');\n  //               // this.props.updateSidebar('/vis/Markdown/create-markdown');\n  //               // window.history.push({\n  //               //   pathname: `/vis/Markdown/create-markdown`,\n  //               //   state: { isEdit: true, planId: row.original.markdown_id },\n  //               // });\n  //             }}>\n  //             <span>\n  //               <i className=\"fa fa-pencil color-blue\">Edit</i>\n  //             </span>\n  //           </button>\n  //         ) : (\n  //           ''\n  //         )}\n  //       </div>\n  //     </div>\n  //   ),\n  //   align: 'center',\n  //   enableRowSpan: true,\n  //   downloadValue: 'plan',\n  // },\n  {\n    Header: 'Scenario',\n    accessor: 'scenario',\n    // showFilter: true,\n    disableGroupBy: true,\n    enableRowSpan: 'markdown_id',\n    width: 50\n  }, {\n    // Build our expander column\n    id: 'expander',\n    // Make sure it has an ID\n    // Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n    //   <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}</span>\n    // ),\n    Header: 'Date Range',\n    width: 15,\n    Cell: function Cell(_ref) {\n      var row = _ref.row;\n      // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n      // to build the toggle for expanding a row\n      return row.canExpand ? React.createElement(\"span\", Object.assign({}, row.getToggleRowExpandedProps({\n        style: {\n          // We can even use the row.depth property\n          // and paddingLeft to indicate the depth\n          // of the row\n          paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n        }\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), moment(row.original.start_date).format('YYYY/MM/DD'), \" -\", ' ', moment(row.original.end_date).format('YYYY/MM/DD'), \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n        class: \"fa fa-angle-down expanded-icon-size color-blue\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }) : React.createElement(\"i\", {\n        class: \"fa fa-angle-right expanded-icon-size color-blue\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })) : null;\n    }\n  }, {\n    Header: 'Time Period',\n    accessor: 'week_num',\n    disableGroupBy: false,\n    isGroupBy: false,\n    width: 50,\n    Aggregated: function Aggregated(_ref2) {\n      var value = _ref2.value,\n          row = _ref2.row;\n      return \"weeks (\".concat(row.subRows.length, \")\");\n    }\n  }, {\n    Header: 'Sell through %',\n    accessor: 'sell_through',\n    disableGroupBy: true,\n    width: 50,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    },\n    Aggregated: function Aggregated(row) {\n      var val = parseFloat(row.row.original.overall_sell_through);\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, val ? numeral(val / 100).format('0%') : '-');\n    }\n  }, {\n    Header: 'Markdown %',\n    accessor: 'markdown_perc',\n    disableGroupBy: true,\n    width: 70,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    },\n    aggregate: 'average',\n    Aggregated: function Aggregated(_ref3) {\n      var row = _ref3.row;\n      var val = parseFloat(row.original.overall_markdown_perc);\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, val ? numeral(val / 100).format('0%') : '-');\n    }\n  }, // {\n  //   Header: 'Margin %',\n  //   accessor: 'margin_perc',\n  //   disableGroupBy: true,\n  //   width: 70,\n  //   Cell: (props) => <div> {toPercentage(props)} </div>,\n  //   Aggregated: (row) => {\n  //     let val = row.row.original.overall_margin;\n  //     return <span>{val ? parseFloat(val).toFixed(2) : '-'}</span>;\n  //   },\n  // },\n  {\n    Header: 'Status',\n    accessor: 'status',\n    disableGroupBy: true,\n    // showFilter: true,\n    Cell: StatusCellStyling\n  }];\n  return colDef;\n});\n\nfunction StatusCellStyling(_ref4) {\n  var value = _ref4.value;\n\n  switch (value) {\n    case 'rejected':\n      return React.createElement(\"span\", {\n        style: {\n          textTransform: 'capitalize'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-ban fa-lg\",\n        \"aria-hidden\": \"true\",\n        style: {\n          color: '#D84039'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), ' ', value, \" \\xA0 \\xA0\", ' ');\n\n    case 'draft':\n      return React.createElement(\"span\", {\n        style: {\n          textTransform: 'capitalize'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-edit fa-lg\",\n        \"aria-hidden\": \"true\",\n        style: {\n          color: '#44677B'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), ' ', value, \" \\xA0 \\xA0\", ' ');\n\n    case 'pending':\n      return React.createElement(\"span\", {\n        style: {\n          textTransform: 'capitalize'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-exclamation-circle fa-lg\",\n        style: {\n          color: '#E0D337'\n        },\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), ' ', value);\n\n    case 'approved':\n      return React.createElement(\"span\", {\n        style: {\n          textTransform: 'capitalize'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-check-circle fa-lg\",\n        \"aria-hidden\": \"true\",\n        style: {\n          color: '#59C770'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), ' ', value);\n\n    default:\n      return '';\n  }\n}","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/draftStatus/draft/coldef.js"],"names":["React","toPercentage","_","moment","numeral","colDef","Header","accessor","disableGroupBy","enableRowSpan","width","id","Cell","row","canExpand","getToggleRowExpandedProps","style","paddingLeft","depth","original","start_date","format","end_date","isExpanded","isGroupBy","Aggregated","value","subRows","length","props","val","parseFloat","overall_sell_through","aggregate","overall_markdown_perc","StatusCellStyling","textTransform","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { toPercentage } from '../../../helper/formatter';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport numeral from 'numeral';\n\nexport default () => {\n  const colDef = [\n    // {\n    //   Header: 'MD Plan',\n    //   accessor: 'md_plan',\n    //   disableGroupBy: true,\n    //   enableRowSpan: 'markdown_id',\n    //   filter: (rows, id, filterType) =>\n    //     rows.filter((row) => {\n    //       return row.original.md_plan ? row.original.md_plan.startsWith(filterType) : null;\n    //     }),\n    //   Cell: ({ row }) => (\n    //     <div>\n    //       <span>{row.original.md_plan ? row.original.md_plan : null}</span>\n    //       <div className=\"mt-2 mb-2\">\n    //         {row.original.md_plan ? (\n    //           <button\n    //             className=\"btn btn-secondary\"\n    //             onClick={() => {\n    //               // console.log(history.location, 'wiiiiii');\n    //               // this.props.updateSidebar('/vis/Markdown/create-markdown');\n    //               // window.history.push({\n    //               //   pathname: `/vis/Markdown/create-markdown`,\n    //               //   state: { isEdit: true, planId: row.original.markdown_id },\n    //               // });\n    //             }}>\n    //             <span>\n    //               <i className=\"fa fa-pencil color-blue\">Edit</i>\n    //             </span>\n    //           </button>\n    //         ) : (\n    //           ''\n    //         )}\n    //       </div>\n    //     </div>\n    //   ),\n    //   align: 'center',\n    //   enableRowSpan: true,\n    //   downloadValue: 'plan',\n    // },\n    {\n      Header: 'Scenario',\n      accessor: 'scenario',\n      // showFilter: true,\n      disableGroupBy: true,\n      enableRowSpan: 'markdown_id',\n      width: 50,\n    },\n    {\n      // Build our expander column\n      id: 'expander', // Make sure it has an ID\n      // Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n      //   <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}</span>\n      // ),\n      Header: 'Date Range',\n      width: 15,\n      Cell: ({ row }) => {\n        // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n        // to build the toggle for expanding a row\n\n        return row.canExpand ? (\n          <span\n            {...row.getToggleRowExpandedProps({\n              style: {\n                // We can even use the row.depth property\n                // and paddingLeft to indicate the depth\n                // of the row\n                paddingLeft: `${row.depth * 2}rem`,\n              },\n            })}>\n            {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n            {moment(row.original.end_date).format('YYYY/MM/DD')}&nbsp;&nbsp;&nbsp;\n            {row.isExpanded ? (\n              <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n            ) : (\n              <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n            )}\n          </span>\n        ) : null;\n      },\n    },\n    {\n      Header: 'Time Period',\n      accessor: 'week_num',\n      disableGroupBy: false,\n      isGroupBy: false,\n      width: 50,\n      Aggregated: ({ value, row }) => `weeks (${row.subRows.length})`,\n    },\n    {\n      Header: 'Sell through %',\n      accessor: 'sell_through',\n      disableGroupBy: true,\n      width: 50,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n      Aggregated: (row) => {\n        let val = parseFloat(row.row.original.overall_sell_through);\n        return <span>{val ? numeral(val / 100).format('0%') : '-'}</span>;\n      },\n    },\n    {\n      Header: 'Markdown %',\n      accessor: 'markdown_perc',\n      disableGroupBy: true,\n      width: 70,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n      aggregate: 'average',\n      Aggregated: ({ row }) => {\n        let val = parseFloat(row.original.overall_markdown_perc);\n        return <span>{val ? numeral(val / 100).format('0%') : '-'}</span>;\n      },\n    },\n    // {\n    //   Header: 'Margin %',\n    //   accessor: 'margin_perc',\n    //   disableGroupBy: true,\n    //   width: 70,\n    //   Cell: (props) => <div> {toPercentage(props)} </div>,\n    //   Aggregated: (row) => {\n    //     let val = row.row.original.overall_margin;\n\n    //     return <span>{val ? parseFloat(val).toFixed(2) : '-'}</span>;\n    //   },\n    // },\n    {\n      Header: 'Status',\n      accessor: 'status',\n      disableGroupBy: true,\n      // showFilter: true,\n      Cell: StatusCellStyling,\n    },\n  ];\n  return colDef;\n};\n\nfunction StatusCellStyling({ value }) {\n  switch (value) {\n    case 'rejected':\n      return (\n        <span style={{ textTransform: 'capitalize' }}>\n          <i className=\"fa fa-ban fa-lg\" aria-hidden=\"true\" style={{ color: '#D84039' }}></i>{' '}\n          {value} &nbsp; &nbsp;{' '}\n          {/* <i\n            className=\"fa fa-commenting fa-lg\"\n            aria-hidden=\"true\"\n            style={{ cursor: 'pointer' }}></i> */}\n        </span>\n      );\n    case 'draft':\n      return (\n        <span style={{ textTransform: 'capitalize' }}>\n          <i className=\"fa fa-edit fa-lg\" aria-hidden=\"true\" style={{ color: '#44677B' }}></i>{' '}\n          {value} &nbsp; &nbsp;{' '}\n        </span>\n      );\n    case 'pending':\n      return (\n        <span style={{ textTransform: 'capitalize' }}>\n          <i\n            className=\"fa fa-exclamation-circle fa-lg\"\n            style={{ color: '#E0D337' }}\n            aria-hidden=\"true\"></i>{' '}\n          {value}\n        </span>\n      );\n    case 'approved':\n      return (\n        <span style={{ textTransform: 'capitalize' }}>\n          <i\n            className=\"fa fa-check-circle fa-lg\"\n            aria-hidden=\"true\"\n            style={{ color: '#59C770' }}></i>{' '}\n          {value}\n        </span>\n      );\n\n    default:\n      return '';\n  }\n}\n"]},"metadata":{},"sourceType":"module"}