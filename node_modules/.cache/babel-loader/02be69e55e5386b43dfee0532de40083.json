{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/draftStatus/draft/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MarkDownActions from '../../../actions/markdowns';\nimport Filters from '../../../services/filters';\nimport DataTable from '../../../services/reactTable';\nimport ColumnSelection from '../../columnSelection';\nimport Coldef from './coldef';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport cloneDeep from 'clone-deep';\nimport RowData from './data';\nimport moment from 'moment';\nimport NoData from '../../noTableData';\n\nvar Draft =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Draft, _Component);\n\n  function Draft(props) {\n    var _this;\n\n    _classCallCheck(this, Draft);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Draft).call(this, props));\n\n    _this.onCellClick = function (row) {\n      console.log(row, 'cell clicked .....');\n    };\n\n    _this.findStatusColor = function (status, color) {\n      switch (status) {\n        case 'high':\n          return color.high;\n\n        case 'medium':\n          return color.medium;\n\n        case 'low':\n          return color.low;\n\n        default:\n          break;\n      }\n    };\n\n    _this.bgmCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var bgCol = {\n        high: '#F8E8E8',\n        medium: '#FCF3D1',\n        low: '#E8F8F5'\n      };\n      return _this.findStatusColor(status, bgCol);\n    };\n\n    _this.txtCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var txtCol = {\n        high: '#D38485',\n        medium: '#F0C53A',\n        low: '#66CFBA'\n      };\n      return _this.findStatusColor(status, txtCol);\n    };\n\n    _this.updateMyData = function (rowIndex, columnId, value) {\n      // We also turn on the flag to not reset the page\n      _this.setState(function (old) {\n        var val = old.tableData.map(function (row, index) {\n          if (index === rowIndex) {\n            return _objectSpread({}, row, _defineProperty({}, columnId, value));\n          }\n\n          return row;\n        });\n        return {\n          tableData: val\n        };\n      });\n    };\n\n    _this.onFilter = function (selectedFilters) {\n      var payload = _objectSpread({}, selectedFilters);\n\n      payload.startDate = moment(payload.startDate).format('YYYY-MM-DD');\n      payload.endDate = moment(payload.endDate).format('YYYY-MM-DD');\n      payload['week'] = '';\n      payload['status'] = 'draft';\n\n      _this.props.runMarkDown(payload).then(function (resp) {\n        console.log(resp, 'aaaaaaaaaa');\n\n        if (resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n          var setDefaultColDef = Coldef().filter(function (col) {\n            return resp.columnHeaders.default.includes(col.Header);\n          });\n          var setDefaultLabel = [];\n          var setDefaultColumnOptions = [];\n          var setDefaultItems = [];\n\n          var colHeaders = _.cloneDeep(resp.columnHeaders);\n\n          var labels = Object.keys(colHeaders);\n          labels.splice(labels.indexOf('fixed'), 1);\n          labels.splice(labels.indexOf('default'), 1);\n\n          var _loop = function _loop() {\n            var label = _labels[_i];\n\n            function diff() {\n              var A = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : resp.columnHeaders[label];\n              var B = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : resp.columnHeaders.default;\n              return A.filter(function (a) {\n                return B.indexOf(a) !== -1;\n              });\n            }\n\n            if (diff().length) {\n              setDefaultColumnOptions.push.apply(setDefaultColumnOptions, _toConsumableArray(resp.columnHeaders[label]));\n              setDefaultItems.push.apply(setDefaultItems, _toConsumableArray(diff()));\n              setDefaultLabel.push(label);\n            }\n          };\n\n          for (var _i = 0, _labels = labels; _i < _labels.length; _i++) {\n            _loop();\n          }\n\n          var options = setDefaultColumnOptions.map(function (label) {\n            return {\n              label: label,\n              value: label\n            };\n          });\n          var selectedItems = setDefaultItems.map(function (label) {\n            return {\n              label: label,\n              value: label\n            };\n          });\n\n          _this.setState({\n            columns: setDefaultColDef,\n            selLabels: setDefaultLabel,\n            selectedItems: selectedItems,\n            columnOptions: options\n          });\n        }\n      });\n    };\n\n    _this.onHandleCheckBox = function (e, label, index) {\n      //adding\n      if (e.target.checked) {\n        if (_this.state.selLabels.indexOf(label) === -1) {\n          var labels = [].concat(_toConsumableArray(_this.state.selLabels), [label]);\n          var tempArr = [];\n          labels.forEach(function (label) {\n            var columns = _this.props.getColumnHeaders[label];\n            var options = columns.map(function (label) {\n              return {\n                label: label,\n                value: label\n              };\n            });\n            tempArr.push.apply(tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selLabels: labels,\n            columnOptions: tempArr\n          });\n        }\n      } else {\n        //removing\n        var _index = _this.state.selLabels.indexOf(label);\n\n        if (_index !== -1) {\n          var selectedLabel = cloneDeep(_this.state.selLabels);\n          selectedLabel.splice(_index, 1);\n          var _tempArr = [];\n          selectedLabel.forEach(function (label) {\n            var columns = _this.props.getColumnHeaders[label];\n            var options = columns.map(function (label) {\n              return {\n                label: label,\n                value: label\n              };\n            });\n\n            _tempArr.push.apply(_tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selLabels: selectedLabel,\n            columnOptions: _tempArr\n          });\n        }\n      }\n    };\n\n    _this.onHandleSelect = function (selColOpt) {\n      //finding diff on adding option\n      var onAddDiff = _.differenceWith(selColOpt, _this.state.selectedItems, _.isEqual); //finding diff on removing option\n\n\n      var onRemoveDiff = _.differenceWith(_this.state.selectedItems, selColOpt, _.isEqual); //Adding selected option and its respective column to the table\n\n\n      if (onAddDiff.length) {\n        //selected item label\n        var item = onAddDiff[0].label; //finding the selected column from the main column definitions\n\n        var findSelColFromMain = Coldef().filter(function (col) {\n          return col.Header === item;\n        });\n\n        var currentCols = _.cloneDeep(_this.state.columns); //adding selected column before actions column\n\n\n        currentCols.splice(currentCols.length - 1, 0, findSelColFromMain[0]);\n\n        _this.setState({\n          selectedItems: _toConsumableArray(selColOpt),\n          columns: currentCols\n        });\n      } //Removing selected option and its respective column from the table\n\n\n      if (onRemoveDiff.length) {\n        //selected item label\n        var _item = onRemoveDiff[0].label;\n\n        var itemIndex = _this.state.selectedItems.map(function (item) {\n          return item.label;\n        }).indexOf(_item);\n\n        var colIndex = _this.state.columns.map(function (col) {\n          return col.Header;\n        }).indexOf(_item);\n\n        var currentItems = _.cloneDeep(_this.state.selectedItems);\n\n        currentItems.splice(itemIndex, 1);\n\n        var _currentCols = _.cloneDeep(_this.state.columns);\n\n        _currentCols.splice(colIndex, 1);\n\n        console.log(_currentCols, 'removedCOls');\n\n        _this.setState({\n          selectedItems: currentItems,\n          columns: _currentCols\n        });\n      }\n    };\n\n    _this.state = {\n      selectedItems: [],\n      tableData: RowData,\n      columnOptions: [],\n      selLabels: [],\n      columns: []\n    };\n    return _this;\n  }\n\n  _createClass(Draft, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"card CalendarMain promoCalendarDiv1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"promoCal-brdcrm mb-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Markdown Optimization /\", React.createElement(\"span\", {\n        className: \"font-bold color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Draft\")), React.createElement(\"hr\", {\n        style: {\n          marginTop: '1px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(Filters, {\n        onFilter: this.onFilter,\n        drop: true,\n        hierarchy: ['hierarchy1', 'hierarchy2', 'hierarchy3', 'hierarchy4', 'hierarchy5', 'hierarchy6', 'hierarchy7'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      })), this.props.getMarkDowns && this.props.getMarkDowns.length ? React.createElement(\"div\", {\n        className: \"card CalendarMain promoCalendarDiv1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(ColSelBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, this.props.getColumnHeaders && Object.keys(this.props.getColumnHeaders).length && React.createElement(ColumnSelection, {\n        onHandleCheckBox: this.onHandleCheckBox,\n        columnHeaders: this.props.getColumnHeaders,\n        onHandleSelect: this.onHandleSelect,\n        columnOptions: this.state.columnOptions,\n        selectedItems: this.state.selectedItems,\n        selLabels: this.state.selLabels,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          padding: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Send for Approval\"), \"\\xA0\")), React.createElement(DataTable, {\n        columns: this.state.columns,\n        data: this.props.getMarkDowns,\n        updateMyData: this.updateMyData,\n        visibleColumns: \"markDownDrafts\",\n        isPagination: true,\n        NoDataComponent: \"This is the dynamic title\",\n        getColumnProps: function getColumnProps(column) {\n          return {// onClick: () => this.onColumnClick(column),\n          };\n        },\n        getCellProps: function getCellProps(cellInfo) {\n          return {\n            onClick: function onClick() {\n              return _this2.onCellClick(cellInfo);\n            },\n            style: {\n              backgroundColor: _this2.bgmCol(cellInfo),\n              color: _this2.txtCol(cellInfo),\n              // textAlign: \"center\",\n              margin: '4px 4px',\n              borderRadius: '2px'\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      })) : React.createElement(NoData, {\n        description: \"Please select filters to show Markdown plans.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Draft;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    getMarkDowns: store.markDownReducers.markDowns,\n    getColumnHeaders: store.markDownReducers.columnHeaders\n  };\n};\n\nvar mapDispatchToProps = {\n  runMarkDown: MarkDownActions.runMarkDown\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Draft);\nvar ColSelBtn = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/draftStatus/draft/index.js"],"names":["React","Component","connect","MarkDownActions","Filters","DataTable","ColumnSelection","Coldef","styled","_","cloneDeep","RowData","moment","NoData","Draft","props","onCellClick","row","console","log","findStatusColor","status","color","high","medium","low","bgmCol","cellInfo","column","id","original","md_status","bgCol","txtCol","updateMyData","rowIndex","columnId","value","setState","old","val","tableData","map","index","onFilter","selectedFilters","payload","startDate","format","endDate","runMarkDown","then","resp","columnHeaders","Object","keys","length","setDefaultColDef","filter","col","default","includes","Header","setDefaultLabel","setDefaultColumnOptions","setDefaultItems","colHeaders","labels","splice","indexOf","label","diff","A","B","a","push","options","selectedItems","columns","selLabels","columnOptions","onHandleCheckBox","e","target","checked","state","tempArr","forEach","getColumnHeaders","selectedLabel","onHandleSelect","selColOpt","onAddDiff","differenceWith","isEqual","onRemoveDiff","item","findSelColFromMain","currentCols","itemIndex","colIndex","currentItems","marginTop","getMarkDowns","padding","onClick","style","backgroundColor","margin","borderRadius","mapStateToProps","store","markDownReducers","markDowns","mapDispatchToProps","ColSelBtn","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MarkDownActions from '../../../actions/markdowns';\nimport Filters from '../../../services/filters';\nimport DataTable from '../../../services/reactTable';\nimport ColumnSelection from '../../columnSelection';\nimport Coldef from './coldef';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport cloneDeep from 'clone-deep';\nimport RowData from './data';\nimport moment from 'moment';\nimport NoData from '../../noTableData';\n\nclass Draft extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedItems: [],\n      tableData: RowData,\n      columnOptions: [],\n      selLabels: [],\n      columns: [],\n    };\n  }\n\n  componentDidMount() {}\n\n  onCellClick = (row) => {\n    console.log(row, 'cell clicked .....');\n  };\n\n  findStatusColor = (status, color) => {\n    switch (status) {\n      case 'high':\n        return color.high;\n      case 'medium':\n        return color.medium;\n      case 'low':\n        return color.low;\n      default:\n        break;\n    }\n  };\n\n  bgmCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let bgCol = {\n      high: '#F8E8E8',\n      medium: '#FCF3D1',\n      low: '#E8F8F5',\n    };\n    return this.findStatusColor(status, bgCol);\n  };\n  txtCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let txtCol = {\n      high: '#D38485',\n      medium: '#F0C53A',\n      low: '#66CFBA',\n    };\n    return this.findStatusColor(status, txtCol);\n  };\n\n  updateMyData = (rowIndex, columnId, value) => {\n    // We also turn on the flag to not reset the page\n    this.setState((old) => {\n      let val = old.tableData.map((row, index) => {\n        if (index === rowIndex) {\n          return {\n            ...row,\n            [columnId]: value,\n          };\n        }\n        return row;\n      });\n      return { tableData: val };\n    });\n  };\n\n  onFilter = (selectedFilters) => {\n    let payload = { ...selectedFilters };\n    payload.startDate = moment(payload.startDate).format('YYYY-MM-DD');\n    payload.endDate = moment(payload.endDate).format('YYYY-MM-DD');\n    payload['week'] = '';\n    payload['status'] = 'draft';\n    this.props.runMarkDown(payload).then((resp) => {\n      console.log(resp, 'aaaaaaaaaa');\n      if (resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n        let setDefaultColDef = Coldef().filter((col) =>\n          resp.columnHeaders.default.includes(col.Header)\n        );\n        let setDefaultLabel = [];\n        let setDefaultColumnOptions = [];\n        let setDefaultItems = [];\n        let colHeaders = _.cloneDeep(resp.columnHeaders);\n        let labels = Object.keys(colHeaders);\n        labels.splice(labels.indexOf('fixed'), 1);\n        labels.splice(labels.indexOf('default'), 1);\n        for (const label of labels) {\n          function diff(A = resp.columnHeaders[label], B = resp.columnHeaders.default) {\n            return A.filter(function (a) {\n              return B.indexOf(a) !== -1;\n            });\n          }\n\n          if (diff().length) {\n            setDefaultColumnOptions.push(...resp.columnHeaders[label]);\n            setDefaultItems.push(...diff());\n            setDefaultLabel.push(label);\n          }\n        }\n        let options = setDefaultColumnOptions.map((label) => {\n          return {\n            label: label,\n            value: label,\n          };\n        });\n        let selectedItems = setDefaultItems.map((label) => {\n          return {\n            label: label,\n            value: label,\n          };\n        });\n        this.setState({\n          columns: setDefaultColDef,\n          selLabels: setDefaultLabel,\n          selectedItems: selectedItems,\n          columnOptions: options,\n        });\n      }\n    });\n  };\n\n  onHandleCheckBox = (e, label, index) => {\n    //adding\n    if (e.target.checked) {\n      if (this.state.selLabels.indexOf(label) === -1) {\n        let labels = [...this.state.selLabels, label];\n        let tempArr = [];\n        labels.forEach((label) => {\n          let columns = this.props.getColumnHeaders[label];\n          let options = columns.map((label) => {\n            return {\n              label: label,\n              value: label,\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selLabels: labels,\n          columnOptions: tempArr,\n        });\n      }\n    } else {\n      //removing\n      let index = this.state.selLabels.indexOf(label);\n      if (index !== -1) {\n        let selectedLabel = cloneDeep(this.state.selLabels);\n        selectedLabel.splice(index, 1);\n        let tempArr = [];\n        selectedLabel.forEach((label) => {\n          let columns = this.props.getColumnHeaders[label];\n          let options = columns.map((label) => {\n            return {\n              label: label,\n              value: label,\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selLabels: selectedLabel,\n          columnOptions: tempArr,\n        });\n      }\n    }\n  };\n  onHandleSelect = (selColOpt) => {\n    //finding diff on adding option\n    let onAddDiff = _.differenceWith(selColOpt, this.state.selectedItems, _.isEqual);\n    //finding diff on removing option\n    let onRemoveDiff = _.differenceWith(this.state.selectedItems, selColOpt, _.isEqual);\n\n    //Adding selected option and its respective column to the table\n    if (onAddDiff.length) {\n      //selected item label\n      let item = onAddDiff[0].label;\n      //finding the selected column from the main column definitions\n      let findSelColFromMain = Coldef().filter((col) => col.Header === item);\n\n      let currentCols = _.cloneDeep(this.state.columns);\n      //adding selected column before actions column\n      currentCols.splice(currentCols.length - 1, 0, findSelColFromMain[0]);\n      this.setState({\n        selectedItems: [...selColOpt],\n        columns: currentCols,\n      });\n    }\n    //Removing selected option and its respective column from the table\n    if (onRemoveDiff.length) {\n      //selected item label\n      let item = onRemoveDiff[0].label;\n      let itemIndex = this.state.selectedItems.map((item) => item.label).indexOf(item);\n      let colIndex = this.state.columns.map((col) => col.Header).indexOf(item);\n      let currentItems = _.cloneDeep(this.state.selectedItems);\n      currentItems.splice(itemIndex, 1);\n      let currentCols = _.cloneDeep(this.state.columns);\n      currentCols.splice(colIndex, 1);\n      console.log(currentCols, 'removedCOls');\n      this.setState({\n        selectedItems: currentItems,\n        columns: currentCols,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"card CalendarMain promoCalendarDiv1 mt-3\">\n          <h4 className=\"promoCal-brdcrm mb-10\">\n            Markdown Optimization /<span className=\"font-bold color-blue\">Draft</span>\n          </h4>\n          <hr style={{ marginTop: '1px' }} />\n          <Filters\n            onFilter={this.onFilter}\n            drop\n            hierarchy={[\n              'hierarchy1',\n              'hierarchy2',\n              'hierarchy3',\n              'hierarchy4',\n              'hierarchy5',\n              'hierarchy6',\n              'hierarchy7',\n            ]}\n          />\n        </div>\n        {this.props.getMarkDowns && this.props.getMarkDowns.length ? (\n          <div className=\"card CalendarMain promoCalendarDiv1 mt-3\">\n            <ColSelBtn>\n              {this.props.getColumnHeaders && Object.keys(this.props.getColumnHeaders).length && (\n                <ColumnSelection\n                  onHandleCheckBox={this.onHandleCheckBox}\n                  columnHeaders={this.props.getColumnHeaders}\n                  onHandleSelect={this.onHandleSelect}\n                  columnOptions={this.state.columnOptions}\n                  selectedItems={this.state.selectedItems}\n                  selLabels={this.state.selLabels}\n                />\n              )}\n              <div style={{ padding: '1rem' }}>\n                <button className=\"btn btn-primary\">Send for Approval</button>\n                &nbsp;\n              </div>\n            </ColSelBtn>\n            <DataTable\n              columns={this.state.columns}\n              data={this.props.getMarkDowns}\n              updateMyData={this.updateMyData}\n              visibleColumns=\"markDownDrafts\"\n              isPagination={true}\n              NoDataComponent=\"This is the dynamic title\"\n              getColumnProps={(column) => ({\n                // onClick: () => this.onColumnClick(column),\n              })}\n              getCellProps={(cellInfo) => ({\n                onClick: () => this.onCellClick(cellInfo),\n                style: {\n                  backgroundColor: this.bgmCol(cellInfo),\n                  color: this.txtCol(cellInfo),\n                  // textAlign: \"center\",\n                  margin: '4px 4px',\n                  borderRadius: '2px',\n                },\n              })}\n            />\n          </div>\n        ) : (\n          <NoData description=\"Please select filters to show Markdown plans.\" />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    getMarkDowns: store.markDownReducers.markDowns,\n    getColumnHeaders: store.markDownReducers.columnHeaders,\n  };\n};\n\nconst mapDispatchToProps = {\n  runMarkDown: MarkDownActions.runMarkDown,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Draft);\n\nconst ColSelBtn = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n"]},"metadata":{},"sourceType":"module"}