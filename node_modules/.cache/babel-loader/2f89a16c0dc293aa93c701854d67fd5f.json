{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/excludeStoreTable.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 1rem;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: flex-start;\\n\\n  .custom-control {\\n    line-height: 1.5rem;\\n    margin: 0 1rem;\\n  }\\n\\n  .custom-control-label::before {\\n    top: 0.5rem;\\n  }\\n  .custom-control-label::after {\\n    top: 0.5rem;\\n  }\\n  .custom-checkbox label {\\n    vertical-align: -webkit-baseline-middle;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport DataTable from '../../services/reactTable'; // import ColumnSelection from '../columnSelection';\n\nimport { METRICS_LIST, DEFAULT_COLUMNS } from './excludeStoreColdef';\nimport cloneDeep from 'clone-deep';\nimport styled from 'styled-components';\nimport Select from '../../utils/reactDropDownSelect';\n\nvar ExcludeStoreTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ExcludeStoreTable, _Component);\n\n  function ExcludeStoreTable(props) {\n    var _this;\n\n    _classCallCheck(this, ExcludeStoreTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExcludeStoreTable).call(this, props));\n\n    _this.limitClearnceHandler = function () {\n      var selectedRowId = _this.state.selected;\n\n      _this.props.excludeStoreValHandler(selectedRowId);\n    };\n\n    _this.onRowClick = function (rowInfo) {\n      var selectedRow = _this.state.selected;\n\n      if (_this.state.selected.includes(rowInfo.index)) {\n        var findInd = selectedRow.indexOf(rowInfo.index);\n        selectedRow.splice(findInd, 1);\n      } else {\n        selectedRow.push(rowInfo.index);\n      }\n\n      _this.setState({\n        selected: selectedRow\n      });\n    };\n\n    _this.onChechedHandle = function (e, label, index) {\n      //adding\n      if (e.target.checked) {\n        if (_this.state.selectedLabels.indexOf(label) === -1) {\n          var labels = [].concat(_toConsumableArray(_this.state.selectedLabels), [label]);\n          var tempArr = [];\n          labels.forEach(function (label) {\n            var columns = _this.props.columnHeaders[label];\n            var options = columns.map(function (label) {\n              return {\n                label: label,\n                value: label\n              };\n            });\n            tempArr.push.apply(tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selectedLabels: labels,\n            selectedColumns: tempArr\n          });\n        }\n      } else {\n        //removing\n        var _index = _this.state.selectedLabels.indexOf(label);\n\n        if (_index !== -1) {\n          var selectedLabel = cloneDeep(_this.state.selectedLabels);\n          selectedLabel.splice(_index, 1);\n          var _tempArr = [];\n          selectedLabel.forEach(function (label) {\n            var columns = _this.props.columnHeaders[label];\n            var options = columns.map(function (label) {\n              return {\n                label: label,\n                value: label\n              };\n            });\n\n            _tempArr.push.apply(_tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selectedLabels: selectedLabel,\n            selectedColumns: _tempArr\n          });\n        }\n      }\n    };\n\n    _this.onHandleSelect = function (data) {\n      console.log('data:', data);\n      debugger;\n    };\n\n    _this.state = {\n      // attributes: ['Product Information', 'Sales', 'Inventory', 'Margin'],\n      selectedColumns: [],\n      selectedLabels: []\n    };\n    return _this;\n  }\n\n  _createClass(ExcludeStoreTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var labels = Object.keys(this.props.columnHeaders);\n      labels.splice(labels.indexOf('fixed'), 1);\n      labels.splice(labels.indexOf('default'), 1); // console.log(this.props.columnHeaders, labels, 'this.props.columnHeaders');\n\n      return React.createElement(\"div\", {\n        className: \"createMd pl-2 pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Styles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, labels && labels.length && labels.map(function (label, i) {\n        return React.createElement(\"div\", {\n          className: \"custom-control custom-checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          className: \"custom-control-input\",\n          id: label === 'status' ? i : label + i,\n          onClick: function onClick(e) {\n            return _this2.onChechedHandle(e, label, i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"custom-control-label\",\n          htmlFor: label === 'status' ? i : label + i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, label));\n      }), React.createElement(\"label\", {\n        className: \"ml-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \" Add Metric\"), React.createElement(\"div\", {\n        className: \" ml-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Select, {\n        multi: true // clearable={true}\n        ,\n        onHandleSelect: this.onHandleSelect,\n        options: this.state.selectedColumns,\n        contentRenderer: this.contentRenderer,\n        selectedItems: this.selectedItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        visibleColumns: \"onlyRowSelection\",\n        columns: excludeStoreColdef(),\n        data: this.props.storeData,\n        getRowProps: function getRowProps(rowInfo) {\n          return {\n            onClick: function onClick() {\n              return _this2.onRowClick(rowInfo);\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"mt-3 mb-3\",\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary biconbuttonFilter\",\n        onClick: this.limitClearnceHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Limit Clearance\"))));\n    }\n  }]);\n\n  return ExcludeStoreTable;\n}(Component);\n\nvar Styles = styled.div(_templateObject());\nexport default ExcludeStoreTable;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/excludeStoreTable.js"],"names":["React","Component","DataTable","METRICS_LIST","DEFAULT_COLUMNS","cloneDeep","styled","Select","ExcludeStoreTable","props","limitClearnceHandler","selectedRowId","state","selected","excludeStoreValHandler","onRowClick","rowInfo","selectedRow","includes","index","findInd","indexOf","splice","push","setState","onChechedHandle","e","label","target","checked","selectedLabels","labels","tempArr","forEach","columns","columnHeaders","options","map","value","selectedColumns","selectedLabel","onHandleSelect","data","console","log","Object","keys","length","i","contentRenderer","selectedItems","excludeStoreColdef","storeData","onClick","display","justifyContent","Styles","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DataTable from '../../services/reactTable';\n// import ColumnSelection from '../columnSelection';\nimport { METRICS_LIST, DEFAULT_COLUMNS } from './excludeStoreColdef';\nimport cloneDeep from 'clone-deep';\nimport styled from 'styled-components';\nimport Select from '../../utils/reactDropDownSelect';\n\nclass ExcludeStoreTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // attributes: ['Product Information', 'Sales', 'Inventory', 'Margin'],\n      selectedColumns: [],\n      selectedLabels: [],\n    };\n  }\n  limitClearnceHandler = () => {\n    let selectedRowId = this.state.selected;\n    this.props.excludeStoreValHandler(selectedRowId);\n  };\n  onRowClick = (rowInfo) => {\n    let selectedRow = this.state.selected;\n    if (this.state.selected.includes(rowInfo.index)) {\n      let findInd = selectedRow.indexOf(rowInfo.index);\n      selectedRow.splice(findInd, 1);\n    } else {\n      selectedRow.push(rowInfo.index);\n    }\n    this.setState({\n      selected: selectedRow,\n    });\n  };\n\n  onChechedHandle = (e, label, index) => {\n    //adding\n    if (e.target.checked) {\n      if (this.state.selectedLabels.indexOf(label) === -1) {\n        let labels = [...this.state.selectedLabels, label];\n        let tempArr = [];\n        labels.forEach((label) => {\n          let columns = this.props.columnHeaders[label];\n          let options = columns.map((label) => {\n            return {\n              label: label,\n              value: label,\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selectedLabels: labels,\n          selectedColumns: tempArr,\n        });\n      }\n    } else {\n      //removing\n      let index = this.state.selectedLabels.indexOf(label);\n      if (index !== -1) {\n        let selectedLabel = cloneDeep(this.state.selectedLabels);\n        selectedLabel.splice(index, 1);\n        let tempArr = [];\n        selectedLabel.forEach((label) => {\n          let columns = this.props.columnHeaders[label];\n          let options = columns.map((label) => {\n            return {\n              label: label,\n              value: label,\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selectedLabels: selectedLabel,\n          selectedColumns: tempArr,\n        });\n      }\n    }\n  };\n  onHandleSelect = (data) => {\n    console.log('data:', data);\n    debugger;\n  };\n  render() {\n    let labels = Object.keys(this.props.columnHeaders);\n    labels.splice(labels.indexOf('fixed'), 1);\n    labels.splice(labels.indexOf('default'), 1);\n    // console.log(this.props.columnHeaders, labels, 'this.props.columnHeaders');\n    return (\n      <div className=\"createMd pl-2 pr-2\">\n        <div className=\"card mb-4\">\n          <Styles>\n            {labels &&\n              labels.length &&\n              labels.map((label, i) => {\n                return (\n                  <div className=\"custom-control custom-checkbox\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"custom-control-input\"\n                      id={label === 'status' ? i : label + i}\n                      onClick={(e) => this.onChechedHandle(e, label, i)}\n                    />\n                    <label\n                      className=\"custom-control-label\"\n                      htmlFor={label === 'status' ? i : label + i}>\n                      {label}\n                    </label>\n                  </div>\n                );\n              })}\n            <label className=\"ml-4\"> Add Metric</label>\n\n            <div className=\" ml-2\">\n              <Select\n                multi={true}\n                // clearable={true}\n                onHandleSelect={this.onHandleSelect}\n                options={this.state.selectedColumns}\n                contentRenderer={this.contentRenderer}\n                selectedItems={this.selectedItems}\n              />\n            </div>\n          </Styles>\n          <div>\n            <DataTable\n              visibleColumns=\"onlyRowSelection\"\n              columns={excludeStoreColdef()}\n              data={this.props.storeData}\n              getRowProps={(rowInfo) => ({\n                onClick: () => this.onRowClick(rowInfo),\n              })}\n            />\n          </div>\n          <div class=\"mt-3 mb-3\" style={{ display: 'flex', justifyContent: 'center' }}>\n            <button\n              className=\"btn btn-primary biconbuttonFilter\"\n              onClick={this.limitClearnceHandler}>\n              Limit Clearance\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Styles = styled.div`\n  padding: 1rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n\n  .custom-control {\n    line-height: 1.5rem;\n    margin: 0 1rem;\n  }\n\n  .custom-control-label::before {\n    top: 0.5rem;\n  }\n  .custom-control-label::after {\n    top: 0.5rem;\n  }\n  .custom-checkbox label {\n    vertical-align: -webkit-baseline-middle;\n  }\n`;\n\nexport default ExcludeStoreTable;\n"]},"metadata":{},"sourceType":"module"}