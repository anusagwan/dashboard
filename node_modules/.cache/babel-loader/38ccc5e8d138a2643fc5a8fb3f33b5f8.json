{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Finalize/FinalizeMarkdown.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Filters from '../../services/filters';\nimport './finalizeMarkdownStyle.css';\nimport styled from 'styled-components';\nimport NoData from '../noTableData';\nimport FinalizeAction from '../../actions/draftStausFinalizeAction';\nimport Coldef from './coldef';\nimport _ from 'lodash';\nimport cloneDeep from 'clone-deep';\nimport { toast } from 'react-toastify';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport AlertWarning from '../../utils/AlertMessage/alertDanger';\nimport AlertSuccess from '../../utils/AlertMessage/alertSuccess';\nimport CardComponent from '../../services/cardComponent/cardComponent';\nimport moment from 'moment';\nimport card1Image from '../../images/card1Image.png';\nimport card2Image from '../../images/card2Image.png';\nimport card3Image from '../../images/card3Image.png';\nimport card4Image from '../../images/card4Image.png';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox';\nimport { toPercentage, toPercentageWithDecimalDraft, toDollarWithlDraft, toUnitDraft, toFixedToTwoDraft } from '../../helper/formatter';\n\nfunction FormatterStyling(props, value, val) {\n  var val1 = val || val == 0 ? val : props.value;\n  var props1 = val || val == 0 ? {\n    value: val\n  } : props;\n  console.log(val1, 'formval', props1);\n\n  if (value == 'aum' || value == 'overall_aum') {\n    return val1 || val1 == 0 ? toUnitDraft(props1) : '-';\n  } else if (value == 'margin_perc' || value == 'overall_margin_perc') {\n    return val1 || val1 == 0 ? toPercentage(props1) : '-';\n  } else if (value == 'revenue$' || value == 'aur' || value == 'margin$' || value == 'pvh_units' || value == 'markdown_units' || value == 'overall_revenue$' || value == 'overall_aur' || value == 'overall_planned_units' || value == 'overall_pvh_units' || value == 'overall_margin$' || value == 'overall_markdown_units') {\n    return val1 || val1 == 0 ? toDollarWithlDraft(props1) : '-';\n  }\n\n  return '-';\n}\n\nvar FinalizeMarkdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FinalizeMarkdown, _Component);\n\n  function FinalizeMarkdown(_props) {\n    var _this;\n\n    _classCallCheck(this, FinalizeMarkdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FinalizeMarkdown).call(this, _props));\n\n    _this.findStatusColor = function (status, color) {\n      switch (status) {\n        case 'high':\n          return color.high;\n\n        case 'medium':\n          return color.medium;\n\n        case 'low':\n          return color.low;\n\n        default:\n          break;\n      }\n    };\n\n    _this.bgmCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var bgCol = {\n        high: '#F8E8E8',\n        medium: '#FCF3D1',\n        low: '#E8F8F5'\n      };\n      return _this.findStatusColor(status, bgCol);\n    };\n\n    _this.txtCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var txtCol = {\n        high: '#D38485',\n        medium: '#F0C53A',\n        low: '#66CFBA'\n      };\n      return _this.findStatusColor(status, txtCol);\n    };\n\n    _this.sendForReject = function () {\n      var payload = {\n        markdown_data: _this.state.selectedRows.map(function (item) {\n          return {\n            id: item.markdown_id\n          };\n        }),\n        update_status: 'rejected'\n      };\n      console.log(payload, 'sendForReject');\n\n      _this.props.sendForApproval(payload);\n    };\n\n    _this.sendForApprove = function () {\n      var payload = {\n        markdown_data: _this.state.selectedRows.map(function (item) {\n          return {\n            id: item.markdown_id // scenario: item.scenario,\n\n          };\n        }),\n        update_status: 'approved'\n      };\n      console.log(payload, 'sendForApprove');\n\n      _this.props.sendForApproval(payload).then(function (resp) {\n        if (resp && resp.data.status == true) {\n          console.log(payload.markdown_data, 'payload.markdown_data');\n          toast.success(\"\".concat(payload.markdown_data.scenario), {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n        }\n      }).catch(function (err) {\n        toast.error(\"error\", {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n      });\n    };\n\n    _this.onActionSelection = function (rowData) {\n      var selectedRows = _this.state.selectedRows;\n\n      var foundEle = _.find(selectedRows, {\n        markdown_id: rowData.original.markdown_id\n      });\n\n      if (foundEle) {\n        _.remove(selectedRows, function (item) {\n          return item.markdown_id === rowData.original.markdown_id;\n        });\n      } else {\n        selectedRows.push(rowData.original);\n      }\n\n      console.log(selectedRows, 'onActionSelection', rowData);\n\n      _this.setState({\n        selectedRows: selectedRows\n      });\n    };\n\n    _this.onScenarioSelection = function (rowData) {\n      var selectedRows = _this.state.selectedRows;\n\n      var foundEle = _.find(selectedRows, {\n        markdown_id: rowData.original.markdown_id\n      });\n\n      if (foundEle) {\n        _.remove(selectedRows, function (item) {\n          return item.markdown_id === rowData.original.markdown_id;\n        });\n      } else {\n        selectedRows.push(rowData.original);\n      }\n\n      console.log(selectedRows, 'asdfmasdf', rowData);\n\n      _this.setState({\n        selectedRows: selectedRows\n      });\n    };\n\n    _this.onHandleSelect = function (selOptions) {\n      var headers = _.cloneDeep(_this.state.columns);\n\n      _.remove(headers, function (item) {\n        return item.metric;\n      });\n\n      console.log(headers, 'aaaae- selheader', selOptions);\n      selOptions.forEach(function (item) {\n        console.log(item, 'aaaae itemitemitemitemd');\n        var newTableCols = headers.filter(function (a) {\n          return a.accessor === item.value;\n        });\n        console.log(newTableCols, 'aaaae neww');\n\n        if (newTableCols.length == 0) {\n          headers.push({\n            Header: item.label,\n            accessor: item.value,\n            Aggregated: function Aggregated(props) {\n              var accessorName = \"overall_\".concat(item.value);\n              var val = props.row.original[accessorName];\n              var check = props.row.original.checked_for_approval;\n              return check ? FormatterStyling(props, accessorName, val) : null;\n            },\n            Cell: function Cell(props) {\n              var parentId = Math.floor(props.row.id);\n\n              var parentRow = _.find(props.rows, {\n                id: parentId.toString()\n              });\n\n              var check = parentRow.original.checked_for_approval;\n              return !check ? null : check ? FormatterStyling(props, item.value) : '-';\n            },\n            metric: true\n          });\n        }\n      });\n      console.log(headers, 'aaaae selheader headeererererer', selOptions);\n\n      _this.setState({\n        columns: headers,\n        selectedItems: selOptions\n      });\n    };\n\n    _this.onHandleCheckBox = function (e, label, index) {\n      //adding\n      if (e.target.checked) {\n        if (_this.state.selLabels.indexOf(label) === -1) {\n          var labels = [].concat(_toConsumableArray(_this.state.selLabels), [label]);\n          var tempArr = [];\n          labels.forEach(function (label) {\n            var columns = _this.props.getColumnHeaders[label];\n            var labelColumns = Object.keys(columns);\n            var options = labelColumns.map(function (label) {\n              return {\n                label: label,\n                value: columns[label]\n              };\n            });\n            tempArr.push.apply(tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selLabels: labels,\n            columnOptions: tempArr\n          });\n        }\n      } else {\n        //removing\n        var _index = _this.state.selLabels.indexOf(label);\n\n        if (_index !== -1) {\n          var selectedLabel = _.cloneDeep(_this.state.selLabels);\n\n          selectedLabel.splice(_index, 1);\n          var _tempArr = [];\n          selectedLabel.forEach(function (label) {\n            var columns = _this.props.getColumnHeaders[label];\n            var labelColumns = Object.keys(columns);\n            var options = labelColumns.map(function (label) {\n              return {\n                label: label,\n                value: columns[label]\n              };\n            });\n\n            _tempArr.push.apply(_tempArr, _toConsumableArray(options));\n          });\n\n          var selectedItemsClone = _.cloneDeep(_this.state.selectedItems);\n\n          var newSelectedItems = [];\n          var labelArr = Object.keys(_this.props.getColumnHeaders[label]);\n          selectedItemsClone.forEach(function (item) {\n            if (!labelArr.includes(item.label)) {\n              newSelectedItems.push(item);\n            }\n          });\n          console.log(_this.state.selectedItems, 'Czsdlfgtpppppppppiut', label, _index);\n\n          _this.onHandleSelect(newSelectedItems);\n\n          _this.setState({\n            selLabels: selectedLabel,\n            columnOptions: _tempArr,\n            selectedItems: newSelectedItems\n          });\n        }\n      }\n    };\n\n    _this.onFilter = function () {\n      var payload = {\n        filters: {\n          hierarchy1: _this.props.selectedHierarchy1,\n          hierarchy2: _this.props.selectedHierarchy2,\n          hierarchy3: _this.props.selectedHierarchy3,\n          hierarchy4: _this.props.selectedHierarchy4,\n          hierarchy5: _this.props.selectedHierarchy5,\n          hierarchy6: _this.props.selectedHierarchy6,\n          hierarchy7: _this.props.selectedHierarchy7,\n          hierarchy8: _this.props.selectedHierarchy8,\n          tiers: _this.props.selectedStores\n        },\n        startDate: moment(_this.props.startDate).format('YYYY-MM-DD'),\n        endDate: moment(_this.props.endDate).format('YYYY-MM-DD'),\n        status: 'pending'\n      };\n      console.log(payload, 'finalizepayl');\n\n      _this.getMarkdowns(payload);\n    };\n\n    _this.getMarkdowns = function (payload) {\n      _this.props.getMarkdowns(payload).then(function (resp) {\n        if (resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n          (function () {\n            var defaultHeader = Object.keys(resp.columnHeaders.default);\n            var setDefaultColDef = Coldef().filter(function (col) {\n              return defaultHeader.includes(col.Header) || col.Header === 'Time Period' || col.Header === 'Actions' || col.id === 'expander' || // col.accessor === 'sell_through' ||\n              _this.state.toggle && col.accessor === 'status';\n            });\n            var setDefaultLabel = [];\n            var setDefaultColumnOptions = [];\n            var setDefaultColumnOptions1 = [];\n            var setDefaultItems = [];\n\n            var colHeaders = _.cloneDeep(resp.columnHeaders);\n\n            var labels = Object.keys(colHeaders);\n            labels.splice(labels.indexOf('fixed'), 1);\n            labels.splice(labels.indexOf('default'), 1);\n\n            var _loop = function _loop() {\n              var label = _labels[_i];\n              var labelArray = Object.keys(resp.columnHeaders[label]);\n\n              function diff() {\n                var A = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : labelArray;\n                var B = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultHeader;\n                return A.filter(function (a) {\n                  return B.indexOf(a) !== -1;\n                });\n              }\n\n              if (diff().length) {\n                setDefaultColumnOptions.push.apply(setDefaultColumnOptions, _toConsumableArray(Object.keys(resp.columnHeaders[label])));\n                setDefaultColumnOptions1.push(resp.columnHeaders[label]);\n                setDefaultItems.push.apply(setDefaultItems, _toConsumableArray(diff()));\n                setDefaultLabel.push(label);\n              }\n            };\n\n            for (var _i = 0, _labels = labels; _i < _labels.length; _i++) {\n              _loop();\n            }\n\n            var options = setDefaultColumnOptions.map(function (label) {\n              var find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n              return {\n                label: label,\n                value: find\n              };\n            });\n            var selectedItems = setDefaultItems.map(function (label) {\n              var find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n              return {\n                label: label,\n                value: find\n              };\n            });\n            setDefaultColDef.push({\n              id: 'selection',\n              groupByBoundary: true,\n              Header: 'Actions',\n              // fixed: 'left',\n              Cell: function Cell(props) {\n                var row = props.row,\n                    rows = props.rows;\n\n                var mdPlan = row.values.md_plan,\n                    mainGrp = _.find(rows, {\n                  isSelected: true,\n                  values: {\n                    md_plan: mdPlan\n                  }\n                }),\n                    checkboxDisabled = mainGrp && !row.isSelected ? true : false;\n\n                return row.canExpand && row.original.checked_for_approval ? React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 409\n                  },\n                  __self: this\n                }, React.createElement(IndeterminateCheckbox, Object.assign({\n                  row: row.id,\n                  onClick: function onClick() {\n                    _this.onScenarioSelection(row);\n                  },\n                  disabled: checkboxDisabled\n                }, row.getToggleRowSelectedProps(), {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 410\n                  },\n                  __self: this\n                }))) : null;\n              }\n            });\n            console.log(setDefaultLabel, 'Xaslderoooooooo', setDefaultItems, options, selectedItems);\n\n            _this.setState({\n              columns: setDefaultColDef,\n              selLabels: setDefaultLabel,\n              selectedItems: selectedItems,\n              columnOptions: options\n            });\n          })();\n        }\n      });\n    };\n\n    _this.state = {\n      attributes: ['Margin', 'Sales', 'Inventory'],\n      firstCardText: 'KPIs to be decided',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month',\n      selectedItems: [],\n      columnOptions: [],\n      selLabels: [],\n      columns: [],\n      selectedRows: []\n    };\n    return _this;\n  }\n\n  _createClass(FinalizeMarkdown, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.setMarkDowns([]);\n      this.props.setMDColumnHeaders({});\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getMarkdowns({\n        status: 'pending'\n      }); // this.props.getMarkdowns({ status: 'pending' });\n      // let cols = Coldef();\n      // cols.push({\n      //   id: 'selection',\n      //   groupByBoundary: true,\n      //   Header: 'Actions',\n      //   Cell: (props) => {\n      //     let { row, rows } = props;\n      //     let mdPlan = row.values.md_plan,\n      //       mainGrp = _.find(rows, { isSelected: true, values: { md_plan: mdPlan } }),\n      //       checkboxDisabled = mainGrp && !row.isSelected ? true : false;\n      //     return row.canExpand && row.original.checked_for_approval ? (\n      //       <div>\n      //         <IndeterminateCheckbox\n      //           row={row.id}\n      //           onClick={() => {\n      //             this.onActionSelection(row);\n      //           }}\n      //           disabled={checkboxDisabled}\n      //           {...row.getToggleRowSelectedProps()}\n      //         />\n      //       </div>\n      //     ) : null;\n      //   },\n      // });\n      // this.setState({\n      //   columns: cols,\n      // });\n    }\n  }, {\n    key: \"render\",\n    // onFilter = (selectedFilters) => {\n    //   let payload = { ...selectedFilters };\n    //   payload.startDate = moment(payload.startDate).format('MM-DD-YYYY');\n    //   payload.endDate = moment(payload.endDate).format('MM-DD-YYYY');\n    //   payload['week'] = '';\n    //   payload['status'] = 'draft';\n    //   this.props.getMarkDowns(payload).then((resp) => {\n    //     console.log(resp, 'aaaaaaaaaa');\n    //     if (resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n    //       let setDefaultColDef = Coldef().filter((col) =>\n    //         resp.columnHeaders.default.includes(col.Header)\n    //       );\n    //       let setDefaultLabel = [];\n    //       let setDefaultColumnOptions = [];\n    //       let setDefaultItems = [];\n    //       let colHeaders = _.cloneDeep(resp.columnHeaders);\n    //       let labels = Object.keys(colHeaders);\n    //       labels.splice(labels.indexOf('fixed'), 1);\n    //       labels.splice(labels.indexOf('default'), 1);\n    //       for (const label of labels) {\n    //         function diff(A = resp.columnHeaders[label], B = resp.columnHeaders.default) {\n    //           return A.filter(function (a) {\n    //             return B.indexOf(a) !== -1;\n    //           });\n    //         }\n    //         if (diff().length) {\n    //           setDefaultColumnOptions.push(...resp.columnHeaders[label]);\n    //           setDefaultItems.push(...diff());\n    //           setDefaultLabel.push(label);\n    //         }\n    //       }\n    //       let options = setDefaultColumnOptions.map((label) => {\n    //         return {\n    //           label: label,\n    //           value: label,\n    //         };\n    //       });\n    //       let selectedItems = setDefaultItems.map((label) => {\n    //         return {\n    //           label: label,\n    //           value: label,\n    //         };\n    //       });\n    //       this.setState({\n    //         columns: setDefaultColDef,\n    //         selLabels: setDefaultLabel,\n    //         selectedItems: selectedItems,\n    //         columnOptions: options,\n    //       });\n    //     }\n    //   });\n    // };\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.finalizeMarkdownData, 'finalizeMarkdownData');\n      return React.createElement(\"div\", {\n        className: \"createMd pl-2 pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"alertDivs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, this.state.showAlertWarning ? React.createElement(AlertWarning, {\n        message: \"Markdown Finalization Failed!\",\n        show: this.state.showAlertWarning,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }) : null, this.state.showAlertSuccess ? React.createElement(AlertSuccess, {\n        message: 'Markdown(s) are ' + this.state.message,\n        show: this.state.showAlertSuccess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }) : null), React.createElement(\"div\", {\n        className: \"card CalendarMain promoCalendarDiv1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"font-size-14  pad-10 markdown-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }, \"Markdown Optimization /\", React.createElement(\"span\", {\n        className: \"font-bold color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, \"Finalize\"))), React.createElement(\"hr\", {\n        className: \"mb-2\",\n        style: {\n          marginTop: '-4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"filterCol mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, React.createElement(Filters, {\n        onFilter: this.onFilter,\n        stores: true,\n        dateRange: true,\n        hierarchy: [{\n          type: 'hierarchy1',\n          isMultiple: false\n        }, {\n          type: 'hierarchy2',\n          isMultiple: true\n        }, {\n          type: 'hierarchy3',\n          isMultiple: true\n        }, {\n          type: 'hierarchy4',\n          isMultiple: true\n        }, {\n          type: 'hierarchy5',\n          isMultiple: true\n        }, {\n          type: 'hierarchy6',\n          isMultiple: true\n        }, {\n          type: 'hierarchy7',\n          isMultiple: true\n        }, {\n          type: 'hierarchy8',\n          isMultiple: true\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }))), this.props.finalizeMarkdownData && this.props.finalizeMarkdownData.length ? React.createElement(\"div\", {\n        className: \"card pl-3 pr-3 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629\n        },\n        __self: this\n      }, React.createElement(ColSelBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630\n        },\n        __self: this\n      }, this.props.getColumnHeaders && Object.keys(this.props.getColumnHeaders).length && React.createElement(ColumnSelection, {\n        onHandleCheckBox: this.onHandleCheckBox,\n        columnHeaders: this.props.getColumnHeaders,\n        onHandleSelect: this.onHandleSelect,\n        columnOptions: this.state.columnOptions,\n        selectedItems: this.state.selectedItems,\n        selLabels: this.state.selLabels,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          padding: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.sendForApprove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642\n        },\n        __self: this\n      }, \"Approve\"), \"\\xA0\", React.createElement(\"button\", {\n        className: \"btn btn-primary  btn-filter-reset\",\n        onClick: this.sendForReject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646\n        },\n        __self: this\n      }, \"Reject\"))), React.createElement(DataTable, {\n        columns: this.state.columns,\n        isSort: true // isColumnFilter={true}\n        ,\n        data: this.props.finalizeMarkdownData,\n        updateMyData: this.updateMyData // visibleColumns=\"markDownDrafts\"\n        ,\n        isPagination: true,\n        getColumnProps: function getColumnProps(column) {\n          return {// onClick: () => this.onColumnClick(column),\n          };\n        },\n        getCellProps: function getCellProps(cellInfo) {\n          return {\n            style: {\n              backgroundColor: _this2.bgmCol(cellInfo),\n              color: _this2.txtCol(cellInfo),\n              // textAlign: \"center\",\n              margin: '4px 4px',\n              borderRadius: '2px'\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651\n        },\n        __self: this\n      })) : React.createElement(NoData, {\n        description: \"Please select filters to show Markdown plans.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FinalizeMarkdown;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  console.log(store, 'storestore');\n  console.log(store.draftStatusReducer.markdowns, 'markdownsstore');\n  return {\n    finalizeMarkdownData: store.draftStatusReducer.markdowns,\n    getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    getMetricOptions: store.finalizeReducer.metricOptions,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    selectedStores: store.filtersReducer.selectedStores,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate\n  };\n};\n\nvar mapActionToProps = {\n  getMarkdowns: FinalizeAction.getMarkdowns,\n  setMarkDowns: FinalizeAction.setMarkDowns,\n  setMDColumnHeaders: FinalizeAction.setMDColumnHeaders,\n  sendForApproval: FinalizeAction.sendForApproval\n};\nexport default connect(mapStateToProps, mapActionToProps)(withRouter(FinalizeMarkdown));\nvar ColSelBtn = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Finalize/FinalizeMarkdown.js"],"names":["React","Component","connect","withRouter","Filters","styled","NoData","FinalizeAction","Coldef","_","cloneDeep","toast","DataTable","ColumnSelection","AlertWarning","AlertSuccess","CardComponent","moment","card1Image","card2Image","card3Image","card4Image","IndeterminateCheckbox","toPercentage","toPercentageWithDecimalDraft","toDollarWithlDraft","toUnitDraft","toFixedToTwoDraft","FormatterStyling","props","value","val","val1","props1","console","log","FinalizeMarkdown","findStatusColor","status","color","high","medium","low","bgmCol","cellInfo","column","id","row","original","md_status","bgCol","txtCol","sendForReject","payload","markdown_data","state","selectedRows","map","item","markdown_id","update_status","sendForApproval","sendForApprove","then","resp","data","success","scenario","autoClose","hideProgressBar","catch","err","error","onActionSelection","rowData","foundEle","find","remove","push","setState","onScenarioSelection","onHandleSelect","selOptions","headers","columns","metric","forEach","newTableCols","filter","a","accessor","length","Header","label","Aggregated","accessorName","check","checked_for_approval","Cell","parentId","Math","floor","parentRow","rows","toString","selectedItems","onHandleCheckBox","e","index","target","checked","selLabels","indexOf","labels","tempArr","getColumnHeaders","labelColumns","Object","keys","options","columnOptions","selectedLabel","splice","selectedItemsClone","newSelectedItems","labelArr","includes","onFilter","filters","hierarchy1","selectedHierarchy1","hierarchy2","selectedHierarchy2","hierarchy3","selectedHierarchy3","hierarchy4","selectedHierarchy4","hierarchy5","selectedHierarchy5","hierarchy6","selectedHierarchy6","hierarchy7","selectedHierarchy7","hierarchy8","selectedHierarchy8","tiers","selectedStores","startDate","format","endDate","getMarkdowns","columnHeaders","defaultHeader","default","setDefaultColDef","col","toggle","setDefaultLabel","setDefaultColumnOptions","setDefaultColumnOptions1","setDefaultItems","colHeaders","labelArray","diff","A","B","groupByBoundary","mdPlan","values","md_plan","mainGrp","isSelected","checkboxDisabled","canExpand","getToggleRowSelectedProps","attributes","firstCardText","firstCardFirstValue","firstCardSecondValue","secondCardFirstValue","secondCardSecondValue","thirdCardFirstValue","thirdCardSecondValue","fourthCardFirstValue","fourthCardSecondValue","cardWeekText","cardMonthText","setMarkDowns","setMDColumnHeaders","finalizeMarkdownData","showAlertWarning","showAlertSuccess","message","marginTop","type","isMultiple","padding","updateMyData","style","backgroundColor","margin","borderRadius","mapStateToProps","store","draftStatusReducer","markdowns","getMetricOptions","finalizeReducer","metricOptions","filtersReducer","mapActionToProps","ColSelBtn","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Filters from '../../services/filters';\nimport './finalizeMarkdownStyle.css';\nimport styled from 'styled-components';\nimport NoData from '../noTableData';\nimport FinalizeAction from '../../actions/draftStausFinalizeAction';\nimport Coldef from './coldef';\nimport _ from 'lodash';\nimport cloneDeep from 'clone-deep';\nimport { toast } from 'react-toastify';\n\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport AlertWarning from '../../utils/AlertMessage/alertDanger';\nimport AlertSuccess from '../../utils/AlertMessage/alertSuccess';\nimport CardComponent from '../../services/cardComponent/cardComponent';\nimport moment from 'moment';\nimport card1Image from '../../images/card1Image.png';\nimport card2Image from '../../images/card2Image.png';\nimport card3Image from '../../images/card3Image.png';\nimport card4Image from '../../images/card4Image.png';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox';\nimport {\n  toPercentage,\n  toPercentageWithDecimalDraft,\n  toDollarWithlDraft,\n  toUnitDraft,\n  toFixedToTwoDraft,\n} from '../../helper/formatter';\n\nfunction FormatterStyling(props, value, val) {\n  let val1 = val || val == 0 ? val : props.value;\n  let props1 = val || val == 0 ? { value: val } : props;\n  console.log(val1, 'formval', props1);\n\n  if (value == 'aum' || value == 'overall_aum') {\n    return val1 || val1 == 0 ? toUnitDraft(props1) : '-';\n  } else if (value == 'margin_perc' || value == 'overall_margin_perc') {\n    return val1 || val1 == 0 ? toPercentage(props1) : '-';\n  } else if (\n    value == 'revenue$' ||\n    value == 'aur' ||\n    value == 'margin$' ||\n    value == 'pvh_units' ||\n    value == 'markdown_units' ||\n    value == 'overall_revenue$' ||\n    value == 'overall_aur' ||\n    value == 'overall_planned_units' ||\n    value == 'overall_pvh_units' ||\n    value == 'overall_margin$' ||\n    value == 'overall_markdown_units'\n  ) {\n    return val1 || val1 == 0 ? toDollarWithlDraft(props1) : '-';\n  }\n  return '-';\n}\nclass FinalizeMarkdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      attributes: ['Margin', 'Sales', 'Inventory'],\n      firstCardText: 'KPIs to be decided',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month',\n      selectedItems: [],\n      columnOptions: [],\n      selLabels: [],\n      columns: [],\n      selectedRows: [],\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.setMarkDowns([]);\n    this.props.setMDColumnHeaders({});\n  }\n\n  findStatusColor = (status, color) => {\n    switch (status) {\n      case 'high':\n        return color.high;\n      case 'medium':\n        return color.medium;\n      case 'low':\n        return color.low;\n      default:\n        break;\n    }\n  };\n\n  bgmCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let bgCol = {\n      high: '#F8E8E8',\n      medium: '#FCF3D1',\n      low: '#E8F8F5',\n    };\n    return this.findStatusColor(status, bgCol);\n  };\n  txtCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let txtCol = {\n      high: '#D38485',\n      medium: '#F0C53A',\n      low: '#66CFBA',\n    };\n    return this.findStatusColor(status, txtCol);\n  };\n  sendForReject = () => {\n    let payload = {\n      markdown_data: this.state.selectedRows.map((item) => {\n        return {\n          id: item.markdown_id,\n        };\n      }),\n      update_status: 'rejected',\n    };\n    console.log(payload, 'sendForReject');\n    this.props.sendForApproval(payload);\n  };\n  sendForApprove = () => {\n    let payload = {\n      markdown_data: this.state.selectedRows.map((item) => {\n        return {\n          id: item.markdown_id,\n          // scenario: item.scenario,\n        };\n      }),\n      update_status: 'approved',\n    };\n\n    console.log(payload, 'sendForApprove');\n    this.props\n      .sendForApproval(payload)\n      .then((resp) => {\n        if (resp && resp.data.status == true) {\n          console.log(payload.markdown_data, 'payload.markdown_data');\n          toast.success(`${payload.markdown_data.scenario}`, {\n            autoClose: 15000,\n            hideProgressBar: true,\n          });\n        }\n      })\n      .catch((err) => {\n        toast.error(`error`, {\n          autoClose: 15000,\n          hideProgressBar: true,\n        });\n      });\n  };\n  onActionSelection = (rowData) => {\n    let { selectedRows } = this.state;\n    let foundEle = _.find(selectedRows, { markdown_id: rowData.original.markdown_id });\n    if (foundEle) {\n      _.remove(selectedRows, (item) => item.markdown_id === rowData.original.markdown_id);\n    } else {\n      selectedRows.push(rowData.original);\n    }\n    console.log(selectedRows, 'onActionSelection', rowData);\n\n    this.setState({\n      selectedRows,\n    });\n  };\n  componentDidMount() {\n    this.getMarkdowns({ status: 'pending' });\n    // this.props.getMarkdowns({ status: 'pending' });\n    // let cols = Coldef();\n    // cols.push({\n    //   id: 'selection',\n    //   groupByBoundary: true,\n    //   Header: 'Actions',\n    //   Cell: (props) => {\n    //     let { row, rows } = props;\n    //     let mdPlan = row.values.md_plan,\n    //       mainGrp = _.find(rows, { isSelected: true, values: { md_plan: mdPlan } }),\n    //       checkboxDisabled = mainGrp && !row.isSelected ? true : false;\n\n    //     return row.canExpand && row.original.checked_for_approval ? (\n    //       <div>\n    //         <IndeterminateCheckbox\n    //           row={row.id}\n    //           onClick={() => {\n    //             this.onActionSelection(row);\n    //           }}\n    //           disabled={checkboxDisabled}\n    //           {...row.getToggleRowSelectedProps()}\n    //         />\n    //       </div>\n    //     ) : null;\n    //   },\n    // });\n\n    // this.setState({\n    //   columns: cols,\n    // });\n  }\n\n  onScenarioSelection = (rowData) => {\n    let { selectedRows } = this.state;\n    let foundEle = _.find(selectedRows, { markdown_id: rowData.original.markdown_id });\n    if (foundEle) {\n      _.remove(selectedRows, (item) => item.markdown_id === rowData.original.markdown_id);\n    } else {\n      selectedRows.push(rowData.original);\n    }\n    console.log(selectedRows, 'asdfmasdf', rowData);\n\n    this.setState({\n      selectedRows,\n    });\n  };\n  onHandleSelect = (selOptions) => {\n    let headers = _.cloneDeep(this.state.columns);\n    _.remove(headers, (item) => item.metric);\n\n    console.log(headers, 'aaaae- selheader', selOptions);\n    selOptions.forEach((item) => {\n      console.log(item, 'aaaae itemitemitemitemd');\n      let newTableCols = headers.filter((a) => {\n        return a.accessor === item.value;\n      });\n      console.log(newTableCols, 'aaaae neww');\n      if (newTableCols.length == 0) {\n        headers.push({\n          Header: item.label,\n          accessor: item.value,\n          Aggregated: (props) => {\n            let accessorName = `overall_${item.value}`;\n            let val = props.row.original[accessorName];\n            let check = props.row.original.checked_for_approval;\n            return check ? FormatterStyling(props, accessorName, val) : null;\n          },\n\n          Cell: (props) => {\n            let parentId = Math.floor(props.row.id);\n            let parentRow = _.find(props.rows, { id: parentId.toString() });\n            let check = parentRow.original.checked_for_approval;\n            return !check ? null : check ? FormatterStyling(props, item.value) : '-';\n          },\n          metric: true,\n        });\n      }\n    });\n    console.log(headers, 'aaaae selheader headeererererer', selOptions);\n    this.setState({\n      columns: headers,\n      selectedItems: selOptions,\n    });\n  };\n\n  onHandleCheckBox = (e, label, index) => {\n    //adding\n    if (e.target.checked) {\n      if (this.state.selLabels.indexOf(label) === -1) {\n        let labels = [...this.state.selLabels, label];\n        let tempArr = [];\n        labels.forEach((label) => {\n          let columns = this.props.getColumnHeaders[label];\n          let labelColumns = Object.keys(columns);\n          let options = labelColumns.map((label) => {\n            return {\n              label: label,\n              value: columns[label],\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selLabels: labels,\n          columnOptions: tempArr,\n        });\n      }\n    } else {\n      //removing\n      let index = this.state.selLabels.indexOf(label);\n      if (index !== -1) {\n        let selectedLabel = _.cloneDeep(this.state.selLabels);\n        selectedLabel.splice(index, 1);\n        let tempArr = [];\n        selectedLabel.forEach((label) => {\n          let columns = this.props.getColumnHeaders[label];\n          let labelColumns = Object.keys(columns);\n          let options = labelColumns.map((label) => {\n            return {\n              label: label,\n              value: columns[label],\n            };\n          });\n          tempArr.push(...options);\n        });\n\n        let selectedItemsClone = _.cloneDeep(this.state.selectedItems);\n        let newSelectedItems = [];\n        let labelArr = Object.keys(this.props.getColumnHeaders[label]);\n        selectedItemsClone.forEach((item) => {\n          if (!labelArr.includes(item.label)) {\n            newSelectedItems.push(item);\n          }\n        });\n\n        console.log(this.state.selectedItems, 'Czsdlfgtpppppppppiut', label, index);\n        this.onHandleSelect(newSelectedItems);\n        this.setState({\n          selLabels: selectedLabel,\n          columnOptions: tempArr,\n          selectedItems: newSelectedItems,\n        });\n      }\n    }\n  };\n  onFilter = () => {\n    let payload = {\n      filters: {\n        hierarchy1: this.props.selectedHierarchy1,\n        hierarchy2: this.props.selectedHierarchy2,\n        hierarchy3: this.props.selectedHierarchy3,\n        hierarchy4: this.props.selectedHierarchy4,\n        hierarchy5: this.props.selectedHierarchy5,\n        hierarchy6: this.props.selectedHierarchy6,\n        hierarchy7: this.props.selectedHierarchy7,\n        hierarchy8: this.props.selectedHierarchy8,\n        tiers: this.props.selectedStores,\n      },\n      startDate: moment(this.props.startDate).format('YYYY-MM-DD'),\n      endDate: moment(this.props.endDate).format('YYYY-MM-DD'),\n      status: 'pending',\n    };\n    console.log(payload, 'finalizepayl');\n    this.getMarkdowns(payload);\n  };\n\n  getMarkdowns = (payload) => {\n    this.props.getMarkdowns(payload).then((resp) => {\n      if (resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n        let defaultHeader = Object.keys(resp.columnHeaders.default);\n\n        let setDefaultColDef = Coldef().filter(\n          (col) =>\n            defaultHeader.includes(col.Header) ||\n            col.Header === 'Time Period' ||\n            col.Header === 'Actions' ||\n            col.id === 'expander' ||\n            // col.accessor === 'sell_through' ||\n            (this.state.toggle && col.accessor === 'status')\n        );\n        let setDefaultLabel = [];\n        let setDefaultColumnOptions = [];\n        let setDefaultColumnOptions1 = [];\n        let setDefaultItems = [];\n        let colHeaders = _.cloneDeep(resp.columnHeaders);\n        let labels = Object.keys(colHeaders);\n        labels.splice(labels.indexOf('fixed'), 1);\n        labels.splice(labels.indexOf('default'), 1);\n        for (const label of labels) {\n          let labelArray = Object.keys(resp.columnHeaders[label]);\n          function diff(A = labelArray, B = defaultHeader) {\n            return A.filter(function (a) {\n              return B.indexOf(a) !== -1;\n            });\n          }\n\n          if (diff().length) {\n            setDefaultColumnOptions.push(...Object.keys(resp.columnHeaders[label]));\n            setDefaultColumnOptions1.push(resp.columnHeaders[label]);\n            setDefaultItems.push(...diff());\n            setDefaultLabel.push(label);\n          }\n        }\n        let options = setDefaultColumnOptions.map((label) => {\n          let find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n          return {\n            label: label,\n            value: find,\n          };\n        });\n        let selectedItems = setDefaultItems.map((label) => {\n          let find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n          return {\n            label: label,\n            value: find,\n          };\n        });\n        setDefaultColDef.push({\n          id: 'selection',\n          groupByBoundary: true,\n          Header: 'Actions',\n          // fixed: 'left',\n          Cell: (props) => {\n            let { row, rows } = props;\n            let mdPlan = row.values.md_plan,\n              mainGrp = _.find(rows, {\n                isSelected: true,\n                values: { md_plan: mdPlan },\n              }),\n              checkboxDisabled = mainGrp && !row.isSelected ? true : false;\n\n            return row.canExpand && row.original.checked_for_approval ? (\n              <div>\n                <IndeterminateCheckbox\n                  row={row.id}\n                  onClick={() => {\n                    this.onScenarioSelection(row);\n                  }}\n                  disabled={checkboxDisabled}\n                  {...row.getToggleRowSelectedProps()}\n                />\n              </div>\n            ) : null;\n          },\n        });\n        console.log(setDefaultLabel, 'Xaslderoooooooo', setDefaultItems, options, selectedItems);\n\n        this.setState({\n          columns: setDefaultColDef,\n          selLabels: setDefaultLabel,\n          selectedItems: selectedItems,\n          columnOptions: options,\n        });\n      }\n    });\n  };\n  // onFilter = (selectedFilters) => {\n  //   let payload = { ...selectedFilters };\n  //   payload.startDate = moment(payload.startDate).format('MM-DD-YYYY');\n  //   payload.endDate = moment(payload.endDate).format('MM-DD-YYYY');\n  //   payload['week'] = '';\n  //   payload['status'] = 'draft';\n  //   this.props.getMarkDowns(payload).then((resp) => {\n  //     console.log(resp, 'aaaaaaaaaa');\n  //     if (resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n  //       let setDefaultColDef = Coldef().filter((col) =>\n  //         resp.columnHeaders.default.includes(col.Header)\n  //       );\n  //       let setDefaultLabel = [];\n  //       let setDefaultColumnOptions = [];\n  //       let setDefaultItems = [];\n  //       let colHeaders = _.cloneDeep(resp.columnHeaders);\n  //       let labels = Object.keys(colHeaders);\n  //       labels.splice(labels.indexOf('fixed'), 1);\n  //       labels.splice(labels.indexOf('default'), 1);\n  //       for (const label of labels) {\n  //         function diff(A = resp.columnHeaders[label], B = resp.columnHeaders.default) {\n  //           return A.filter(function (a) {\n  //             return B.indexOf(a) !== -1;\n  //           });\n  //         }\n\n  //         if (diff().length) {\n  //           setDefaultColumnOptions.push(...resp.columnHeaders[label]);\n  //           setDefaultItems.push(...diff());\n  //           setDefaultLabel.push(label);\n  //         }\n  //       }\n  //       let options = setDefaultColumnOptions.map((label) => {\n  //         return {\n  //           label: label,\n  //           value: label,\n  //         };\n  //       });\n  //       let selectedItems = setDefaultItems.map((label) => {\n  //         return {\n  //           label: label,\n  //           value: label,\n  //         };\n  //       });\n  //       this.setState({\n  //         columns: setDefaultColDef,\n  //         selLabels: setDefaultLabel,\n  //         selectedItems: selectedItems,\n  //         columnOptions: options,\n  //       });\n  //     }\n  //   });\n  // };\n\n  render() {\n    console.log(this.props.finalizeMarkdownData, 'finalizeMarkdownData');\n    return (\n      <div className=\"createMd pl-2 pr-2\">\n        <div className=\"alertDivs\">\n          {this.state.showAlertWarning ? (\n            <AlertWarning\n              message=\"Markdown Finalization Failed!\"\n              show={this.state.showAlertWarning}\n            />\n          ) : null}\n          {this.state.showAlertSuccess ? (\n            <AlertSuccess\n              message={'Markdown(s) are ' + this.state.message}\n              show={this.state.showAlertSuccess}\n            />\n          ) : null}\n        </div>\n        <div className=\"card CalendarMain promoCalendarDiv1 mt-3\">\n          <div>\n            <h4 className=\"font-size-14  pad-10 markdown-heading\">\n              Markdown Optimization /<span className=\"font-bold color-blue\">Finalize</span>\n            </h4>\n          </div>\n          <hr\n            className=\"mb-2\"\n            style={{\n              marginTop: '-4px',\n            }}\n          />\n          <div className=\"filterCol mb-4\">\n            <Filters\n              onFilter={this.onFilter}\n              stores\n              dateRange\n              hierarchy={[\n                {\n                  type: 'hierarchy1',\n                  isMultiple: false,\n                },\n                {\n                  type: 'hierarchy2',\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy3',\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy4',\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy5',\n\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy6',\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy7',\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy8',\n                  isMultiple: true,\n                },\n              ]}\n            />\n          </div>\n        </div>\n        {/* <div className=\"row\" style={{ marginTop: '15px' }}>\n          <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n            <CardComponent\n              cardImage={card1Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.firstCardFirstValue}\n              cardValueSecond={this.state.firstCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border1',\n                cardValue: 'card1-value',\n                cardImg: 'card1-img',\n                cardValueSecond: 'card-value-second',\n                cardSubHeading: 'card-subHeading',\n              }}\n            />\n          </div>\n          <div className=\"col-md-3 col-sm-3 col-xs-6\">\n            <CardComponent\n              cardImage={card2Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.secondCardFirstValue}\n              cardValueSecond={this.state.secondCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border2',\n                cardValue: 'card1-value',\n                cardImg: 'card2-img',\n                cardValueSecond: 'card-value-second',\n                cardSubHeading: 'card-subHeading',\n              }}\n            />\n          </div>\n          <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n            <CardComponent\n              cardImage={card3Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.thirdCardFirstValue}\n              cardValueSecond={this.state.thirdCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border3',\n                cardValue: 'card1-value',\n                cardImg: 'card3-img',\n                cardValueSecond: 'card-value-second',\n                cardSubHeading: 'card-subHeading',\n              }}\n            />\n          </div>\n          <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n            <CardComponent\n              cardImage={card4Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.fourthCardFirstValue}\n              cardValueSecond={this.state.fourthCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border4',\n                cardValue: 'card1-value',\n                cardImg: 'card4-img',\n              }}\n            />\n          </div>\n        </div> */}\n        {this.props.finalizeMarkdownData && this.props.finalizeMarkdownData.length ? (\n          <div className=\"card pl-3 pr-3 mt-3\">\n            <ColSelBtn>\n              {this.props.getColumnHeaders && Object.keys(this.props.getColumnHeaders).length && (\n                <ColumnSelection\n                  onHandleCheckBox={this.onHandleCheckBox}\n                  columnHeaders={this.props.getColumnHeaders}\n                  onHandleSelect={this.onHandleSelect}\n                  columnOptions={this.state.columnOptions}\n                  selectedItems={this.state.selectedItems}\n                  selLabels={this.state.selLabels}\n                />\n              )}\n              <div style={{ padding: '1rem' }}>\n                <button className=\"btn btn-primary\" onClick={this.sendForApprove}>\n                  Approve\n                </button>\n                &nbsp;\n                <button className=\"btn btn-primary  btn-filter-reset\" onClick={this.sendForReject}>\n                  Reject\n                </button>\n              </div>\n            </ColSelBtn>\n            <DataTable\n              columns={this.state.columns}\n              isSort={true}\n              // isColumnFilter={true}\n              data={this.props.finalizeMarkdownData}\n              updateMyData={this.updateMyData}\n              // visibleColumns=\"markDownDrafts\"\n              isPagination={true}\n              getColumnProps={(column) => ({\n                // onClick: () => this.onColumnClick(column),\n              })}\n              getCellProps={(cellInfo) => ({\n                style: {\n                  backgroundColor: this.bgmCol(cellInfo),\n                  color: this.txtCol(cellInfo),\n                  // textAlign: \"center\",\n                  margin: '4px 4px',\n                  borderRadius: '2px',\n                },\n              })}\n            />\n          </div>\n        ) : (\n          <NoData description=\"Please select filters to show Markdown plans.\" />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  console.log(store, 'storestore');\n  console.log(store.draftStatusReducer.markdowns, 'markdownsstore');\n  return {\n    finalizeMarkdownData: store.draftStatusReducer.markdowns,\n    getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    getMetricOptions: store.finalizeReducer.metricOptions,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    selectedStores: store.filtersReducer.selectedStores,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n  };\n};\n\nconst mapActionToProps = {\n  getMarkdowns: FinalizeAction.getMarkdowns,\n  setMarkDowns: FinalizeAction.setMarkDowns,\n  setMDColumnHeaders: FinalizeAction.setMDColumnHeaders,\n  sendForApproval: FinalizeAction.sendForApproval,\n};\nexport default connect(mapStateToProps, mapActionToProps)(withRouter(FinalizeMarkdown));\n\nconst ColSelBtn = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n"]},"metadata":{},"sourceType":"module"}