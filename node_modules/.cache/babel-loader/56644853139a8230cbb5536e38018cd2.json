{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/Markdown/components/ManuallyCreateMD/CreateCadence.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-family: arial, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%;\\n\\n  td,\\n  th {\\n    border: 1px solid #dddddd;\\n    text-align: center;\\n    padding: 8px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"react-bootstrap\";\nimport cloneDeep from \"clone-deep\";\n\nvar CreateCadence =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateCadence, _Component);\n\n  function CreateCadence(props) {\n    var _this;\n\n    _classCallCheck(this, CreateCadence);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateCadence).call(this, props));\n    _this.state = {\n      data: [],\n      selectedData: []\n    };\n    return _this;\n  }\n\n  _createClass(CreateCadence, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        data: this.props.overallCadenceData\n      });\n    }\n  }, {\n    key: \"getHeader\",\n    value: function getHeader() {\n      if (this.state.data && this.state.data.length) {\n        var headers = Object.keys(this.state.data[0]);\n        return headers.map(function (header, index) {\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          }, header[0].toUpperCase() + header.slice(1));\n        });\n      }\n    }\n  }, {\n    key: \"onCadenceValue\",\n    value: function onCadenceValue(event, col, row, rowNumber) {\n      var data = cloneDeep(this.state.data);\n      row[col] = event.target.value;\n      data[rowNumber] = row;\n      this.setState({\n        data: data\n      });\n      this.props.onUpdateMarkdownPercentage(data, this.props.index);\n    }\n  }, {\n    key: \"getInputWithPercentageTag\",\n    value: function getInputWithPercentageTag(col, row, rowNumber, i, index) {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"col\",\n        key: i + 1,\n        style: {\n          width: \"200px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        style: {\n          width: \"90%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control border-style\",\n        onChange: function onChange(e) {\n          return _this2.onCadenceValue(e, col, row, rowNumber, index, i);\n        },\n        value: row[col],\n        disabled: this.props.activeTab === \"Optimal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-side-percent\",\n        type: \"button\",\n        style: {\n          zIndex: \"unset\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-percent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"getTags\",\n    value: function getTags(col, row, rowNumber) {\n      if (col.toLowerCase().startsWith(\"w\")) {\n        return this.getInputWithPercentageTag(col, row, rowNumber);\n      } else if (col.toLowerCase().startsWith(\"m\")) {\n        var color = \"yellow\";\n\n        if (row[col] === \"High\") {\n          color = \"\";\n        }\n\n        return React.createElement(Button, {\n          style: {\n            backgroundColor: row[col] === \"High\" ? \"pink\" : \"#D6B93E\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, row[col]);\n      } else {\n        return row[col];\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"tableScroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Styles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.getHeader()), this.state.data && this.state.data.length && this.state.data.map(function (row, rowNumber) {\n        var rows = Object.keys(row);\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, rows.map(function (col) {\n          return React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, _this3.getTags(col, row, rowNumber));\n        }));\n      })))));\n    }\n  }]);\n\n  return CreateCadence;\n}(Component);\n\nexport default CreateCadence;\nvar Styles = styled.table(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/Markdown/components/ManuallyCreateMD/CreateCadence.js"],"names":["React","Component","styled","Button","cloneDeep","CreateCadence","props","state","data","selectedData","setState","overallCadenceData","length","headers","Object","keys","map","header","index","toUpperCase","slice","event","col","row","rowNumber","target","value","onUpdateMarkdownPercentage","i","width","e","onCadenceValue","activeTab","zIndex","toLowerCase","startsWith","getInputWithPercentageTag","color","backgroundColor","getHeader","rows","getTags","Styles","table"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"react-bootstrap\";\nimport cloneDeep from \"clone-deep\";\nclass CreateCadence extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {     \n      data: [],\n      selectedData: [],\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      data: this.props.overallCadenceData\n    })\n  }\n  getHeader() {\n    if (this.state.data && this.state.data.length) {\n      let headers = Object.keys(this.state.data[0]);\n      return headers.map((header, index) => {\n        return <th key={index}>{header[0].toUpperCase() + header.slice(1)}</th>;\n      });\n    }\n  }\n  onCadenceValue(event, col, row, rowNumber) {\n    let data = cloneDeep(this.state.data);\n    row[col] = event.target.value;\n    data[rowNumber] = row;\n    this.setState({\n      data: data,\n    });\n    this.props.onUpdateMarkdownPercentage(data, this.props.index)\n  }\n  getInputWithPercentageTag(col, row, rowNumber, i, index) {\n   \n    return (\n      <div className=\"col\" key={i + 1} style={{ width: \"200px\" }}>\n        <div className=\"input-group\" style={{ width: \"90%\" }}>\n          <input\n            type=\"text\"\n            className=\"form-control border-style\"\n            onChange={(e) =>\n              this.onCadenceValue(e, col, row, rowNumber, index, i)\n            }\n            value={row[col]}\n            disabled={this.props.activeTab === \"Optimal\"}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-side-percent\"\n              type=\"button\"\n              style={{ zIndex: \"unset\" }}\n            >\n              <i className=\"fa fa-percent\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  getTags(col, row, rowNumber) {\n    if (col.toLowerCase().startsWith(\"w\")) {\n      return this.getInputWithPercentageTag(col, row, rowNumber);\n    } else if (col.toLowerCase().startsWith(\"m\")) {\n      let color = \"yellow\";\n      if (row[col] === \"High\") {\n        color = \"\";\n      }\n      return (\n        <Button\n          style={{ backgroundColor: row[col] === \"High\" ? \"pink\" : \"#D6B93E\" }}\n        >\n          {row[col]}\n        </Button>\n      );\n    } else {\n      return row[col];\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"tableScroll\">\n          <Styles>\n            <tbody>\n              <tr>{this.getHeader()}</tr>\n              {this.state.data && this.state.data.length && this.state.data.map((row, rowNumber) => {\n                let rows = Object.keys(row);\n                return (\n                  <tr>\n                    {rows.map((col) => {\n                      return <td>{this.getTags(col, row, rowNumber)}</td>;\n                    })}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Styles>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default CreateCadence;\n\nconst Styles = styled.table`\n  font-family: arial, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n\n  td,\n  th {\n    border: 1px solid #dddddd;\n    text-align: center;\n    padding: 8px;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}