{"ast":null,"code":"import _objectSpread from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  reportingData: {},\n  cockpitData: {}\n};\n\nvar getData = function getData(data, year) {\n  return Object.keys(data).sort(function (a, b) {\n    return parseInt(a.slice(1, a.length)) - parseInt(b.slice(1, b.length));\n  }).map(function (e) {\n    return data[e][year];\n  });\n};\n\nvar accumulate = function accumulate(data) {\n  for (var i = 1; i < data.length; i++) {\n    data[i] += data[i - 1];\n  }\n\n  return data;\n};\n\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET_REPORTING_DATA':\n      return _objectSpread({}, state, {\n        reportingData: {\n          sellThroughData: {\n            labels: Object.keys(action.payload.sell_through).sort(function (a, b) {\n              return parseInt(a.slice(1, a.length)) - parseInt(b.slice(1, b.length));\n            }),\n            datasets: [{\n              label: 'TY',\n              fill: false,\n              borderColor: '#44677b',\n              data: getData(action.payload.sell_through, 'ty'),\n              steppedLine: true\n            }, {\n              label: 'LY',\n              fill: false,\n              borderColor: '#a6cee3',\n              data: getData(action.payload.sell_through, 'ly'),\n              steppedLine: true\n            }]\n          },\n          inventoryData: {\n            labels: Object.keys(action.payload.inventory).sort(function (a, b) {\n              return parseInt(a.slice(1, a.length)) - parseInt(b.slice(1, b.length));\n            }),\n            datasets: [{\n              label: 'TY',\n              fill: false,\n              borderColor: '#44677b',\n              data: getData(action.payload.inventory, 'ty')\n            }, {\n              label: 'LY',\n              fill: false,\n              borderColor: '#a6cee3',\n              data: getData(action.payload.inventory, 'ly')\n            }]\n          },\n          marginData: {\n            labels: Object.keys(action.payload.margin).sort(function (a, b) {\n              return parseInt(a.slice(1, a.length)) - parseInt(b.slice(1, b.length));\n            }),\n            datasets: [{\n              label: 'TY',\n              fill: false,\n              borderColor: '#44677b',\n              data: getData(action.payload.margin, 'ty')\n            }, {\n              label: 'LY',\n              fill: false,\n              borderColor: '#a6cee3',\n              data: getData(action.payload.margin, 'ly')\n            }]\n          },\n          salesData: {\n            labels: ['Last year', 'Actual'],\n            datasets: [{\n              fill: false,\n              backgroundColor: ['#a6cee3', '#44677b'],\n              data: [action.payload.sales.ly, action.payload.sales.ty]\n            }]\n          }\n        }\n      });\n\n    case 'GET_SKU_COCKPIT':\n      return _objectSpread({}, state, {\n        cockpitData: action.payload\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n}","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/reducers/reportingReducer.js"],"names":["initialState","reportingData","cockpitData","getData","data","year","Object","keys","sort","a","b","parseInt","slice","length","map","e","accumulate","i","state","action","type","sellThroughData","labels","payload","sell_through","datasets","label","fill","borderColor","steppedLine","inventoryData","inventory","marginData","margin","salesData","backgroundColor","sales","ly","ty"],"mappings":"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","sourcesContent":["const initialState = {\n  reportingData: {},\n  cockpitData: {},\n};\nconst getData = (data, year) => {\n  return Object.keys(data)\n    .sort((a, b) => {\n      return parseInt(a.slice(1, a.length)) - parseInt(b.slice(1, b.length));\n    })\n    .map((e) => data[e][year]);\n};\nconst accumulate = (data) => {\n  for (let i = 1; i < data.length; i++) {\n    data[i] += data[i - 1];\n  }\n  return data;\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case 'SET_REPORTING_DATA':\n      return {\n        ...state,\n        reportingData: {\n          sellThroughData: {\n            labels: Object.keys(action.payload.sell_through).sort((a, b) => {\n              return parseInt(a.slice(1, a.length)) - parseInt(b.slice(1, b.length));\n            }),\n            datasets: [\n              {\n                label: 'TY',\n                fill: false,\n                borderColor: '#44677b',\n                data: getData(action.payload.sell_through, 'ty'),\n                steppedLine: true,\n              },\n              {\n                label: 'LY',\n                fill: false,\n                borderColor: '#a6cee3',\n                data: getData(action.payload.sell_through, 'ly'),\n                steppedLine: true,\n              },\n            ],\n          },\n          inventoryData: {\n            labels: Object.keys(action.payload.inventory).sort((a, b) => {\n              return parseInt(a.slice(1, a.length)) - parseInt(b.slice(1, b.length));\n            }),\n            datasets: [\n              {\n                label: 'TY',\n                fill: false,\n                borderColor: '#44677b',\n                data: getData(action.payload.inventory, 'ty'),\n              },\n              {\n                label: 'LY',\n                fill: false,\n                borderColor: '#a6cee3',\n                data: getData(action.payload.inventory, 'ly'),\n              },\n            ],\n          },\n          marginData: {\n            labels: Object.keys(action.payload.margin).sort((a, b) => {\n              return parseInt(a.slice(1, a.length)) - parseInt(b.slice(1, b.length));\n            }),\n            datasets: [\n              {\n                label: 'TY',\n                fill: false,\n                borderColor: '#44677b',\n                data: getData(action.payload.margin, 'ty'),\n              },\n              {\n                label: 'LY',\n                fill: false,\n                borderColor: '#a6cee3',\n                data: getData(action.payload.margin, 'ly'),\n              },\n            ],\n          },\n          salesData: {\n            labels: ['Last year', 'Actual'],\n            datasets: [\n              {\n                fill: false,\n                backgroundColor: ['#a6cee3', '#44677b'],\n                data: [action.payload.sales.ly, action.payload.sales.ty],\n              },\n            ],\n          },\n        },\n      };\n    case 'GET_SKU_COCKPIT':\n      return {\n        ...state,\n        cockpitData: action.payload,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}