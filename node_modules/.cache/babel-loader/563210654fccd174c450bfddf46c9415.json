{"ast":null,"code":"import _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/PricingModule/Container/Pipeline.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport pricingStyle from '../pricingStyle.css';\nimport PricingFilter from '../Component/PricingFilter';\nimport ProductInfo from '../Component/ProductInfo';\nimport InternalFactorAnalysis from '../Component/InternalFactorAnalysis';\nimport PipelineFinalize from '../Component/PipelineFinalize';\nimport GenerateRecommendation from '../Component/GenerateRecommendation';\nimport SimulateScenarios from '../Component/SimulateScenarios';\nimport PipeLineCard from '../Component/PipeLineCard';\nimport { pipelineData, getPipelinePlan as _getPipelinePlan, updatePlan as _updatePlan } from \"../Actions/PipelineAction\";\nimport { isEqual } from \"lodash\";\nexport var Pipeline =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Pipeline, _Component);\n\n  function Pipeline(props) {\n    var _this;\n\n    _classCallCheck(this, Pipeline);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pipeline).call(this, props));\n\n    _this.approvePipelinePlan = function (id) {\n      _this.props.updatePlan({\n        planID: id,\n        status: \"APPROVED\"\n      });\n\n      setTimeout(function () {\n        _this.props.getPipelinePlan();\n      }, 3000);\n    };\n\n    _this.rejectPipelinePlan = function (id) {\n      _this.props.updatePlan({\n        planID: id,\n        status: \"REJECTED\"\n      });\n\n      setTimeout(function () {\n        _this.props.getPipelinePlan();\n      }, 3000);\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Pipeline, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getPipelinePlan(); // this.props.updatePlan({\n      //     \"planID\": 1,\n      //     \"status\": \"APPROVED\",\n      // });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      /*console.log(JSON.stringify(prevProps.pipelineData.data))\n      console.log(JSON.stringify(this.props.pipelineData.data))\n      console.log(\"isEqual:\",isEqual(prevProps.pipelineData.data,this.props.pipelineData.data))\n       if ( this.props.pipelineData.data && !isEqual(prevProps.pipelineData.data, this.props.pipelineData.data)) {\n          this.props.getPipelinePlan();\n      }*/\n      //this.props.getPipelinePlan();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"Reducer Data\", this.props.pipelineData);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(PipeLineCard, {\n        data: this.props.pipelineData.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), this.props.pipelineData.data && this.props.pipelineData.data.length > 0 ? React.createElement(\"div\", {\n        className: \"card\",\n        style: {\n          marginTop: \"3%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(PipelineFinalize, {\n        data: this.props.pipelineData.data,\n        approvePlan: this.approvePipelinePlan,\n        rejectPlan: this.rejectPipelinePlan,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })) : null);\n    }\n  }]);\n\n  return Pipeline;\n}(Component); // export default Pipeline;\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    pipelineData: store.pipelineReducer.pipelineData,\n    updatePlan: store.pipelineReducer.updatePlan\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getPipelinePlan: function getPipelinePlan(val) {\n      return dispatch(_getPipelinePlan(val));\n    },\n    updatePlan: function updatePlan(val) {\n      return dispatch(_updatePlan(val));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps // mapActionToProps\n)(withRouter(Pipeline));","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/PricingModule/Container/Pipeline.js"],"names":["React","Component","connect","withRouter","pricingStyle","PricingFilter","ProductInfo","InternalFactorAnalysis","PipelineFinalize","GenerateRecommendation","SimulateScenarios","PipeLineCard","pipelineData","getPipelinePlan","updatePlan","isEqual","Pipeline","props","approvePipelinePlan","id","planID","status","setTimeout","rejectPipelinePlan","state","prevProps","console","log","data","length","marginTop","mapStateToProps","store","pipelineReducer","mapDispatchToProps","dispatch","val"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,sBAAP,MAAmC,qCAAnC;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,sBAAP,MAAmC,qCAAnC;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,YAAT,EAAuBC,eAAe,IAAfA,gBAAvB,EAAwCC,UAAU,IAAVA,WAAxC,QAA0D,2BAA1D;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEA,WAAaC,QAAb;AAAA;AAAA;AAAA;;AACI,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;;AADe,UAuBnBC,mBAvBmB,GAuBG,UAACC,EAAD,EAAQ;AAC1B,YAAKF,KAAL,CAAWH,UAAX,CAAsB;AAClBM,QAAAA,MAAM,EAAED,EADU;AAElBE,QAAAA,MAAM,EAAE;AAFU,OAAtB;;AAKAC,MAAAA,UAAU,CAAC,YAAM;AACb,cAAKL,KAAL,CAAWJ,eAAX;AACH,OAFS,EAER,IAFQ,CAAV;AAGH,KAhCkB;;AAAA,UAiCnBU,kBAjCmB,GAiCE,UAACJ,EAAD,EAAQ;AACzB,YAAKF,KAAL,CAAWH,UAAX,CAAsB;AAClBM,QAAAA,MAAM,EAAED,EADU;AAElBE,QAAAA,MAAM,EAAE;AAFU,OAAtB;;AAKAC,MAAAA,UAAU,CAAC,YAAM;AACb,cAAKL,KAAL,CAAWJ,eAAX;AACH,OAFS,EAER,IAFQ,CAAV;AAIH,KA3CkB;;AAEf,UAAKW,KAAL,GAAa,EAAb;AAFe;AAIlB;;AALL;AAAA;AAAA,wCAMwB;AAChB,WAAKP,KAAL,CAAWJ,eAAX,GADgB,CAEhB;AACA;AACA;AACA;AACH;AAZL;AAAA;AAAA,uCAauBY,SAbvB,EAakC;AAC1B;;;;;;AAQA;AACH;AAvBL;AAAA;AAAA,6BA8Ca;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKV,KAAL,CAAWL,YAAvC;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAE,KAAKK,KAAL,CAAWL,YAAX,CAAwBgB,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGS,KAAKX,KAAL,CAAWL,YAAX,CAAwBgB,IAAxB,IAAgC,KAAKX,KAAL,CAAWL,YAAX,CAAwBgB,IAAxB,CAA6BC,MAA7B,GAAsC,CAAvE,GAA4E;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACxE,oBAAC,gBAAD;AAAkB,QAAA,IAAI,EAAE,KAAKb,KAAL,CAAWL,YAAX,CAAwBgB,IAAhD;AAAsD,QAAA,WAAW,EAAE,KAAKV,mBAAxE;AAA6F,QAAA,UAAU,EAAE,KAAKK,kBAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADwE,CAA5E,GAES,IALjB,CADJ;AAYH;AA7DL;;AAAA;AAAA,EAA8BtB,SAA9B,E,CAgEA;;AACA,IAAM8B,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHpB,IAAAA,YAAY,EAAEoB,KAAK,CAACC,eAAN,CAAsBrB,YADjC;AAEHE,IAAAA,UAAU,EAAEkB,KAAK,CAACC,eAAN,CAAsBnB;AAF/B,GAAP;AAMH,CAPD;;AASA,IAAMoB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHtB,IAAAA,eAAe,EAAE,yBAAAuB,GAAG;AAAA,aAAID,QAAQ,CAACtB,gBAAe,CAACuB,GAAD,CAAhB,CAAZ;AAAA,KADjB;AAEHtB,IAAAA,UAAU,EAAE,oBAAAsB,GAAG;AAAA,aAAID,QAAQ,CAACrB,WAAU,CAACsB,GAAD,CAAX,CAAZ;AAAA;AAFZ,GAAP;AAKH,CAND;;AAOA,eAAelC,OAAO,CAClB6B,eADkB,EAElBG,kBAFkB,CAGlB;AAHkB,CAAP,CAIb/B,UAAU,CAACa,QAAD,CAJG,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport pricingStyle from '../pricingStyle.css'\nimport PricingFilter from '../Component/PricingFilter';\nimport ProductInfo from '../Component/ProductInfo';\nimport InternalFactorAnalysis from '../Component/InternalFactorAnalysis';\nimport PipelineFinalize from '../Component/PipelineFinalize';\nimport GenerateRecommendation from '../Component/GenerateRecommendation';\nimport SimulateScenarios from '../Component/SimulateScenarios';\nimport PipeLineCard from '../Component/PipeLineCard';\nimport { pipelineData, getPipelinePlan, updatePlan } from \"../Actions/PipelineAction\";\nimport { isEqual } from \"lodash\";\n\nexport class Pipeline extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n    componentDidMount() {\n        this.props.getPipelinePlan();\n        // this.props.updatePlan({\n        //     \"planID\": 1,\n        //     \"status\": \"APPROVED\",\n        // });\n    }\n    componentDidUpdate(prevProps) {\n        /*console.log(JSON.stringify(prevProps.pipelineData.data))\n        console.log(JSON.stringify(this.props.pipelineData.data))\n        console.log(\"isEqual:\",isEqual(prevProps.pipelineData.data,this.props.pipelineData.data))\n\n        if ( this.props.pipelineData.data && !isEqual(prevProps.pipelineData.data, this.props.pipelineData.data)) {\n            this.props.getPipelinePlan();\n        }*/\n\n        //this.props.getPipelinePlan();\n    }\n    approvePipelinePlan = (id) => {\n        this.props.updatePlan({\n            planID: id,\n            status: \"APPROVED\"\n        });\n\n        setTimeout(() => {\n            this.props.getPipelinePlan();\n        },3000)\n    }\n    rejectPipelinePlan = (id) => {\n        this.props.updatePlan({\n            planID: id,\n            status: \"REJECTED\"\n        });\n\n        setTimeout(() => {\n            this.props.getPipelinePlan();\n        },3000)\n\n    }\n\n    render() {\n        console.log(\"Reducer Data\", this.props.pipelineData)\n\n        return (\n            <div>\n                <PipeLineCard data={this.props.pipelineData.data} />\n                {\n                    (this.props.pipelineData.data && this.props.pipelineData.data.length > 0) ? <div className=\"card\" style={{ marginTop: \"3%\" }}>\n                        <PipelineFinalize data={this.props.pipelineData.data} approvePlan={this.approvePipelinePlan} rejectPlan={this.rejectPipelinePlan} />\n                    </div> : null\n                }\n                {/* <hr className=\"hr-style\" /> */}\n                {/* <p className=\"font-size-14 font-bold cntnt-padding\"> Pipeline List</p> */}\n            </div>\n        )\n    }\n}\n\n// export default Pipeline;\nconst mapStateToProps = store => {\n    return {\n        pipelineData: store.pipelineReducer.pipelineData,\n        updatePlan: store.pipelineReducer.updatePlan,\n\n\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getPipelinePlan: val => dispatch(getPipelinePlan(val)),\n        updatePlan: val => dispatch(updatePlan(val)),\n\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n    // mapActionToProps\n)(withRouter(Pipeline));\n\n"]},"metadata":{},"sourceType":"module"}