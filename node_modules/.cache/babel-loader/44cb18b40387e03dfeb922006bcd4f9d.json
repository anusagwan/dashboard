{"ast":null,"code":"var _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Summary/aggColdef.js\";\nimport React from 'react';\nimport { toPercentage, toPercentageWithDecimalDraft, toUnit, toDollar, toDollarWithDecimal, toPercWithOneDecimal } from '../../helper/formatter';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport numeral from 'numeral'; //cellClassName must be same for aggColDef, binToWeekColDef and weekToBinColDef\n\n/********************************************************************* */\n//*******WHILE ADDING NEW COLUMNS ADD A UNIQUE CELLCLASSNAME************/\n\n/********ADD THE COLUMN TO ALL OF THREE COLDEFS*************************/\n\n/********************************************************************* */\n//aggColDef is aggregate level parent table coldef,\n//in this level user can expand both dateRange and Bins cols(when one is expanded the other will disable)\n\nexport var aggColDef = [// {\n//   Header: 'MD Plan',\n//   accessor: 'md_plan',\n//   cellClassName: 'summary_md_plan',\n// },\n{\n  Header: 'Plan Level',\n  accessor: 'level',\n  cellClassName: 'summary_cadence_type'\n}, {\n  id: 'expander',\n  cellClassName: 'summary_expander',\n  Header: 'Date Range',\n  Cell: function Cell(_ref) {\n    var row = _ref.row;\n    var startWeek = row.original && row.original.week_level_data && row.original.week_level_data[0];\n    var endWeek = row.original && row.original.week_level_data && row.original.week_level_data[row.original.week_level_data.length - 1];\n    var SDate = startWeek && moment(startWeek.start_of_week).format('YYYY/MM/DD'); // moment().year(startWeek.year).week(startWeek.week).day('monday').format('YYYY/MM/DD');\n\n    var EDate = endWeek && moment(endWeek.end_of_week).format('YYYY/MM/DD'); // moment()\n    //   .year(endWeek.year)\n    //   .week(endWeek.week + 1)\n    //   .day('sunday')\n    //   .format('YYYY/MM/DD');\n\n    return row.original.md_plan ? React.createElement(\"span\", Object.assign({\n      className: \"summary-table-icon\"\n    }, row.getToggleRowExpandedProps({\n      style: {\n        paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n      }\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), SDate, \" - \", EDate, \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n      class: \"fa fa-angle-down expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      class: \"fa fa-angle-right expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), \"\\xA0\\xA0\\xA0\") : null;\n  }\n}, {\n  id: 'expander1',\n  cellClassName: 'summary_expander1',\n  Header: 'Bins',\n  Cell: function Cell(_ref2) {\n    var row = _ref2.row;\n    return row.original.md_plan ? React.createElement(\"span\", Object.assign({\n      className: \"summary-table-icon\"\n    }, row.getToggleRowExpandedProps({\n      style: {\n        paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n      }\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), row.original.bin_level_data ? row.original.bin_level_data.length : row.original.week_level_data && row.original.week_level_data[0] && row.original.week_level_data[0].bin_level_data ? row.original.week_level_data[0].bin_level_data.length : row.original.week_level_data && row.original.week_level_data[0] && row.original.week_level_data[0].subRows ? row.original.week_level_data[0].subRows.length : '-', \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n      class: \"fa fa-angle-down expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      class: \"fa fa-angle-right expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), \"\\xA0\\xA0\\xA0\") : null;\n  }\n}, {\n  Header: '#Products',\n  accessor: 'overall_product_count',\n  cellClassName: 'summary_product_code',\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \" \", toUnit(props), \" \");\n  }\n}, // {\n//   Header: 'Next week MD',\n//   accessor: 'overall_next_week',\n//   cellClassName: 'summary_next_week',\n//   Cell: ({ row, rows }) => {\n//     return '-';\n//   },\n// },\n{\n  Header: 'Current running MD',\n  accessor: 'overall_next_week',\n  cellClassName: 'summary_current_md',\n  Cell: function Cell(_ref3) {\n    var row = _ref3.row,\n        rows = _ref3.rows;\n    return '-';\n  }\n}, {\n  Header: 'Planned MD',\n  accessor: 'overall_offer_value',\n  cellClassName: 'summary_planned_md',\n  Cell: function Cell(_ref4) {\n    var row = _ref4.row;\n    var value = row.original.overall_offer_value;\n    var type = row.original.overall_offer_type;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, value ? unitCheck(value, type) : '-');\n  }\n}, {\n  Header: 'Refreshed MD',\n  accessor: 'refreshed_md',\n  cellClassName: 'summary_refreshed_md',\n  Cell: function Cell(_ref5) {\n    var row = _ref5.row;\n    var value = row.original.overall_refreshed_md;\n    var type = row.original.overall_offer_type;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, value ? unitCheck(value, type) : '-');\n  }\n}, {\n  Header: 'MD Difference',\n  accessor: 'overall_md_diff',\n  cellClassName: 'summary_difference',\n  Cell: function Cell(_ref6) {\n    var row = _ref6.row;\n    return row.original.overall_md_diff ? row.original.overall_md_diff : '-';\n  }\n}, {\n  Header: 'Sell through %',\n  accessor: 'overall_sell_through',\n  cellClassName: 'summary_sell_through',\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \" \", toPercentageWithDecimalDraft(props), \" \");\n  }\n}, // {\n//   Header: 'Markdown %',\n//   accessor: 'overall_markdown_perc',\n//   cellClassName: 'summary_markdown_perc',\n//   Cell: (props) => <div> {toPercentage(props)} </div>,\n// },\n{\n  Header: 'Margin %',\n  accessor: 'overall_margin_perc',\n  cellClassName: 'summary_margin_perc',\n  metric: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \" \", toPercWithOneDecimal(props), \" \");\n  }\n}, {\n  Header: 'Margin $',\n  accessor: 'overall_margin$',\n  cellClassName: 'summary_margin',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \" \", toDollar(props), \" \");\n  }\n}, {\n  Header: 'AUM $',\n  accessor: 'overall_aum',\n  cellClassName: 'summary_aum',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \" \", toDollarWithDecimal(props), \" \");\n  }\n}, {\n  Header: 'Revenue $',\n  accessor: 'overall_revenue$',\n  cellClassName: 'summary_revenue',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \" \", toDollar(props), \" \");\n  }\n}, // {\n//   Header: 'Planned units',\n//   accessor: 'overall_planned_units',\n//   cellClassName: 'summary_pvh_units',\n//   hideColumn: true,\n//   Cell: (props) => <div> {toUnit(props)} </div>,\n// },\n{\n  Header: 'Units',\n  accessor: 'overall_markdown_units',\n  cellClassName: 'summary_markdown_units',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \" \", toUnit(props), \" \");\n  }\n}, {\n  Header: 'AUR $',\n  accessor: 'overall_aur',\n  cellClassName: 'summary_aur',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \" \", toDollarWithDecimal(props), \" \");\n  }\n}]; //weekToBinColDef contains accessor in granular level,\n//in Cell method have added a condition to display aggregated level data\n//if u add a new column make sure to copy the same\n//only bins will be expandable\n\nexport var weekToBinColDef = [{\n  Header: 'MD Plan',\n  accessor: 'md_plan',\n  cellClassName: 'summary_md_plan',\n  Cell: function Cell(_ref7) {\n    var row = _ref7.row;\n    return null;\n  }\n}, {\n  Header: 'Plan Level',\n  accessor: 'level',\n  cellClassName: 'summary_cadence_type'\n}, {\n  Header: 'Date Range',\n  id: 'expander',\n  cellClassName: 'summary_expander',\n  // Cell: ({ row }) => {\n  //   return <span>{row.original.week ? 'W' + row.original.week : ''}</span>;\n  // },\n  Cell: function Cell(_ref8) {\n    var row = _ref8.row;\n    var sMonth = moment(row.original.start_of_week && row.original.start_of_week).format('MMM');\n    var eMonth = moment(row.original.end_of_week && row.original.end_of_week).format('MMM');\n    var sDay = moment(row.original.start_of_week && row.original.start_of_week).format('DD');\n    var eDay = moment(row.original.end_of_week && row.original.end_of_week).format('DD');\n    var header = sMonth + ' ' + sDay + ' - ' + eMonth + ' ' + eDay;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, row.original.week ? header : '');\n  }\n}, {\n  id: 'expander1',\n  cellClassName: 'summary_expander1',\n  Header: 'Bins',\n  Cell: function Cell(_ref9) {\n    var row = _ref9.row;\n    return row.original.subRows ? React.createElement(\"span\", Object.assign({\n      className: \"summary-table-icon\"\n    }, row.getToggleRowExpandedProps({\n      style: {\n        // We can even use the row.depth property\n        // and paddingLeft to indicate the depth\n        // of the row\n        paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n      }\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), row.original.subRows ? row.original.subRows.length : '-', \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n      class: \"fa fa-angle-down expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      class: \"fa fa-angle-right expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), \"\\xA0\\xA0\\xA0\") : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, row.original.bin_num ? 'Bin ' + row.original.bin_num : null);\n  }\n}, {\n  Header: '#Products',\n  accessor: 'product_count',\n  cellClassName: 'summary_product_code',\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_product_count : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \" \", toUnit({\n      value: value\n    }), \" \");\n  }\n}, // {\n//   Header: 'Next week MD',\n//   accessor: 'next_week',\n//   cellClassName: 'summary_next_week',\n//   Cell: ({ row, rows }) => {\n//     let typeAccessor = !_.isEmpty(row.subRows) ? 'overall_week_offer_type' : 'offer_type';\n//     let value = findNextWeek(row, rows);\n//     return <span>{value ? unitCheck(value, row.original[typeAccessor]) : '-'}</span>;\n//   },\n// },\n{\n  Header: 'Current running MD',\n  accessor: 'next_week',\n  cellClassName: 'summary_current_md',\n  Aggregated: function Aggregated(_ref10) {\n    var row = _ref10.row,\n        rows = _ref10.rows;\n    if (_.isEmpty(row.subRows)) return '-';\n    var value = null,\n        subRows = row.subRows;\n\n    for (var i = 0; i < subRows.length; i++) {\n      var newValue = currentRunningMd(subRows[i], rows);\n      value = newValue ? value + newValue : value;\n    }\n\n    return value || value === 0 ? unitCheck(value / subRows.length, row.original.overall_week_offer_type) : '-';\n  },\n  Cell: function Cell(_ref11) {\n    var row = _ref11.row,\n        rows = _ref11.rows;\n    if (!_.isEmpty(row.subRows)) return '-';\n    var value = currentRunningMd(row, rows);\n    return value || value === 0 ? unitCheck(value, row.original.offer_type) : '-';\n  }\n}, {\n  Header: 'Planned MD',\n  accessor: 'offer_value',\n  cellClassName: 'summary_planned_md',\n  Cell: function Cell(_ref12) {\n    var row = _ref12.row;\n    var value = !_.isEmpty(row.subRows) ? row.original.overall_week_offer_value : row.original.offer_value;\n    var type = !_.isEmpty(row.subRows) ? row.original.overall_week_offer_type : row.original.offer_type;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, value ? unitCheck(value, type) : '-');\n  }\n}, {\n  Header: 'Refreshed MD',\n  accessor: 'refreshed_md',\n  cellClassName: 'summary_refreshed_md',\n  Cell: function Cell(_ref13) {\n    var row = _ref13.row;\n    var value = !_.isEmpty(row.subRows) ? row.original.overall_week_refreshed_md : row.original.refreshed_md;\n    var type = !_.isEmpty(row.subRows) ? row.original.overall_week_offer_type : row.original.offer_type;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, value ? unitCheck(value, type) : '-');\n  }\n}, {\n  Header: 'MD Difference',\n  accessor: 'md_diff',\n  cellClassName: 'summary_difference',\n  Aggregated: function Aggregated(_ref14) {\n    var row = _ref14.row,\n        rows = _ref14.rows;\n    if (_.isEmpty(row.subRows)) return '-';\n    var currentRunningMdVal = null,\n        subRows = row.subRows;\n\n    for (var i = 0; i < subRows.length; i++) {\n      var newValue = currentRunningMd(subRows[i], rows);\n      currentRunningMdVal = newValue ? currentRunningMdVal + newValue : currentRunningMdVal;\n    }\n\n    var refreshedMdVal = row.original.overall_week_refreshed_md;\n    var value = refreshedMdVal - currentRunningMdVal / subRows.length;\n    return value || value === 0 ? unitCheck(value, row.original.overall_week_offer_type) : '-';\n  },\n  Cell: function Cell(_ref15) {\n    var row = _ref15.row,\n        rows = _ref15.rows;\n    if (!_.isEmpty(row.subRows)) return '-';\n    var currentRunningMdVal = currentRunningMd(row, rows);\n    var refreshedMdVal = row.original.refreshed_md;\n    var value = refreshedMdVal - currentRunningMdVal;\n    return value || value === 0 ? unitCheck(value, row.original.offer_type) : '-';\n  } // Cell: ({ row, rows }) => {\n  //   let accessor = !_.isEmpty(row.subRows) ? 'overall_week_offer_value' : 'offer_value';\n  //   let type = !_.isEmpty(row.subRows) ? 'overall_week_offer_type' : 'offer_type';\n  //   let nextWeek,\n  //     currentWeek = row.original[accessor] ? parseFloat(row.original[accessor]) : 0;\n  //   let value = findNextWeek(row, rows);\n  //   nextWeek = value ? parseFloat(value) : 0;\n  //   return (\n  //     <span>{currentWeek ? unitCheck(nextWeek - currentWeek, row.original[type]) : '-'}</span>\n  //   );\n  // },\n\n}, {\n  Header: 'Sell through %',\n  accessor: 'sell_through',\n  cellClassName: 'summary_sell_through',\n  Cell: function Cell(_ref16) {\n    var row = _ref16.row,\n        rows = _ref16.rows;\n    var id = row.id.split('.');\n    var value = 0;\n\n    if (_.isEmpty(row.subRows) && (row.original.sell_through || row.original.sell_through === 0)) {\n      for (var i = 0; i <= parseInt(id[0]); i++) {\n        var found = _.find(rows, {\n          id: \"\".concat(i)\n        });\n\n        var data = found && found.originalSubRows && found.originalSubRows[parseInt(id[1])] && found.originalSubRows[parseInt(id[1])].sell_through ? found.originalSubRows[parseInt(id[1])].sell_through : 0;\n        value = value + data;\n      }\n    }\n\n    if (!_.isEmpty(row.subRows) && row.original.overall_week_sell_through) {\n      for (var _i = 0; _i <= parseInt(id[0]); _i++) {\n        var _found = _.find(rows, {\n          id: \"\".concat(_i)\n        });\n\n        var _data = _found && _found.original && _found.original.overall_week_sell_through ? _found.original.overall_week_sell_through : 0;\n\n        value = value + _data;\n      }\n    }\n\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, value || value === 0 ? toPercentageWithDecimalDraft({\n      value: value\n    }) : '-');\n  }\n}, // {\n//   Header: 'Markdown %',\n//   accessor: 'markdown_perc',\n//   cellClassName: 'summary_markdown_perc',\n//   Cell: (props) => {\n//     let value = props.row.original.subRows\n//       ? props.row.original.overall_week_markdown_perc\n//       : props.value;\n//     return <div> {toPercentage({ value })} </div>;\n//   },\n// },\n{\n  Header: 'Margin %',\n  accessor: 'margin_perc',\n  cellClassName: 'summary_margin_perc',\n  metric: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_margin_perc : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, \" \", toPercWithOneDecimal({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'Margin $',\n  accessor: 'margin$',\n  cellClassName: 'summary_margin',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_margin$ : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, \" \", toDollar({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'AUM $',\n  accessor: 'aum',\n  cellClassName: 'summary_aum',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_aum : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, \" \", toDollarWithDecimal({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'Revenue $',\n  accessor: 'revenue$',\n  cellClassName: 'summary_revenue',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_revenue$ : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, \" \", toDollar({\n      value: value\n    }), \" \");\n  }\n}, // {\n//   Header: 'Planned units',\n//   accessor: 'planned_units',\n//   cellClassName: 'summary_pvh_units',\n//   hideColumn: true,\n//   Cell: (props) => {\n//     let value = props.row.original.subRows\n//       ? props.row.original.overall_week_planned_units\n//       : props.value;\n//     return <div> {toUnit({ value })} </div>;\n//   },\n// },\n{\n  Header: 'Units',\n  accessor: 'markdown_units',\n  cellClassName: 'summary_markdown_units',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_markdown_units : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }, \" \", toUnit({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'AUR $',\n  accessor: 'aur',\n  cellClassName: 'summary_aur',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_aur : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }, \" \", toDollarWithDecimal({\n      value: value\n    }), \" \");\n  }\n}]; //same as weekToBinColDef, but bin to week level\n//only date range will be expandable\n\nexport var binToWeekColDef = [{\n  Header: 'MD Plan',\n  accessor: 'md_plan',\n  cellClassName: 'summary_md_plan',\n  Cell: function Cell(_ref17) {\n    var row = _ref17.row;\n    return null;\n  }\n}, {\n  Header: 'Plan Level',\n  accessor: 'level',\n  cellClassName: 'summary_cadence_type'\n}, {\n  Header: 'Date Range',\n  id: 'expander',\n  cellClassName: 'summary_expander',\n  Cell: function Cell(_ref18) {\n    var row = _ref18.row;\n    var startWeek = row.originalSubRows && row.originalSubRows[0];\n    var endWeek = row.originalSubRows && row.originalSubRows[row.originalSubRows.length - 1];\n    var SDate = startWeek && moment(startWeek.start_of_week).format('YYYY/MM/DD'); // moment().year(startWeek.year).week(startWeek.week_num).day('monday').format('YYYY/MM/DD');\n\n    var EDate = endWeek && moment(endWeek.end_of_week).format('YYYY/MM/DD'); // moment()\n    //   .year(endWeek.year)\n    //   .week(endWeek.week_num + 1)\n    //   .day('sunday')\n    //   .format('YYYY/MM/DD');\n\n    var header = '';\n\n    if (_.isEmpty(row.original.subRows)) {\n      var sMonth = moment(row.original.start_of_week && row.original.start_of_week).format('MMM');\n      var eMonth = moment(row.original.end_of_week && row.original.end_of_week).format('MMM');\n      var sDay = moment(row.original.start_of_week && row.original.start_of_week).format('DD');\n      var eDay = moment(row.original.end_of_week && row.original.end_of_week).format('DD');\n      header = sMonth + ' ' + sDay + ' - ' + eMonth + ' ' + eDay;\n    }\n\n    return row.original.subRows ? React.createElement(\"span\", Object.assign({\n      className: \"summary-table-icon\"\n    }, row.getToggleRowExpandedProps({\n      style: {\n        paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n      }\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }), SDate, \" - \", EDate, \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n      class: \"fa fa-angle-down expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      class: \"fa fa-angle-right expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }), \"\\xA0\\xA0\\xA0\") : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }, row.original.week_num ? header : '');\n  }\n}, {\n  id: 'expander1',\n  cellClassName: 'summary_expander1',\n  Header: 'Bins',\n  Cell: function Cell(_ref19) {\n    var row = _ref19.row;\n    return row.original.bin ? 'Bin ' + row.original.bin : null;\n  }\n}, {\n  Header: '#Products',\n  accessor: 'product_count',\n  cellClassName: 'summary_product_code',\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_product_count : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    }, \" \", toUnit({\n      value: value\n    }), \" \");\n  }\n}, // {\n//   Header: 'Next week MD',\n//   accessor: 'next_week',\n//   cellClassName: 'summary_next_week',\n//   Cell: ({ row, rows }) => {\n//     let id, value;\n//     let accessor = !_.isEmpty(row.subRows) ? 'overall_bin_offer_value' : 'offer_value';\n//     let typeAccessor = !_.isEmpty(row.subRows)\n//       ? row.original.overall_bin_offer_type\n//       : row.original.offer_type;\n//     if (row.original[accessor]) {\n//       id = row.id.split('.');\n//       let find = _.find(rows, { id: id[0] });\n//       value =\n//         find.originalSubRows &&\n//         find.originalSubRows[parseInt(id[1]) + 1] &&\n//         find.originalSubRows[parseInt(id[1]) + 1][accessor];\n//     }\n//     return <span>{value ? unitCheck(value, typeAccessor) : '-'}</span>;\n//   },\n// },\n{\n  Header: 'Current running MD',\n  accessor: 'next_week',\n  cellClassName: 'summary_current_md',\n  Aggregated: function Aggregated(_ref20) {\n    var row = _ref20.row,\n        rows = _ref20.rows;\n    if (_.isEmpty(row.subRows)) return '-';\n    var value = null,\n        subRows = row.subRows;\n\n    for (var i = 0; i < subRows.length; i++) {\n      var newValue = currentRunningMdBin(subRows[i], rows);\n      value = newValue ? value + newValue : value;\n    }\n\n    return value || value === 0 ? unitCheck(value / subRows.length, row.original.overall_bin_offer_type) : '-';\n  },\n  Cell: function Cell(_ref21) {\n    var row = _ref21.row,\n        rows = _ref21.rows;\n    if (!_.isEmpty(row.subRows)) return '-';\n    var value = currentRunningMdBin(row, rows);\n    return value || value === 0 ? unitCheck(value, row.original.offer_type) : '-';\n  }\n}, {\n  Header: 'Planned MD',\n  accessor: 'offer_value',\n  cellClassName: 'summary_planned_md',\n  Cell: function Cell(_ref22) {\n    var row = _ref22.row;\n    var value = !_.isEmpty(row.subRows) ? row.original.overall_bin_offer_value : row.original.offer_value;\n    var type = !_.isEmpty(row.subRows) ? row.original.overall_bin_offer_type : row.original.offer_type;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669\n      },\n      __self: this\n    }, value ? unitCheck(value, type) : '-');\n  }\n}, {\n  Header: 'Refreshed MD',\n  accessor: 'refreshed_md',\n  cellClassName: 'summary_refreshed_md',\n  Cell: function Cell(_ref23) {\n    var row = _ref23.row;\n    var value = !_.isEmpty(row.subRows) ? row.original.overall_bin_refreshed_md : row.original.refreshed_md;\n    var type = !_.isEmpty(row.subRows) ? row.original.overall_bin_offer_type : row.original.offer_type;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684\n      },\n      __self: this\n    }, value ? unitCheck(value, type) : '-');\n  }\n}, {\n  Header: 'MD Difference',\n  accessor: 'md_diff',\n  cellClassName: 'summary_difference',\n  Aggregated: function Aggregated(_ref24) {\n    var row = _ref24.row,\n        rows = _ref24.rows;\n    if (_.isEmpty(row.subRows)) return '-';\n    var currentRunningMdVal = null,\n        subRows = row.subRows;\n\n    for (var i = 0; i < subRows.length; i++) {\n      var newValue = currentRunningMdBin(subRows[i], rows);\n      currentRunningMdVal = newValue ? currentRunningMdVal + newValue : currentRunningMdVal;\n    }\n\n    var refreshedMdVal = row.original.overall_bin_refreshed_md;\n    var value = refreshedMdVal - currentRunningMdVal / subRows.length;\n    return value || value === 0 ? unitCheck(value, row.original.overall_bin_offer_type) : '-';\n  },\n  Cell: function Cell(_ref25) {\n    var row = _ref25.row,\n        rows = _ref25.rows;\n    if (!_.isEmpty(row.subRows)) return '-';\n    var currentRunningMdVal = currentRunningMdBin(row, rows);\n    var refreshedMdVal = row.original.refreshed_md;\n    var value = refreshedMdVal - currentRunningMdVal;\n    return value || value === 0 ? unitCheck(value, row.original.offer_type) : '-';\n  } // Cell: ({ row, rows }) => {\n  //   let accessor = !_.isEmpty(row.subRows) ? 'overall_bin_offer_value' : 'offer_value';\n  //   let type = !_.isEmpty(row.subRows) ? 'overall_bin_offer_type' : 'offer_type';\n  //   let id,\n  //     nextWeek,\n  //     currentWeek = row.original[[accessor]] ? parseFloat(row.original[[accessor]]) : 0;\n  //   if (row.original[[accessor]]) {\n  //     id = row.id.split('.');\n  //     let find = _.find(rows, { id: id[0] });\n  //     let value =\n  //       find.originalSubRows &&\n  //       find.originalSubRows[parseInt(id[1]) + 1] &&\n  //       find.originalSubRows[parseInt(id[1]) + 1][[accessor]];\n  //     nextWeek = value ? parseFloat(value) : 0;\n  //   }\n  //   return (\n  //     <span>{currentWeek ? unitCheck(nextWeek - currentWeek, row.original[type]) : '-'}</span>\n  //   );\n  // },\n\n}, {\n  Header: 'Sell through %',\n  accessor: 'sell_through',\n  cellClassName: 'summary_sell_through',\n  Cell: function Cell(_ref26) {\n    var row = _ref26.row,\n        rows = _ref26.rows;\n    var id = row.id.split('.');\n    var value = 0;\n\n    if (_.isEmpty(row.subRows) && (row.original.sell_through || row.original.sell_through === 0)) {\n      var found = _.find(rows, {\n        id: id[0]\n      });\n\n      for (var i = 0; i <= parseInt(id[1]); i++) {\n        var data = found && found.originalSubRows && found.originalSubRows[i] && found.originalSubRows[i].sell_through ? found.originalSubRows[i].sell_through : 0;\n        value = value + data;\n      }\n    }\n\n    if (!_.isEmpty(row.subRows) && row.original.overall_bin_sell_through) {\n      for (var _i2 = 0; _i2 <= parseInt(id[0]); _i2++) {\n        var _found2 = _.find(rows, {\n          id: \"\".concat(_i2)\n        });\n\n        var _data2 = _found2 && _found2.original && _found2.original.overall_bin_sell_through ? _found2.original.overall_bin_sell_through : 0;\n\n        value = value + _data2;\n      }\n    }\n\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767\n      },\n      __self: this\n    }, value || value === 0 ? toPercentageWithDecimalDraft({\n      value: value\n    }) : '-');\n  }\n}, // {\n//   Header: 'Markdown %',\n//   accessor: 'markdown_perc',\n//   cellClassName: 'summary_markdown_perc',\n//   Cell: (props) => {\n//     let value = props.row.original.subRows\n//       ? props.row.original.overall_bin_markdown_perc\n//       : props.value;\n//     return <div> {toPercentage({ value })} </div>;\n//   },\n// },\n{\n  Header: 'Margin %',\n  accessor: 'margin_perc',\n  cellClassName: 'summary_margin_perc',\n  metric: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_margin_perc : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791\n      },\n      __self: this\n    }, \" \", toPercWithOneDecimal({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'Margin $',\n  accessor: 'margin$',\n  cellClassName: 'summary_margin',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_margin$ : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 801\n      },\n      __self: this\n    }, \" \", toDollar({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'AUM $',\n  accessor: 'aum',\n  cellClassName: 'summary_aum',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_aum : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 811\n      },\n      __self: this\n    }, \" \", toDollarWithDecimal({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'Revenue $',\n  accessor: 'revenue$',\n  cellClassName: 'summary_revenue',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_revenue$ : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823\n      },\n      __self: this\n    }, \" \", toDollar({\n      value: value\n    }), \" \");\n  }\n}, // {\n//   Header: 'Planned units',\n//   accessor: 'planned_units',\n//   cellClassName: 'summary_pvh_units',\n//   hideColumn: true,\n//   Cell: (props) => {\n//     let value = props.row.original.subRows\n//       ? props.row.original.overall_bin_planned_units\n//       : props.value;\n//     return <div> {toUnit({ value })} </div>;\n//   },\n// },\n{\n  Header: 'Units',\n  accessor: 'markdown_units',\n  cellClassName: 'summary_markdown_units',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_markdown_units : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847\n      },\n      __self: this\n    }, \" \", toUnit({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'AUR $',\n  accessor: 'aur',\n  cellClassName: 'summary_aur',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_aur : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857\n      },\n      __self: this\n    }, \" \", toDollarWithDecimal({\n      value: value\n    }), \" \");\n  }\n}]; /////detailed table coldefs\n\nexport var detailedColDef = [{\n  Header: 'MD Plan',\n  accessor: 'title'\n}, {\n  Header: 'Plan Level',\n  accessor: 'level'\n}, // {\n//   accessor: 'date',\n//   Header: 'Date Range',\n//   Cell: ({ row }) => {\n//     return (\n//       <span>\n//         {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n//         {moment(row.original.end_date).format('YYYY/MM/DD')}\n//       </span>\n//     );\n//   },\n// },\n{\n  accessor: 'start_of_week',\n  Header: 'Week',\n  Cell: function Cell(_ref27) {\n    var row = _ref27.row;\n    var sMonth = moment(row.original.start_of_week && row.original.start_of_week).format('MMM');\n    var eMonth = moment(row.original.end_of_week && row.original.end_of_week).format('MMM');\n    var sDay = moment(row.original.start_of_week && row.original.start_of_week).format('DD');\n    var eDay = moment(row.original.end_of_week && row.original.end_of_week).format('DD');\n    var header = sMonth + ' ' + sDay + ' - ' + eMonth + ' ' + eDay;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 893\n      },\n      __self: this\n    }, header);\n  }\n}, {\n  accessor: 'bins',\n  Header: 'Bins',\n  Cell: function Cell(_ref28) {\n    var row = _ref28.row;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901\n      },\n      __self: this\n    }, \"Bin \", row.original.bins);\n  }\n}, {\n  Header: 'Product code',\n  accessor: 'product_code'\n}, // {\n//   Header: 'Next week MD',\n//   accessor: 'overall_next_week',\n// },\n{\n  Header: 'Current running MD',\n  accessor: 'week_level_runnig_value',\n  Cell: function Cell(_ref29) {\n    var data = _ref29.data,\n        row = _ref29.row;\n    var original = row.original;\n    var lastWeekNum = moment().subtract(1, 'week').week();\n\n    var isLastWeek = _.find(data, {\n      promo_code: original.promo_code,\n      product_code: original.product_code,\n      week: lastWeekNum\n    });\n\n    var date = moment().year(original.year).week(original.week).day('monday').format('YYYY-MM-DD');\n    if (_.isEmpty(isLastWeek) || !moment().isSameOrBefore(date, 'week')) return '-';\n    return isLastWeek.week_level_refreshed_md ? unitCheck(isLastWeek.week_level_refreshed_md, isLastWeek.offer_type) : '-';\n  }\n}, {\n  Header: 'Planned MD',\n  accessor: 'week_level_offer_value',\n  Cell: function Cell(_ref30) {\n    var row = _ref30.row;\n    return row.original.week_level_offer_value ? unitCheck(row.original.week_level_offer_value, row.original.offer_type) : '-';\n  }\n}, {\n  Header: 'Refreshed MD',\n  accessor: 'week_level_refreshed_md',\n  Cell: function Cell(_ref31) {\n    var row = _ref31.row;\n    return row.original.week_level_refreshed_md ? unitCheck(row.original.week_level_refreshed_md, row.original.offer_type) : '-';\n  }\n}, // {\n//   Header: 'MD Difference',\n//   accessor: 'overall_md_diff',\n//   Cell: ({ row }) => {\n//     return row.original.overall_md_diff ? row.original.overall_md_diff : '-';\n//   },\n// },\n{\n  Header: 'Sell through %',\n  accessor: 'week_level_sell_through',\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964\n      },\n      __self: this\n    }, \" \", toPercentageWithDecimalDraft(props), \" \");\n  }\n}, // {\n//   Header: 'Markdown %',\n//   accessor: 'week_level_markdown_perc',\n//   Cell: (props) => <div> {toPercentage(props)} </div>,\n// },\n{\n  Header: 'Margin %',\n  accessor: 'week_level_margin_perc',\n  metric: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 976\n      },\n      __self: this\n    }, \" \", toPercWithOneDecimal(props), \" \");\n  }\n}, {\n  Header: 'Margin $',\n  accessor: 'week_level_margin$',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 982\n      },\n      __self: this\n    }, \" \", toDollar(props), \" \");\n  }\n}, {\n  Header: 'AUM $',\n  accessor: 'week_level_aum',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 988\n      },\n      __self: this\n    }, \" \", toDollarWithDecimal(props), \" \");\n  }\n}, {\n  Header: 'Revenue $',\n  accessor: 'week_level_revenue$',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 994\n      },\n      __self: this\n    }, \" \", toDollar(props), \" \");\n  }\n}, // {\n//   Header: 'Planned units',\n//   accessor: 'week_level_planned_units',\n//   hideColumn: true,\n//   Cell: (props) => <div> {toUnit(props)} </div>,\n// },\n{\n  Header: 'Units',\n  accessor: 'week_level_markdown_units',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1006\n      },\n      __self: this\n    }, \" \", toUnit(props), \" \");\n  }\n}, {\n  Header: 'AUR $',\n  accessor: 'week_level_aur',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1012\n      },\n      __self: this\n    }, \" \", toDollarWithDecimal(props), \" \");\n  }\n}];\n\nfunction unitCheck(value, type) {\n  if (!value && value !== 0 || !type) return '-';\n  if (type === 'percent_off') return toPercentage({\n    value: value\n  });\n  if (type === 'fixed_price') return toDollar({\n    value: value\n  });\n}\n\nfunction findNextWeek(row, rows) {\n  var value;\n  var id = row.id.split('.');\n\n  var found = _.find(rows, {\n    id: \"\".concat(parseInt(id[0]) + 1)\n  });\n\n  if (!_.isEmpty(found) && _.isEmpty(row.subRows) && row.original.offer_value) {\n    value = found.originalSubRows && found.originalSubRows[parseInt(id[1])] && found.originalSubRows[parseInt(id[1])].offer_value;\n  }\n\n  if (!_.isEmpty(found) && !_.isEmpty(row.subRows) && row.original.overall_week_offer_value) {\n    value = found.original && found.original.overall_week_offer_value;\n  }\n\n  return value;\n}\n\nfunction currentRunningMd(row, rows) {\n  var value = null; // let date = moment()\n  //   .year(row.original.year)\n  //   .week(row.original.week_num)\n  //   .day('monday')\n  //   .format('YYYY-MM-DD');\n\n  var startOfWeek = moment(row.original.start_of_week).format('YYYY-MM-DD');\n  var endOfWeek = moment(row.original.end_of_week).format('YYYY-MM-DD'); // if (moment().isSameOrBefore(date, 'week')) {\n\n  if (moment().isSameOrBefore(startOfWeek, 'week') || moment().isSameOrBefore(endOfWeek, 'week')) {\n    // let lastWeekNum = moment().subtract(1, 'week').week();\n    var lastWeekEndDate = moment(startOfWeek).subtract(1, 'days').format('YYYY-MM-DD'); // let found = _.find(rows, { original: { week: lastWeekNum } });\n\n    var found = _.find(rows, {\n      original: {\n        end_of_week: lastWeekEndDate\n      }\n    });\n\n    var found1 = _.find(found && found.originalSubRows && found.originalSubRows, {\n      bin_num: row.original.bin_num\n    });\n\n    value = found1 && found1.refreshed_md ? found1.refreshed_md : null;\n  }\n\n  return value;\n}\n\nfunction currentRunningMdBin(row, rows) {\n  var value = null;\n  var date = moment().year(row.original.year).week(row.original.week_num).day('monday').format('YYYY-MM-DD');\n  var startOfWeek = moment(row.original.start_of_week).format('YYYY-MM-DD');\n  var endOfWeek = moment(row.original.end_of_week).format('YYYY-MM-DD'); // if (moment().isSameOrBefore(date, 'week')) {\n\n  if (moment().isSameOrBefore(startOfWeek, 'week') || moment().isSameOrBefore(endOfWeek, 'week')) {\n    var id = row.id.split('.');\n    var idNum = (id[0] - 1).toString();\n\n    var found = _.find(rows, {\n      id: idNum\n    });\n\n    if (!_.isEmpty(found) && found.originalSubRows.length) {\n      // let lastWeekNum = moment().subtract(1, 'week').week();\n      var lastWeekEndDate = moment(startOfWeek).subtract(1, 'days').format('YYYY-MM-DD'); // let find = _.find(found.originalSubRows, { week_num: lastWeekNum });\n\n      var find = _.find(found.originalSubRows, {\n        end_of_week: lastWeekEndDate\n      });\n\n      if (!find) return null;\n      value = find.refreshed_md;\n    }\n  }\n\n  return value;\n}","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Summary/aggColdef.js"],"names":["React","toPercentage","toPercentageWithDecimalDraft","toUnit","toDollar","toDollarWithDecimal","toPercWithOneDecimal","_","moment","numeral","aggColDef","Header","accessor","cellClassName","id","Cell","row","startWeek","original","week_level_data","endWeek","length","SDate","start_of_week","format","EDate","end_of_week","md_plan","getToggleRowExpandedProps","style","paddingLeft","depth","isExpanded","bin_level_data","subRows","props","rows","value","overall_offer_value","type","overall_offer_type","unitCheck","overall_refreshed_md","overall_md_diff","metric","hideColumn","weekToBinColDef","sMonth","eMonth","sDay","eDay","header","week","bin_num","overall_week_product_count","Aggregated","isEmpty","i","newValue","currentRunningMd","overall_week_offer_type","offer_type","overall_week_offer_value","offer_value","overall_week_refreshed_md","refreshed_md","currentRunningMdVal","refreshedMdVal","split","sell_through","parseInt","found","find","data","originalSubRows","overall_week_sell_through","overall_week_margin_perc","overall_week_margin$","overall_week_aum","overall_week_revenue$","overall_week_markdown_units","overall_week_aur","binToWeekColDef","week_num","bin","overall_bin_product_count","currentRunningMdBin","overall_bin_offer_type","overall_bin_offer_value","overall_bin_refreshed_md","overall_bin_sell_through","overall_bin_margin_perc","overall_bin_margin$","overall_bin_aum","overall_bin_revenue$","overall_bin_markdown_units","overall_bin_aur","detailedColDef","bins","lastWeekNum","subtract","isLastWeek","promo_code","product_code","date","year","day","isSameOrBefore","week_level_refreshed_md","week_level_offer_value","findNextWeek","startOfWeek","endOfWeek","lastWeekEndDate","found1","idNum","toString"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  toPercentage,\n  toPercentageWithDecimalDraft,\n  toUnit,\n  toDollar,\n  toDollarWithDecimal,\n  toPercWithOneDecimal,\n} from '../../helper/formatter';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport numeral from 'numeral';\n//cellClassName must be same for aggColDef, binToWeekColDef and weekToBinColDef\n/********************************************************************* */\n//*******WHILE ADDING NEW COLUMNS ADD A UNIQUE CELLCLASSNAME************/\n/********ADD THE COLUMN TO ALL OF THREE COLDEFS*************************/\n/********************************************************************* */\n//aggColDef is aggregate level parent table coldef,\n//in this level user can expand both dateRange and Bins cols(when one is expanded the other will disable)\nexport const aggColDef = [\n  // {\n  //   Header: 'MD Plan',\n  //   accessor: 'md_plan',\n  //   cellClassName: 'summary_md_plan',\n  // },\n  {\n    Header: 'Plan Level',\n    accessor: 'level',\n    cellClassName: 'summary_cadence_type',\n  },\n  {\n    id: 'expander',\n    cellClassName: 'summary_expander',\n    Header: 'Date Range',\n    Cell: ({ row }) => {\n      let startWeek =\n        row.original && row.original.week_level_data && row.original.week_level_data[0];\n      let endWeek =\n        row.original &&\n        row.original.week_level_data &&\n        row.original.week_level_data[row.original.week_level_data.length - 1];\n      let SDate = startWeek && moment(startWeek.start_of_week).format('YYYY/MM/DD');\n      // moment().year(startWeek.year).week(startWeek.week).day('monday').format('YYYY/MM/DD');\n      let EDate = endWeek && moment(endWeek.end_of_week).format('YYYY/MM/DD');\n      // moment()\n      //   .year(endWeek.year)\n      //   .week(endWeek.week + 1)\n      //   .day('sunday')\n      //   .format('YYYY/MM/DD');\n      return row.original.md_plan ? (\n        <span\n          className=\"summary-table-icon\"\n          {...row.getToggleRowExpandedProps({\n            style: {\n              paddingLeft: `${row.depth * 2}rem`,\n            },\n          })}>\n          {/* ******************************************* */}\n          {/* bcs need to show date range visible in summary table not plan date range */}\n          {/* ******************************************* */}\n          {SDate} - {EDate}\n          {/* {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n          {moment(row.original.end_date).format('YYYY/MM/DD')} */}\n          &nbsp;&nbsp;&nbsp;\n          {row.isExpanded ? (\n            <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          ) : (\n            <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          )}\n          &nbsp;&nbsp;&nbsp;\n        </span>\n      ) : null;\n    },\n  },\n\n  {\n    id: 'expander1',\n    cellClassName: 'summary_expander1',\n    Header: 'Bins',\n    Cell: ({ row }) => {\n      return row.original.md_plan ? (\n        <span\n          className=\"summary-table-icon\"\n          {...row.getToggleRowExpandedProps({\n            style: {\n              paddingLeft: `${row.depth * 2}rem`,\n            },\n          })}>\n          {row.original.bin_level_data\n            ? row.original.bin_level_data.length\n            : row.original.week_level_data &&\n              row.original.week_level_data[0] &&\n              row.original.week_level_data[0].bin_level_data\n            ? row.original.week_level_data[0].bin_level_data.length\n            : row.original.week_level_data &&\n              row.original.week_level_data[0] &&\n              row.original.week_level_data[0].subRows\n            ? row.original.week_level_data[0].subRows.length\n            : '-'}\n          &nbsp;&nbsp;&nbsp;\n          {row.isExpanded ? (\n            <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          ) : (\n            <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          )}\n          &nbsp;&nbsp;&nbsp;\n        </span>\n      ) : null;\n    },\n  },\n\n  {\n    Header: '#Products',\n    accessor: 'overall_product_count',\n    cellClassName: 'summary_product_code',\n    Cell: (props) => {\n      return <div> {toUnit(props)} </div>;\n    },\n  },\n  // {\n  //   Header: 'Next week MD',\n  //   accessor: 'overall_next_week',\n  //   cellClassName: 'summary_next_week',\n  //   Cell: ({ row, rows }) => {\n  //     return '-';\n  //   },\n  // },\n  {\n    Header: 'Current running MD',\n    accessor: 'overall_next_week',\n    cellClassName: 'summary_current_md',\n    Cell: ({ row, rows }) => {\n      return '-';\n    },\n  },\n  {\n    Header: 'Planned MD',\n    accessor: 'overall_offer_value',\n    cellClassName: 'summary_planned_md',\n    Cell: ({ row }) => {\n      let value = row.original.overall_offer_value;\n      let type = row.original.overall_offer_type;\n      return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    },\n  },\n  {\n    Header: 'Refreshed MD',\n    accessor: 'refreshed_md',\n    cellClassName: 'summary_refreshed_md',\n    Cell: ({ row }) => {\n      let value = row.original.overall_refreshed_md;\n      let type = row.original.overall_offer_type;\n      return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    },\n  },\n  {\n    Header: 'MD Difference',\n    accessor: 'overall_md_diff',\n    cellClassName: 'summary_difference',\n    Cell: ({ row }) => {\n      return row.original.overall_md_diff ? row.original.overall_md_diff : '-';\n    },\n  },\n  {\n    Header: 'Sell through %',\n    accessor: 'overall_sell_through',\n    cellClassName: 'summary_sell_through',\n    Cell: (props) => <div> {toPercentageWithDecimalDraft(props)} </div>,\n  },\n\n  // {\n  //   Header: 'Markdown %',\n  //   accessor: 'overall_markdown_perc',\n  //   cellClassName: 'summary_markdown_perc',\n  //   Cell: (props) => <div> {toPercentage(props)} </div>,\n  // },\n  {\n    Header: 'Margin %',\n    accessor: 'overall_margin_perc',\n    cellClassName: 'summary_margin_perc',\n    metric: true,\n    Cell: (props) => <div> {toPercWithOneDecimal(props)} </div>,\n  },\n  {\n    Header: 'Margin $',\n    accessor: 'overall_margin$',\n    cellClassName: 'summary_margin',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollar(props)} </div>,\n  },\n  {\n    Header: 'AUM $',\n    accessor: 'overall_aum',\n    cellClassName: 'summary_aum',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n  },\n  {\n    Header: 'Revenue $',\n    accessor: 'overall_revenue$',\n    cellClassName: 'summary_revenue',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollar(props)} </div>,\n  },\n  // {\n  //   Header: 'Planned units',\n  //   accessor: 'overall_planned_units',\n  //   cellClassName: 'summary_pvh_units',\n  //   hideColumn: true,\n  //   Cell: (props) => <div> {toUnit(props)} </div>,\n  // },\n  {\n    Header: 'Units',\n    accessor: 'overall_markdown_units',\n    cellClassName: 'summary_markdown_units',\n    hideColumn: true,\n    Cell: (props) => <div> {toUnit(props)} </div>,\n  },\n  {\n    Header: 'AUR $',\n    accessor: 'overall_aur',\n    cellClassName: 'summary_aur',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n  },\n];\n//weekToBinColDef contains accessor in granular level,\n//in Cell method have added a condition to display aggregated level data\n//if u add a new column make sure to copy the same\n//only bins will be expandable\nexport const weekToBinColDef = [\n  {\n    Header: 'MD Plan',\n    accessor: 'md_plan',\n    cellClassName: 'summary_md_plan',\n    Cell: ({ row }) => null,\n  },\n  {\n    Header: 'Plan Level',\n    accessor: 'level',\n    cellClassName: 'summary_cadence_type',\n  },\n  {\n    Header: 'Date Range',\n    id: 'expander',\n    cellClassName: 'summary_expander',\n    // Cell: ({ row }) => {\n    //   return <span>{row.original.week ? 'W' + row.original.week : ''}</span>;\n    // },\n    Cell: ({ row }) => {\n      let sMonth = moment(row.original.start_of_week && row.original.start_of_week).format('MMM');\n      let eMonth = moment(row.original.end_of_week && row.original.end_of_week).format('MMM');\n      let sDay = moment(row.original.start_of_week && row.original.start_of_week).format('DD');\n      let eDay = moment(row.original.end_of_week && row.original.end_of_week).format('DD');\n      let header = sMonth + ' ' + sDay + ' - ' + eMonth + ' ' + eDay;\n      return <span>{row.original.week ? header : ''}</span>;\n    },\n  },\n\n  {\n    id: 'expander1',\n    cellClassName: 'summary_expander1',\n    Header: 'Bins',\n    Cell: ({ row }) => {\n      return row.original.subRows ? (\n        <span\n          className=\"summary-table-icon\"\n          {...row.getToggleRowExpandedProps({\n            style: {\n              // We can even use the row.depth property\n              // and paddingLeft to indicate the depth\n              // of the row\n              paddingLeft: `${row.depth * 2}rem`,\n            },\n          })}>\n          {row.original.subRows ? row.original.subRows.length : '-'}\n          &nbsp;&nbsp;&nbsp;\n          {row.isExpanded ? (\n            <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          ) : (\n            <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          )}\n          &nbsp;&nbsp;&nbsp;\n        </span>\n      ) : (\n        <span>{row.original.bin_num ? 'Bin ' + row.original.bin_num : null}</span>\n      );\n    },\n  },\n\n  {\n    Header: '#Products',\n    accessor: 'product_count',\n    cellClassName: 'summary_product_code',\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_week_product_count\n        : props.value;\n      return <div> {toUnit({ value: value })} </div>;\n    },\n  },\n  // {\n  //   Header: 'Next week MD',\n  //   accessor: 'next_week',\n  //   cellClassName: 'summary_next_week',\n  //   Cell: ({ row, rows }) => {\n  //     let typeAccessor = !_.isEmpty(row.subRows) ? 'overall_week_offer_type' : 'offer_type';\n  //     let value = findNextWeek(row, rows);\n\n  //     return <span>{value ? unitCheck(value, row.original[typeAccessor]) : '-'}</span>;\n  //   },\n  // },\n  {\n    Header: 'Current running MD',\n    accessor: 'next_week',\n    cellClassName: 'summary_current_md',\n    Aggregated: ({ row, rows }) => {\n      if (_.isEmpty(row.subRows)) return '-';\n      let value = null,\n        { subRows } = row;\n      for (let i = 0; i < subRows.length; i++) {\n        let newValue = currentRunningMd(subRows[i], rows);\n        value = newValue ? value + newValue : value;\n      }\n      return value || value === 0\n        ? unitCheck(value / subRows.length, row.original.overall_week_offer_type)\n        : '-';\n    },\n    Cell: ({ row, rows }) => {\n      if (!_.isEmpty(row.subRows)) return '-';\n      let value = currentRunningMd(row, rows);\n      return value || value === 0 ? unitCheck(value, row.original.offer_type) : '-';\n    },\n  },\n  {\n    Header: 'Planned MD',\n    accessor: 'offer_value',\n    cellClassName: 'summary_planned_md',\n    Cell: ({ row }) => {\n      let value = !_.isEmpty(row.subRows)\n        ? row.original.overall_week_offer_value\n        : row.original.offer_value;\n      let type = !_.isEmpty(row.subRows)\n        ? row.original.overall_week_offer_type\n        : row.original.offer_type;\n      return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    },\n  },\n  {\n    Header: 'Refreshed MD',\n    accessor: 'refreshed_md',\n    cellClassName: 'summary_refreshed_md',\n    Cell: ({ row }) => {\n      let value = !_.isEmpty(row.subRows)\n        ? row.original.overall_week_refreshed_md\n        : row.original.refreshed_md;\n      let type = !_.isEmpty(row.subRows)\n        ? row.original.overall_week_offer_type\n        : row.original.offer_type;\n      return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    },\n  },\n  {\n    Header: 'MD Difference',\n    accessor: 'md_diff',\n    cellClassName: 'summary_difference',\n    Aggregated: ({ row, rows }) => {\n      if (_.isEmpty(row.subRows)) return '-';\n      let currentRunningMdVal = null,\n        { subRows } = row;\n      for (let i = 0; i < subRows.length; i++) {\n        let newValue = currentRunningMd(subRows[i], rows);\n        currentRunningMdVal = newValue ? currentRunningMdVal + newValue : currentRunningMdVal;\n      }\n      let refreshedMdVal = row.original.overall_week_refreshed_md;\n      let value = refreshedMdVal - currentRunningMdVal / subRows.length;\n      return value || value === 0 ? unitCheck(value, row.original.overall_week_offer_type) : '-';\n    },\n    Cell: ({ row, rows }) => {\n      if (!_.isEmpty(row.subRows)) return '-';\n      let currentRunningMdVal = currentRunningMd(row, rows);\n      let refreshedMdVal = row.original.refreshed_md;\n      let value = refreshedMdVal - currentRunningMdVal;\n      return value || value === 0 ? unitCheck(value, row.original.offer_type) : '-';\n    },\n    // Cell: ({ row, rows }) => {\n    //   let accessor = !_.isEmpty(row.subRows) ? 'overall_week_offer_value' : 'offer_value';\n    //   let type = !_.isEmpty(row.subRows) ? 'overall_week_offer_type' : 'offer_type';\n\n    //   let nextWeek,\n    //     currentWeek = row.original[accessor] ? parseFloat(row.original[accessor]) : 0;\n    //   let value = findNextWeek(row, rows);\n    //   nextWeek = value ? parseFloat(value) : 0;\n    //   return (\n    //     <span>{currentWeek ? unitCheck(nextWeek - currentWeek, row.original[type]) : '-'}</span>\n    //   );\n    // },\n  },\n  {\n    Header: 'Sell through %',\n    accessor: 'sell_through',\n    cellClassName: 'summary_sell_through',\n    Cell: ({ row, rows }) => {\n      let id = row.id.split('.');\n      let value = 0;\n\n      if (\n        _.isEmpty(row.subRows) &&\n        (row.original.sell_through || row.original.sell_through === 0)\n      ) {\n        for (let i = 0; i <= parseInt(id[0]); i++) {\n          let found = _.find(rows, { id: `${i}` });\n          let data =\n            found &&\n            found.originalSubRows &&\n            found.originalSubRows[parseInt(id[1])] &&\n            found.originalSubRows[parseInt(id[1])].sell_through\n              ? found.originalSubRows[parseInt(id[1])].sell_through\n              : 0;\n          value = value + data;\n        }\n      }\n      if (!_.isEmpty(row.subRows) && row.original.overall_week_sell_through) {\n        for (let i = 0; i <= parseInt(id[0]); i++) {\n          let found = _.find(rows, { id: `${i}` });\n          let data =\n            found && found.original && found.original.overall_week_sell_through\n              ? found.original.overall_week_sell_through\n              : 0;\n          value = value + data;\n        }\n      }\n      return (\n        <span>{value || value === 0 ? toPercentageWithDecimalDraft({ value: value }) : '-'}</span>\n      );\n    },\n  },\n  // {\n  //   Header: 'Markdown %',\n  //   accessor: 'markdown_perc',\n  //   cellClassName: 'summary_markdown_perc',\n  //   Cell: (props) => {\n  //     let value = props.row.original.subRows\n  //       ? props.row.original.overall_week_markdown_perc\n  //       : props.value;\n  //     return <div> {toPercentage({ value })} </div>;\n  //   },\n  // },\n\n  {\n    Header: 'Margin %',\n    accessor: 'margin_perc',\n    cellClassName: 'summary_margin_perc',\n    metric: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_week_margin_perc\n        : props.value;\n      return <div> {toPercWithOneDecimal({ value })} </div>;\n    },\n  },\n  {\n    Header: 'Margin $',\n    accessor: 'margin$',\n    cellClassName: 'summary_margin',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_week_margin$\n        : props.value;\n      return <div> {toDollar({ value })} </div>;\n    },\n  },\n  {\n    Header: 'AUM $',\n    accessor: 'aum',\n    cellClassName: 'summary_aum',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows ? props.row.original.overall_week_aum : props.value;\n      return <div> {toDollarWithDecimal({ value })} </div>;\n    },\n  },\n  {\n    Header: 'Revenue $',\n    accessor: 'revenue$',\n    cellClassName: 'summary_revenue',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_week_revenue$\n        : props.value;\n      return <div> {toDollar({ value })} </div>;\n    },\n  },\n  // {\n  //   Header: 'Planned units',\n  //   accessor: 'planned_units',\n  //   cellClassName: 'summary_pvh_units',\n  //   hideColumn: true,\n  //   Cell: (props) => {\n  //     let value = props.row.original.subRows\n  //       ? props.row.original.overall_week_planned_units\n  //       : props.value;\n  //     return <div> {toUnit({ value })} </div>;\n  //   },\n  // },\n  {\n    Header: 'Units',\n    accessor: 'markdown_units',\n    cellClassName: 'summary_markdown_units',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_week_markdown_units\n        : props.value;\n      return <div> {toUnit({ value })} </div>;\n    },\n  },\n  {\n    Header: 'AUR $',\n    accessor: 'aur',\n    cellClassName: 'summary_aur',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows ? props.row.original.overall_week_aur : props.value;\n      return <div> {toDollarWithDecimal({ value })} </div>;\n    },\n  },\n];\n//same as weekToBinColDef, but bin to week level\n//only date range will be expandable\nexport const binToWeekColDef = [\n  {\n    Header: 'MD Plan',\n    accessor: 'md_plan',\n    cellClassName: 'summary_md_plan',\n    Cell: ({ row }) => null,\n  },\n  {\n    Header: 'Plan Level',\n    accessor: 'level',\n    cellClassName: 'summary_cadence_type',\n  },\n  {\n    Header: 'Date Range',\n    id: 'expander',\n    cellClassName: 'summary_expander',\n    Cell: ({ row }) => {\n      let startWeek = row.originalSubRows && row.originalSubRows[0];\n      let endWeek = row.originalSubRows && row.originalSubRows[row.originalSubRows.length - 1];\n      let SDate = startWeek && moment(startWeek.start_of_week).format('YYYY/MM/DD');\n      // moment().year(startWeek.year).week(startWeek.week_num).day('monday').format('YYYY/MM/DD');\n      let EDate = endWeek && moment(endWeek.end_of_week).format('YYYY/MM/DD');\n      // moment()\n      //   .year(endWeek.year)\n      //   .week(endWeek.week_num + 1)\n      //   .day('sunday')\n      //   .format('YYYY/MM/DD');\n      let header = '';\n      if (_.isEmpty(row.original.subRows)) {\n        let sMonth = moment(row.original.start_of_week && row.original.start_of_week).format('MMM');\n        let eMonth = moment(row.original.end_of_week && row.original.end_of_week).format('MMM');\n        let sDay = moment(row.original.start_of_week && row.original.start_of_week).format('DD');\n        let eDay = moment(row.original.end_of_week && row.original.end_of_week).format('DD');\n        header = sMonth + ' ' + sDay + ' - ' + eMonth + ' ' + eDay;\n      }\n      return row.original.subRows ? (\n        <span\n          className=\"summary-table-icon\"\n          {...row.getToggleRowExpandedProps({\n            style: {\n              paddingLeft: `${row.depth * 2}rem`,\n            },\n          })}>\n          {SDate} - {EDate}\n          {/* {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n          {moment(row.original.end_date).format('YYYY/MM/DD')} */}\n          &nbsp;&nbsp;&nbsp;\n          {row.isExpanded ? (\n            <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          ) : (\n            <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          )}\n          &nbsp;&nbsp;&nbsp;\n        </span>\n      ) : (\n        <span>{row.original.week_num ? header : ''}</span>\n      );\n    },\n  },\n\n  {\n    id: 'expander1',\n    cellClassName: 'summary_expander1',\n    Header: 'Bins',\n    Cell: ({ row }) => {\n      return row.original.bin ? 'Bin ' + row.original.bin : null;\n    },\n  },\n\n  {\n    Header: '#Products',\n    accessor: 'product_count',\n    cellClassName: 'summary_product_code',\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_bin_product_count\n        : props.value;\n      return <div> {toUnit({ value: value })} </div>;\n    },\n  },\n  // {\n  //   Header: 'Next week MD',\n  //   accessor: 'next_week',\n  //   cellClassName: 'summary_next_week',\n  //   Cell: ({ row, rows }) => {\n  //     let id, value;\n  //     let accessor = !_.isEmpty(row.subRows) ? 'overall_bin_offer_value' : 'offer_value';\n  //     let typeAccessor = !_.isEmpty(row.subRows)\n  //       ? row.original.overall_bin_offer_type\n  //       : row.original.offer_type;\n\n  //     if (row.original[accessor]) {\n  //       id = row.id.split('.');\n  //       let find = _.find(rows, { id: id[0] });\n  //       value =\n  //         find.originalSubRows &&\n  //         find.originalSubRows[parseInt(id[1]) + 1] &&\n  //         find.originalSubRows[parseInt(id[1]) + 1][accessor];\n  //     }\n  //     return <span>{value ? unitCheck(value, typeAccessor) : '-'}</span>;\n  //   },\n  // },\n\n  {\n    Header: 'Current running MD',\n    accessor: 'next_week',\n    cellClassName: 'summary_current_md',\n    Aggregated: ({ row, rows }) => {\n      if (_.isEmpty(row.subRows)) return '-';\n      let value = null,\n        { subRows } = row;\n      for (let i = 0; i < subRows.length; i++) {\n        let newValue = currentRunningMdBin(subRows[i], rows);\n        value = newValue ? value + newValue : value;\n      }\n      return value || value === 0\n        ? unitCheck(value / subRows.length, row.original.overall_bin_offer_type)\n        : '-';\n    },\n    Cell: ({ row, rows }) => {\n      if (!_.isEmpty(row.subRows)) return '-';\n      let value = currentRunningMdBin(row, rows);\n      return value || value === 0 ? unitCheck(value, row.original.offer_type) : '-';\n    },\n  },\n  {\n    Header: 'Planned MD',\n    accessor: 'offer_value',\n    cellClassName: 'summary_planned_md',\n    Cell: ({ row }) => {\n      let value = !_.isEmpty(row.subRows)\n        ? row.original.overall_bin_offer_value\n        : row.original.offer_value;\n      let type = !_.isEmpty(row.subRows)\n        ? row.original.overall_bin_offer_type\n        : row.original.offer_type;\n      return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    },\n  },\n\n  {\n    Header: 'Refreshed MD',\n    accessor: 'refreshed_md',\n    cellClassName: 'summary_refreshed_md',\n    Cell: ({ row }) => {\n      let value = !_.isEmpty(row.subRows)\n        ? row.original.overall_bin_refreshed_md\n        : row.original.refreshed_md;\n      let type = !_.isEmpty(row.subRows)\n        ? row.original.overall_bin_offer_type\n        : row.original.offer_type;\n      return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    },\n  },\n  {\n    Header: 'MD Difference',\n    accessor: 'md_diff',\n    cellClassName: 'summary_difference',\n    Aggregated: ({ row, rows }) => {\n      if (_.isEmpty(row.subRows)) return '-';\n      let currentRunningMdVal = null,\n        { subRows } = row;\n      for (let i = 0; i < subRows.length; i++) {\n        let newValue = currentRunningMdBin(subRows[i], rows);\n        currentRunningMdVal = newValue ? currentRunningMdVal + newValue : currentRunningMdVal;\n      }\n      let refreshedMdVal = row.original.overall_bin_refreshed_md;\n      let value = refreshedMdVal - currentRunningMdVal / subRows.length;\n      return value || value === 0 ? unitCheck(value, row.original.overall_bin_offer_type) : '-';\n    },\n    Cell: ({ row, rows }) => {\n      if (!_.isEmpty(row.subRows)) return '-';\n      let currentRunningMdVal = currentRunningMdBin(row, rows);\n      let refreshedMdVal = row.original.refreshed_md;\n      let value = refreshedMdVal - currentRunningMdVal;\n\n      return value || value === 0 ? unitCheck(value, row.original.offer_type) : '-';\n    },\n    // Cell: ({ row, rows }) => {\n    //   let accessor = !_.isEmpty(row.subRows) ? 'overall_bin_offer_value' : 'offer_value';\n    //   let type = !_.isEmpty(row.subRows) ? 'overall_bin_offer_type' : 'offer_type';\n\n    //   let id,\n    //     nextWeek,\n    //     currentWeek = row.original[[accessor]] ? parseFloat(row.original[[accessor]]) : 0;\n    //   if (row.original[[accessor]]) {\n    //     id = row.id.split('.');\n    //     let find = _.find(rows, { id: id[0] });\n    //     let value =\n    //       find.originalSubRows &&\n    //       find.originalSubRows[parseInt(id[1]) + 1] &&\n    //       find.originalSubRows[parseInt(id[1]) + 1][[accessor]];\n    //     nextWeek = value ? parseFloat(value) : 0;\n    //   }\n    //   return (\n    //     <span>{currentWeek ? unitCheck(nextWeek - currentWeek, row.original[type]) : '-'}</span>\n    //   );\n    // },\n  },\n  {\n    Header: 'Sell through %',\n    accessor: 'sell_through',\n    cellClassName: 'summary_sell_through',\n    Cell: ({ row, rows }) => {\n      let id = row.id.split('.');\n      let value = 0;\n\n      if (\n        _.isEmpty(row.subRows) &&\n        (row.original.sell_through || row.original.sell_through === 0)\n      ) {\n        let found = _.find(rows, { id: id[0] });\n        for (let i = 0; i <= parseInt(id[1]); i++) {\n          let data =\n            found &&\n            found.originalSubRows &&\n            found.originalSubRows[i] &&\n            found.originalSubRows[i].sell_through\n              ? found.originalSubRows[i].sell_through\n              : 0;\n          value = value + data;\n        }\n      }\n      if (!_.isEmpty(row.subRows) && row.original.overall_bin_sell_through) {\n        for (let i = 0; i <= parseInt(id[0]); i++) {\n          let found = _.find(rows, { id: `${i}` });\n          let data =\n            found && found.original && found.original.overall_bin_sell_through\n              ? found.original.overall_bin_sell_through\n              : 0;\n          value = value + data;\n        }\n      }\n      return (\n        <span>{value || value === 0 ? toPercentageWithDecimalDraft({ value: value }) : '-'}</span>\n      );\n    },\n  },\n  // {\n  //   Header: 'Markdown %',\n  //   accessor: 'markdown_perc',\n  //   cellClassName: 'summary_markdown_perc',\n  //   Cell: (props) => {\n  //     let value = props.row.original.subRows\n  //       ? props.row.original.overall_bin_markdown_perc\n  //       : props.value;\n  //     return <div> {toPercentage({ value })} </div>;\n  //   },\n  // },\n  {\n    Header: 'Margin %',\n    accessor: 'margin_perc',\n    cellClassName: 'summary_margin_perc',\n    metric: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_bin_margin_perc\n        : props.value;\n      return <div> {toPercWithOneDecimal({ value })} </div>;\n    },\n  },\n  {\n    Header: 'Margin $',\n    accessor: 'margin$',\n    cellClassName: 'summary_margin',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows ? props.row.original.overall_bin_margin$ : props.value;\n      return <div> {toDollar({ value })} </div>;\n    },\n  },\n  {\n    Header: 'AUM $',\n    accessor: 'aum',\n    cellClassName: 'summary_aum',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows ? props.row.original.overall_bin_aum : props.value;\n      return <div> {toDollarWithDecimal({ value })} </div>;\n    },\n  },\n  {\n    Header: 'Revenue $',\n    accessor: 'revenue$',\n    cellClassName: 'summary_revenue',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_bin_revenue$\n        : props.value;\n      return <div> {toDollar({ value })} </div>;\n    },\n  },\n  // {\n  //   Header: 'Planned units',\n  //   accessor: 'planned_units',\n  //   cellClassName: 'summary_pvh_units',\n  //   hideColumn: true,\n  //   Cell: (props) => {\n  //     let value = props.row.original.subRows\n  //       ? props.row.original.overall_bin_planned_units\n  //       : props.value;\n  //     return <div> {toUnit({ value })} </div>;\n  //   },\n  // },\n  {\n    Header: 'Units',\n    accessor: 'markdown_units',\n    cellClassName: 'summary_markdown_units',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_bin_markdown_units\n        : props.value;\n      return <div> {toUnit({ value })} </div>;\n    },\n  },\n  {\n    Header: 'AUR $',\n    accessor: 'aur',\n    cellClassName: 'summary_aur',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows ? props.row.original.overall_bin_aur : props.value;\n      return <div> {toDollarWithDecimal({ value })} </div>;\n    },\n  },\n];\n\n/////detailed table coldefs\nexport const detailedColDef = [\n  {\n    Header: 'MD Plan',\n    accessor: 'title',\n  },\n  {\n    Header: 'Plan Level',\n    accessor: 'level',\n  },\n  // {\n  //   accessor: 'date',\n  //   Header: 'Date Range',\n  //   Cell: ({ row }) => {\n  //     return (\n  //       <span>\n  //         {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n  //         {moment(row.original.end_date).format('YYYY/MM/DD')}\n  //       </span>\n  //     );\n  //   },\n  // },\n  {\n    accessor: 'start_of_week',\n    Header: 'Week',\n    Cell: ({ row }) => {\n      let sMonth = moment(row.original.start_of_week && row.original.start_of_week).format('MMM');\n      let eMonth = moment(row.original.end_of_week && row.original.end_of_week).format('MMM');\n      let sDay = moment(row.original.start_of_week && row.original.start_of_week).format('DD');\n      let eDay = moment(row.original.end_of_week && row.original.end_of_week).format('DD');\n      let header = sMonth + ' ' + sDay + ' - ' + eMonth + ' ' + eDay;\n      return <span>{header}</span>;\n    },\n  },\n\n  {\n    accessor: 'bins',\n    Header: 'Bins',\n    Cell: ({ row }) => {\n      return <span>Bin {row.original.bins}</span>;\n    },\n  },\n\n  {\n    Header: 'Product code',\n    accessor: 'product_code',\n  },\n  // {\n  //   Header: 'Next week MD',\n  //   accessor: 'overall_next_week',\n  // },\n  {\n    Header: 'Current running MD',\n    accessor: 'week_level_runnig_value',\n    Cell: ({ data, row }) => {\n      let { original } = row;\n      let lastWeekNum = moment().subtract(1, 'week').week();\n      let isLastWeek = _.find(data, {\n        promo_code: original.promo_code,\n        product_code: original.product_code,\n        week: lastWeekNum,\n      });\n      let date = moment()\n        .year(original.year)\n        .week(original.week)\n        .day('monday')\n        .format('YYYY-MM-DD');\n      if (_.isEmpty(isLastWeek) || !moment().isSameOrBefore(date, 'week')) return '-';\n      return isLastWeek.week_level_refreshed_md\n        ? unitCheck(isLastWeek.week_level_refreshed_md, isLastWeek.offer_type)\n        : '-';\n    },\n  },\n  {\n    Header: 'Planned MD',\n    accessor: 'week_level_offer_value',\n    Cell: ({ row }) => {\n      return row.original.week_level_offer_value\n        ? unitCheck(row.original.week_level_offer_value, row.original.offer_type)\n        : '-';\n    },\n  },\n\n  {\n    Header: 'Refreshed MD',\n    accessor: 'week_level_refreshed_md',\n    Cell: ({ row }) => {\n      return row.original.week_level_refreshed_md\n        ? unitCheck(row.original.week_level_refreshed_md, row.original.offer_type)\n        : '-';\n    },\n  },\n  // {\n  //   Header: 'MD Difference',\n  //   accessor: 'overall_md_diff',\n  //   Cell: ({ row }) => {\n  //     return row.original.overall_md_diff ? row.original.overall_md_diff : '-';\n  //   },\n  // },\n  {\n    Header: 'Sell through %',\n    accessor: 'week_level_sell_through',\n    Cell: (props) => <div> {toPercentageWithDecimalDraft(props)} </div>,\n  },\n\n  // {\n  //   Header: 'Markdown %',\n  //   accessor: 'week_level_markdown_perc',\n  //   Cell: (props) => <div> {toPercentage(props)} </div>,\n  // },\n  {\n    Header: 'Margin %',\n    accessor: 'week_level_margin_perc',\n    metric: true,\n    Cell: (props) => <div> {toPercWithOneDecimal(props)} </div>,\n  },\n  {\n    Header: 'Margin $',\n    accessor: 'week_level_margin$',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollar(props)} </div>,\n  },\n  {\n    Header: 'AUM $',\n    accessor: 'week_level_aum',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n  },\n  {\n    Header: 'Revenue $',\n    accessor: 'week_level_revenue$',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollar(props)} </div>,\n  },\n  // {\n  //   Header: 'Planned units',\n  //   accessor: 'week_level_planned_units',\n  //   hideColumn: true,\n  //   Cell: (props) => <div> {toUnit(props)} </div>,\n  // },\n  {\n    Header: 'Units',\n    accessor: 'week_level_markdown_units',\n    hideColumn: true,\n    Cell: (props) => <div> {toUnit(props)} </div>,\n  },\n  {\n    Header: 'AUR $',\n    accessor: 'week_level_aur',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollarWithDecimal(props)} </div>,\n  },\n];\n\nfunction unitCheck(value, type) {\n  if ((!value && value !== 0) || !type) return '-';\n  if (type === 'percent_off') return toPercentage({ value });\n  if (type === 'fixed_price') return toDollar({ value });\n}\nfunction findNextWeek(row, rows) {\n  let value;\n  let id = row.id.split('.');\n  let found = _.find(rows, { id: `${parseInt(id[0]) + 1}` });\n\n  if (!_.isEmpty(found) && _.isEmpty(row.subRows) && row.original.offer_value) {\n    value =\n      found.originalSubRows &&\n      found.originalSubRows[parseInt(id[1])] &&\n      found.originalSubRows[parseInt(id[1])].offer_value;\n  }\n  if (!_.isEmpty(found) && !_.isEmpty(row.subRows) && row.original.overall_week_offer_value) {\n    value = found.original && found.original.overall_week_offer_value;\n  }\n  return value;\n}\n\nfunction currentRunningMd(row, rows) {\n  let value = null;\n  // let date = moment()\n  //   .year(row.original.year)\n  //   .week(row.original.week_num)\n  //   .day('monday')\n  //   .format('YYYY-MM-DD');\n  let startOfWeek = moment(row.original.start_of_week).format('YYYY-MM-DD');\n  let endOfWeek = moment(row.original.end_of_week).format('YYYY-MM-DD');\n\n  // if (moment().isSameOrBefore(date, 'week')) {\n  if (moment().isSameOrBefore(startOfWeek, 'week') || moment().isSameOrBefore(endOfWeek, 'week')) {\n    // let lastWeekNum = moment().subtract(1, 'week').week();\n    let lastWeekEndDate = moment(startOfWeek).subtract(1, 'days').format('YYYY-MM-DD');\n    // let found = _.find(rows, { original: { week: lastWeekNum } });\n    let found = _.find(rows, { original: { end_of_week: lastWeekEndDate } });\n    let found1 = _.find(found && found.originalSubRows && found.originalSubRows, {\n      bin_num: row.original.bin_num,\n    });\n    value = found1 && found1.refreshed_md ? found1.refreshed_md : null;\n  }\n  return value;\n}\nfunction currentRunningMdBin(row, rows) {\n  let value = null;\n  let date = moment()\n    .year(row.original.year)\n    .week(row.original.week_num)\n    .day('monday')\n    .format('YYYY-MM-DD');\n  let startOfWeek = moment(row.original.start_of_week).format('YYYY-MM-DD');\n  let endOfWeek = moment(row.original.end_of_week).format('YYYY-MM-DD');\n\n  // if (moment().isSameOrBefore(date, 'week')) {\n  if (moment().isSameOrBefore(startOfWeek, 'week') || moment().isSameOrBefore(endOfWeek, 'week')) {\n    let id = row.id.split('.');\n    let idNum = (id[0] - 1).toString();\n    let found = _.find(rows, { id: idNum });\n    if (!_.isEmpty(found) && found.originalSubRows.length) {\n      // let lastWeekNum = moment().subtract(1, 'week').week();\n      let lastWeekEndDate = moment(startOfWeek).subtract(1, 'days').format('YYYY-MM-DD');\n      // let find = _.find(found.originalSubRows, { week_num: lastWeekNum });\n      let find = _.find(found.originalSubRows, { end_of_week: lastWeekEndDate });\n      if (!find) return null;\n      value = find.refreshed_md;\n    }\n  }\n  return value;\n}\n"]},"metadata":{},"sourceType":"module"}