{"ast":null,"code":"import axios from '../utils/axios';\nimport { config } from '../utils/config';\nimport _ from 'lodash';\nvar filterActions = {\n  getFiltersList: function getFiltersList(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/setupScreens/\"),\n        method: 'POST'\n      }).then(function (resp) {\n        var data = resp.data && resp.data.data;\n        var daterangeOrWeek = data && data.COMMON_IN_ALL && data.COMMON_IN_ALL.date_viewing_style && data.COMMON_IN_ALL.date_viewing_style.type;\n        var filtersOptions = data && data.SCREENS;\n        var filtersLabels = data && data.COMMON_IN_ALL && data.COMMON_IN_ALL.filter_labels;\n        var groupingLevel = filtersOptions && filtersOptions.STYLE_COLOR_CONFIG_SCREEN.grouping_level;\n        var options = filtersOptions && filtersOptions['REPORTING_SCREEN'];\n        var filterList = options && options.filter_options ? options.filter_options : [];\n        var filtersData = {};\n        filterList && _.map(filterList, function (o) {\n          filtersData[o.type] = {\n            options: [],\n            selectedItems: [],\n            selectedItemsArray: []\n          };\n        });\n        dispatch({\n          type: 'SET_FILTERS_LIST',\n          payload: filtersOptions\n        });\n        dispatch({\n          type: 'SET_FILTERS_LABELS',\n          payload: filtersLabels\n        });\n        dispatch({\n          type: 'SET_DATERANGE_WEEK',\n          payload: daterangeOrWeek\n        });\n        dispatch({\n          type: 'SET_FILTERS_DATA',\n          payload: filtersData\n        });\n        dispatch({\n          type: 'SET_GROUPING_LEVEL',\n          payload: groupingLevel\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return {\n          filtersOptions: filtersOptions,\n          filtersLabels: filtersLabels,\n          filtersData: filtersData\n        };\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        console.log(err);\n      });\n    };\n  },\n  getExtraFiltersOptions: function getExtraFiltersOptions(data, filterName) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: false\n        }\n      });\n      axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getExtraFilters/\"),\n        method: 'POST',\n        data: {\n          filters: data.filters,\n          filterType: data.filterType,\n          allowOnlyActiveProducts: data.allowInactiveProducts ? data.allowInactiveProducts : false // allowInactiveProducts: data.allowInactiveProducts,\n\n        }\n      }).then(function (resp) {\n        dispatch({\n          type: \"SET_\".concat(data.filterType),\n          payload: resp.data.data\n        });\n        dispatch({\n          type: 'SET_FILTERS_DATA',\n          payload: resp.data.data,\n          filterName: filterName,\n          dataType: 'options'\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      }).catch(function (err) {\n        console.log(err);\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  getHierarchyOptions: function getHierarchyOptions(data, filterName) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: false\n        }\n      });\n      axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getHierarchyFilterData/\"),\n        method: 'POST',\n        data: {\n          filters: data.filters,\n          hierarchyType: data.hierarchyType,\n          allowOnlyActiveProducts: data.allowInactiveProducts ? data.allowInactiveProducts : false // allowInactiveProducts: data.allowInactiveProducts,\n\n        }\n      }).then(function (resp) {\n        dispatch({\n          type: \"SET_\".concat(data.hierarchyType),\n          payload: resp.data.data\n        });\n        dispatch({\n          type: 'SET_FILTERS_DATA',\n          payload: resp.data.data,\n          filterName: filterName,\n          dataType: 'options'\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      }).catch(function (err) {\n        console.log(err);\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  fetchStyleGroups: function fetchStyleGroups(reqObj, filterName) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: false\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getCustomStyleGroup/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        dispatch({\n          type: 'SET_STYLE_GROUPS',\n          payload: resp.data.data\n        });\n        dispatch({\n          type: 'SET_FILTERS_DATA',\n          payload: resp.data.data,\n          filterName: filterName,\n          dataType: 'options'\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return resp.data.data;\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  getCustomStores: function getCustomStores(reqObj, filterName) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: false\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getCustomStoreGroup/\"),\n        method: 'GET'\n      }).then(function (resp) {\n        dispatch({\n          type: 'SET_CUSTOM_STORES',\n          payload: resp.data.data\n        });\n        dispatch({\n          type: 'SET_FILTERS_DATA',\n          payload: resp.data.data,\n          filterName: filterName,\n          dataType: 'options'\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return resp.data.data;\n      }).catch(function (err) {\n        console.log(err);\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  setSelectedFilterData: function setSelectedFilterData(data, filterName, from) {\n    return function (dispatch) {\n      dispatch({\n        type: 'SET_FILTERS_DATA',\n        payload: data,\n        filterName: filterName,\n        dataType: 'selectedItems',\n        from: from\n      });\n\n      if (filterName === 'customStyleGroup') {\n        var newData = _.map(data, function (o) {\n          return o.value;\n        });\n\n        dispatch({\n          type: 'SELECTED_CUSTOM_STYLE_GROUP_NAME',\n          payload: _.cloneDeep(newData)\n        });\n      }\n    };\n  },\n  setLastSavedFilters: function setLastSavedFilters(data) {\n    return function (dispatch) {\n      dispatch({\n        type: 'SET_LAST_SAVED_FILTERS',\n        payload: _.cloneDeep(data)\n      });\n    };\n  },\n  setFiltersData: function setFiltersData(data, customStyleGroupName) {\n    return function (dispatch) {\n      dispatch({\n        type: 'RESET_FILTERS_DATA',\n        payload: data\n      });\n      if (customStyleGroupName) dispatch({\n        type: 'SELECTED_CUSTOM_STYLE_GROUP_NAME',\n        payload: _.cloneDeep(customStyleGroupName)\n      });\n    };\n  },\n  resetFilters: function resetFilters() {\n    return function (dispatch) {\n      dispatch({\n        type: 'RESET_FILTERS'\n      });\n    };\n  },\n  setRetainFilters: function setRetainFilters(data) {\n    return function (dispatch) {\n      dispatch({\n        type: 'SET_RETAIN_FILTERS',\n        payload: data\n      });\n    };\n  }\n};\nexport default filterActions;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/filtersAction.js"],"names":["axios","config","_","filterActions","getFiltersList","reqObj","dispatch","type","payload","status","url","createMarkdownURL","method","then","resp","data","daterangeOrWeek","COMMON_IN_ALL","date_viewing_style","filtersOptions","SCREENS","filtersLabels","filter_labels","groupingLevel","STYLE_COLOR_CONFIG_SCREEN","grouping_level","options","filterList","filter_options","filtersData","map","o","selectedItems","selectedItemsArray","catch","err","console","log","getExtraFiltersOptions","filterName","filters","filterType","allowOnlyActiveProducts","allowInactiveProducts","dataType","getHierarchyOptions","hierarchyType","fetchStyleGroups","getCustomStores","setSelectedFilterData","from","newData","value","cloneDeep","setLastSavedFilters","setFiltersData","customStyleGroupName","resetFilters","setRetainFilters"],"mappings":"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","sourcesContent":["import axios from '../utils/axios';\nimport { config } from '../utils/config';\nimport _ from 'lodash';\n\nconst filterActions = {\n  getFiltersList: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/setupScreens/`,\n        method: 'POST',\n      })\n        .then((resp) => {\n          let data = resp.data && resp.data.data;\n          let daterangeOrWeek =\n            data &&\n            data.COMMON_IN_ALL &&\n            data.COMMON_IN_ALL.date_viewing_style &&\n            data.COMMON_IN_ALL.date_viewing_style.type;\n          let filtersOptions = data && data.SCREENS;\n          let filtersLabels = data && data.COMMON_IN_ALL && data.COMMON_IN_ALL.filter_labels;\n          let groupingLevel =\n            filtersOptions && filtersOptions.STYLE_COLOR_CONFIG_SCREEN.grouping_level;\n\n          let options = filtersOptions && filtersOptions['REPORTING_SCREEN'];\n          let filterList = options && options.filter_options ? options.filter_options : [];\n          let filtersData = {};\n          filterList &&\n            _.map(filterList, (o) => {\n              filtersData[o.type] = {\n                options: [],\n                selectedItems: [],\n                selectedItemsArray: [],\n              };\n            });\n          dispatch({\n            type: 'SET_FILTERS_LIST',\n            payload: filtersOptions,\n          });\n          dispatch({\n            type: 'SET_FILTERS_LABELS',\n            payload: filtersLabels,\n          });\n          dispatch({\n            type: 'SET_DATERANGE_WEEK',\n            payload: daterangeOrWeek,\n          });\n          dispatch({\n            type: 'SET_FILTERS_DATA',\n            payload: filtersData,\n          });\n          dispatch({\n            type: 'SET_GROUPING_LEVEL',\n            payload: groupingLevel,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return { filtersOptions, filtersLabels, filtersData };\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          console.log(err);\n        });\n    };\n  },\n\n  getExtraFiltersOptions: (data, filterName) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: false,\n        },\n      });\n      axios({\n        url: `${config.createMarkdownURL}/getExtraFilters/`,\n        method: 'POST',\n        data: {\n          filters: data.filters,\n          filterType: data.filterType,\n          allowOnlyActiveProducts: data.allowInactiveProducts ? data.allowInactiveProducts : false,\n          // allowInactiveProducts: data.allowInactiveProducts,\n        },\n      })\n        .then((resp) => {\n          dispatch({\n            type: `SET_${data.filterType}`,\n            payload: resp.data.data,\n          });\n          dispatch({\n            type: 'SET_FILTERS_DATA',\n            payload: resp.data.data,\n            filterName,\n            dataType: 'options',\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n  getHierarchyOptions: (data, filterName) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: false,\n        },\n      });\n      axios({\n        url: `${config.createMarkdownURL}/getHierarchyFilterData/`,\n        method: 'POST',\n        data: {\n          filters: data.filters,\n          hierarchyType: data.hierarchyType,\n          allowOnlyActiveProducts: data.allowInactiveProducts ? data.allowInactiveProducts : false,\n          // allowInactiveProducts: data.allowInactiveProducts,\n        },\n      })\n        .then((resp) => {\n          dispatch({\n            type: `SET_${data.hierarchyType}`,\n            payload: resp.data.data,\n          });\n          dispatch({\n            type: 'SET_FILTERS_DATA',\n            payload: resp.data.data,\n            filterName,\n            dataType: 'options',\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n\n  fetchStyleGroups: (reqObj, filterName) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: false,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/getCustomStyleGroup/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          dispatch({\n            type: 'SET_STYLE_GROUPS',\n            payload: resp.data.data,\n          });\n          dispatch({\n            type: 'SET_FILTERS_DATA',\n            payload: resp.data.data,\n            filterName,\n            dataType: 'options',\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return resp.data.data;\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n  getCustomStores: (reqObj, filterName) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: false,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/getCustomStoreGroup/`,\n        method: 'GET',\n      })\n        .then((resp) => {\n          dispatch({\n            type: 'SET_CUSTOM_STORES',\n            payload: resp.data.data,\n          });\n          dispatch({\n            type: 'SET_FILTERS_DATA',\n            payload: resp.data.data,\n            filterName,\n            dataType: 'options',\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return resp.data.data;\n        })\n        .catch((err) => {\n          console.log(err);\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n\n  setSelectedFilterData: (data, filterName, from) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'SET_FILTERS_DATA',\n        payload: data,\n        filterName,\n        dataType: 'selectedItems',\n        from,\n      });\n      if (filterName === 'customStyleGroup') {\n        let newData = _.map(data, (o) => o.value);\n\n        dispatch({\n          type: 'SELECTED_CUSTOM_STYLE_GROUP_NAME',\n          payload: _.cloneDeep(newData),\n        });\n      }\n    };\n  },\n  setLastSavedFilters: (data) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'SET_LAST_SAVED_FILTERS',\n        payload: _.cloneDeep(data),\n      });\n    };\n  },\n  setFiltersData: (data, customStyleGroupName) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'RESET_FILTERS_DATA',\n        payload: data,\n      });\n      if (customStyleGroupName)\n        dispatch({\n          type: 'SELECTED_CUSTOM_STYLE_GROUP_NAME',\n          payload: _.cloneDeep(customStyleGroupName),\n        });\n    };\n  },\n\n  resetFilters: () => {\n    return (dispatch) => {\n      dispatch({\n        type: 'RESET_FILTERS',\n      });\n    };\n  },\n\n  setRetainFilters: (data) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'SET_RETAIN_FILTERS',\n        payload: data,\n      });\n    };\n  },\n};\n\nexport default filterActions;\n"]},"metadata":{},"sourceType":"module"}