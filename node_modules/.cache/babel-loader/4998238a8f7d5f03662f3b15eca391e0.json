{"ast":null,"code":"var _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/support/CustomCard.js\";\nimport React from \"react\";\nimport \"./content.css\";\nimport DateRangeFilter from \"./DateRangeFilter\"; //import  ReactTooltip  from 'react-tooltip';\n\nimport { Form } from \"react-bootstrap\";\nimport Switch from \"react-switch\";\nimport GraphPopOver from \"./GraphPopOver\";\n\nvar htmlToImage = require(\"html-to-image\");\n/**\n * Dashboard: For create dashboard card with dropdown menu and download option\n * @typedef {Object} props\n *\n * @param {Boolean} hideDownload -- show/hide download icon\n * @param {Array} filters -- show filter options with its value\n * @returns {Array} select -- return the array of select option\n */\n\n\nfunction Dashboard(props) {\n  var filters;\n  var toogle;\n  var selectedFilter = {};\n  var hideDownload = false;\n\n  if (props.hideDownload) {\n    hideDownload = true;\n  }\n\n  if (props.filters) {\n    for (var i = 0; i < props.filters.length; i++) {\n      for (var j = 0; j < props.filters[i].options.length; j++) {\n        if (props.filters[i].options[j] === \"\") {\n          props.filters[i].options.splice(j, 1);\n        }\n      }\n    }\n\n    filters = props.filters.map(function (filter) {\n      return React.createElement(\"select\", {\n        value: filter.selectedValue,\n        onChange: function onChange(event) {\n          return selectField(event, filter.type, filter);\n        },\n        key: filter.title,\n        title: filter.title,\n        className: \"form-control form-control-sm filter-options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, filter.title, React.createElement(\"option\", {\n        default: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, filter.title), filter.options.map(function (opt) {\n        return React.createElement(\"option\", {\n          key: opt,\n          value: opt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, opt);\n      }));\n    });\n  } else {\n    filters = \"\";\n  }\n  /**\n   * SelectField\n   * @param {Object} event -- value of the selected option\n   * @returns assign to the parent props\n   */\n\n\n  function selectField(event, type, filter) {\n    filter.selectedValue = event.target.value;\n    selectedFilter[type] = event.target.value;\n    props.selectField(selectedFilter);\n  }\n  /**\n   * Download method\n   * @param {String} elm -- id of the element\n   * @returns {String} image -- return image of the component\n   */\n\n\n  function download(elm) {\n    if (document.querySelector(\".\" + elm)) {\n      var node = document.querySelector(\".\" + elm);\n      htmlToImage.toPng(node, {\n        backgroundColor: \"#fff\"\n      }).then(function (dataUrl) {\n        var img = new Image();\n        img.src = dataUrl;\n        var link = document.createElement(\"a\");\n        link.download = elm + \".png\";\n        link.href = dataUrl;\n        link.click();\n      }).catch(function (error) {\n        console.error(\"oops, something went wrong!\", error);\n      });\n    }\n  }\n\n  if (props.showToogle) {\n    var tColor = \"black\";\n    var checked = [true, false];\n\n    if (props.toogleValue === 2) {\n      checked[0] = false;\n      checked[1] = true;\n    }\n\n    toogle = React.createElement(\"div\", {\n      style: {\n        marginRight: \"20px\",\n        marginTop: \"2px\",\n        display: \"flex\",\n        cursor: \"pointer\",\n        color: tColor\n      },\n      key: \"inline-radio\",\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Success \\xA0\"), React.createElement(Switch, {\n      checked: checked[1],\n      onChange: props.toogleState,\n      onColor: \"#86d3ff\",\n      offColor: \"#86d3ff\",\n      onHandleColor: \"#2693e6\",\n      handleDiameter: 20,\n      uncheckedIcon: false,\n      checkedIcon: false,\n      boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n      activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n      height: 15,\n      width: 36,\n      className: \"react-switch\",\n      id: \"material-switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"\\xA0Sales\"));\n    filters = \"\";\n  }\n\n  return React.createElement(\"div\", {\n    className: props.columnSize,\n    style: props.style || {\n      marginTop: \"20px\",\n      marginBottom: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: props.mainCard ? \"card custom-card-main\" : \"card custom-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, props.title && React.createElement(\"div\", {\n    className: props.mainCard ? \"custom-card-main-title card-title\" : \"custom-card-title card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: props.mainHeaderCss ? \"main-title-text\" : \"title-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, props.title), !props.hideFilter && React.createElement(\"div\", {\n    className: \"filters-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, hideDownload && React.createElement(DateRangeFilter, {\n    changeDate: function changeDate(obj) {\n      return props.changeDate(obj);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), filters, \" \", toogle, props.getOrderSummaries && React.createElement(\"button\", {\n    className: \"order-summary-button filter-options\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#orderSummaryModal\",\n    onClick: function onClick() {\n      return props.getOrderSummaries();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Order Summary\"), props.download && !hideDownload && React.createElement(GraphPopOver, {\n    onSelect: props.onSelect,\n    data: props.moreData,\n    graphs: props.graphData,\n    selectedGraph: props.selectedGraph,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, props.children), props.note && React.createElement(\"div\", {\n    className: \"footer-note\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"*\", props.note))));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/support/CustomCard.js"],"names":["React","DateRangeFilter","Form","Switch","GraphPopOver","htmlToImage","require","Dashboard","props","filters","toogle","selectedFilter","hideDownload","i","length","j","options","splice","map","filter","selectedValue","event","selectField","type","title","opt","target","value","download","elm","document","querySelector","node","toPng","backgroundColor","then","dataUrl","img","Image","src","link","createElement","href","click","catch","error","console","showToogle","tColor","checked","toogleValue","marginRight","marginTop","display","cursor","color","toogleState","columnSize","style","marginBottom","mainCard","mainHeaderCss","hideFilter","obj","changeDate","getOrderSummaries","onSelect","moreData","graphData","selectedGraph","children","note"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./content.css\";\nimport DateRangeFilter from \"./DateRangeFilter\";\n\n//import  ReactTooltip  from 'react-tooltip';\nimport { Form } from \"react-bootstrap\";\nimport Switch from \"react-switch\";\nimport GraphPopOver from \"./GraphPopOver\";\nconst htmlToImage = require(\"html-to-image\");\n\n/**\n * Dashboard: For create dashboard card with dropdown menu and download option\n * @typedef {Object} props\n *\n * @param {Boolean} hideDownload -- show/hide download icon\n * @param {Array} filters -- show filter options with its value\n * @returns {Array} select -- return the array of select option\n */\n\nfunction Dashboard(props) {\n  let filters;\n  let toogle;\n  let selectedFilter = {};\n  let hideDownload = false;\n  if (props.hideDownload) {\n    hideDownload = true;\n  }\n  if (props.filters) {\n    for (var i = 0; i < props.filters.length; i++) {\n      for (var j = 0; j < props.filters[i].options.length; j++) {\n        if (props.filters[i].options[j] === \"\") {\n          props.filters[i].options.splice(j, 1);\n        }\n      }\n    }\n    filters = props.filters.map(filter => (\n      <select\n        value={filter.selectedValue}\n        onChange={event => selectField(event, filter.type, filter)}\n        key={filter.title}\n        title={filter.title}\n        className=\"form-control form-control-sm filter-options\"\n      >\n        {filter.title}\n        <option default>{filter.title}</option>\n        {filter.options.map(opt => (\n          <option key={opt} value={opt}>\n            {opt}\n          </option>\n        ))}\n      </select>\n    ));\n  } else {\n    filters = \"\";\n  }\n\n  /**\n   * SelectField\n   * @param {Object} event -- value of the selected option\n   * @returns assign to the parent props\n   */\n\n  function selectField(event, type, filter) {\n    filter.selectedValue = event.target.value;\n    selectedFilter[type] = event.target.value;\n    props.selectField(selectedFilter);\n  }\n\n  /**\n   * Download method\n   * @param {String} elm -- id of the element\n   * @returns {String} image -- return image of the component\n   */\n\n  function download(elm) {\n    if (document.querySelector(\".\" + elm)) {\n      let node = document.querySelector(\".\" + elm);\n      htmlToImage\n        .toPng(node, { backgroundColor: \"#fff\" })\n        .then(function(dataUrl) {\n          let img = new Image();\n          img.src = dataUrl;\n          let link = document.createElement(\"a\");\n          link.download = elm + \".png\";\n          link.href = dataUrl;\n          link.click();\n        })\n        .catch(function(error) {\n          console.error(\"oops, something went wrong!\", error);\n        });\n    }\n  }\n\n  if (props.showToogle) {\n    var tColor = \"black\";\n    var checked = [true, false];\n    if (props.toogleValue === 2) {\n      checked[0] = false;\n      checked[1] = true;\n    }\n    toogle = (\n      <div\n        style={{\n          marginRight: \"20px\",\n          marginTop: \"2px\",\n          display: \"flex\",\n          cursor: \"pointer\",\n          color: tColor\n        }}\n        key={`inline-radio`}\n        className=\"mb-3\"\n      >\n        {/* <Form.Check\n          inline\n          onChange={() => props.toogleState()}\n          defaultChecked\n          label=\"Success\"\n          type=\"radio\"\n          id={`inline-radio-1`}\n          name=\"map-view\"\n        />\n        <Form.Check\n          inline\n          onChange={() => props.toogleState()}\n          label=\"Sales\"\n          type=\"radio\"\n          id={`inline-radio-2`}\n          name=\"map-view\"\n        /> */}\n        <div>Success &nbsp;</div>\n        <Switch\n          checked={checked[1]}\n          onChange={props.toogleState}\n          onColor=\"#86d3ff\"\n          offColor=\"#86d3ff\"\n          onHandleColor=\"#2693e6\"\n          handleDiameter={20}\n          uncheckedIcon={false}\n          checkedIcon={false}\n          boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n          activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n          height={15}\n          width={36}\n          className=\"react-switch\"\n          id=\"material-switch\"\n        />\n        <div>&nbsp;Sales</div>\n      </div>\n    );\n\n    filters = \"\";\n  }\n\n  return (\n    <div\n      className={props.columnSize}\n      style={props.style || { marginTop: \"20px\", marginBottom: \"20px\" }}\n    >\n      <div\n        className={\n          props.mainCard ? \"card custom-card-main\" : \"card custom-card\"\n        }\n      >\n        <div>\n          {props.title && (\n            <div\n              className={\n                props.mainCard\n                  ? \"custom-card-main-title card-title\"\n                  : \"custom-card-title card-title\"\n              }\n            >\n              <h6\n                className={\n                  props.mainHeaderCss ? \"main-title-text\" : \"title-text\"\n                }\n              >\n                {props.title}\n              </h6>\n              {!props.hideFilter && (\n                <div className=\"filters-container\">\n                  {hideDownload && (\n                    <DateRangeFilter\n                      changeDate={obj => props.changeDate(obj)}\n                    />\n                  )}\n                  {filters} {toogle}\n                  {props.getOrderSummaries && (\n                    <button\n                      className=\"order-summary-button filter-options\"\n                      data-toggle=\"modal\"\n                      data-target=\"#orderSummaryModal\"\n                      onClick={() => props.getOrderSummaries()}\n                    >\n                      Order Summary\n                    </button>\n                  )}\n                  {props.download && !hideDownload && (\n                    <GraphPopOver\n                      onSelect={props.onSelect}\n                      data={props.moreData}\n                      graphs={props.graphData}\n                      selectedGraph={props.selectedGraph}\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          )}\n          <div className=\"card-text\">{props.children}</div>\n          {props.note && <div className=\"footer-note\">*{props.note}</div>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}