{"ast":null,"code":"import axios from 'axios';\nimport { config } from '../utils/config';\nimport { toast } from 'react-toastify';\nvar manuallyCreateMdActions = {\n  fetchInventoryInfo: function fetchInventoryInfo(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getInventoryInfo/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        dispatch({\n          type: 'GET_INVENTORY_INFO',\n          payload: resp.data.data\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      }).catch(function (err) {\n        toast.error(\"eroro\", {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        console.log(err);\n      });\n    };\n  },\n  fetchCadence: function fetchCadence(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        // url: `${config.createMarkdownURL}/generateCadence/`,\n        url: \"\".concat(config.cadenceUrl, \"/MarkdownOptimization\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        var skus = [];\n\n        if (resp.data.skus && resp.data.skus.length) {\n          skus = resp.data.skus.map(function (sku) {\n            return {\n              label: sku,\n              value: sku\n            };\n          });\n        }\n\n        dispatch({\n          type: 'GET_CADENCE_DATA',\n          payload: [resp.data.cadenceData],\n          csv_names: resp.data.csv_names,\n          skus: skus,\n          savedData: resp.data.saveData\n        });\n        dispatch({\n          type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n          payload: resp.data.simulateData\n        });\n        dispatch({\n          type: 'SET_ANALYSIS_TABLE_DATA',\n          payload: resp.data.simulateData,\n          cadenceType: 'Optimal'\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      }).catch(function (err) {\n        console.log(err);\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  simulate: function simulate(reqObj, cadenceType) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        url: \"\".concat(config.cadenceUrl, \"/CalculationData\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        dispatch({\n          type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n          payload: resp.data\n        });\n        dispatch({\n          type: 'SET_ANALYSIS_TABLE_DATA',\n          payload: resp.data,\n          cadenceType: cadenceType\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        console.log(err);\n      });\n    };\n  },\n  saveData: function saveData(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        url: \"\".concat(config.createMarkdownURL, \"/saveMarkDown/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        alert('resp:', resp);\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        }); // dispatch({\n        //   type: 'GET_INVENTORY_INFO',\n        //   payload: resp.data,\n        // });\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        console.log(err);\n      });\n    };\n  }\n};\nexport default manuallyCreateMdActions;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/manuallyCreateMdActions.js"],"names":["axios","config","toast","manuallyCreateMdActions","fetchInventoryInfo","reqObj","dispatch","type","payload","status","url","createMarkdownURL","method","data","then","resp","catch","err","error","autoClose","hideProgressBar","console","log","fetchCadence","cadenceUrl","skus","length","map","sku","label","value","cadenceData","csv_names","savedData","saveData","simulateData","cadenceType","simulate","alert"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { config } from '../utils/config';\nimport { toast } from 'react-toastify';\n\nconst manuallyCreateMdActions = {\n  fetchInventoryInfo: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        url: `${config.createMarkdownURL}/getInventoryInfo/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          dispatch({\n            type: 'GET_INVENTORY_INFO',\n            payload: resp.data.data,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        })\n        .catch((err) => {\n          toast.error(`eroro`, { autoClose: 15000, hideProgressBar: true });\n          console.log(err);\n        });\n    };\n  },\n  fetchCadence: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        // url: `${config.createMarkdownURL}/generateCadence/`,\n        url: `${config.cadenceUrl}/MarkdownOptimization`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          let skus = [];\n          if (resp.data.skus && resp.data.skus.length) {\n            skus = resp.data.skus.map((sku) => {\n              return {\n                label: sku,\n                value: sku,\n              };\n            });\n          }\n          dispatch({\n            type: 'GET_CADENCE_DATA',\n            payload: [resp.data.cadenceData],\n            csv_names: resp.data.csv_names,\n            skus: skus,\n            savedData: resp.data.saveData,\n          });\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n            payload: resp.data.simulateData,\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA',\n            payload: resp.data.simulateData,\n            cadenceType: 'Optimal',\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n\n  simulate: (reqObj, cadenceType) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        url: `${config.cadenceUrl}/CalculationData`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n            payload: resp.data,\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA',\n            payload: resp.data,\n            cadenceType,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          console.log(err);\n        });\n    };\n  },\n  saveData: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        url: `${config.createMarkdownURL}/saveMarkDown/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          alert('resp:', resp);\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          // dispatch({\n          //   type: 'GET_INVENTORY_INFO',\n          //   payload: resp.data,\n          // });\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          console.log(err);\n        });\n    };\n  },\n};\nexport default manuallyCreateMdActions;\n"]},"metadata":{},"sourceType":"module"}