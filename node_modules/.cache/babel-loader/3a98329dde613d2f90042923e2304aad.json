{"ast":null,"code":"import _slicedToArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Charts/stackedbarNew.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport Modal from 'react-awesome-modal'; // import { getChartData } from '../../actions/chart';\n// import Popover from '../Content/popover';\n\nimport Chart from 'chart.js';\n\nvar StackedBarChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StackedBarChart, _Component);\n\n  function StackedBarChart(props) {\n    var _this;\n\n    _classCallCheck(this, StackedBarChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StackedBarChart).call(this));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(StackedBarChart, [{\n    key: \"render\",\n    value: function render() {\n      var chartData = this.props.data; // console.log('stacked data',chartData)\n\n      var labelsData = chartData.labels;\n      var labels = [];\n      var datasets = [];\n      var backgroundColor; // var colourPicker = [\"#FF0000\", \"#FFA000\", \"#000000\", \"#008000\"];\n\n      var colors = [];\n      colors.push({\n        backgroundColor: '#2685CB'\n      });\n      colors.push({\n        backgroundColor: '#EC932F'\n      });\n      colors.push({\n        backgroundColor: '#4B4ADA'\n      });\n      colors.push({\n        backgroundColor: '#FC3026'\n      });\n      colors.push({\n        backgroundColor: '#CD36E7'\n      });\n      colors.push({\n        backgroundColor: '#1e0759'\n      });\n      var object = chartData.data;\n      var labelsKey = Object.keys(labelsData);\n      var x_labelData = chartData.x_label; // console.log('new object data to traverse in stacked bar', object)\n\n      for (var key in object) {\n        var index = Object.keys(object).indexOf(key);\n\n        if (key.toLowerCase() === \"yellow\" || key.toLowerCase() === \"red\" || key.toLowerCase() === \"green\") {\n          if (key.toLowerCase() === \"yellow\") {\n            //yellow\n            backgroundColor = '#FFDE55';\n          }\n\n          if (key.toLowerCase() === \"red\") {\n            //red\n            backgroundColor = '#FD7373';\n          }\n\n          if (key.toLowerCase() === \"green\") {\n            //green\n            backgroundColor = '#6DBE8C';\n          }\n\n          backgroundColor = backgroundColor;\n        } else {\n          backgroundColor = colors[index % 6].backgroundColor;\n        } // console.log('index for colour stacked----', index, colourPicker[index])\n\n\n        datasets.push({\n          label: key,\n          data: object[key],\n          backgroundColor: backgroundColor,\n          hoverBackgroundColor: backgroundColor,\n          hoverBorderWidth: 0\n        });\n      }\n\n      for (var key in labelsData) {\n        labelsData[key].map(function (label) {\n          labels.push(label);\n        });\n      }\n\n      var numberWithCommas = function numberWithCommas(x) {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      };\n\n      var barData = {\n        labels: labels,\n        datasets: datasets // console.log('datasets for stacked bar -----------', datasets)\n\n      };\n      var chartOptions = {\n        // plugins: {\n        //   datalabels: {\n        //     display: false,\n        //   }\n        // },\n        plugins: {\n          datalabels: {\n            display: false,\n            color: 'white',\n            font: {\n              size: 10,\n              style: 'bold'\n            },\n            formatter: function formatter(value, ctx) {\n              console.log('pie value', value, ctx.chart.data.datasets[0].data);\n              var sum = 0;\n              var dataArr = ctx.chart.data.datasets[0].data;\n              dataArr.map(function (data) {\n                console.log('sum of the value in pie', typeof Number(data));\n                sum += Number(data);\n              });\n              var percentage = (value * 100 / sum).toFixed(2);\n              var newPercentage = Math.round(percentage);\n              console.log('new percentage values', newPercentage);\n              return newPercentage + \"%\";\n            }\n          },\n          labels: _defineProperty({\n            render: 'percentage',\n            showActualPercentages: true,\n            fontSize: 10,\n            fontStyle: 'bold',\n            fontColor: '#000',\n            fontFamily: '\"Lucida Console\", Monaco, monospace'\n          }, \"render\", function render(args) {\n            console.log('values', args.percentage);\n\n            if (args.percentage >= 1) {\n              return args.percentage + '%';\n            }\n          })\n        },\n        animation: {\n          duration: 10\n        },\n        tooltips: {\n          mode: 'nearest',\n          callbacks: {\n            title: function title(_ref, data) {\n              var _ref2 = _slicedToArray(_ref, 1),\n                  tooltipItems = _ref2[0];\n\n              console.log('tooltip title', data, tooltipItems);\n              return x_labelData + ' : ' + tooltipItems.xLabel;\n            },\n            beforeLabel: function beforeLabel(tooltipItem, data) {\n              var ranges = [{\n                divider: 1e9,\n                suffix: 'B'\n              }, {\n                divider: 1e6,\n                suffix: 'M'\n              }, {\n                divider: 1e3,\n                suffix: 'k'\n              }];\n\n              function formatNumber(n) {\n                for (var i = 0; i < ranges.length; i++) {\n                  if (Math.abs(n) >= ranges[i].divider) {\n                    var newNumber = (n / ranges[i].divider).toFixed(2);\n                    return newNumber.toString() + ranges[i].suffix;\n                  }\n                }\n\n                return n;\n              }\n\n              if (chartData.y_label.includes(\"$\") || data.datasets[tooltipItem.datasetIndex].label.includes(\"$\")) {\n                return data.datasets[tooltipItem.datasetIndex].label + ': ' + '\\n' + \"$\" + formatNumber(tooltipItem.yLabel);\n              } else {\n                return data.datasets[tooltipItem.datasetIndex].label + ': ' + '\\n' + formatNumber(tooltipItem.yLabel);\n              }\n            },\n            label: function label(tooltipItem) {\n              return;\n            }\n          }\n        },\n        scales: {\n          xAxes: [{\n            stacked: true,\n            gridLines: {\n              display: false\n            },\n            scaleLabel: {\n              display: true,\n              labelString: chartData.x_label,\n              fontStyle: \"bold\"\n            },\n            ticks: {\n              fontSize: 10,\n              opacity: 0.7,\n              callback: function callback(value, index, values) {\n                if (value.length >= 12) {\n                  return value.substr(0, 5) + '...' + value.substr(value.length - 5, 0);\n                } else {\n                  return value;\n                }\n              }\n            }\n          }],\n          yAxes: [{\n            gridLines: {\n              display: false // drawBorder: false,\n\n            },\n            stacked: true,\n            // ticks: {\n            //   callback: function (value) { return numberWithCommas(value); },\n            // },\n            ticks: {\n              // stepSize: 100000,\n              callback: function callback(value) {\n                var ranges = [{\n                  divider: 1e9,\n                  suffix: 'B'\n                }, {\n                  divider: 1e6,\n                  suffix: 'M'\n                }, {\n                  divider: 1e3,\n                  suffix: 'k'\n                }];\n\n                function formatNumber(n) {\n                  for (var i = 0; i < ranges.length; i++) {\n                    if (Math.abs(n) >= ranges[i].divider) {\n                      return (n / ranges[i].divider).toString() + ranges[i].suffix;\n                    }\n                  }\n\n                  return n;\n                }\n\n                if (chartData.y_label.includes(\"$\")) {\n                  return \"$\" + formatNumber(value);\n                } else {\n                  return formatNumber(value);\n                }\n              }\n            },\n            scaleLabel: {\n              display: true,\n              labelString: chartData.y_label,\n              fontStyle: \"bold\"\n            }\n          }]\n        },\n        // legend: { display: true }\n        legend: {\n          display: true,\n          position: 'bottom',\n          labels: {\n            boxWidth: 12\n          },\n          fontFamily: \"Helvetica\",\n          fontSize: \"12px\"\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: barData,\n        options: chartOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StackedBarChart;\n}(Component);\n\nexport default StackedBarChart;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Charts/stackedbarNew.js"],"names":["React","Component","PropTypes","connect","withRouter","Line","Bar","Pie","Modal","Chart","StackedBarChart","props","state","chartData","data","labelsData","labels","datasets","backgroundColor","colors","push","object","labelsKey","Object","keys","x_labelData","x_label","key","index","indexOf","toLowerCase","label","hoverBackgroundColor","hoverBorderWidth","map","numberWithCommas","x","toString","replace","barData","chartOptions","plugins","datalabels","display","color","font","size","style","formatter","value","ctx","console","log","chart","sum","dataArr","Number","percentage","toFixed","newPercentage","Math","round","render","showActualPercentages","fontSize","fontStyle","fontColor","fontFamily","args","animation","duration","tooltips","mode","callbacks","title","tooltipItems","xLabel","beforeLabel","tooltipItem","ranges","divider","suffix","formatNumber","n","i","length","abs","newNumber","y_label","includes","datasetIndex","yLabel","scales","xAxes","stacked","gridLines","scaleLabel","labelString","ticks","opacity","callback","values","substr","yAxes","legend","position","boxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport Modal from 'react-awesome-modal';\n// import { getChartData } from '../../actions/chart';\n// import Popover from '../Content/popover';\nimport Chart from 'chart.js';\n\n\nclass StackedBarChart extends Component {\n  constructor(props) {\n    super(); \n    this.state = {\n    };\n  }\n\n\n\n  render() {\n\n\t\tvar chartData = this.props.data;\n\t\t// console.log('stacked data',chartData)\n    let labelsData = chartData.labels;\n    let labels = [];\n    let datasets = [];\n    let backgroundColor;\n\n\n    // var colourPicker = [\"#FF0000\", \"#FFA000\", \"#000000\", \"#008000\"];\n    var colors = []\n    colors.push({\n      backgroundColor: '#2685CB'\n    })\n    colors.push({\n      backgroundColor: '#EC932F'\n    })\n    colors.push({\n      backgroundColor: '#4B4ADA'\n    })\n    colors.push({\n      backgroundColor: '#FC3026'\n    })\n    colors.push({\n      backgroundColor: '#CD36E7'\n    })\n    colors.push({\n     backgroundColor: '#1e0759'\n   })\n    var object = chartData.data;\n    let labelsKey = Object.keys(labelsData)\n    var x_labelData = chartData.x_label;\n\n    // console.log('new object data to traverse in stacked bar', object)\n    for (var key in object) {\n      let index = Object.keys(object).indexOf(key);\n      if(key.toLowerCase() === \"yellow\" || key.toLowerCase() === \"red\" || key.toLowerCase() === \"green\"){\n        if(key.toLowerCase() === \"yellow\"){\n          //yellow\n              backgroundColor = '#FFDE55'\n          }\n  \n          if(key.toLowerCase() === \"red\"){\n            //red\n          backgroundColor = '#FD7373'\n          }\n  \n          if(key.toLowerCase() === \"green\"){\n            //green\n          backgroundColor =  '#6DBE8C'\n          } \n        backgroundColor = backgroundColor ;\n      }else{\n        backgroundColor = colors[index % 6].backgroundColor ;\n      }\n      // console.log('index for colour stacked----', index, colourPicker[index])\n      datasets.push(\n        {\n          label: key,\n          data: object[key],\n          backgroundColor: backgroundColor ,\n          hoverBackgroundColor: backgroundColor ,\n          hoverBorderWidth: 0\n        }\n      )\n    }\n\n    for (var key in labelsData) {\n      labelsData[key].map((label) => {\n        labels.push(label);\n      })\n    }\n\n    var numberWithCommas = function (x) {\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    };\n \n    let barData = {\n      labels: labels,\n      datasets: datasets\n    }\n\n    // console.log('datasets for stacked bar -----------', datasets)\n\n    let chartOptions = {\n      // plugins: {\n      //   datalabels: {\n      //     display: false,\n\n      //   }\n      // },\n      plugins: { \n        datalabels: {\n           display: false,\n                           color: 'white',\n                           font: {\n                              size:10,\n                              style: 'bold'\n                            },\n\n                            formatter: (value, ctx) => {\n                              console.log('pie value',value, ctx.chart.data.datasets[0].data)\n                              let sum = 0;\n                              let dataArr = ctx.chart.data.datasets[0].data;\n                              dataArr.map(data => {\n                                      console.log('sum of the value in pie',typeof Number(data))\n                                      sum += Number(data);\n                              });\n                              let percentage = (value*100 / sum).toFixed(2);\n                              let newPercentage = Math.round(percentage)\n                              console.log('new percentage values',newPercentage)\n                              return newPercentage  +\"%\";\n                      },\n      \n        },\n          labels: {\n            render: 'percentage',\n            showActualPercentages: true,\n            fontSize: 10,\n            fontStyle: 'bold',\n            fontColor: '#000',\n            fontFamily: '\"Lucida Console\", Monaco, monospace',\n            render: function (args) {\n              console.log('values',args.percentage)\n              if(args.percentage >=1){\n                return args.percentage + '%'\n              }\n\n            }\n          }\n        \n     },\n      animation: {\n        duration: 10,\n      },\n      tooltips: {\n        mode: 'nearest',\n        callbacks: {\n          title: function([tooltipItems],data) {\n            console.log('tooltip title',data ,tooltipItems)\n              return x_labelData + ' : ' + tooltipItems.xLabel;\n            },\n\n            beforeLabel: function(tooltipItem,data) {\n              var ranges = [\n                { divider: 1e9, suffix: 'B' },\n                          { divider: 1e6, suffix: 'M' },\n                          { divider: 1e3, suffix: 'k' }\n                       ];\n                       function formatNumber(n) {\n                            for (var i = 0; i < ranges.length; i++) {\n                               if (Math.abs(n) >= (ranges[i].divider)) {\n                                 let newNumber = (n / ranges[i].divider).toFixed(2)\n                                  return newNumber.toString() + ranges[i].suffix;\n                               }\n                            }\n                            return n;\n                         }\n            if(chartData.y_label.includes(\"$\") || data.datasets[tooltipItem.datasetIndex].label.includes(\"$\")){\n              return data.datasets[tooltipItem.datasetIndex].label + ': '  + '\\n' + \"$\" + formatNumber(tooltipItem.yLabel);\n            }else{\n              return data.datasets[tooltipItem.datasetIndex].label + ': '  + '\\n' + formatNumber(tooltipItem.yLabel);\n            }\n          },\n          label: function(tooltipItem) {\n            return ;\n          }\n\n        },\n      },\n\n\n      scales: {\n        xAxes: [{\n          stacked: true,\n          gridLines: { display: false },\n          scaleLabel: {\n            display: true,\n            labelString: chartData.x_label,\n            fontStyle: \"bold\",\n          },\n          ticks: {\n            fontSize: 10,\n            opacity: 0.7,\n            callback: function (value, index, values) {\n              if(value.length >= 12){ \n                return (value.substr(0, 5) + '...' + value.substr(value.length - 5, 0))\n              }else {\n                return value\n              }\n            }\n           },\n        }],\n        yAxes: [{\n          gridLines: {\n            display: false,\n            // drawBorder: false,\n          },\n          stacked: true,\n          // ticks: {\n          //   callback: function (value) { return numberWithCommas(value); },\n          // },\n          ticks: {\n            // stepSize: 100000,\n            callback: function(value) {\n              var ranges = [\n                { divider: 1e9, suffix: 'B' },\n                { divider: 1e6, suffix: 'M' },\n                { divider: 1e3, suffix: 'k' }\n             ];\n             function formatNumber(n) {\n                  for (var i = 0; i < ranges.length; i++) {\n                     if (Math.abs(n) >= ranges[i].divider) {\n                        return (n / ranges[i].divider).toString() + ranges[i].suffix;\n                     }\n                  }\n                  return n;\n               }\n               if(chartData.y_label.includes(\"$\")){\n                 return \"$\" + formatNumber(value);\n               }else{\n                return formatNumber(value);\n\n               }\n            }\n         },\n         scaleLabel: {\n          display: true,\n          labelString: chartData.y_label,\n          fontStyle: \"bold\",\n        },\n        }],\n      },\n      // legend: { display: true }\n      legend: {\n        display: true,\n        position: 'bottom',\n        labels: {\n          boxWidth: 12\n      },\n        fontFamily: \"Helvetica\",\n        fontSize: \"12px\",\n        \n      },\n    }\n\n\n    return (\n      <div>\n        <Bar data={barData} options={chartOptions} />\n      </div>\n    )\n  }\n}\n\nexport default StackedBarChart;"]},"metadata":{},"sourceType":"module"}