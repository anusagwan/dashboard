{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Planned Reports/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Filters from '../../services/filters';\nimport DataTable from '../../services/reactTable';\nimport styled from 'styled-components';\nimport plannedReportsAction from '../../actions/plannedReportsAction';\nimport _ from 'lodash';\nimport LoadingOverlay from '../../utils/Loader';\nimport NoData from '../noTableData'; // import card1Image from '../../images/card1Image.png';\n// import card2Image from '../../images/card2Image.png';\n// import card3Image from '../../images/card3Image.png';\n// import card4Image from '../../images/card4Image.png';\n\nimport { toUnit } from '../../helper/formatter';\nimport { toast } from 'react-toastify';\nimport EditMDModal from '../editMDModal';\nimport withClearCache from '../../ClearCache';\n\nvar planedReport =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(planedReport, _Component);\n\n  function planedReport(_props) {\n    var _this;\n\n    _classCallCheck(this, planedReport);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(planedReport).call(this, _props));\n\n    _this.onHandleSelect = function (selectValues) {\n      return _this.setState({\n        selectValues: selectValues\n      });\n    };\n\n    _this.validateFilters = function () {\n      return _this.props.selectedHierarchy1 && _this.props.selectedHierarchy2.length && _this.props.selectedHierarchy7.length && _this.props.startDate && _this.props.endDate;\n    };\n\n    _this.onFilter = function (filters) {\n      // if (!this.validateFilters()) {\n      //   toast.error(`Please select mandatory filters`, {\n      //     autoClose: 15000,\n      //     hideProgressBar: true,\n      //   });\n      //   return;\n      // }\n      _this.setState({\n        showTable: true\n      });\n\n      var req = {\n        filters: {\n          hierarchy1: _this.props.selectedHierarchy1,\n          hierarchy2: _this.props.selectedHierarchy2,\n          hierarchy3: _this.props.selectedHierarchy3,\n          hierarchy4: _this.props.selectedHierarchy4,\n          hierarchy5: _this.props.selectedHierarchy5,\n          hierarchy7: _this.props.selectedHierarchy7,\n          hierarchy9: _this.props.selectedHierarchy9,\n          hierarchy10: _this.props.selectedHierarchy10,\n          hierarchy11: _this.props.selectedHierarchy11,\n          hierarchy12: _this.props.selectedHierarchy12 // customStyleGroup: this.props.selectedCustomStyleGroup,\n          // customStoreGroup: this.props.selectedCustomStoreGroup,\n\n        },\n        startDate: _this.props.startDate,\n        endDate: _this.props.endDate,\n        week: _this.props.weeks\n      }; // if (this.props.selectedChannel[0] === 'Web') req.filters['ecom_flag'] = [1];\n      // if (this.props.selectedChannel[0] === 'Outlet') req.filters['retail_flag'] = [1];\n\n      if (!_this.props.selectedCustomStoreGroup.length) {\n        delete req.filters['customStoreGroup'];\n      }\n\n      _this.props.fetchPlannedReports(req).then(function (res) {\n        if (_.isEmpty(res)) {\n          _this.setState({\n            textStr: 'No data found. Please try with different filters.'\n          });\n        }\n      });\n    };\n\n    _this.coldef = function () {\n      if (_this.props.getPlannedTableData.length) {\n        var columns = [// {\n        //   Header: 'Plan ID',\n        //   accessor: 'promo_code',\n        //   disableGroupBy: true,\n        //   //   width: 50,\n        //   align: 'left',\n        //   enableRowSpan: true,\n        //   // cells:\n        // },\n        {\n          Header: 'Plan',\n          accessor: 'promo_id',\n          disableGroupBy: true,\n          Cell: function Cell(_ref) {\n            var row = _ref.row;\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 151\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 152\n              },\n              __self: this\n            }, row.original.plan ? row.original.plan : null), React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 153\n              },\n              __self: this\n            }, React.createElement(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: function onClick() {\n                _this.props.updateSidebar('/vis/Markdown/create-markdown');\n\n                _this.props.history.push({\n                  pathname: \"/vis/Markdown/create-markdown\",\n                  state: {\n                    isEdit: true,\n                    planId: row.original.promo_id\n                  }\n                }); // this.setState({ showEditModal: true, selectedPlanDetails: row.original });\n\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 154\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 164\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fa fa-pencil color-blue\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 165\n              },\n              __self: this\n            }, \"Edit\")))));\n          },\n          align: 'center',\n          enableRowSpan: true,\n          downloadValue: 'plan'\n        }, {\n          Header: 'Scenario',\n          accessor: function accessor(d) {\n            return d.promo_id + d.promo_id;\n          },\n          disableGroupBy: true,\n          Cell: function Cell(_ref2) {\n            var row = _ref2.row,\n                rows = _ref2.rows;\n            return row.original.scenario ? row.original.scenario : null;\n          },\n          enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n          downloadValue: 'scenario'\n        }, {\n          Header: 'Start Date',\n          // accessor: 'startDate',\n          disableGroupBy: true,\n          accessor: 'promo_code',\n          Cell: function Cell(_ref3) {\n            var row = _ref3.row,\n                rows = _ref3.rows;\n            return row.original.startDate ? row.original.startDate : null;\n          },\n          enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n          downloadValue: 'startDate'\n        }, {\n          Header: 'End Date',\n          accessor: 'promotion_id',\n          disableGroupBy: true,\n          // accessor: 'promo_code',\n          Cell: function Cell(_ref4) {\n            var row = _ref4.row,\n                rows = _ref4.rows;\n            return row.original.endDate ? row.original.endDate : null;\n          },\n          enableRowSpan: true,\n          // enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n          downloadValue: 'endDate'\n        }, {\n          Header: 'Metrics',\n          accessor: 'metrices',\n          disableGroupBy: true,\n          //   width: 50,\n          align: 'left'\n        }]; // Object.keys(this.props.getPlannedTableData[0]).forEach((i) => {\n        //   if (!columns.map((c) => c.accessor).includes(i)) {\n        //     columns.push({\n        //       Header: i,\n        //       accessor: i,\n        //       disableGroupBy: true,\n        //       Cell: (props) => <div> {toUnit(props)} </div>,\n        //     });\n        //   }\n        // });\n        // let finalArr = this.props.weeks.length || arr;\n\n        if (_this.props.fiscalWeek) {\n          _this.props.fiscalWeek.forEach(function (week) {\n            columns.push({\n              Header: 'w' + week,\n              accessor: 'w' + week,\n              disableGroupBy: true,\n              downloadFormatter: toUnit,\n              Cell: function Cell(props) {\n                return React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 235\n                  },\n                  __self: this\n                }, \" \", props.value ? toUnit(props) : '-', \" \");\n              }\n            });\n          });\n        } else {\n          var arr = Object.keys(_this.props.getPlannedTableData[0]).filter(function (tableData) {\n            return tableData.startsWith('w');\n          });\n          arr.forEach(function (week) {\n            columns.push({\n              Header: week,\n              accessor: week,\n              disableGroupBy: true,\n              downloadFormatter: toUnit,\n              Cell: function Cell(props) {\n                return React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 248\n                  },\n                  __self: this\n                }, \" \", props.value ? toUnit(props) : '-', \" \");\n              }\n            });\n          });\n        }\n\n        return columns;\n      } else return [];\n    };\n\n    _this.showEditModalHandler = function (val) {\n      if (!val) document.body.setAttribute('style', '');\n\n      _this.setState({\n        showEditModal: val\n      });\n    };\n\n    _this.state = {\n      textStr: 'Please select filters',\n      showTable: false,\n      filters: [{\n        type: 'hierarchy1',\n        isMandatory: true,\n        isMultiple: false,\n        isHierarchy: true\n      }, {\n        type: 'hierarchy2',\n        isMandatory: true,\n        isMultiple: false,\n        isHierarchy: true\n      }, {\n        type: 'hierarchy3',\n        isMandatory: true,\n        isMultiple: false,\n        isHierarchy: true\n      }, {\n        type: 'hierarchy4',\n        isMandatory: true,\n        isMultiple: false,\n        isHierarchy: true\n      }, {\n        type: 'hierarchy5',\n        isMandatory: true,\n        isMultiple: false,\n        isHierarchy: true\n      }],\n      selectedItems: [],\n      firstCardText: 'Avg Markdown',\n      secondCardText: 'Sell through %',\n      thirdCardText: 'Margin %',\n      fourthCardText: 'Quantity Sold',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month',\n      showEditModal: false,\n      selectedPlanDetails: null\n    };\n    return _this;\n  }\n\n  _createClass(planedReport, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        showTable: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          getPlannedMetricOptions = _this$props.getPlannedMetricOptions,\n          getPlannedTableData = _this$props.getPlannedTableData;\n      return React.createElement(\"div\", {\n        className: \"planned-report pl-2 pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(LoadingOverlay, {\n        loader: this.props.overlayLoaderState,\n        spinner: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"font-size-14  pad-10 markdown-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"MarkSmart /\", React.createElement(\"span\", {\n        className: \"font-bold color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Actual Vs Planned Reports\"))), React.createElement(\"hr\", {\n        className: \"mb-2\",\n        style: {\n          marginTop: '-4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(Filters, {\n        hideCustomStyleGroup: true,\n        hierarchy: this.state.filters,\n        onFilter: this.onFilter,\n        dateRange: true,\n        filtersOptions: [{\n          type: 'country',\n          isMandatory: true,\n          isMultiple: false\n        }, {\n          type: 'channel',\n          isMandatory: true,\n          isMultiple: false\n        }, {\n          type: 'storeCluster',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'customStoreGroup',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'store',\n          isMandatory: false,\n          isMultiple: true\n        }].concat(_toConsumableArray(this.state.filters), [{\n          type: 'season',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'matrix',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'exclusionList',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'clearance',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'customStyleGroup',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'styleColor',\n          isMandatory: false,\n          isMultiple: true\n        }]),\n        onReset: function onReset(e) {\n          _this2.setState({\n            textStr: 'Please select filters to show Markdown plans'\n          });\n\n          _this2.props.onReset(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }))), this.state.showTable && getPlannedTableData.length > 0 ? React.createElement(\"div\", {\n        className: \"card CalendarMain promoCalendarDiv1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(ColSelBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"pad-15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        fileName: \"Actual vs planned report\",\n        showExport: true,\n        columns: this.coldef(),\n        data: getPlannedTableData,\n        isPagination: true,\n        rowsPerPage: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }))) : React.createElement(NoData, {\n        description: this.state.textStr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }), this.state.showEditModal ? React.createElement(EditMDModal, {\n        showEditModalHandler: this.showEditModalHandler,\n        selectedPlanDetails: this.state.selectedPlanDetails,\n        from: \"actualVsPlanned\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }) : null));\n    }\n  }]);\n\n  return planedReport;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    overlayLoaderState: store.loaderReducer.overlayLoaderState,\n    getPlannedTableData: store.plannedReportReducer.plannedReportsTableData,\n    fiscalWeek: store.plannedReportReducer.fiscalWeek,\n    getPlannedMetricOptions: store.plannedReportReducer.metricOptions.draft,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    selectedStores: store.filtersReducer.selectedStores,\n    selectedHierarchy9: store.filtersReducer.selectedHierarchy9,\n    selectedHierarchy10: store.filtersReducer.selectedHierarchy10,\n    selectedHierarchy11: store.filtersReducer.selectedHierarchy11,\n    selectedHierarchy12: store.filtersReducer.selectedHierarchy12,\n    selectedCustomStoreGroup: store.filtersReducer.selectedCustomStoreGroup,\n    selectedCustomStyleGroup: store.filtersReducer.selectedCustomStyleGroup,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks,\n    selectedSeason: store.filtersReducer.selectedSeason,\n    selectedClearance: store.filtersReducer.selectedClearance,\n    selectedMatrix: store.filtersReducer.selectedMatrix,\n    selectedExclusionList: store.filtersReducer.selectedExclusionList,\n    selectedStyleColor: store.filtersReducer.selectedStyleColor,\n    selectedCountry: store.filtersReducer.selectedCountry,\n    selectedStoreCluster: store.filtersReducer.selectedStoreCluster,\n    selectedStore: store.filtersReducer.selectedStore,\n    selectedChannel: store.filtersReducer.selectedChannel\n  };\n};\n\nvar mapActionsToProps = {\n  fetchPlannedReports: plannedReportsAction.fetchPlannedReports,\n  onReset: plannedReportsAction.onReset,\n  updateSidebar: plannedReportsAction.updateSidebar\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withClearCache(planedReport)); // export default planedReport;\n\nvar ColSelBtn = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Planned Reports/index.js"],"names":["React","Component","connect","Filters","DataTable","styled","plannedReportsAction","_","LoadingOverlay","NoData","toUnit","toast","EditMDModal","withClearCache","planedReport","props","onHandleSelect","selectValues","setState","validateFilters","selectedHierarchy1","selectedHierarchy2","length","selectedHierarchy7","startDate","endDate","onFilter","filters","showTable","req","hierarchy1","hierarchy2","hierarchy3","selectedHierarchy3","hierarchy4","selectedHierarchy4","hierarchy5","selectedHierarchy5","hierarchy7","hierarchy9","selectedHierarchy9","hierarchy10","selectedHierarchy10","hierarchy11","selectedHierarchy11","hierarchy12","selectedHierarchy12","week","weeks","selectedCustomStoreGroup","fetchPlannedReports","then","res","isEmpty","textStr","coldef","getPlannedTableData","columns","Header","accessor","disableGroupBy","Cell","row","original","plan","updateSidebar","history","push","pathname","state","isEdit","planId","promo_id","align","enableRowSpan","downloadValue","d","rows","scenario","fiscalWeek","forEach","downloadFormatter","value","arr","Object","keys","filter","tableData","startsWith","showEditModalHandler","val","document","body","setAttribute","showEditModal","type","isMandatory","isMultiple","isHierarchy","selectedItems","firstCardText","secondCardText","thirdCardText","fourthCardText","firstCardFirstValue","firstCardSecondValue","secondCardFirstValue","secondCardSecondValue","thirdCardFirstValue","thirdCardSecondValue","fourthCardFirstValue","fourthCardSecondValue","cardWeekText","cardMonthText","selectedPlanDetails","getPlannedMetricOptions","overlayLoaderState","marginTop","e","onReset","mapStateToProps","store","loaderReducer","plannedReportReducer","plannedReportsTableData","metricOptions","draft","filtersReducer","selectedStores","selectedCustomStyleGroup","selectedSeason","selectedClearance","selectedMatrix","selectedExclusionList","selectedStyleColor","selectedCountry","selectedStoreCluster","selectedStore","selectedChannel","mapActionsToProps","ColSelBtn","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Filters from '../../services/filters';\nimport DataTable from '../../services/reactTable';\nimport styled from 'styled-components';\nimport plannedReportsAction from '../../actions/plannedReportsAction';\nimport _ from 'lodash';\nimport LoadingOverlay from '../../utils/Loader';\nimport NoData from '../noTableData';\n// import card1Image from '../../images/card1Image.png';\n// import card2Image from '../../images/card2Image.png';\n// import card3Image from '../../images/card3Image.png';\n// import card4Image from '../../images/card4Image.png';\nimport { toUnit } from '../../helper/formatter';\nimport { toast } from 'react-toastify';\nimport EditMDModal from '../editMDModal';\nimport withClearCache from '../../ClearCache';\n\nclass planedReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textStr: 'Please select filters',\n      showTable: false,\n      filters: [\n        {\n          type: 'hierarchy1',\n          isMandatory: true,\n          isMultiple: false,\n          isHierarchy: true,\n        },\n        {\n          type: 'hierarchy2',\n          isMandatory: true,\n          isMultiple: false,\n          isHierarchy: true,\n        },\n        {\n          type: 'hierarchy3',\n          isMandatory: true,\n          isMultiple: false,\n          isHierarchy: true,\n        },\n        {\n          type: 'hierarchy4',\n          isMandatory: true,\n          isMultiple: false,\n          isHierarchy: true,\n        },\n        {\n          type: 'hierarchy5',\n          isMandatory: true,\n          isMultiple: false,\n          isHierarchy: true,\n        },\n      ],\n\n      selectedItems: [],\n      firstCardText: 'Avg Markdown',\n      secondCardText: 'Sell through %',\n      thirdCardText: 'Margin %',\n      fourthCardText: 'Quantity Sold',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month',\n      showEditModal: false,\n      selectedPlanDetails: null,\n    };\n  }\n  onHandleSelect = (selectValues) => this.setState({ selectValues });\n  validateFilters = () => {\n    return (\n      this.props.selectedHierarchy1 &&\n      this.props.selectedHierarchy2.length &&\n      this.props.selectedHierarchy7.length &&\n      this.props.startDate &&\n      this.props.endDate\n    );\n  };\n  onFilter = (filters) => {\n    // if (!this.validateFilters()) {\n    //   toast.error(`Please select mandatory filters`, {\n    //     autoClose: 15000,\n    //     hideProgressBar: true,\n    //   });\n    //   return;\n    // }\n    this.setState({\n      showTable: true,\n    });\n    let req = {\n      filters: {\n        hierarchy1: this.props.selectedHierarchy1,\n        hierarchy2: this.props.selectedHierarchy2,\n        hierarchy3: this.props.selectedHierarchy3,\n        hierarchy4: this.props.selectedHierarchy4,\n        hierarchy5: this.props.selectedHierarchy5,\n        hierarchy7: this.props.selectedHierarchy7,\n        hierarchy9: this.props.selectedHierarchy9,\n        hierarchy10: this.props.selectedHierarchy10,\n        hierarchy11: this.props.selectedHierarchy11,\n        hierarchy12: this.props.selectedHierarchy12,\n        // customStyleGroup: this.props.selectedCustomStyleGroup,\n        // customStoreGroup: this.props.selectedCustomStoreGroup,\n      },\n      startDate: this.props.startDate,\n      endDate: this.props.endDate,\n      week: this.props.weeks,\n    };\n    // if (this.props.selectedChannel[0] === 'Web') req.filters['ecom_flag'] = [1];\n    // if (this.props.selectedChannel[0] === 'Outlet') req.filters['retail_flag'] = [1];\n    if (!this.props.selectedCustomStoreGroup.length) {\n      delete req.filters['customStoreGroup'];\n    }\n    this.props.fetchPlannedReports(req).then((res) => {\n      if (_.isEmpty(res)) {\n        this.setState({\n          textStr: 'No data found. Please try with different filters.',\n        });\n      }\n    });\n  };\n\n  coldef = () => {\n    if (this.props.getPlannedTableData.length) {\n      let columns = [\n        // {\n        //   Header: 'Plan ID',\n\n        //   accessor: 'promo_code',\n        //   disableGroupBy: true,\n        //   //   width: 50,\n\n        //   align: 'left',\n        //   enableRowSpan: true,\n        //   // cells:\n        // },\n\n        {\n          Header: 'Plan',\n          accessor: 'promo_id',\n          disableGroupBy: true,\n          Cell: ({ row }) => (\n            <div>\n              <span>{row.original.plan ? row.original.plan : null}</span>\n              <div>\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={() => {\n                    this.props.updateSidebar('/vis/Markdown/create-markdown');\n                    this.props.history.push({\n                      pathname: `/vis/Markdown/create-markdown`,\n                      state: { isEdit: true, planId: row.original.promo_id },\n                    });\n                    // this.setState({ showEditModal: true, selectedPlanDetails: row.original });\n                  }}>\n                  <span>\n                    <i className=\"fa fa-pencil color-blue\">Edit</i>\n                  </span>\n                </button>\n              </div>\n            </div>\n          ),\n          align: 'center',\n          enableRowSpan: true,\n          downloadValue: 'plan',\n        },\n        {\n          Header: 'Scenario',\n          accessor: (d) => d.promo_id + d.promo_id,\n          disableGroupBy: true,\n          Cell: ({ row, rows }) => (row.original.scenario ? row.original.scenario : null),\n          enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n          downloadValue: 'scenario',\n        },\n        {\n          Header: 'Start Date',\n          // accessor: 'startDate',\n          disableGroupBy: true,\n          accessor: 'promo_code',\n          Cell: ({ row, rows }) => (row.original.startDate ? row.original.startDate : null),\n          enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n          downloadValue: 'startDate',\n        },\n        {\n          Header: 'End Date',\n          accessor: 'promotion_id',\n          disableGroupBy: true,\n          // accessor: 'promo_code',\n          Cell: ({ row, rows }) => (row.original.endDate ? row.original.endDate : null),\n          enableRowSpan: true,\n          // enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n          downloadValue: 'endDate',\n        },\n        {\n          Header: 'Metrics',\n          accessor: 'metrices',\n          disableGroupBy: true,\n          //   width: 50,\n          align: 'left',\n        },\n      ];\n      // Object.keys(this.props.getPlannedTableData[0]).forEach((i) => {\n      //   if (!columns.map((c) => c.accessor).includes(i)) {\n      //     columns.push({\n      //       Header: i,\n      //       accessor: i,\n      //       disableGroupBy: true,\n      //       Cell: (props) => <div> {toUnit(props)} </div>,\n      //     });\n      //   }\n      // });\n\n      // let finalArr = this.props.weeks.length || arr;\n      if (this.props.fiscalWeek) {\n        this.props.fiscalWeek.forEach((week) => {\n          columns.push({\n            Header: 'w' + week,\n            accessor: 'w' + week,\n            disableGroupBy: true,\n            downloadFormatter: toUnit,\n            Cell: (props) => <div> {props.value ? toUnit(props) : '-'} </div>,\n          });\n        });\n      } else {\n        let arr = Object.keys(this.props.getPlannedTableData[0]).filter((tableData) =>\n          tableData.startsWith('w')\n        );\n        arr.forEach((week) => {\n          columns.push({\n            Header: week,\n            accessor: week,\n            disableGroupBy: true,\n            downloadFormatter: toUnit,\n            Cell: (props) => <div> {props.value ? toUnit(props) : '-'} </div>,\n          });\n        });\n      }\n\n      return columns;\n    } else return [];\n  };\n\n  componentDidMount() {\n    this.setState({\n      showTable: false,\n    });\n  }\n  showEditModalHandler = (val) => {\n    if (!val) document.body.setAttribute('style', '');\n    this.setState({ showEditModal: val });\n  };\n  render() {\n    let { getPlannedMetricOptions, getPlannedTableData } = this.props;\n    return (\n      <div className=\"planned-report pl-2 pr-2\">\n        <LoadingOverlay loader={this.props.overlayLoaderState} spinner>\n          <div className=\"card mb-4\">\n            <div>\n              <h4 className=\"font-size-14  pad-10 markdown-heading\">\n                MarkSmart /<span className=\"font-bold color-blue\">Actual Vs Planned Reports</span>\n              </h4>\n            </div>\n            <hr\n              className=\"mb-2\"\n              style={{\n                marginTop: '-4px',\n              }}\n            />\n            <div className=\"mb-4\">\n              <Filters\n                hideCustomStyleGroup={true}\n                hierarchy={this.state.filters}\n                onFilter={this.onFilter}\n                dateRange\n                filtersOptions={[\n                  { type: 'country', isMandatory: true, isMultiple: false },\n                  { type: 'channel', isMandatory: true, isMultiple: false },\n                  { type: 'storeCluster', isMandatory: false, isMultiple: true },\n                  { type: 'customStoreGroup', isMandatory: false, isMultiple: true },\n                  { type: 'store', isMandatory: false, isMultiple: true },\n                  ...this.state.filters,\n                  { type: 'season', isMandatory: false, isMultiple: true },\n                  { type: 'matrix', isMandatory: false, isMultiple: true },\n                  { type: 'exclusionList', isMandatory: false, isMultiple: true },\n                  { type: 'clearance', isMandatory: false, isMultiple: true },\n                  { type: 'customStyleGroup', isMandatory: false, isMultiple: true },\n                  { type: 'styleColor', isMandatory: false, isMultiple: true },\n                ]}\n                onReset={(e) => {\n                  this.setState({\n                    textStr: 'Please select filters to show Markdown plans',\n                  });\n                  this.props.onReset(e);\n                }}\n              />\n            </div>\n          </div>\n          {/* <div className=\"row\" style={{ padding: '1px 18px' }}> */}\n          {/* <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n              <CardComponent\n                cardImage={card1Image}\n                cardText={this.state.firstCardText}\n                cardValue={this.state.firstCardFirstValue}\n                cardValueSecond={this.state.firstCardSecondValue}\n \n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border1',\n                  cardValue: 'card1-value',\n                  cardImg: 'card1-img',\n                  cardValueSecond: 'card-value-second',\n                  cardSubHeading: 'card-subHeading',\n                }}\n              />\n            </div>\n            <div className=\"col-md-3 col-sm-3 col-xs-6\">\n              <CardComponent\n                cardImage={card2Image}\n                cardText={this.state.secondCardText}\n                cardValue={this.state.secondCardFirstValue}\n                cardValueSecond={this.state.secondCardSecondValue}\n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border2',\n                  cardValue: 'card1-value',\n                  cardImg: 'card2-img',\n                  cardValueSecond: 'card-value-second',\n                  cardSubHeading: 'card-subHeading',\n                }}\n              />\n            </div>\n            <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n              <CardComponent\n                cardImage={card3Image}\n                cardText={this.state.thirdCardText}\n                cardValue={this.state.thirdCardFirstValue}\n                cardValueSecond={this.state.thirdCardSecondValue}\n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border3',\n                  cardValue: 'card1-value',\n                  cardImg: 'card3-img',\n                  cardValueSecond: 'card-value-second',\n                  cardSubHeading: 'card-subHeading',\n                }}\n              />\n            </div>\n            <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n              <CardComponent\n                cardImage={card4Image}\n                cardText={this.state.fourthCardText}\n                cardValue={this.state.fourthCardFirstValue}\n                cardValueSecond={this.state.fourthCardSecondValue}\n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border4',\n                  cardValue: 'card1-value',\n                  cardImg: 'card4-img',\n                }}\n              />\n            </div>\n          </div> */}\n          {this.state.showTable && getPlannedTableData.length > 0 ? (\n            <div className=\"card CalendarMain promoCalendarDiv1 mt-3\">\n              <ColSelBtn>\n                {/* <ColumnSelection\n                tab=\"draft\"\n                options={getPlannedMetricOptions}\n                onHandleSelect={this.onHandleSelect}\n                selectedItems={this.state.selectedItems}\n                attributes={attributes}\n                contentRenderer={true}\n              /> */}\n                {/* <Download data={getPlannedTableData} /> */}\n              </ColSelBtn>\n\n              <div className=\"pad-15\">\n                <DataTable\n                  fileName=\"Actual vs planned report\"\n                  showExport={true}\n                  columns={this.coldef()}\n                  data={getPlannedTableData}\n                  isPagination={true}\n                  rowsPerPage={12}\n                />\n              </div>\n            </div>\n          ) : (\n            <NoData description={this.state.textStr} />\n          )}\n\n          {this.state.showEditModal ? (\n            <EditMDModal\n              showEditModalHandler={this.showEditModalHandler}\n              selectedPlanDetails={this.state.selectedPlanDetails}\n              from=\"actualVsPlanned\"\n            />\n          ) : null}\n        </LoadingOverlay>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (store) => {\n  return {\n    overlayLoaderState: store.loaderReducer.overlayLoaderState,\n    getPlannedTableData: store.plannedReportReducer.plannedReportsTableData,\n    fiscalWeek: store.plannedReportReducer.fiscalWeek,\n    getPlannedMetricOptions: store.plannedReportReducer.metricOptions.draft,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n\n    selectedStores: store.filtersReducer.selectedStores,\n    selectedHierarchy9: store.filtersReducer.selectedHierarchy9,\n    selectedHierarchy10: store.filtersReducer.selectedHierarchy10,\n    selectedHierarchy11: store.filtersReducer.selectedHierarchy11,\n    selectedHierarchy12: store.filtersReducer.selectedHierarchy12,\n    selectedCustomStoreGroup: store.filtersReducer.selectedCustomStoreGroup,\n    selectedCustomStyleGroup: store.filtersReducer.selectedCustomStyleGroup,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks,\n    selectedSeason: store.filtersReducer.selectedSeason,\n    selectedClearance: store.filtersReducer.selectedClearance,\n    selectedMatrix: store.filtersReducer.selectedMatrix,\n    selectedExclusionList: store.filtersReducer.selectedExclusionList,\n    selectedStyleColor: store.filtersReducer.selectedStyleColor,\n    selectedCountry: store.filtersReducer.selectedCountry,\n    selectedStoreCluster: store.filtersReducer.selectedStoreCluster,\n    selectedStore: store.filtersReducer.selectedStore,\n    selectedChannel: store.filtersReducer.selectedChannel,\n  };\n};\nconst mapActionsToProps = {\n  fetchPlannedReports: plannedReportsAction.fetchPlannedReports,\n  onReset: plannedReportsAction.onReset,\n  updateSidebar: plannedReportsAction.updateSidebar,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(withClearCache(planedReport));\n// export default planedReport;\nconst ColSelBtn = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n"]},"metadata":{},"sourceType":"module"}