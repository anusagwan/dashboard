{"ast":null,"code":"import moment from 'moment';\nexport var dateFormatter = 'YYYY-MM-DD';\nexport var getNumberOfWeeksBetweenDates = function getNumberOfWeeksBetweenDates(startDate, endDate) {\n  var diffInDays = endDate.diff(startDate, 'days') + 1;\n  return Math.ceil(diffInDays / 7);\n};\nexport var getStartAndEndDates = function getStartAndEndDates(_ref) {\n  var startDate = _ref.startDate,\n      endDate = _ref.endDate,\n      columnDuration = _ref.columnDuration;\n  return {\n    startDate: moment.utc(startDate).startOf(columnDuration),\n    endDate: moment.utc(endDate).endOf(columnDuration).startOf('day')\n  };\n};\nexport var getColumnStartAndEndDates = function getColumnStartAndEndDates(_ref2) {\n  var startDate = _ref2.startDate,\n      endDate = _ref2.endDate,\n      columnDuration = _ref2.columnDuration,\n      weeksInfo = _ref2.weeksInfo;\n  var result = [];\n\n  if (columnDuration === 'day') {\n    var currDate = startDate.clone();\n    var diff = endDate.diff(startDate, 'days') + 1;\n\n    for (var i = 0; i < diff; i++) {\n      var columnStartDate = currDate.clone();\n      var columnEndDate = currDate.clone();\n      currDate = currDate.add(1, 'day');\n      result.push({\n        startDate: columnStartDate,\n        endDate: columnEndDate\n      });\n    }\n  } else {\n    var _currDate = startDate.clone();\n\n    var numberOfWeeks = getNumberOfWeeksBetweenDates(startDate, endDate);\n\n    for (var _i = 0; _i < numberOfWeeks; _i++) {\n      var weekStartDate = _currDate.clone();\n\n      _currDate = _currDate.add(6, 'days');\n\n      var weekEndDate = _currDate.clone();\n\n      _currDate = _currDate.add(1, 'day');\n      result.push({\n        startDate: weekStartDate,\n        endDate: weekEndDate,\n        weekInfo: weeksInfo.length ? weeksInfo[_i] : false\n      });\n    }\n  }\n\n  return result;\n};\nexport var groupNonConflictingEvents = function groupNonConflictingEvents(data) {\n  var sortedData = data.sort(function (left, right) {\n    return moment.utc(left.startDate, dateFormatter).diff(moment.utc(right.startDate, dateFormatter));\n  });\n  var result = [[]];\n  sortedData.forEach(function (event) {\n    var eventStartDate = moment.utc(event.startDate, dateFormatter);\n    var eventEndDate = moment.utc(event.endDate, dateFormatter);\n    var conflictingCount = 0; // find first not conflicting line\n\n    for (var _i2 = 0, _result = result; _i2 < _result.length; _i2++) {\n      var line = _result[_i2];\n      var hasConflict = line.find(function (re) {\n        return eventStartDate.isSameOrBefore(re.endDate) && eventEndDate.isSameOrAfter(re.startDate);\n      });\n\n      if (hasConflict) {\n        conflictingCount++;\n      } else {\n        line.push({\n          startDate: eventStartDate,\n          endDate: eventEndDate,\n          metadata: event.metadata\n        });\n        break;\n      }\n    }\n\n    if (conflictingCount === result.length) {\n      result.push([{\n        startDate: eventStartDate,\n        endDate: eventEndDate,\n        metadata: event.metadata\n      }]);\n    }\n  });\n  return result;\n};\n\nvar filterEventsOutsideCalendarRange = function filterEventsOutsideCalendarRange(row, calendarStartDate, calendarEndDate) {\n  return row.filter(function (event) {\n    return calendarStartDate.isSameOrBefore(event.endDate) && calendarEndDate.isSameOrAfter(event.startDate);\n  });\n};\n\nexport var fillDataWithFakeEvents = function fillDataWithFakeEvents(calendarStartDate, calendarEndDate, data) {\n  var dayWidth = 100 / (Math.abs(calendarStartDate.diff(calendarEndDate, 'days')) + 1);\n  var result = [];\n\n  for (var i = 0; i < data.length; i++) {\n    var row = filterEventsOutsideCalendarRange(data[i], calendarStartDate, calendarEndDate);\n    result.push([]);\n\n    for (var j = 0; j < row.length; j++) {\n      var event = row[j];\n\n      if (j === 0) {\n        // compare with calendar start date if starting after then add fakediv\n        var diff = calendarStartDate.diff(event.startDate, 'days');\n        var startDateForWidth = event.startDate.isBefore(calendarStartDate) ? calendarStartDate : event.startDate;\n        var endDateForWidth = event.endDate.isBefore(calendarEndDate) ? event.endDate : calendarEndDate;\n\n        if (diff <= 0) {\n          if (diff < 0) {\n            // add fake div\n            result[i].push({\n              startDate: calendarStartDate,\n              endDate: event.startDate,\n              width: Math.abs(event.startDate.diff(calendarStartDate, 'days')) * dayWidth,\n              isFake: true,\n              clipLeft: false,\n              clipRight: false,\n              metadata: event.metadata\n            });\n          }\n\n          result[i].push({\n            startDate: event.startDate,\n            endDate: event.endDate,\n            width: (Math.abs(startDateForWidth.diff(endDateForWidth, 'days')) + 1) * dayWidth,\n            isFake: false,\n            clipLeft: false,\n            clipRight: event.endDate.diff(calendarEndDate, 'days') > 0,\n            metadata: event.metadata\n          });\n        } else {\n          result[i].push({\n            startDate: event.startDate,\n            endDate: event.endDate,\n            width: (Math.abs(startDateForWidth.diff(endDateForWidth, 'days')) + 1) * dayWidth,\n            isFake: false,\n            clipLeft: true,\n            clipRight: event.endDate.diff(calendarEndDate, 'days') > 0,\n            metadata: event.metadata\n          });\n        }\n      } else {\n        var previousEvent = row[j - 1];\n\n        var _diff = previousEvent.startDate.diff(event.startDate);\n\n        var _endDateForWidth = event.endDate.isBefore(calendarEndDate) ? event.endDate : calendarEndDate;\n\n        if (_diff < 0 && Math.abs(event.startDate.diff(previousEvent.endDate, 'days')) > 1) {\n          result[i].push({\n            startDate: previousEvent.endDate,\n            endDate: event.startDate,\n            width: (Math.abs(event.startDate.diff(previousEvent.endDate, 'days')) - 1) * dayWidth,\n            isFake: true,\n            clipLeft: false,\n            clipRight: false,\n            metadata: event.metadata\n          });\n        }\n\n        result[i].push({\n          startDate: event.startDate,\n          endDate: event.endDate,\n          width: (Math.abs(event.startDate.diff(_endDateForWidth, 'days')) + 1) * dayWidth,\n          isFake: false,\n          clipLeft: false,\n          clipRight: event.endDate.diff(calendarEndDate) > 0,\n          metadata: event.metadata\n        });\n      }\n    }\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Content/Promotions/CalendarTime.js"],"names":["moment","dateFormatter","getNumberOfWeeksBetweenDates","startDate","endDate","diffInDays","diff","Math","ceil","getStartAndEndDates","columnDuration","utc","startOf","endOf","getColumnStartAndEndDates","weeksInfo","result","currDate","clone","i","columnStartDate","columnEndDate","add","push","numberOfWeeks","weekStartDate","weekEndDate","weekInfo","length","groupNonConflictingEvents","data","sortedData","sort","left","right","forEach","event","eventStartDate","eventEndDate","conflictingCount","line","hasConflict","find","re","isSameOrBefore","isSameOrAfter","metadata","filterEventsOutsideCalendarRange","row","calendarStartDate","calendarEndDate","filter","fillDataWithFakeEvents","dayWidth","abs","j","startDateForWidth","isBefore","endDateForWidth","width","isFake","clipLeft","clipRight","previousEvent"],"mappings":"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","sourcesContent":["import moment from 'moment';\n\nexport const dateFormatter = 'YYYY-MM-DD';\n\nexport const getNumberOfWeeksBetweenDates = (startDate, endDate) => {\n  const diffInDays = endDate.diff(startDate, 'days') + 1;\n  return Math.ceil(diffInDays / 7);\n};\n\nexport const getStartAndEndDates = ({\n  startDate,\n  endDate,\n  columnDuration\n}) => ({\n  startDate: moment.utc(startDate).startOf(columnDuration),\n  endDate: moment.utc(endDate).endOf(columnDuration).startOf('day')\n});\n\nexport const getColumnStartAndEndDates = ({\n  startDate,\n  endDate,\n  columnDuration,\n  weeksInfo\n}) => {\n  const result = [];\n  if (columnDuration === 'day') {\n    let currDate = startDate.clone();\n    const diff = endDate.diff(startDate, 'days') + 1;\n    for (let i = 0; i < diff; i++) {\n      const columnStartDate = currDate.clone();\n      const columnEndDate = currDate.clone();\n      currDate = currDate.add(1, 'day');\n      result.push({\n        startDate: columnStartDate,\n        endDate: columnEndDate\n      });\n    }\n  } else {\n    let currDate = startDate.clone();\n    const numberOfWeeks = getNumberOfWeeksBetweenDates(startDate, endDate);\n    for (let i = 0; i < numberOfWeeks; i++) {\n      const weekStartDate = currDate.clone();\n      currDate = currDate.add(6, 'days');\n      const weekEndDate = currDate.clone();\n      currDate = currDate.add(1, 'day');\n      result.push({\n        startDate: weekStartDate,\n        endDate: weekEndDate,\n        weekInfo: weeksInfo.length ? weeksInfo[i] : false\n      });\n    }\n  }\n  return result;\n};\n\nexport const groupNonConflictingEvents = (data) => {\n  const sortedData = data.sort((left, right) => {\n    return moment.utc(left.startDate, dateFormatter).diff(moment.utc(right.startDate, dateFormatter));\n  });\n  const result = [[]];\n  sortedData.forEach((event) => {\n    const eventStartDate = moment.utc(event.startDate, dateFormatter);\n    const eventEndDate = moment.utc(event.endDate, dateFormatter);\n\n    let conflictingCount = 0;\n\n    // find first not conflicting line\n    for (const line of result) {\n      const hasConflict = line\n      .find((re) => eventStartDate.isSameOrBefore(re.endDate) && eventEndDate.isSameOrAfter(re.startDate));\n      if (hasConflict) {\n        conflictingCount++;\n      } else {\n        line.push({\n          startDate: eventStartDate,\n          endDate: eventEndDate,\n          metadata: event.metadata\n        });\n        break;\n      }\n    }\n\n    if (conflictingCount === result.length) {\n      result.push([{\n        startDate: eventStartDate,\n        endDate: eventEndDate,\n        metadata: event.metadata\n      }]);\n    }\n  });\n  return result;\n};\n\nconst filterEventsOutsideCalendarRange = (\n  row,\n  calendarStartDate,\n  calendarEndDate) => {\n  return row.filter((event) => {\n    return (calendarStartDate.isSameOrBefore(event.endDate) && calendarEndDate.isSameOrAfter(event.startDate));\n  });\n};\n\nexport const fillDataWithFakeEvents = (\n  calendarStartDate,\n  calendarEndDate,\n  data\n) => {\n  const dayWidth = 100 / (Math.abs(calendarStartDate.diff(calendarEndDate, 'days')) + 1);\n  const result = [];\n  for (let i = 0; i < data.length; i++) {\n    const row = filterEventsOutsideCalendarRange(data[i], calendarStartDate, calendarEndDate);\n    result.push([]);\n    for (let j = 0; j < row.length; j++) {\n      const event = row[j];\n      if (j === 0) {\n        // compare with calendar start date if starting after then add fakediv\n        const diff = calendarStartDate.diff(event.startDate, 'days');\n        const startDateForWidth = event.startDate.isBefore(calendarStartDate) ? calendarStartDate : event.startDate;\n        const endDateForWidth = event.endDate.isBefore(calendarEndDate) ? event.endDate : calendarEndDate;\n        if (diff <= 0) {\n          if(diff < 0) {\n            // add fake div\n            result[i].push({\n              startDate: calendarStartDate,\n              endDate: event.startDate,\n              width: Math.abs(event.startDate.diff(calendarStartDate, 'days')) * dayWidth,\n              isFake: true,\n              clipLeft: false,\n              clipRight: false,\n              metadata: event.metadata\n            });\n          }\n          result[i].push({\n            startDate: event.startDate,\n            endDate: event.endDate,\n            width: (Math.abs(startDateForWidth.diff(endDateForWidth, 'days')) + 1) * dayWidth,\n            isFake: false,\n            clipLeft: false,\n            clipRight: event.endDate.diff(calendarEndDate, 'days') > 0,\n            metadata: event.metadata\n          });\n        } else {\n          result[i].push({\n            startDate: event.startDate,\n            endDate: event.endDate,\n            width: (Math.abs(startDateForWidth.diff(endDateForWidth, 'days')) + 1) * dayWidth,\n            isFake: false,\n            clipLeft: true,\n            clipRight: event.endDate.diff(calendarEndDate, 'days') > 0,\n            metadata: event.metadata\n          });\n        }\n      } else {\n        const previousEvent = row[j - 1];\n        const diff = previousEvent.startDate.diff(event.startDate);\n        const endDateForWidth = event.endDate.isBefore(calendarEndDate) ? event.endDate : calendarEndDate;\n        if (diff < 0 && (Math.abs(event.startDate.diff(previousEvent.endDate, 'days')) > 1)) {\n          result[i].push({\n            startDate: previousEvent.endDate,\n            endDate: event.startDate,\n            width: (Math.abs(event.startDate.diff(previousEvent.endDate, 'days')) - 1) * dayWidth,\n            isFake: true,\n            clipLeft: false,\n            clipRight: false,\n            metadata: event.metadata\n          });\n        }\n        result[i].push({\n          startDate: event.startDate,\n          endDate: event.endDate,\n          width: (Math.abs(event.startDate.diff(endDateForWidth, 'days')) + 1) * dayWidth,\n          isFake: false,\n          clipLeft: false,\n          clipRight: event.endDate.diff(calendarEndDate) > 0,\n          metadata: event.metadata\n        });\n      }\n    }\n  }\n  return result;\n};\n"]},"metadata":{},"sourceType":"module"}