{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/SKUCockpit/skuColdef.js\";\n\nimport React from 'react';\nimport { toUnit, toDollar, toPercentage } from '../../helper/formatter';\nexport default (function () {\n  var header = [{\n    Header: 'Style-Color',\n    columns: [{\n      Header: '',\n      downloadHeader: 'Style-Color',\n      accessor: 'style_number',\n      groupByID: 'style_number',\n      disableGroupBy: true,\n      align: 'left',\n      showFilter: true\n    }]\n  }, {\n    Header: 'Sell through %',\n    columns: [{\n      Header: 'TY',\n      downloadHeader: 'Sell through TY %',\n      downloadFormatter: toPercentage,\n      accessor: 'sell_through_ty',\n      aggregate: 'sum',\n      disableGroupBy: true,\n      align: 'left',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \" \", toPercentage({\n          value: props.value\n        }), \" \");\n      }\n    }, {\n      Header: 'LY',\n      downloadHeader: 'Sell through LY %',\n      downloadFormatter: toPercentage,\n      accessor: 'sell_through_ly',\n      disableGroupBy: true,\n      align: 'left',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \" \", toPercentage({\n          value: props.value\n        }), \" \");\n      }\n    }]\n  }, {\n    Header: 'Margin %',\n    columns: [{\n      Header: 'TY',\n      downloadHeader: 'Margin TY %',\n      downloadFormatter: toPercentage,\n      accessor: 'margin_ty',\n      disableGroupBy: true,\n      aggregate: _this.roundedMedian,\n      Aggregated: function Aggregated(_ref) {\n        var value = _ref.value;\n        return \"\".concat(value);\n      },\n      align: 'left',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \" \", toPercentage({\n          value: props.value\n        }), \" \");\n      }\n    }, {\n      Header: 'LY',\n      downloadHeader: 'Margin LY %',\n      downloadFormatter: toPercentage,\n      accessor: 'margin_ly',\n      disableGroupBy: true,\n      align: 'left',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \" \", toPercentage({\n          value: props.value\n        }), \" \");\n      }\n    }]\n  }, {\n    Header: 'Margin ',\n    columns: [{\n      Header: 'Margin ($)',\n      accessor: 'margin$',\n      disableGroupBy: true,\n      Aggregated: function Aggregated(_ref2) {\n        var value = _ref2.value;\n        return \"\".concat(value);\n      },\n      align: 'centre',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \" \", toDollar(props), \" \");\n      },\n      downloadFormatter: toDollar\n    }, {\n      Header: 'AUM $',\n      accessor: 'aum',\n      disableGroupBy: true,\n      Aggregated: function Aggregated(_ref3) {\n        var value = _ref3.value;\n        return \"\".concat(value);\n      },\n      align: 'centre',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \" \", toDollar(props), \" \");\n      },\n      downloadFormatter: toDollar\n    }]\n  }, {\n    Header: 'Sales',\n    columns: [{\n      Header: 'Actual sales (units)',\n      accessor: 'units_sold',\n      aggregate: 'average',\n      disableGroupBy: true,\n      Aggregated: function Aggregated(_ref4) {\n        var value = _ref4.value;\n        return \"\".concat(value);\n      },\n      align: 'centre',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \" \", toUnit(props), \" \");\n      },\n      downloadFormatter: toUnit\n    }, {\n      Header: 'Revenue ($)',\n      accessor: 'revenue$',\n      disableGroupBy: true,\n      Aggregated: function Aggregated(_ref5) {\n        var value = _ref5.value;\n        return \"\".concat(value);\n      },\n      align: 'centre',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \" \", toDollar(props), \" \");\n      },\n      downloadFormatter: toDollar\n    }, {\n      Header: 'AUR $',\n      accessor: 'aur',\n      disableGroupBy: true,\n      Aggregated: function Aggregated(_ref6) {\n        var value = _ref6.value;\n        return \"\".concat(value);\n      },\n      align: 'centre',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \" \", toDollar(props), \" \");\n      },\n      downloadFormatter: toDollar\n    }, {\n      Header: \"Last week's sales\",\n      accessor: 'last_week_sales',\n      disableGroupBy: true,\n      Aggregated: function Aggregated(_ref7) {\n        var value = _ref7.value;\n        return \"\".concat(value);\n      },\n      align: 'centre'\n    }]\n  }, {\n    Header: 'Current inventory',\n    columns: [{\n      Header: 'On hand',\n      accessor: 'inventory.inventory_on_hand',\n      aggregate: 'average',\n      disableGroupBy: true,\n      align: 'left',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, \" \", toUnit(props), \" \");\n      },\n      downloadFormatter: toUnit\n    }, {\n      Header: 'In transit',\n      accessor: 'inventory.inventory_in_transit',\n      aggregate: 'average',\n      disableGroupBy: true,\n      align: 'left',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, \" \", toUnit(props), \" \");\n      },\n      downloadFormatter: toUnit\n    }, {\n      Header: 'On order',\n      accessor: 'inventory.inventory_on_order',\n      aggregate: 'average',\n      disableGroupBy: true,\n      align: 'left',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, \" \", toUnit(props), \" \");\n      },\n      downloadFormatter: toUnit\n    }, {\n      Header: 'In DC',\n      accessor: 'inventory.inventory_in_dc',\n      aggregate: 'average',\n      disableGroupBy: true,\n      align: 'left',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, \" \", toUnit(props), \" \");\n      },\n      downloadFormatter: toUnit\n    }, {\n      Header: 'Weeks on hand',\n      accessor: 'wos',\n      disableGroupBy: true,\n      Aggregated: function Aggregated(_ref8) {\n        var value = _ref8.value;\n        return \"\".concat(value);\n      },\n      align: 'centre',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, \" \", toUnit(props), \" \");\n      },\n      downloadFormatter: toUnit\n    }]\n  }, {\n    Header: 'Markdown status',\n    columns: [{\n      Header: '',\n      downloadHeader: 'Markdown status',\n      accessor: 'mdStatus',\n      disableGroupBy: true,\n      align: 'centre',\n      showFilter: true,\n      Cell: function Cell(props) {\n        switch (props.row.original.mdStatus) {\n          case 'High':\n            return React.createElement(\"div\", {\n              className: \"high-status\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 197\n              },\n              __self: this\n            }, \"High\");\n\n          case 'Medium':\n            return React.createElement(\"div\", {\n              className: \"medium-status\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 199\n              },\n              __self: this\n            }, \"Medium\");\n\n          case 'Low':\n            return React.createElement(\"div\", {\n              className: \"low-status\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 201\n              },\n              __self: this\n            }, \"Low\");\n\n          default:\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 203\n              },\n              __self: this\n            });\n        }\n      }\n    }]\n  }];\n  return header;\n});","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/SKUCockpit/skuColdef.js"],"names":["React","toUnit","toDollar","toPercentage","header","Header","columns","downloadHeader","accessor","groupByID","disableGroupBy","align","showFilter","downloadFormatter","aggregate","Cell","props","value","roundedMedian","Aggregated","row","original","mdStatus"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { toUnit, toDollar, toPercentage } from '../../helper/formatter';\n\nexport default () => {\n  const header = [\n    {\n      Header: 'Style-Color',\n      columns: [\n        {\n          Header: '',\n          downloadHeader: 'Style-Color',\n          accessor: 'style_number',\n          groupByID: 'style_number',\n          disableGroupBy: true,\n          align: 'left',\n          showFilter: true,\n        },\n      ],\n    },\n    {\n      Header: 'Sell through %',\n      columns: [\n        {\n          Header: 'TY',\n          downloadHeader: 'Sell through TY %',\n          downloadFormatter: toPercentage,\n          accessor: 'sell_through_ty',\n          aggregate: 'sum',\n          disableGroupBy: true,\n          align: 'left',\n          Cell: (props) => <div> {toPercentage({ value: props.value })} </div>,\n        },\n        {\n          Header: 'LY',\n          downloadHeader: 'Sell through LY %',\n          downloadFormatter: toPercentage,\n          accessor: 'sell_through_ly',\n          disableGroupBy: true,\n          align: 'left',\n          Cell: (props) => <div> {toPercentage({ value: props.value })} </div>,\n        },\n      ],\n    },\n    {\n      Header: 'Margin %',\n      columns: [\n        {\n          Header: 'TY',\n          downloadHeader: 'Margin TY %',\n          downloadFormatter: toPercentage,\n          accessor: 'margin_ty',\n          disableGroupBy: true,\n          aggregate: this.roundedMedian,\n          Aggregated: ({ value }) => `${value}`,\n          align: 'left',\n          Cell: (props) => <div> {toPercentage({ value: props.value })} </div>,\n        },\n        {\n          Header: 'LY',\n          downloadHeader: 'Margin LY %',\n          downloadFormatter: toPercentage,\n          accessor: 'margin_ly',\n          disableGroupBy: true,\n          align: 'left',\n          Cell: (props) => <div> {toPercentage({ value: props.value })} </div>,\n        },\n      ],\n    },\n    {\n      Header: 'Margin ',\n      columns: [\n        {\n          Header: 'Margin ($)',\n          accessor: 'margin$',\n          disableGroupBy: true,\n          Aggregated: ({ value }) => `${value}`,\n          align: 'centre',\n          Cell: (props) => <div> {toDollar(props)} </div>,\n          downloadFormatter: toDollar,\n        },\n\n        {\n          Header: 'AUM $',\n          accessor: 'aum',\n          disableGroupBy: true,\n          Aggregated: ({ value }) => `${value}`,\n          align: 'centre',\n          Cell: (props) => <div> {toDollar(props)} </div>,\n          downloadFormatter: toDollar,\n        },\n      ],\n    },\n    {\n      Header: 'Sales',\n      columns: [\n        {\n          Header: 'Actual sales (units)',\n          accessor: 'units_sold',\n          aggregate: 'average',\n          disableGroupBy: true,\n          Aggregated: ({ value }) => `${value}`,\n          align: 'centre',\n          Cell: (props) => <div> {toUnit(props)} </div>,\n          downloadFormatter: toUnit,\n        },\n        {\n          Header: 'Revenue ($)',\n          accessor: 'revenue$',\n          disableGroupBy: true,\n          Aggregated: ({ value }) => `${value}`,\n          align: 'centre',\n          Cell: (props) => <div> {toDollar(props)} </div>,\n          downloadFormatter: toDollar,\n        },\n        {\n          Header: 'AUR $',\n          accessor: 'aur',\n          disableGroupBy: true,\n          Aggregated: ({ value }) => `${value}`,\n          align: 'centre',\n          Cell: (props) => <div> {toDollar(props)} </div>,\n          downloadFormatter: toDollar,\n        },\n        {\n          Header: \"Last week's sales\",\n          accessor: 'last_week_sales',\n          disableGroupBy: true,\n          Aggregated: ({ value }) => `${value}`,\n          align: 'centre',\n        },\n      ],\n    },\n\n    {\n      Header: 'Current inventory',\n      columns: [\n        {\n          Header: 'On hand',\n          accessor: 'inventory.inventory_on_hand',\n          aggregate: 'average',\n          disableGroupBy: true,\n          align: 'left',\n          Cell: (props) => <div> {toUnit(props)} </div>,\n          downloadFormatter: toUnit,\n        },\n        {\n          Header: 'In transit',\n          accessor: 'inventory.inventory_in_transit',\n          aggregate: 'average',\n          disableGroupBy: true,\n          align: 'left',\n          Cell: (props) => <div> {toUnit(props)} </div>,\n          downloadFormatter: toUnit,\n        },\n        {\n          Header: 'On order',\n          accessor: 'inventory.inventory_on_order',\n          aggregate: 'average',\n          disableGroupBy: true,\n          align: 'left',\n          Cell: (props) => <div> {toUnit(props)} </div>,\n          downloadFormatter: toUnit,\n        },\n        {\n          Header: 'In DC',\n          accessor: 'inventory.inventory_in_dc',\n          aggregate: 'average',\n          disableGroupBy: true,\n          align: 'left',\n          Cell: (props) => <div> {toUnit(props)} </div>,\n          downloadFormatter: toUnit,\n        },\n        {\n          Header: 'Weeks on hand',\n          accessor: 'wos',\n          disableGroupBy: true,\n          Aggregated: ({ value }) => `${value}`,\n          align: 'centre',\n          Cell: (props) => <div> {toUnit(props)} </div>,\n          downloadFormatter: toUnit,\n        },\n      ],\n    },\n    {\n      Header: 'Markdown status',\n      columns: [\n        {\n          Header: '',\n          downloadHeader: 'Markdown status',\n          accessor: 'mdStatus',\n          disableGroupBy: true,\n          align: 'centre',\n          showFilter: true,\n          Cell: (props) => {\n            switch (props.row.original.mdStatus) {\n              case 'High':\n                return <div className=\"high-status\">High</div>;\n              case 'Medium':\n                return <div className=\"medium-status\">Medium</div>;\n              case 'Low':\n                return <div className=\"low-status\">Low</div>;\n              default:\n                return <div></div>;\n            }\n          },\n        },\n      ],\n    },\n  ];\n  return header;\n};\n"]},"metadata":{},"sourceType":"module"}