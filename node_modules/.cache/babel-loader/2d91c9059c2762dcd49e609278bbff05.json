{"ast":null,"code":"import _defineProperty from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/services/filters/index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { labels, validations, filterType } from './config';\nimport Select from '../select';\nimport './index.css';\nimport { connect } from 'react-redux';\nimport DateRangePicker from '../RetailCalendarDatePicker';\nimport FilterActions from '../../actions/filtersAction';\nimport { toast } from 'react-toastify';\nimport _ from 'lodash';\n\nvar Filters =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Filters, _Component);\n\n  function Filters(props) {\n    var _this;\n\n    _classCallCheck(this, Filters);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filters).call(this, props));\n\n    _this.onHierarchyOneSelection = function (val) {\n      var hierarchyClone = _.cloneDeep(_this.props.filtersOptions);\n\n      var valiadtion = validations[val[0].label];\n\n      var findIndex = function findIndex(index, key) {\n        return _.findIndex(hierarchyClone, {\n          type: \"\".concat(valiadtion[key][index])\n        });\n      }; //finding index num for swap case from validations\n\n\n      if (valiadtion && !_.isEmpty(valiadtion.swap)) {\n        //swaping filters\n        var a = findIndex(0, 'swap'),\n            b = findIndex(1, 'swap');\n        var temp = hierarchyClone[a];\n        hierarchyClone[a] = hierarchyClone[b];\n        hierarchyClone[b] = temp;\n      }\n\n      if (valiadtion && !_.isEmpty(valiadtion.remove)) {\n        //remove filters case\n        _.map(valiadtion.remove, function (item, i) {\n          _.remove(hierarchyClone, function (itm, index) {\n            return index === findIndex(i, 'remove');\n          });\n        });\n      }\n\n      _this.setState({\n        hierarchy: hierarchyClone\n      });\n\n      return hierarchyClone;\n    };\n\n    _this.setSelectionHandler =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(val, actionName, name) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(name === 'customStoreGroup')) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _context.next = 3;\n                return _this.props.setSelectedCustomStoreGroup(val.map(function (v) {\n                  return v.value;\n                }));\n\n              case 3:\n                return _context.abrupt(\"return\");\n\n              case 4:\n                if (!(name === 'customStyleGroup')) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _this.props.setSelectedCustomGroup(val.map(function (v) {\n                  return v.value;\n                }), 'name');\n\n                _context.next = 8;\n                return _this.props.setSelectedCustomGroup(val.map(function (v) {\n                  return v.id;\n                }), 'id');\n\n              case 8:\n                return _context.abrupt(\"return\");\n\n              case 9:\n                _context.next = 11;\n                return _this.props[actionName](val.map(function (e) {\n                  return e.label;\n                }));\n\n              case 11:\n                return _context.abrupt(\"return\");\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.getHierarchyOptions =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(val, filterIndex, currFilterName, isHierarchyPrev, nextFilterName, isHierarchyNext) {\n        var hierarchy, nameCapitalized, resetHierachies;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                !Array.isArray(val) && (val = [val]);\n                hierarchy = _.cloneDeep(_this.state.hierarchy);\n\n                if (!(currFilterName === 'hierarchy1')) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                _context3.next = 5;\n                return _this.onHierarchyOneSelection(val);\n\n              case 5:\n                hierarchy = _context3.sent;\n\n              case 6:\n                if (_.findIndex(hierarchy, {\n                  type: 'hierarchy1'\n                }) > filterIndex) {\n                  _this.setState({\n                    hierarchy: _this.props.filtersOptions\n                  }); //reset filters that are removed or swapped when filters that comes before H1 are set\n\n                }\n\n                nameCapitalized = currFilterName && currFilterName.charAt(0).toUpperCase() + currFilterName.slice(1); //capitalizing the name to match action/reducer name\n\n                resetHierachies = {};\n\n                _.map(hierarchy, function (item, index) {\n                  if (index > filterIndex) {\n                    resetHierachies[item.type] = null; //all fiters value, which comes after selected filter becomes null(reset)\n                  }\n                });\n\n                _this.setState(_objectSpread(_defineProperty({}, currFilterName, val), resetHierachies),\n                /*#__PURE__*/\n                _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee2() {\n                  var actionName, req;\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          actionName = isHierarchyPrev ? \"setSelected\".concat(nameCapitalized) : \"setSelectedExtraFil\".concat(nameCapitalized);\n                          _context2.next = 3;\n                          return _this.setSelectionHandler(val, actionName, currFilterName);\n\n                        case 3:\n                          //handles setSelected action calls\n                          req = {};\n\n                          _.map(hierarchy, function (item, index) {\n                            if (index <= filterIndex) {\n                              var _nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n                              // if (_.isEmpty(this.props[`selected${nameCapitalized}`])) return; //uncomment if u want empty filters removed\n\n\n                              var filterName = item.type === 'storeCluster' ? 'store_cluster' : item.type === 'exclusionList' ? 'exclusion_list' : item.type === 'styleColor' ? 'style_color' : item.type;\n                              req[filterName] = _this.props[\"selected\".concat(_nameCapitalized)]; //this goes as filters req obj in api calls\n                            }\n                          });\n\n                          _this.setState({\n                            filters: _objectSpread({}, req)\n                          });\n\n                        case 6:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                })));\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4, _x5, _x6, _x7, _x8, _x9) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.setDrop = function (val) {\n      var req = {};\n      var selItems = val.map(function (item) {\n        return item.label;\n      });\n      req['drop'] = selItems;\n\n      _this.setState({\n        filters: _objectSpread({}, req),\n        drops: val\n      }, function () {\n        _this.props.setSelectedDrops(val.map(function (v) {\n          return v.value;\n        }));\n      });\n    };\n\n    _this.actionCallHandler = function (func, isHierarchyNext, nextFilterName, req) {\n      console.log('filterName console actionCallHandler', nextFilterName); // let typeName = isHierarchyNext\n      //   ? nextFilterName.toUpperCase()\n      //   : labels[nextFilterName].toUpperCase();\n      // if (nextFilterName === 'store') typeName = 'STORE_CODE';\n\n      var typeName = filterType[nextFilterName];\n      var reqObj = {\n        filters: req,\n        allowInactiveProducts: _this.props.allowInactiveProducts || false\n      };\n      if (isHierarchyNext) reqObj.hierarchyType = typeName;\n      if (!isHierarchyNext) reqObj.filterType = typeName;\n\n      if (nextFilterName === 'customStyleGroup') {\n        var _req = {\n          filters: reqObj.filters,\n          disable_empty_flag: _this.props.disable_empty_flag && !_this.props.isEdit ? _this.props.disable_empty_flag : false\n        };\n        reqObj = _req;\n        func = \"fetchStyleGroups\";\n      }\n\n      if (nextFilterName === 'customStoreGroup') {\n        reqObj = {};\n        func = \"getCustomStores\";\n      }\n\n      _this.props[func](reqObj);\n    };\n\n    _this.filterOnFocusHandler = function (filterIndex, filterName, isHierarchy) {\n      var options = _this.props[filterName];\n      if (filterName && options && !options.callApi && !_.isEmpty(_this.props[filterName]) || !_this.validateFilters(filterIndex)) //if filter options already exists or if all of the mandatory filters that comes before this filter is not selected , return\n        return;\n\n      if (filterName === 'channel') {\n        _this.props.getExtraFilterChannel();\n\n        return;\n      }\n\n      var func = isHierarchy ? \"getHierarchyOptions\" : \"  \";\n      var req = {};\n\n      _.map(_this.state.hierarchy, function (item, index) {\n        if (index < filterIndex) {\n          var nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n\n          var selected = _this.props[\"selected\".concat(nameCapitalized)]; // if (_.isEmpty(selected)) return; //uncomment if u want empty filters removed\n\n\n          var _filterName = item.type === 'storeCluster' ? 'store_cluster' : item.type === 'exclusionList' ? 'exclusion_list' : item.type === 'styleColor' ? 'style_color' : item.type;\n\n          req[_filterName] = selected; //this goes as filters req obj in api calls\n\n          if (item.type === 'channel' && selected[0] === 'Web') req['ecom_flag'] = [1];\n          if (item.type === 'channel' && selected[0] === 'Outlet') req['retail_flag'] = [1];\n        }\n      });\n\n      if (filterName && _this.props[func]) {\n        //&& Object.keys(req).length\n        _this.actionCallHandler(func, isHierarchy, filterName, req); //calles next filters action, to get it's options\n\n      }\n    };\n\n    _this.setCustomStyleGroup = function (val) {\n      // let val = [item];\n      var selItems = val.map(function (item) {\n        return item.label;\n      }); // req['stores'] = selItems;\n\n      var newFilters = _objectSpread({}, _this.state.filters, {\n        customStyleGroup: selItems\n      });\n\n      _this.setState({\n        filters: newFilters,\n        customStyleGroup: val\n      }, function () {\n        // this.props.setSelectedCustomGroup(val.map((v) => v.id));\n        _this.props.setSelectedCustomGroup(val.map(function (v) {\n          return v.value;\n        }), 'name');\n\n        _this.props.setSelectedCustomGroup(val.map(function (v) {\n          return v.id;\n        }), 'id');\n      });\n    };\n\n    _this.setCustomStores = function (val) {\n      var selItems = val.map(function (item) {\n        return item.label;\n      });\n\n      var newFilters = _objectSpread({}, _this.state.filters, {\n        customStoreGroup: selItems\n      });\n\n      _this.setState({\n        filters: newFilters,\n        customStoreGroup: val\n      }, function () {\n        _this.props.setSelectedCustomStoreGroup(val.map(function (v) {\n          return v.value;\n        }));\n      });\n    };\n\n    _this.reset = function () {\n      _this.props.onReset && _this.props.onReset();\n\n      _this.setState({\n        startDate: null,\n        endDate: null,\n        country: null,\n        channel: null,\n        storeCluster: null,\n        customStoreGroup: null,\n        store: null,\n        hierarchy1: null,\n        hierarchy2: null,\n        hierarchy3: null,\n        hierarchy4: null,\n        hierarchy5: null,\n        season: null,\n        matrix: null,\n        exclusionList: null,\n        clearance: null,\n        customStyleGroup: null,\n        styleColor: null,\n        hierarchy: _this.props.filtersOptions,\n        filters: {}\n      }, function () {\n        if (_this.props.from !== 'draft/status') _this.props.resetFilters(); ////////// handling reset issues rising bcs of tabs, only reset this component state, not reducer\n      });\n    };\n\n    _this.onDatesChange = function (_ref4) {\n      var startDate = _ref4.startDate,\n          endDate = _ref4.endDate;\n\n      _this.setState({\n        startDate: startDate,\n        endDate: endDate\n      }, function () {\n        var weeks = [];\n\n        if (endDate) {\n          for (var i = startDate.clone(); i <= endDate; i = i.add(7, 'd')) {\n            weeks.push(i.week());\n          }\n        }\n\n        _this.props.setDateRange({\n          startDate: startDate && startDate.format('YYYY-MM-DD'),\n          endDate: endDate && endDate.format('YYYY-MM-DD'),\n          weeks: weeks\n        });\n      });\n    };\n\n    _this.validateFilters = function (filterIndex, dateRange) {\n      var hierarchy = _this.state.hierarchy;\n\n      for (var i = 0; i < filterIndex; i++) {\n        var type = hierarchy[i] && hierarchy[i].type;\n        var nameCapitalized = type && type.charAt(0).toUpperCase() + type.slice(1); //capitalizing the name to match action/reducer name\n\n        if (hierarchy[i] && hierarchy[i].isMandatory && _.isEmpty(_this.props[\"selected\".concat(nameCapitalized)])) {\n          return false;\n        }\n      }\n\n      if (dateRange && (_.isEmpty(_this.state.startDate) || _.isEmpty(_this.state.endDate))) return false;\n      return true;\n    };\n\n    _this.onFilterHandler = function () {\n      if (!_this.validateFilters(_this.state.hierarchy.length, _this.props.dateRange)) {\n        toast.error(\"Please select mandatory filters\", {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        return;\n      }\n\n      _this.props.onFilter({\n        filters: _this.state.filters,\n        startDate: _this.state.startDate,\n        endDate: _this.state.endDate,\n        customStyleGroup: _this.state.customStyleGroup\n      });\n    };\n\n    _this.state = {\n      filters: {},\n      startDate: null,\n      endDate: null,\n      hierarchy: [],\n      hierarchy1: props.retainFilters && props.selectedHierarchy1 ? props.selectedHierarchy1.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy2: props.retainFilters && props.selectedHierarchy2 ? props.selectedHierarchy2.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy3: props.retainFilters && props.selectedHierarchy3 ? props.selectedHierarchy3.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy4: props.retainFilters && props.selectedHierarchy4 ? props.selectedHierarchy4.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy5: props.retainFilters && props.selectedHierarchy5 ? props.selectedHierarchy5.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      // hierarchy6:\n      //   props.retainFilters && props.selectedHierarchy6\n      //     ? props.selectedHierarchy6.map((e) => {\n      //         return { value: e, label: e };\n      //       })\n      //     : null,\n      // hierarchy7:\n      //   props.retainFilters && props.selectedHierarchy7\n      //     ? props.selectedHierarchy7.map((e) => {\n      //         return { value: e, label: e };\n      //       })\n      //     : null,\n      // hierarchy8:\n      //   props.retainFilters && props.selectedHierarchy8 && props.location.state\n      //     ? props.location.state.styles.map((e) => {\n      //         return { value: e, label: e };\n      //       })\n      //     : props.retainFilters && props.selectedHierarchy8 && this.props.styleGroupEdit\n      //     ? props.selectedHierarchy8.map((e) => {\n      //         return { value: e, label: e };\n      //       })\n      //     : null,\n      customStyleGroup: props.retainFilters && props.selectedCustomStyleGroup ? props.selectedCustomStyleGroup.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      stores: props.retainFilters && props.selectedStores ? props.selectedStores.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy9: props.retainFilters && props.selectedHierarchy10 ? props.selectedHierarchy10.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy10: props.retainFilters && props.selectedHierarchy9 ? props.selectedHierarchy9.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy11: props.retainFilters && props.selectedHierarchy11 && props.location.state ? props.location.state.styles.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy12: props.retainFilters && props.selectedHierarchy12 ? props.selectedHierarchy12.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy13: props.retainFilters && props.selectedHierarchy13 ? props.selectedHierarchy13.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      customStoreGroup: props.retainFilters && props.selectedCustomStoreGroup ? props.selectedCustomStoreGroup.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null\n    }; // +  !props.retainFilters && props.resetFilters();\n\n    !props.isEdit && props.getHierarchyOptions({\n      filters: {},\n      hierarchyType: 'HIERARCHY1',\n      allowInactiveProducts: _this.props.allowInactiveProducts || false\n    });\n\n    if (props.retainFilters && props.location.state) {\n      props.setSelectedHierarchy11(props.location.state.styles, true);\n      props.setSelectedStores(_this.state.stores.map(function (e) {\n        return e.label;\n      }));\n    }\n\n    props.getCustomStores().then(function (res) {\n      if (_this.props.isEdit && _this.props.editPlanDetails[0] && !_.isEmpty(_this.props.editPlanDetails[0] && _this.props.editPlanDetails[0].request_obj)) {\n        var customStoreGroup = _this.props.editPlanDetails[0] && _this.props.editPlanDetails[0].request_obj && _this.props.editPlanDetails[0].request_obj.filters && _this.props.editPlanDetails[0].request_obj.filters.customStoreGroup;\n        var selectedCustomStore = [];\n\n        _.map(res, function (item) {\n          if (customStoreGroup && customStoreGroup.includes(item.value)) {\n            selectedCustomStore.push(item);\n          }\n        });\n\n        _this.setCustomStores(selectedCustomStore);\n      }\n    }); // props.fetchStyleGroups({\n    //   disable_empty_flag: false,\n    //   filters: {},\n    // });\n    // if (props.retainFilters && props.location.state) {\n    // props.setSelectedHierarchy7(props.location.state.styles, 'reporting');\n    // props.setSelectedStores(this.state.stores.map((e) => e.label));\n    // }\n\n    props.setRetainFilters(false);\n    return _this;\n  }\n\n  _createClass(Filters, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.retainFilters && !_.isEmpty(this.props.selectedHierarchy1)) {\n        var val = [{\n          label: this.props.selectedHierarchy1[0],\n          value: this.props.selectedHierarchy1[0]\n        }];\n        this.onHierarchyOneSelection(val);\n        return;\n      }\n\n      this.setState({\n        hierarchy: this.props.filtersOptions\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.filterReset) {\n        this.props.filterResetHandler(false);\n        this.reset(); // reset filters from configFilters\n      } // if (\n      //   this.props.fromNotification &&\n      //   _.isEmpty(this.state.hierarchy1) &&\n      //   !_.isEmpty(this.props.cadenceInput) &&\n      //   !_.isEmpty(this.props.cadenceInput.filters)\n      // ) {\n      //   let filters = this.props.cadenceInput.filters;\n      //   this.props.presetFilters(filters, true); //2nd argument to set a flag to call options api\n      //   this.onHierarchyOneSelection([\n      //     { label: filters.hierarchy1[0], value: filters.hierarchy1[0] },\n      //   ]);\n      //   this.setState({\n      //     // customStoreGroup: _.map(filters.customStoreGroup, (item) => ({ value: item, label: item })),\n      //     store: _.map(filters.store, (item) => ({ value: item, label: item })),\n      //     hierarchy1: _.map(filters.hierarchy1, (item) => ({ value: item, label: item })),\n      //     hierarchy2: _.map(filters.hierarchy2, (item) => ({ value: item, label: item })),\n      //     hierarchy3: _.map(filters.hierarchy3, (item) => ({ value: item, label: item })),\n      //     hierarchy4: _.map(filters.hierarchy4, (item) => ({ value: item, label: item })),\n      //     hierarchy5: _.map(filters.hierarchy5, (item) => ({ value: item, label: item })),\n      //     season: _.map(filters.season, (item) => ({ value: item, label: item })),\n      //     matrix: _.map(filters.matrix, (item) => ({ value: item, label: item })),\n      //     exclusionList: _.map(filters.exclusionList, (item) => ({ value: item, label: item })),\n      //     clearance: _.map(filters.clearance, (item) => ({ value: item, label: item })),\n      //     customStyleGroup: _.map(filters.customStyleGroup, (item) => ({ value: item, label: item })),\n      //     styleColor: _.map(filters.styleColor, (item) => ({ value: item, label: item })),\n      //   });\n      //   if (!_.isEmpty(this.props.customStoreGroup)) {\n      //     let selectedCustomStore = [];\n      //     _.map(this.props.customStoreGroup, (item) => {\n      //       if (filters.customStoreGroup && filters.customStoreGroup.includes(item.value)) {\n      //         selectedCustomStore.push(item);\n      //       }\n      //     });\n      //     this.setState({\n      //       customStoreGroup: selectedCustomStore,\n      //     });\n      //     this.setCustomStores(selectedCustomStore);\n      //   }\n      //   if (!_.isEmpty(this.props.customStyleGroup)) {\n      //     let selectedCustomStyle = [];\n      //     _.map(this.props.customStyleGroup, (item) => {\n      //       if (\n      //         filters.customStyleGroup &&\n      //         typeof filters.customStyleGroup[0] === 'string' &&\n      //         filters.customStyleGroup.includes(item.value)\n      //       ) {\n      //         selectedCustomStyle.push(item);\n      //         return;\n      //       }\n      //       if (filters.customStyleGroup && filters.customStyleGroup.includes(item.id)) {\n      //         selectedCustomStyle.push(item);\n      //       }\n      //     });\n      //     this.setState({\n      //       customStyleGroup: selectedCustomStyle,\n      //     });\n      //     this.setCustomStyleGroup(selectedCustomStyle);\n      //   }\n      // }\n\n\n      if (this.props.isEdit && _.isEmpty(this.state.hierarchy1) && this.props.editPlanDetails[0] && !_.isEmpty(this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj)) {\n        var _this$props$editPlanD = this.props.editPlanDetails[0].request_obj.filters,\n            hierarchy1 = _this$props$editPlanD.hierarchy1,\n            hierarchy2 = _this$props$editPlanD.hierarchy2,\n            hierarchy3 = _this$props$editPlanD.hierarchy3,\n            hierarchy4 = _this$props$editPlanD.hierarchy4,\n            hierarchy5 = _this$props$editPlanD.hierarchy5,\n            tiers = _this$props$editPlanD.tiers,\n            hierarchy9 = _this$props$editPlanD.hierarchy9,\n            hierarchy10 = _this$props$editPlanD.hierarchy10,\n            hierarchy11 = _this$props$editPlanD.hierarchy11,\n            hierarchy12 = _this$props$editPlanD.hierarchy12,\n            hierarchy13 = _this$props$editPlanD.hierarchy13;\n        var customStyleName = this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj && this.props.editPlanDetails[0].request_obj.customStyleName; // this.props.presetFilters([\n        //   country,\n        //   channel,\n        //   storeCluster,\n        //   customStoreGroup,\n        //   store,\n        //   hierarchy1,\n        //   hierarchy2,\n        //   hierarchy3,\n        //   hierarchy4,\n        //   hierarchy5,\n        //   season,\n        //   matrix,\n        //   exclusionList,\n        //   clearance,\n        //   customStyleGroup,\n        //   styleColor,\n        // ]);\n\n        this.props.presetFilters(this.props.editPlanDetails[0].request_obj.filters);\n        this.setState({\n          hierarchy1: _.map(hierarchy1, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy2: _.map(hierarchy2, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy3: _.map(hierarchy3, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy4: _.map(hierarchy4, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy5: _.map(hierarchy5, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          stores: _.map(tiers, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy9: _.map(hierarchy9, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy10: _.map(hierarchy10, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy11: _.map(hierarchy11, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy12: _.map(hierarchy12, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy13: _.map(hierarchy13, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }) // customStoreGroup: _.map(customStoreGroup, (item) => ({ value: item, label: item })),\n          // customStyleGroup: _.map(customStyleGroup, (item) => ({ value: item, label: item })),\n\n        });\n      } // if (\n      //   this.props.from !== 'styleConfig' &&\n      //   this.props.from !== 'styleGroupConfig' &&\n      //   !_.isEmpty(this.props.selectedHierarchy8) &&\n      //   !_.isEqual(prevProps.selectedHierarchy8, this.props.selectedHierarchy8)\n      // ) {\n      //   let req = {\n      //     filters: {\n      //       hierarchy1: this.props.selectedHierarchy1,\n      //       hierarchy2: this.props.selectedHierarchy2,\n      //       hierarchy3: this.props.selectedHierarchy3,\n      //       hierarchy4: this.props.selectedHierarchy4,\n      //       hierarchy5: this.props.selectedHierarchy5,\n      //       // hierarchy6: this.props.selectedHierarchy6,\n      //       // hierarchy7: this.props.selectedHierarchy7,\n      //       // hierarchy8: this.props.selectedHierarchy8,\n      //     },\n      //     disable_empty_flag:\n      //       this.props.disable_empty_flag && !this.props.isEdit\n      //         ? this.props.disable_empty_flag\n      //         : false,\n      //   };\n      //   this.props.fetchStyleGroups(req);\n      // }\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: this.props.isEdit ? 'row d-flex ml-4 mr-4 edit-markdown-filters' : ' d-flex row ml-4 mr-4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622\n        },\n        __self: this\n      }, this.state.hierarchy && this.state.hierarchy.map(function (filter, i) {\n        return labels[filter.type] && React.createElement(\"div\", {\n          className: \"col-md-2 \",\n          key: filter.type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 632\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"mb-1 mt-3\",\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 633\n          },\n          __self: this\n        }, labels[filter.type], filter.isMandatory ? React.createElement(\"span\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 635\n          },\n          __self: this\n        }, \" * \") : null), React.createElement(Select, {\n          name: filter.type,\n          options: _this2.props[filter.type],\n          onFocus: function onFocus(e) {\n            return _this2.filterOnFocusHandler(i, filter.type, filter.isHierarchy);\n          },\n          onChange: function onChange(option) {\n            return _this2.getHierarchyOptions(option, i, filter.type, filter.isHierarchy, _this2.state.hierarchy[i + 1] && _this2.state.hierarchy[i + 1].type, _this2.state.hierarchy[i + 1] && _this2.state.hierarchy[i + 1].isHierarchy);\n          },\n          value: _this2.state[filter.type],\n          isMulti: filter.isMultiple,\n          isDisabled: i === 0 && _this2.props.styleGroupEdit || i === 2 && _this2.props.storeClusterDisable || i === 3 && _this2.props.storeClusterDisable || i === 4 && _this2.props.storeClusterDisable ? true : false // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 637\n          },\n          __self: this\n        }));\n      }), this.props.dateRange && React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"mb-1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703\n        },\n        __self: this\n      }, \"Date range \", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704\n        },\n        __self: this\n      }, \" * \")), React.createElement(DateRangePicker, {\n        startDate: this.state.startDate,\n        startDateId: \"startDate_11\",\n        endDate: this.state.endDate,\n        endDateId: \"endDate_11\",\n        onDatesChange: this.onDatesChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706\n        },\n        __self: this\n      })), !this.props.hidefilterButton && React.createElement(\"div\", {\n        className: !this.props.dateRange && !this.props.hideCustomStores ? 'col-md-2 mt-5 px-0' //'col-md-3 mt-4  ml-auto text-right'\n        : 'col-md-3 mt-5',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        disabled: this.props.isEdit,\n        onClick: this.onFilterHandler,\n        className: !this.props.dateRange && !this.props.hideCustomStores ? 'col-md-5 btn btn-primary btn-filter ml-2' : 'col-md-4 btn btn-primary btn-filter',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731\n        },\n        __self: this\n      }), \"\\xA0 Filter\")), React.createElement(\"button\", {\n        disabled: this.props.isEdit || this.props.styleGroupEdit,\n        className: !this.props.dateRange && !this.props.hideCustomStores ? ' col-md-5 btn btn-primary btn-filter btn-filter-reset ml-3' : 'col-md-4 offset-1 btn btn-primary btn-filter btn-filter-reset',\n        onClick: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-repeat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743\n        },\n        __self: this\n      }), \"\\xA0 Reset\")))));\n    }\n  }]);\n\n  return Filters;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    drops: store.filtersReducer.drops,\n    selectedDrops: store.filtersReducer.selectedDrops,\n    hierarchy1: store.filtersReducer.hierarchy1,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    hierarchy2: store.filtersReducer.hierarchy2,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    hierarchy3: store.filtersReducer.hierarchy3,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    hierarchy4: store.filtersReducer.hierarchy4,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    hierarchy5: store.filtersReducer.hierarchy5,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    hierarchy6: store.filtersReducer.hierarchy6,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    hierarchy7: store.filtersReducer.hierarchy7,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    hierarchy8: store.filtersReducer.hierarchy8,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    stores: store.filtersReducer.stores,\n    customStoreGroup: store.filtersReducer.customStoreGroup,\n    customStyleGroup: store.filtersReducer.customStyleGroup,\n    selectedStores: store.filtersReducer.selectedStores,\n    selectedCustomStyleGroup: store.filtersReducer.selectedCustomStyleGroup,\n    selectedCustomStoreGroup: store.filtersReducer.selectedCustomStoreGroup,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks,\n    retainFilters: store.filtersReducer.retainFilters,\n    editPlanDetails: store.manuallyCreateMdData.editPlanDetails,\n    season: store.filtersReducer.season,\n    selectedSeason: store.filtersReducer.selectedSeason,\n    clearance: store.filtersReducer.clearance,\n    selectedClearance: store.filtersReducer.selectedClearance,\n    matrix: store.filtersReducer.matrix,\n    selectedMatrix: store.filtersReducer.selectedMatrix,\n    exclusionList: store.filtersReducer.exclusionList,\n    selectedExclusionList: store.filtersReducer.selectedExclusionList,\n    styleColor: store.filtersReducer.styleColor,\n    selectedStyleColor: store.filtersReducer.selectedStyleColor,\n    country: store.filtersReducer.country,\n    selectedCountry: store.filtersReducer.selectedCountry,\n    storeCluster: store.filtersReducer.storeCluster,\n    selectedStoreCluster: store.filtersReducer.selectedStoreCluster,\n    store: store.filtersReducer.store,\n    selectedStore: store.filtersReducer.selectedStore,\n    channel: store.filtersReducer.channel,\n    selectedChannel: store.filtersReducer.selectedChannel,\n    cadenceInput: store.manuallyCreateMdData.cadenceInput\n  };\n};\n\nvar mapDispatchToProps = {\n  getHierarchyOptions: FilterActions.getHierarchyOptions,\n  getExtraFiltersOptions: FilterActions.getExtraFiltersOptions,\n  getStores: FilterActions.getStores,\n  getCustomStores: FilterActions.getCustomStores,\n  setSelectedDrops: FilterActions.setSelectedDrops,\n  setSelectedHierarchy1: FilterActions.setSelectedHierarchy1,\n  setSelectedHierarchy2: FilterActions.setSelectedHierarchy2,\n  setSelectedHierarchy3: FilterActions.setSelectedHierarchy3,\n  setSelectedHierarchy4: FilterActions.setSelectedHierarchy4,\n  setSelectedHierarchy5: FilterActions.setSelectedHierarchy5,\n  setSelectedHierarchy6: FilterActions.setSelectedHierarchy6,\n  setSelectedHierarchy7: FilterActions.setSelectedHierarchy7,\n  setSelectedHierarchy8: FilterActions.setSelectedHierarchy8,\n  setSelectedStores: FilterActions.setSelectedStores,\n  setSelectedCustomGroup: FilterActions.setSelectedCustomGroup,\n  setSelectedCustomStoreGroup: FilterActions.setSelectedCustomStoreGroup,\n  setDateRange: FilterActions.setDateRange,\n  resetFilters: FilterActions.resetFilters,\n  setRetainFilters: FilterActions.setRetainFilters,\n  presetFilters: FilterActions.presetFilters,\n  getExtraFilterChannel: FilterActions.getExtraFilterChannel,\n  setSelectedExtraFilSeason: FilterActions.setSelectedExtraFilSeason,\n  setSelectedExtraFilMatrix: FilterActions.setSelectedExtraFilMatrix,\n  setSelectedExtraFilExclusionList: FilterActions.setSelectedExtraFilExclusionList,\n  setSelectedExtraFilClearance: FilterActions.setSelectedExtraFilClearance,\n  setSelectedExtraFilStyleColor: FilterActions.setSelectedExtraFilStyleColor,\n  setSelectedExtraFilCountry: FilterActions.setSelectedExtraFilCountry,\n  setSelectedExtraFilStoreCluster: FilterActions.setSelectedExtraFilStoreCluster,\n  setSelectedExtraFilChannel: FilterActions.setSelectedExtraFilChannel,\n  setSelectedExtraFilStore: FilterActions.setSelectedExtraFilStore,\n  fetchStyleGroups: FilterActions.fetchStyleGroups\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Filters));","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/services/filters/index.js"],"names":["React","Component","withRouter","labels","validations","filterType","Select","connect","DateRangePicker","FilterActions","toast","_","Filters","props","onHierarchyOneSelection","val","hierarchyClone","cloneDeep","filtersOptions","valiadtion","label","findIndex","index","key","type","isEmpty","swap","a","b","temp","remove","map","item","i","itm","setState","hierarchy","setSelectionHandler","actionName","name","setSelectedCustomStoreGroup","v","value","setSelectedCustomGroup","id","e","getHierarchyOptions","filterIndex","currFilterName","isHierarchyPrev","nextFilterName","isHierarchyNext","Array","isArray","state","nameCapitalized","charAt","toUpperCase","slice","resetHierachies","req","filterName","filters","setDrop","selItems","drops","setSelectedDrops","actionCallHandler","func","console","log","typeName","reqObj","allowInactiveProducts","hierarchyType","disable_empty_flag","isEdit","filterOnFocusHandler","isHierarchy","options","callApi","validateFilters","getExtraFilterChannel","selected","setCustomStyleGroup","newFilters","customStyleGroup","setCustomStores","customStoreGroup","reset","onReset","startDate","endDate","country","channel","storeCluster","store","hierarchy1","hierarchy2","hierarchy3","hierarchy4","hierarchy5","season","matrix","exclusionList","clearance","styleColor","from","resetFilters","onDatesChange","weeks","clone","add","push","week","setDateRange","format","dateRange","isMandatory","onFilterHandler","length","error","autoClose","hideProgressBar","onFilter","retainFilters","selectedHierarchy1","selectedHierarchy2","selectedHierarchy3","selectedHierarchy4","selectedHierarchy5","selectedCustomStyleGroup","stores","selectedStores","hierarchy9","selectedHierarchy10","hierarchy10","selectedHierarchy9","hierarchy11","selectedHierarchy11","location","styles","hierarchy12","selectedHierarchy12","hierarchy13","selectedHierarchy13","selectedCustomStoreGroup","setSelectedHierarchy11","setSelectedStores","getCustomStores","then","res","editPlanDetails","request_obj","selectedCustomStore","includes","setRetainFilters","prevProps","prevState","filterReset","filterResetHandler","tiers","customStyleName","presetFilters","filter","whiteSpace","color","option","isMultiple","styleGroupEdit","storeClusterDisable","hidefilterButton","hideCustomStores","mapStateToProps","filtersReducer","selectedDrops","hierarchy6","selectedHierarchy6","hierarchy7","selectedHierarchy7","hierarchy8","selectedHierarchy8","manuallyCreateMdData","selectedSeason","selectedClearance","selectedMatrix","selectedExclusionList","selectedStyleColor","selectedCountry","selectedStoreCluster","selectedStore","selectedChannel","cadenceInput","mapDispatchToProps","getExtraFiltersOptions","getStores","setSelectedHierarchy1","setSelectedHierarchy2","setSelectedHierarchy3","setSelectedHierarchy4","setSelectedHierarchy5","setSelectedHierarchy6","setSelectedHierarchy7","setSelectedHierarchy8","setSelectedExtraFilSeason","setSelectedExtraFilMatrix","setSelectedExtraFilExclusionList","setSelectedExtraFilClearance","setSelectedExtraFilStyleColor","setSelectedExtraFilCountry","setSelectedExtraFilStoreCluster","setSelectedExtraFilChannel","setSelectedExtraFilStore","fetchStyleGroups"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { labels, validations, filterType } from './config';\nimport Select from '../select';\nimport './index.css';\nimport { connect } from 'react-redux';\nimport DateRangePicker from '../RetailCalendarDatePicker';\nimport FilterActions from '../../actions/filtersAction';\nimport { toast } from 'react-toastify';\nimport _ from 'lodash';\n\nclass Filters extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filters: {},\n      startDate: null,\n      endDate: null,\n      hierarchy: [],\n      hierarchy1:\n        props.retainFilters && props.selectedHierarchy1\n          ? props.selectedHierarchy1.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy2:\n        props.retainFilters && props.selectedHierarchy2\n          ? props.selectedHierarchy2.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy3:\n        props.retainFilters && props.selectedHierarchy3\n          ? props.selectedHierarchy3.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy4:\n        props.retainFilters && props.selectedHierarchy4\n          ? props.selectedHierarchy4.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy5:\n        props.retainFilters && props.selectedHierarchy5\n          ? props.selectedHierarchy5.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      // hierarchy6:\n      //   props.retainFilters && props.selectedHierarchy6\n      //     ? props.selectedHierarchy6.map((e) => {\n      //         return { value: e, label: e };\n      //       })\n      //     : null,\n      // hierarchy7:\n      //   props.retainFilters && props.selectedHierarchy7\n      //     ? props.selectedHierarchy7.map((e) => {\n      //         return { value: e, label: e };\n      //       })\n      //     : null,\n      // hierarchy8:\n      //   props.retainFilters && props.selectedHierarchy8 && props.location.state\n      //     ? props.location.state.styles.map((e) => {\n      //         return { value: e, label: e };\n      //       })\n      //     : props.retainFilters && props.selectedHierarchy8 && this.props.styleGroupEdit\n      //     ? props.selectedHierarchy8.map((e) => {\n      //         return { value: e, label: e };\n      //       })\n      //     : null,\n      customStyleGroup:\n        props.retainFilters && props.selectedCustomStyleGroup\n          ? props.selectedCustomStyleGroup.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      stores:\n        props.retainFilters && props.selectedStores\n          ? props.selectedStores.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n\n      hierarchy9:\n        props.retainFilters && props.selectedHierarchy10\n          ? props.selectedHierarchy10.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy10:\n        props.retainFilters && props.selectedHierarchy9\n          ? props.selectedHierarchy9.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy11:\n        props.retainFilters && props.selectedHierarchy11 && props.location.state\n          ? props.location.state.styles.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy12:\n        props.retainFilters && props.selectedHierarchy12\n          ? props.selectedHierarchy12.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy13:\n        props.retainFilters && props.selectedHierarchy13\n          ? props.selectedHierarchy13.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      customStoreGroup:\n        props.retainFilters && props.selectedCustomStoreGroup\n          ? props.selectedCustomStoreGroup.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n    };\n    // +  !props.retainFilters && props.resetFilters();\n    !props.isEdit &&\n      props.getHierarchyOptions({\n        filters: {},\n        hierarchyType: 'HIERARCHY1',\n        allowInactiveProducts: this.props.allowInactiveProducts || false,\n      });\n\n    if (props.retainFilters && props.location.state) {\n      props.setSelectedHierarchy11(props.location.state.styles, true);\n      props.setSelectedStores(this.state.stores.map((e) => e.label));\n    }\n    props.getCustomStores().then((res) => {\n      if (\n        this.props.isEdit &&\n        this.props.editPlanDetails[0] &&\n        !_.isEmpty(this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj)\n      ) {\n        let customStoreGroup =\n          this.props.editPlanDetails[0] &&\n          this.props.editPlanDetails[0].request_obj &&\n          this.props.editPlanDetails[0].request_obj.filters &&\n          this.props.editPlanDetails[0].request_obj.filters.customStoreGroup;\n        let selectedCustomStore = [];\n        _.map(res, (item) => {\n          if (customStoreGroup && customStoreGroup.includes(item.value)) {\n            selectedCustomStore.push(item);\n          }\n        });\n        this.setCustomStores(selectedCustomStore);\n      }\n    });\n\n    // props.fetchStyleGroups({\n    //   disable_empty_flag: false,\n    //   filters: {},\n    // });\n\n    // if (props.retainFilters && props.location.state) {\n    // props.setSelectedHierarchy7(props.location.state.styles, 'reporting');\n    // props.setSelectedStores(this.state.stores.map((e) => e.label));\n    // }\n    props.setRetainFilters(false);\n  }\n  componentDidMount() {\n    if (this.props.retainFilters && !_.isEmpty(this.props.selectedHierarchy1)) {\n      let val = [\n        {\n          label: this.props.selectedHierarchy1[0],\n          value: this.props.selectedHierarchy1[0],\n        },\n      ];\n      this.onHierarchyOneSelection(val);\n      return;\n    }\n    this.setState({ hierarchy: this.props.filtersOptions });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.filterReset) {\n      this.props.filterResetHandler(false);\n      this.reset(); // reset filters from configFilters\n    }\n    // if (\n    //   this.props.fromNotification &&\n    //   _.isEmpty(this.state.hierarchy1) &&\n    //   !_.isEmpty(this.props.cadenceInput) &&\n    //   !_.isEmpty(this.props.cadenceInput.filters)\n    // ) {\n    //   let filters = this.props.cadenceInput.filters;\n\n    //   this.props.presetFilters(filters, true); //2nd argument to set a flag to call options api\n\n    //   this.onHierarchyOneSelection([\n    //     { label: filters.hierarchy1[0], value: filters.hierarchy1[0] },\n    //   ]);\n    //   this.setState({\n    //     // customStoreGroup: _.map(filters.customStoreGroup, (item) => ({ value: item, label: item })),\n    //     store: _.map(filters.store, (item) => ({ value: item, label: item })),\n    //     hierarchy1: _.map(filters.hierarchy1, (item) => ({ value: item, label: item })),\n    //     hierarchy2: _.map(filters.hierarchy2, (item) => ({ value: item, label: item })),\n    //     hierarchy3: _.map(filters.hierarchy3, (item) => ({ value: item, label: item })),\n    //     hierarchy4: _.map(filters.hierarchy4, (item) => ({ value: item, label: item })),\n    //     hierarchy5: _.map(filters.hierarchy5, (item) => ({ value: item, label: item })),\n    //     season: _.map(filters.season, (item) => ({ value: item, label: item })),\n    //     matrix: _.map(filters.matrix, (item) => ({ value: item, label: item })),\n    //     exclusionList: _.map(filters.exclusionList, (item) => ({ value: item, label: item })),\n    //     clearance: _.map(filters.clearance, (item) => ({ value: item, label: item })),\n    //     customStyleGroup: _.map(filters.customStyleGroup, (item) => ({ value: item, label: item })),\n    //     styleColor: _.map(filters.styleColor, (item) => ({ value: item, label: item })),\n    //   });\n    //   if (!_.isEmpty(this.props.customStoreGroup)) {\n    //     let selectedCustomStore = [];\n    //     _.map(this.props.customStoreGroup, (item) => {\n    //       if (filters.customStoreGroup && filters.customStoreGroup.includes(item.value)) {\n    //         selectedCustomStore.push(item);\n    //       }\n    //     });\n    //     this.setState({\n    //       customStoreGroup: selectedCustomStore,\n    //     });\n    //     this.setCustomStores(selectedCustomStore);\n    //   }\n    //   if (!_.isEmpty(this.props.customStyleGroup)) {\n    //     let selectedCustomStyle = [];\n    //     _.map(this.props.customStyleGroup, (item) => {\n    //       if (\n    //         filters.customStyleGroup &&\n    //         typeof filters.customStyleGroup[0] === 'string' &&\n    //         filters.customStyleGroup.includes(item.value)\n    //       ) {\n    //         selectedCustomStyle.push(item);\n    //         return;\n    //       }\n    //       if (filters.customStyleGroup && filters.customStyleGroup.includes(item.id)) {\n    //         selectedCustomStyle.push(item);\n    //       }\n    //     });\n    //     this.setState({\n    //       customStyleGroup: selectedCustomStyle,\n    //     });\n    //     this.setCustomStyleGroup(selectedCustomStyle);\n    //   }\n    // }\n    if (\n      this.props.isEdit &&\n      _.isEmpty(this.state.hierarchy1) &&\n      this.props.editPlanDetails[0] &&\n      !_.isEmpty(this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj)\n    ) {\n      let {\n        hierarchy1,\n        hierarchy2,\n        hierarchy3,\n        hierarchy4,\n        hierarchy5,\n        tiers,\n        hierarchy9,\n        hierarchy10,\n        hierarchy11,\n        hierarchy12,\n        hierarchy13,\n        // customStyleGroup,\n        // customStoreGroup,\n      } = this.props.editPlanDetails[0].request_obj.filters;\n\n      let customStyleName =\n        this.props.editPlanDetails[0] &&\n        this.props.editPlanDetails[0].request_obj &&\n        this.props.editPlanDetails[0].request_obj.customStyleName;\n\n      // this.props.presetFilters([\n      //   country,\n      //   channel,\n      //   storeCluster,\n      //   customStoreGroup,\n      //   store,\n      //   hierarchy1,\n      //   hierarchy2,\n      //   hierarchy3,\n      //   hierarchy4,\n      //   hierarchy5,\n      //   season,\n      //   matrix,\n      //   exclusionList,\n      //   clearance,\n      //   customStyleGroup,\n      //   styleColor,\n      // ]);\n      this.props.presetFilters(this.props.editPlanDetails[0].request_obj.filters);\n      this.setState({\n        hierarchy1: _.map(hierarchy1, (item) => ({ value: item, label: item })),\n        hierarchy2: _.map(hierarchy2, (item) => ({ value: item, label: item })),\n        hierarchy3: _.map(hierarchy3, (item) => ({ value: item, label: item })),\n        hierarchy4: _.map(hierarchy4, (item) => ({ value: item, label: item })),\n        hierarchy5: _.map(hierarchy5, (item) => ({ value: item, label: item })),\n        stores: _.map(tiers, (item) => ({ value: item, label: item })),\n        hierarchy9: _.map(hierarchy9, (item) => ({ value: item, label: item })),\n        hierarchy10: _.map(hierarchy10, (item) => ({ value: item, label: item })),\n        hierarchy11: _.map(hierarchy11, (item) => ({ value: item, label: item })),\n        hierarchy12: _.map(hierarchy12, (item) => ({ value: item, label: item })),\n        hierarchy13: _.map(hierarchy13, (item) => ({ value: item, label: item })),\n        // customStoreGroup: _.map(customStoreGroup, (item) => ({ value: item, label: item })),\n        // customStyleGroup: _.map(customStyleGroup, (item) => ({ value: item, label: item })),\n      });\n    }\n    // if (\n    //   this.props.from !== 'styleConfig' &&\n    //   this.props.from !== 'styleGroupConfig' &&\n    //   !_.isEmpty(this.props.selectedHierarchy8) &&\n    //   !_.isEqual(prevProps.selectedHierarchy8, this.props.selectedHierarchy8)\n    // ) {\n    //   let req = {\n    //     filters: {\n    //       hierarchy1: this.props.selectedHierarchy1,\n    //       hierarchy2: this.props.selectedHierarchy2,\n    //       hierarchy3: this.props.selectedHierarchy3,\n    //       hierarchy4: this.props.selectedHierarchy4,\n    //       hierarchy5: this.props.selectedHierarchy5,\n    //       // hierarchy6: this.props.selectedHierarchy6,\n    //       // hierarchy7: this.props.selectedHierarchy7,\n    //       // hierarchy8: this.props.selectedHierarchy8,\n    //     },\n    //     disable_empty_flag:\n    //       this.props.disable_empty_flag && !this.props.isEdit\n    //         ? this.props.disable_empty_flag\n    //         : false,\n    //   };\n    //   this.props.fetchStyleGroups(req);\n    // }\n  }\n  onHierarchyOneSelection = (val) => {\n    let hierarchyClone = _.cloneDeep(this.props.filtersOptions);\n    let valiadtion = validations[val[0].label];\n    let findIndex = (index, key) =>\n      _.findIndex(hierarchyClone, {\n        type: `${valiadtion[key][index]}`,\n      }); //finding index num for swap case from validations\n    if (valiadtion && !_.isEmpty(valiadtion.swap)) {\n      //swaping filters\n      let a = findIndex(0, 'swap'),\n        b = findIndex(1, 'swap');\n      let temp = hierarchyClone[a];\n\n      hierarchyClone[a] = hierarchyClone[b];\n      hierarchyClone[b] = temp;\n    }\n    if (valiadtion && !_.isEmpty(valiadtion.remove)) {\n      //remove filters case\n      _.map(valiadtion.remove, (item, i) => {\n        _.remove(hierarchyClone, (itm, index) => index === findIndex(i, 'remove'));\n      });\n    }\n    this.setState({ hierarchy: hierarchyClone });\n    return hierarchyClone;\n  };\n\n  setSelectionHandler = async (val, actionName, name) => {\n    if (name === 'customStoreGroup') {\n      await this.props.setSelectedCustomStoreGroup(val.map((v) => v.value));\n      return;\n    }\n    if (name === 'customStyleGroup') {\n      this.props.setSelectedCustomGroup(\n        val.map((v) => v.value),\n        'name'\n      );\n      await this.props.setSelectedCustomGroup(\n        val.map((v) => v.id),\n        'id'\n      );\n      return;\n    }\n    await this.props[actionName](val.map((e) => e.label));\n    return;\n  };\n  getHierarchyOptions = async (\n    val,\n    filterIndex,\n    currFilterName,\n    isHierarchyPrev,\n    nextFilterName,\n    isHierarchyNext\n  ) => {\n    !Array.isArray(val) && (val = [val]);\n    let hierarchy = _.cloneDeep(this.state.hierarchy);\n\n    if (currFilterName === 'hierarchy1') {\n      //Division selected case\n      hierarchy = await this.onHierarchyOneSelection(val); //returns updated hierarchy data;\n    }\n    if (_.findIndex(hierarchy, { type: 'hierarchy1' }) > filterIndex) {\n      this.setState({ hierarchy: this.props.filtersOptions }); //reset filters that are removed or swapped when filters that comes before H1 are set\n    }\n\n    let nameCapitalized =\n      currFilterName && currFilterName.charAt(0).toUpperCase() + currFilterName.slice(1); //capitalizing the name to match action/reducer name\n    let resetHierachies = {};\n    _.map(hierarchy, (item, index) => {\n      if (index > filterIndex) {\n        resetHierachies[item.type] = null; //all fiters value, which comes after selected filter becomes null(reset)\n      }\n    });\n    this.setState({ [currFilterName]: val, ...resetHierachies }, async () => {\n      let actionName = isHierarchyPrev\n        ? `setSelected${nameCapitalized}`\n        : `setSelectedExtraFil${nameCapitalized}`;\n\n      await this.setSelectionHandler(val, actionName, currFilterName); //handles setSelected action calls\n\n      let req = {};\n      _.map(hierarchy, (item, index) => {\n        if (index <= filterIndex) {\n          let nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n          // if (_.isEmpty(this.props[`selected${nameCapitalized}`])) return; //uncomment if u want empty filters removed\n          let filterName =\n            item.type === 'storeCluster'\n              ? 'store_cluster'\n              : item.type === 'exclusionList'\n              ? 'exclusion_list'\n              : item.type === 'styleColor'\n              ? 'style_color'\n              : item.type;\n          req[filterName] = this.props[`selected${nameCapitalized}`]; //this goes as filters req obj in api calls\n        }\n      });\n      this.setState({ filters: { ...req } });\n    });\n  };\n  setDrop = (val) => {\n    let req = {};\n    let selItems = val.map((item) => item.label);\n    req['drop'] = selItems;\n    this.setState({ filters: { ...req }, drops: val }, () => {\n      this.props.setSelectedDrops(val.map((v) => v.value));\n    });\n  };\n  actionCallHandler = (func, isHierarchyNext, nextFilterName, req) => {\n    console.log('filterName console actionCallHandler', nextFilterName);\n    // let typeName = isHierarchyNext\n    //   ? nextFilterName.toUpperCase()\n    //   : labels[nextFilterName].toUpperCase();\n    // if (nextFilterName === 'store') typeName = 'STORE_CODE';\n    let typeName = filterType[nextFilterName];\n    let reqObj = {\n      filters: req,\n      allowInactiveProducts: this.props.allowInactiveProducts || false,\n    };\n    if (isHierarchyNext) reqObj.hierarchyType = typeName;\n    if (!isHierarchyNext) reqObj.filterType = typeName;\n    if (nextFilterName === 'customStyleGroup') {\n      let req = {\n        filters: reqObj.filters,\n        disable_empty_flag:\n          this.props.disable_empty_flag && !this.props.isEdit\n            ? this.props.disable_empty_flag\n            : false,\n      };\n      reqObj = req;\n      func = `fetchStyleGroups`;\n    }\n    if (nextFilterName === 'customStoreGroup') {\n      reqObj = {};\n      func = `getCustomStores`;\n    }\n\n    this.props[func](reqObj);\n  };\n  filterOnFocusHandler = (filterIndex, filterName, isHierarchy) => {\n    let options = this.props[filterName];\n    if (\n      (filterName && options && !options.callApi && !_.isEmpty(this.props[filterName])) ||\n      !this.validateFilters(filterIndex)\n    )\n      //if filter options already exists or if all of the mandatory filters that comes before this filter is not selected , return\n      return;\n\n    if (filterName === 'channel') {\n      this.props.getExtraFilterChannel();\n      return;\n    }\n    let func = isHierarchy ? `getHierarchyOptions` : `  `;\n    let req = {};\n    _.map(this.state.hierarchy, (item, index) => {\n      if (index < filterIndex) {\n        let nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n        let selected = this.props[`selected${nameCapitalized}`];\n        // if (_.isEmpty(selected)) return; //uncomment if u want empty filters removed\n        let filterName =\n          item.type === 'storeCluster'\n            ? 'store_cluster'\n            : item.type === 'exclusionList'\n            ? 'exclusion_list'\n            : item.type === 'styleColor'\n            ? 'style_color'\n            : item.type;\n        req[filterName] = selected; //this goes as filters req obj in api calls\n        if (item.type === 'channel' && selected[0] === 'Web') req['ecom_flag'] = [1];\n        if (item.type === 'channel' && selected[0] === 'Outlet') req['retail_flag'] = [1];\n      }\n    });\n    if (filterName && this.props[func]) {\n      //&& Object.keys(req).length\n      this.actionCallHandler(func, isHierarchy, filterName, req); //calles next filters action, to get it's options\n    }\n  };\n  setCustomStyleGroup = (val) => {\n    // let val = [item];\n    let selItems = val.map((item) => item.label);\n    // req['stores'] = selItems;\n    let newFilters = { ...this.state.filters, customStyleGroup: selItems };\n    this.setState({ filters: newFilters, customStyleGroup: val }, () => {\n      // this.props.setSelectedCustomGroup(val.map((v) => v.id));\n      this.props.setSelectedCustomGroup(\n        val.map((v) => v.value),\n        'name'\n      );\n      this.props.setSelectedCustomGroup(\n        val.map((v) => v.id),\n        'id'\n      );\n    });\n  };\n  setCustomStores = (val) => {\n    let selItems = val.map((item) => item.label);\n    let newFilters = { ...this.state.filters, customStoreGroup: selItems };\n    this.setState({ filters: newFilters, customStoreGroup: val }, () => {\n      this.props.setSelectedCustomStoreGroup(val.map((v) => v.value));\n    });\n  };\n  reset = () => {\n    this.props.onReset && this.props.onReset();\n    this.setState(\n      {\n        startDate: null,\n        endDate: null,\n        country: null,\n        channel: null,\n        storeCluster: null,\n        customStoreGroup: null,\n        store: null,\n        hierarchy1: null,\n        hierarchy2: null,\n        hierarchy3: null,\n        hierarchy4: null,\n        hierarchy5: null,\n        season: null,\n        matrix: null,\n        exclusionList: null,\n        clearance: null,\n        customStyleGroup: null,\n        styleColor: null,\n        hierarchy: this.props.filtersOptions,\n        filters: {},\n      },\n      () => {\n        if (this.props.from !== 'draft/status') this.props.resetFilters(); ////////// handling reset issues rising bcs of tabs, only reset this component state, not reducer\n      }\n    );\n  };\n  onDatesChange = ({ startDate, endDate }) => {\n    this.setState(\n      {\n        startDate,\n        endDate,\n      },\n      () => {\n        let weeks = [];\n        if (endDate) {\n          for (let i = startDate.clone(); i <= endDate; i = i.add(7, 'd')) {\n            weeks.push(i.week());\n          }\n        }\n\n        this.props.setDateRange({\n          startDate: startDate && startDate.format('YYYY-MM-DD'),\n          endDate: endDate && endDate.format('YYYY-MM-DD'),\n          weeks,\n        });\n      }\n    );\n  };\n\n  validateFilters = (filterIndex, dateRange) => {\n    let { hierarchy } = this.state;\n    for (let i = 0; i < filterIndex; i++) {\n      let type = hierarchy[i] && hierarchy[i].type;\n\n      let nameCapitalized = type && type.charAt(0).toUpperCase() + type.slice(1); //capitalizing the name to match action/reducer name\n\n      if (\n        hierarchy[i] &&\n        hierarchy[i].isMandatory &&\n        _.isEmpty(this.props[`selected${nameCapitalized}`])\n      ) {\n        return false;\n      }\n    }\n    if (dateRange && (_.isEmpty(this.state.startDate) || _.isEmpty(this.state.endDate)))\n      return false;\n\n    return true;\n  };\n  onFilterHandler = () => {\n    if (!this.validateFilters(this.state.hierarchy.length, this.props.dateRange)) {\n      toast.error(`Please select mandatory filters`, {\n        autoClose: 15000,\n        hideProgressBar: true,\n      });\n      return;\n    }\n    this.props.onFilter({\n      filters: this.state.filters,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      customStyleGroup: this.state.customStyleGroup,\n    });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div\n          className={\n            this.props.isEdit\n              ? 'row d-flex ml-4 mr-4 edit-markdown-filters'\n              : ' d-flex row ml-4 mr-4'\n          }>\n          {this.state.hierarchy &&\n            this.state.hierarchy.map(\n              (filter, i) =>\n                labels[filter.type] && (\n                  <div className=\"col-md-2 \" key={filter.type}>\n                    <label className=\"mb-1 mt-3\" style={{ whiteSpace: 'nowrap' }}>\n                      {labels[filter.type]}\n                      {filter.isMandatory ? <span style={{ color: 'red' }}> * </span> : null}\n                    </label>\n                    <Select\n                      name={filter.type}\n                      options={this.props[filter.type]}\n                      onFocus={(e) => this.filterOnFocusHandler(i, filter.type, filter.isHierarchy)}\n                      onChange={(option) =>\n                        this.getHierarchyOptions(\n                          option,\n                          i,\n                          filter.type,\n                          filter.isHierarchy,\n                          this.state.hierarchy[i + 1] && this.state.hierarchy[i + 1].type,\n                          this.state.hierarchy[i + 1] && this.state.hierarchy[i + 1].isHierarchy\n                        )\n                      }\n                      value={this.state[filter.type]}\n                      isMulti={filter.isMultiple}\n                      isDisabled={\n                        (i === 0 && this.props.styleGroupEdit) ||\n                        (i === 2 && this.props.storeClusterDisable) ||\n                        (i === 3 && this.props.storeClusterDisable) ||\n                        (i === 4 && this.props.storeClusterDisable)\n                          ? true\n                          : false\n                      }\n                      // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n                    />\n                  </div>\n                )\n            )}\n\n          {/* {this.props.customStyleGroups &&\n            labels.customStyleGroup &&\n            !this.props.hideCustomStyleGroup && (\n              <div className=\"col-md-2 \">\n                <label className=\"mb-1 mt-3\">\n                  Custom Style Group\n                  {this.props.customStyleGrpMandatory ? (\n                    <span style={{ color: 'red' }}> * </span>\n                  ) : null}\n                </label>\n                <Select\n                  options={this.props.customStyleGroup}\n                  onChange={(option) => this.setCustomStyleGroup(option)}\n                  value={this.state.customStyleGroup}\n                  isMulti\n                  // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n                />\n              </div>\n            )}\n          {this.props.customStoreGroup && labels.customStoreGroup && !this.props.hideCustomStores && (\n            <div className=\"col-md-2 \">\n              <label className=\"mb-1 mt-3\">\n                {labels.customStoreGroup}\n                \n              </label>\n              <Select\n                options={this.props.customStoreGroup}\n                onChange={(option) => this.setCustomStores(option)}\n                value={this.state.customStoreGroup}\n                isMulti\n                // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n              />\n            </div>\n          )} */}\n          {this.props.dateRange && (\n            <div className=\"col-md-3\">\n              <label className=\"mb-1 mt-3\">\n                Date range <span style={{ color: 'red' }}> * </span>\n              </label>\n              <DateRangePicker\n                startDate={this.state.startDate}\n                startDateId=\"startDate_11\"\n                endDate={this.state.endDate}\n                endDateId=\"endDate_11\"\n                onDatesChange={this.onDatesChange}\n              />\n            </div>\n          )}\n          {!this.props.hidefilterButton && (\n            <div\n              className={\n                !this.props.dateRange && !this.props.hideCustomStores\n                  ? 'col-md-2 mt-5 px-0' //'col-md-3 mt-4  ml-auto text-right'\n                  : 'col-md-3 mt-5'\n              }>\n              <button\n                disabled={this.props.isEdit}\n                onClick={this.onFilterHandler}\n                className={\n                  !this.props.dateRange && !this.props.hideCustomStores\n                    ? 'col-md-5 btn btn-primary btn-filter ml-2'\n                    : 'col-md-4 btn btn-primary btn-filter'\n                }>\n                <span>\n                  <i className=\"fa fa-filter\"></i>&nbsp; Filter\n                </span>\n              </button>\n              <button\n                disabled={this.props.isEdit || this.props.styleGroupEdit}\n                className={\n                  !this.props.dateRange && !this.props.hideCustomStores\n                    ? ' col-md-5 btn btn-primary btn-filter btn-filter-reset ml-3'\n                    : 'col-md-4 offset-1 btn btn-primary btn-filter btn-filter-reset'\n                }\n                onClick={this.reset}>\n                <span>\n                  <i className=\"fa fa-repeat\"></i>&nbsp; Reset\n                </span>\n              </button>\n            </div>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    drops: store.filtersReducer.drops,\n    selectedDrops: store.filtersReducer.selectedDrops,\n    hierarchy1: store.filtersReducer.hierarchy1,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    hierarchy2: store.filtersReducer.hierarchy2,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    hierarchy3: store.filtersReducer.hierarchy3,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    hierarchy4: store.filtersReducer.hierarchy4,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    hierarchy5: store.filtersReducer.hierarchy5,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    hierarchy6: store.filtersReducer.hierarchy6,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    hierarchy7: store.filtersReducer.hierarchy7,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    hierarchy8: store.filtersReducer.hierarchy8,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    stores: store.filtersReducer.stores,\n    customStoreGroup: store.filtersReducer.customStoreGroup,\n    customStyleGroup: store.filtersReducer.customStyleGroup,\n    selectedStores: store.filtersReducer.selectedStores,\n    selectedCustomStyleGroup: store.filtersReducer.selectedCustomStyleGroup,\n    selectedCustomStoreGroup: store.filtersReducer.selectedCustomStoreGroup,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks,\n    retainFilters: store.filtersReducer.retainFilters,\n    editPlanDetails: store.manuallyCreateMdData.editPlanDetails,\n\n    season: store.filtersReducer.season,\n    selectedSeason: store.filtersReducer.selectedSeason,\n    clearance: store.filtersReducer.clearance,\n    selectedClearance: store.filtersReducer.selectedClearance,\n    matrix: store.filtersReducer.matrix,\n    selectedMatrix: store.filtersReducer.selectedMatrix,\n    exclusionList: store.filtersReducer.exclusionList,\n    selectedExclusionList: store.filtersReducer.selectedExclusionList,\n    styleColor: store.filtersReducer.styleColor,\n    selectedStyleColor: store.filtersReducer.selectedStyleColor,\n    country: store.filtersReducer.country,\n    selectedCountry: store.filtersReducer.selectedCountry,\n    storeCluster: store.filtersReducer.storeCluster,\n    selectedStoreCluster: store.filtersReducer.selectedStoreCluster,\n    store: store.filtersReducer.store,\n    selectedStore: store.filtersReducer.selectedStore,\n    channel: store.filtersReducer.channel,\n    selectedChannel: store.filtersReducer.selectedChannel,\n    cadenceInput: store.manuallyCreateMdData.cadenceInput,\n  };\n};\nconst mapDispatchToProps = {\n  getHierarchyOptions: FilterActions.getHierarchyOptions,\n  getExtraFiltersOptions: FilterActions.getExtraFiltersOptions,\n  getStores: FilterActions.getStores,\n  getCustomStores: FilterActions.getCustomStores,\n  setSelectedDrops: FilterActions.setSelectedDrops,\n  setSelectedHierarchy1: FilterActions.setSelectedHierarchy1,\n  setSelectedHierarchy2: FilterActions.setSelectedHierarchy2,\n  setSelectedHierarchy3: FilterActions.setSelectedHierarchy3,\n  setSelectedHierarchy4: FilterActions.setSelectedHierarchy4,\n  setSelectedHierarchy5: FilterActions.setSelectedHierarchy5,\n  setSelectedHierarchy6: FilterActions.setSelectedHierarchy6,\n  setSelectedHierarchy7: FilterActions.setSelectedHierarchy7,\n  setSelectedHierarchy8: FilterActions.setSelectedHierarchy8,\n  setSelectedStores: FilterActions.setSelectedStores,\n  setSelectedCustomGroup: FilterActions.setSelectedCustomGroup,\n  setSelectedCustomStoreGroup: FilterActions.setSelectedCustomStoreGroup,\n  setDateRange: FilterActions.setDateRange,\n  resetFilters: FilterActions.resetFilters,\n  setRetainFilters: FilterActions.setRetainFilters,\n  presetFilters: FilterActions.presetFilters,\n  getExtraFilterChannel: FilterActions.getExtraFilterChannel,\n  setSelectedExtraFilSeason: FilterActions.setSelectedExtraFilSeason,\n  setSelectedExtraFilMatrix: FilterActions.setSelectedExtraFilMatrix,\n  setSelectedExtraFilExclusionList: FilterActions.setSelectedExtraFilExclusionList,\n  setSelectedExtraFilClearance: FilterActions.setSelectedExtraFilClearance,\n  setSelectedExtraFilStyleColor: FilterActions.setSelectedExtraFilStyleColor,\n  setSelectedExtraFilCountry: FilterActions.setSelectedExtraFilCountry,\n  setSelectedExtraFilStoreCluster: FilterActions.setSelectedExtraFilStoreCluster,\n  setSelectedExtraFilChannel: FilterActions.setSelectedExtraFilChannel,\n  setSelectedExtraFilStore: FilterActions.setSelectedExtraFilStore,\n  fetchStyleGroups: FilterActions.fetchStyleGroups,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Filters));\n"]},"metadata":{},"sourceType":"module"}