{"ast":null,"code":"var _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/SKUCockpit/skuColdef.js\";\nimport React from 'react';\nimport { decimalFormatter, toPercentage } from '../../helper/formatter';\nexport default (function () {\n  var header = [{\n    Header: 'Style-Color',\n    columns: [{\n      Header: '',\n      downloadHeader: 'Style-Color',\n      accessor: 'style_color',\n      groupByID: 'style_color',\n      disableGroupBy: true,\n      align: 'left',\n      showFilter: true,\n      disableSort: true\n    }]\n  }, {\n    Header: 'Style-Color Description',\n    columns: [{\n      Header: '',\n      downloadHeader: 'Style-Color Description',\n      accessor: 'description',\n      groupByID: 'style_color',\n      disableGroupBy: true,\n      align: 'left',\n      showFilter: true,\n      disableSort: true\n    }]\n  }, {\n    Header: 'Sell through %',\n    columns: [{\n      Header: 'TY',\n      downloadHeader: 'Sell through TY %',\n      downloadFormatter: toPercentage,\n      accessor: 'sell_through_ty',\n      aggregate: 'sum',\n      disableGroupBy: true,\n      align: 'left',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \" \", toPercentage({\n          value: props.value\n        }), \" \");\n      }\n    }, {\n      Header: 'LY',\n      downloadHeader: 'Sell through LY %',\n      downloadFormatter: toPercentage,\n      accessor: 'sell_through_ly',\n      disableGroupBy: true,\n      align: 'left',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \" \", toPercentage({\n          value: props.value\n        }), \" \");\n      }\n    }, {\n      Header: 'Avg. per week',\n      downloadHeader: 'Sell through Avg.',\n      downloadFormatter: toPercentage,\n      accessor: 'sell_through_avg',\n      disableGroupBy: true,\n      align: 'left',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \" \", toPercentage({\n          value: props.value\n        }), \" \");\n      }\n    }]\n  }, {\n    Header: 'Margin %',\n    columns: [{\n      Header: 'TY',\n      downloadHeader: 'Margin TY %',\n      downloadFormatter: toPercentage,\n      accessor: 'margin_ty',\n      disableGroupBy: true,\n      aggregate: roundedMedian,\n      Aggregated: function Aggregated(_ref) {\n        var value = _ref.value;\n        return \"\".concat(value);\n      },\n      align: 'left',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \" \", toPercentage({\n          value: props.value\n        }), \" \");\n      }\n    }, {\n      Header: 'LY',\n      downloadHeader: 'Margin LY %',\n      downloadFormatter: toPercentage,\n      accessor: 'margin_ly',\n      disableGroupBy: true,\n      align: 'left',\n      Cell: function Cell(props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \" \", toPercentage({\n          value: props.value\n        }), \" \");\n      }\n    }]\n  }, // {\n  //   Header: 'GM %',\n  //   downloadHeader: 'GM %',\n  //   downloadFormatter: toPercentage,\n  //   accessor: 'GM%',\n  //   disableGroupBy: true,\n  //   align: 'left',\n  //   // showFilter: true,\n  //   // disableSort: true,\n  //   Cell: (props) => <div> {toPercentage({ value: props.value })} </div>,\n  // },\n  // {\n  //   Header: 'Total Availabality',\n  //   downloadFormatter: (params) => (params.value ? params.value : '-'),\n  //   accessor: 'total_avail',\n  //   disableGroupBy: true,\n  //   align: 'left',\n  //   // showFilter: true,\n  //   // disableSort: true,\n  //   Cell: (props) => <div> {props.value ? props.value : '-'} </div>,\n  // },\n  {\n    Header: 'Size Integrity',\n    downloadFormatter: decimalFormatter,\n    accessor: 'size_integrity',\n    disableGroupBy: true,\n    align: 'left',\n    // showFilter: true,\n    // disableSort: true,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, decimalFormatter({\n        value: props.value\n      })));\n    }\n  }, {\n    Header: 'No. of doors',\n    downloadFormatter: function downloadFormatter(params) {\n      return params.value ? params.value : '-';\n    },\n    accessor: 'no_of_doors',\n    disableGroupBy: true,\n    align: 'left',\n    // showFilter: true,\n    // disableSort: true,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \" \", props.value ? props.value : '-', \" \");\n    }\n  }, {\n    Header: 'Age of Inv.',\n    downloadFormatter: function downloadFormatter(params) {\n      return params.value ? params.value : '-';\n    },\n    accessor: 'age_of_inv',\n    disableGroupBy: true,\n    align: 'left',\n    // showFilter: true,\n    // disableSort: true,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \" \", props.value ? props.value : '-');\n    }\n  }, // {\n  //   Header: 'No. of doors',\n  //   columns: [\n  //     {\n  //       Header: 'No. of doors',\n  //       downloadHeader: 'No. of doors',\n  //       // downloadFormatter: toPercentage,\n  //       accessor: 'no_of_doors',\n  //       disableGroupBy: true,\n  //       align: 'left',\n  //       // showFilter: true,\n  //       disableSort: true,\n  //       Cell: (props) => <div> {props.value ? props.value : '-'} </div>,\n  //     },\n  //   ],\n  // },\n  // {\n  //   Header: 'Margin ',\n  //   columns: [\n  //     {\n  //       Header: 'Margin ($)',\n  //       accessor: 'margin$',\n  //       disableGroupBy: true,\n  //       Aggregated: ({ value }) => `${value}`,\n  //       align: 'centre',\n  //       Cell: (props) => <div> {toDollar(props)} </div>,\n  //       downloadFormatter: toDollar,\n  //     },\n  //     {\n  //       Header: 'AUM $',\n  //       accessor: 'aum',\n  //       disableGroupBy: true,\n  //       Aggregated: ({ value }) => `${value}`,\n  //       align: 'centre',\n  //       Cell: (props) => <div> {toDollar(props)} </div>,\n  //       downloadFormatter: toDollar,\n  //     },\n  //   ],\n  // },\n  // {\n  //   Header: 'Sales',\n  //   columns: [\n  //     {\n  //       Header: 'Actual sales (units)',\n  //       accessor: 'units_sold',\n  //       aggregate: 'average',\n  //       disableGroupBy: true,\n  //       Aggregated: ({ value }) => `${value}`,\n  //       align: 'centre',\n  //       Cell: (props) => <div> {toUnit(props)} </div>,\n  //       downloadFormatter: toUnit,\n  //     },\n  //     {\n  //       Header: 'Revenue ($)',\n  //       accessor: 'revenue$',\n  //       disableGroupBy: true,\n  //       Aggregated: ({ value }) => `${value}`,\n  //       align: 'centre',\n  //       Cell: (props) => <div> {toDollar(props)} </div>,\n  //       downloadFormatter: toDollar,\n  //     },\n  //     {\n  //       Header: 'AUR $',\n  //       accessor: 'aur',\n  //       disableGroupBy: true,\n  //       Aggregated: ({ value }) => `${value}`,\n  //       align: 'centre',\n  //       Cell: (props) => <div> {toDollar(props)} </div>,\n  //       downloadFormatter: toDollar,\n  //     },\n  //     {\n  //       Header: \"Last week's sales\",\n  //       accessor: 'last_week_sales',\n  //       disableGroupBy: true,\n  //       Aggregated: ({ value }) => `${value}`,\n  //       align: 'centre',\n  //     },\n  //   ],\n  // },\n  // {\n  //   Header: 'Current inventory',\n  //   columns: [\n  //     {\n  //       Header: 'On hand',\n  //       accessor: 'inventory.inventory_on_hand',\n  //       aggregate: 'average',\n  //       disableGroupBy: true,\n  //       align: 'left',\n  //       Cell: (props) => <div> {toUnit(props)} </div>,\n  //       downloadFormatter: toUnit,\n  //     },\n  //     {\n  //       Header: 'In transit',\n  //       accessor: 'inventory.inventory_in_transit',\n  //       aggregate: 'average',\n  //       disableGroupBy: true,\n  //       align: 'left',\n  //       Cell: (props) => <div> {toUnit(props)} </div>,\n  //       downloadFormatter: toUnit,\n  //     },\n  //     {\n  //       Header: 'On order',\n  //       accessor: 'inventory.inventory_on_order',\n  //       aggregate: 'average',\n  //       disableGroupBy: true,\n  //       align: 'left',\n  //       Cell: (props) => <div> {toUnit(props)} </div>,\n  //       downloadFormatter: toUnit,\n  //     },\n  //     {\n  //       Header: 'In DC',\n  //       accessor: 'inventory.inventory_in_dc',\n  //       aggregate: 'average',\n  //       disableGroupBy: true,\n  //       align: 'left',\n  //       Cell: (props) => <div> {toUnit(props)} </div>,\n  //       downloadFormatter: toUnit,\n  //     },\n  //     {\n  //       Header: 'Weeks on hand',\n  //       accessor: 'wos',\n  //       disableGroupBy: true,\n  //       Aggregated: ({ value }) => `${value}`,\n  //       align: 'centre',\n  //       Cell: (props) => <div> {toUnit(props)} </div>,\n  //       downloadFormatter: toUnit,\n  //     },\n  //   ],\n  // },\n  {\n    Header: 'Markdown status',\n    columns: [{\n      Header: '',\n      downloadHeader: 'Markdown status',\n      accessor: 'mdStatus',\n      disableGroupBy: true,\n      align: 'centre',\n      showFilter: true,\n      Cell: function Cell(props) {\n        switch (props.row.original.mdStatus) {\n          case 'High':\n            return React.createElement(\"div\", {\n              className: \"high-status\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 294\n              },\n              __self: this\n            }, \"High\");\n\n          case 'Medium':\n            return React.createElement(\"div\", {\n              className: \"medium-status\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 296\n              },\n              __self: this\n            }, \"Medium\");\n\n          case 'Low':\n            return React.createElement(\"div\", {\n              className: \"low-status\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 298\n              },\n              __self: this\n            }, \"Low\");\n\n          default:\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 300\n              },\n              __self: this\n            });\n        }\n      },\n      disableSort: true\n    }]\n  }];\n  return header;\n});\n\nfunction roundedMedian(leafValues) {\n  var min = leafValues[0] || 0;\n  var max = leafValues[0] || 0;\n  leafValues.forEach(function (value) {\n    min = Math.min(min, value);\n    max = Math.max(max, value);\n  });\n  return Math.round((min + max) / 2);\n}","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/SKUCockpit/skuColdef.js"],"names":["React","decimalFormatter","toPercentage","header","Header","columns","downloadHeader","accessor","groupByID","disableGroupBy","align","showFilter","disableSort","downloadFormatter","aggregate","Cell","props","value","roundedMedian","Aggregated","params","row","original","mdStatus","leafValues","min","max","forEach","Math","round"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { decimalFormatter, toPercentage } from '../../helper/formatter';\n\nexport default () => {\n  const header = [\n    {\n      Header: 'Style-Color',\n      columns: [\n        {\n          Header: '',\n          downloadHeader: 'Style-Color',\n          accessor: 'style_color',\n          groupByID: 'style_color',\n          disableGroupBy: true,\n          align: 'left',\n          showFilter: true,\n          disableSort: true,\n        },\n      ],\n    },\n    {\n      Header: 'Style-Color Description',\n      columns: [\n        {\n          Header: '',\n          downloadHeader: 'Style-Color Description',\n          accessor: 'description',\n          groupByID: 'style_color',\n          disableGroupBy: true,\n          align: 'left',\n          showFilter: true,\n          disableSort: true,\n        },\n      ],\n    },\n    {\n      Header: 'Sell through %',\n      columns: [\n        {\n          Header: 'TY',\n          downloadHeader: 'Sell through TY %',\n          downloadFormatter: toPercentage,\n          accessor: 'sell_through_ty',\n          aggregate: 'sum',\n          disableGroupBy: true,\n          align: 'left',\n          Cell: (props) => <div> {toPercentage({ value: props.value })} </div>,\n        },\n        {\n          Header: 'LY',\n          downloadHeader: 'Sell through LY %',\n          downloadFormatter: toPercentage,\n          accessor: 'sell_through_ly',\n          disableGroupBy: true,\n          align: 'left',\n          Cell: (props) => <div> {toPercentage({ value: props.value })} </div>,\n        },\n\n        {\n          Header: 'Avg. per week',\n          downloadHeader: 'Sell through Avg.',\n          downloadFormatter: toPercentage,\n          accessor: 'sell_through_avg',\n          disableGroupBy: true,\n          align: 'left',\n          Cell: (props) => <div> {toPercentage({ value: props.value })} </div>,\n        },\n      ],\n    },\n    {\n      Header: 'Margin %',\n      columns: [\n        {\n          Header: 'TY',\n          downloadHeader: 'Margin TY %',\n          downloadFormatter: toPercentage,\n          accessor: 'margin_ty',\n          disableGroupBy: true,\n          aggregate: roundedMedian,\n          Aggregated: ({ value }) => `${value}`,\n          align: 'left',\n          Cell: (props) => <div> {toPercentage({ value: props.value })} </div>,\n        },\n        {\n          Header: 'LY',\n          downloadHeader: 'Margin LY %',\n          downloadFormatter: toPercentage,\n          accessor: 'margin_ly',\n          disableGroupBy: true,\n          align: 'left',\n          Cell: (props) => <div> {toPercentage({ value: props.value })} </div>,\n        },\n      ],\n    },\n    // {\n    //   Header: 'GM %',\n    //   downloadHeader: 'GM %',\n    //   downloadFormatter: toPercentage,\n    //   accessor: 'GM%',\n    //   disableGroupBy: true,\n    //   align: 'left',\n    //   // showFilter: true,\n    //   // disableSort: true,\n    //   Cell: (props) => <div> {toPercentage({ value: props.value })} </div>,\n    // },\n    // {\n    //   Header: 'Total Availabality',\n    //   downloadFormatter: (params) => (params.value ? params.value : '-'),\n    //   accessor: 'total_avail',\n    //   disableGroupBy: true,\n    //   align: 'left',\n    //   // showFilter: true,\n    //   // disableSort: true,\n    //   Cell: (props) => <div> {props.value ? props.value : '-'} </div>,\n    // },\n    {\n      Header: 'Size Integrity',\n      downloadFormatter: decimalFormatter,\n      accessor: 'size_integrity',\n      disableGroupBy: true,\n      align: 'left',\n      // showFilter: true,\n      // disableSort: true,\n      Cell: (props) => (\n        <div>\n          <span>{decimalFormatter({ value: props.value })}</span>\n        </div>\n      ),\n    },\n    {\n      Header: 'No. of doors',\n      downloadFormatter: (params) => (params.value ? params.value : '-'),\n      accessor: 'no_of_doors',\n      disableGroupBy: true,\n      align: 'left',\n      // showFilter: true,\n      // disableSort: true,\n      Cell: (props) => <div> {props.value ? props.value : '-'} </div>,\n    },\n    {\n      Header: 'Age of Inv.',\n      downloadFormatter: (params) => (params.value ? params.value : '-'),\n      accessor: 'age_of_inv',\n      disableGroupBy: true,\n      align: 'left',\n      // showFilter: true,\n      // disableSort: true,\n      Cell: (props) => <div> {props.value ? props.value : '-'}</div>,\n    },\n    // {\n    //   Header: 'No. of doors',\n    //   columns: [\n    //     {\n    //       Header: 'No. of doors',\n    //       downloadHeader: 'No. of doors',\n    //       // downloadFormatter: toPercentage,\n    //       accessor: 'no_of_doors',\n    //       disableGroupBy: true,\n    //       align: 'left',\n    //       // showFilter: true,\n    //       disableSort: true,\n    //       Cell: (props) => <div> {props.value ? props.value : '-'} </div>,\n    //     },\n    //   ],\n    // },\n    // {\n    //   Header: 'Margin ',\n    //   columns: [\n    //     {\n    //       Header: 'Margin ($)',\n    //       accessor: 'margin$',\n    //       disableGroupBy: true,\n    //       Aggregated: ({ value }) => `${value}`,\n    //       align: 'centre',\n    //       Cell: (props) => <div> {toDollar(props)} </div>,\n    //       downloadFormatter: toDollar,\n    //     },\n\n    //     {\n    //       Header: 'AUM $',\n    //       accessor: 'aum',\n    //       disableGroupBy: true,\n    //       Aggregated: ({ value }) => `${value}`,\n    //       align: 'centre',\n    //       Cell: (props) => <div> {toDollar(props)} </div>,\n    //       downloadFormatter: toDollar,\n    //     },\n    //   ],\n    // },\n    // {\n    //   Header: 'Sales',\n    //   columns: [\n    //     {\n    //       Header: 'Actual sales (units)',\n    //       accessor: 'units_sold',\n    //       aggregate: 'average',\n    //       disableGroupBy: true,\n    //       Aggregated: ({ value }) => `${value}`,\n    //       align: 'centre',\n    //       Cell: (props) => <div> {toUnit(props)} </div>,\n    //       downloadFormatter: toUnit,\n    //     },\n    //     {\n    //       Header: 'Revenue ($)',\n    //       accessor: 'revenue$',\n    //       disableGroupBy: true,\n    //       Aggregated: ({ value }) => `${value}`,\n    //       align: 'centre',\n    //       Cell: (props) => <div> {toDollar(props)} </div>,\n    //       downloadFormatter: toDollar,\n    //     },\n    //     {\n    //       Header: 'AUR $',\n    //       accessor: 'aur',\n    //       disableGroupBy: true,\n    //       Aggregated: ({ value }) => `${value}`,\n    //       align: 'centre',\n    //       Cell: (props) => <div> {toDollar(props)} </div>,\n    //       downloadFormatter: toDollar,\n    //     },\n    //     {\n    //       Header: \"Last week's sales\",\n    //       accessor: 'last_week_sales',\n    //       disableGroupBy: true,\n    //       Aggregated: ({ value }) => `${value}`,\n    //       align: 'centre',\n    //     },\n    //   ],\n    // },\n\n    // {\n    //   Header: 'Current inventory',\n    //   columns: [\n    //     {\n    //       Header: 'On hand',\n    //       accessor: 'inventory.inventory_on_hand',\n    //       aggregate: 'average',\n    //       disableGroupBy: true,\n    //       align: 'left',\n    //       Cell: (props) => <div> {toUnit(props)} </div>,\n    //       downloadFormatter: toUnit,\n    //     },\n    //     {\n    //       Header: 'In transit',\n    //       accessor: 'inventory.inventory_in_transit',\n    //       aggregate: 'average',\n    //       disableGroupBy: true,\n    //       align: 'left',\n    //       Cell: (props) => <div> {toUnit(props)} </div>,\n    //       downloadFormatter: toUnit,\n    //     },\n    //     {\n    //       Header: 'On order',\n    //       accessor: 'inventory.inventory_on_order',\n    //       aggregate: 'average',\n    //       disableGroupBy: true,\n    //       align: 'left',\n    //       Cell: (props) => <div> {toUnit(props)} </div>,\n    //       downloadFormatter: toUnit,\n    //     },\n    //     {\n    //       Header: 'In DC',\n    //       accessor: 'inventory.inventory_in_dc',\n    //       aggregate: 'average',\n    //       disableGroupBy: true,\n    //       align: 'left',\n    //       Cell: (props) => <div> {toUnit(props)} </div>,\n    //       downloadFormatter: toUnit,\n    //     },\n    //     {\n    //       Header: 'Weeks on hand',\n    //       accessor: 'wos',\n    //       disableGroupBy: true,\n    //       Aggregated: ({ value }) => `${value}`,\n    //       align: 'centre',\n    //       Cell: (props) => <div> {toUnit(props)} </div>,\n    //       downloadFormatter: toUnit,\n    //     },\n    //   ],\n    // },\n    {\n      Header: 'Markdown status',\n      columns: [\n        {\n          Header: '',\n          downloadHeader: 'Markdown status',\n          accessor: 'mdStatus',\n          disableGroupBy: true,\n          align: 'centre',\n          showFilter: true,\n          Cell: (props) => {\n            switch (props.row.original.mdStatus) {\n              case 'High':\n                return <div className=\"high-status\">High</div>;\n              case 'Medium':\n                return <div className=\"medium-status\">Medium</div>;\n              case 'Low':\n                return <div className=\"low-status\">Low</div>;\n              default:\n                return <div></div>;\n            }\n          },\n          disableSort: true,\n        },\n      ],\n    },\n  ];\n  return header;\n};\nfunction roundedMedian(leafValues) {\n  let min = leafValues[0] || 0;\n  let max = leafValues[0] || 0;\n\n  leafValues.forEach((value) => {\n    min = Math.min(min, value);\n    max = Math.max(max, value);\n  });\n\n  return Math.round((min + max) / 2);\n}\n"]},"metadata":{},"sourceType":"module"}