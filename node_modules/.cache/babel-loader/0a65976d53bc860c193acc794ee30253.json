{"ast":null,"code":"import axios from 'axios';\nimport { config } from '../utils/config';\nimport { GET_ERRORS, DATA_LOADING, CLEAR_ERRORS, SET_CURRENT_USER, GET_EDA_CHART_DATA, CLEAR_EDA_CHART_DATA, GET_EDA_CHART_DATA_FILTERS, GET_EDA_DEPART_DATA_FILTERS } from './types';\nexport var setLoading = function setLoading() {\n  return {\n    type: DATA_LOADING\n  };\n}; // Get chartData from the Api\n\nexport var getEdaData = function getEdaData(endPoint, reqObject) {\n  return function (dispatch) {\n    console.log('apiiiiiiiiiiiiiiiiiiii', reqObject);\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: localStorage.getItem('token')\n    });\n    dispatch({\n      type: CLEAR_EDA_CHART_DATA\n    });\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    dispatch(setLoading());\n    axios.post(\"\".concat(config.baseUrl + endPoint), reqObject).then(function (res) {\n      console.log('respose from EDA data', res.data);\n      console.log('chart data fetched 111111111111111111111111111', res);\n\n      if (res.data.msg != undefined && res.data.msg != \"\" || res.data.status === false) {\n        console.log('error ----------------------rrrrrrrrrrrooooooooohhhhhaaann', res.data.error);\n        dispatch({\n          type: CLEAR_EDA_CHART_DATA\n        });\n        dispatch({\n          type: GET_ERRORS,\n          payload: res.data\n        });\n      } else {\n        // console.log('success', res.data)\n        dispatch({\n          type: CLEAR_ERRORS\n        });\n        dispatch({\n          type: GET_EDA_CHART_DATA,\n          payload: res.data\n        });\n      }\n    }).catch(function (err) {\n      // console.log(err)\n      dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n  };\n};\nexport var getEdaFilters = function getEdaFilters(endPoint) {\n  return function (dispatch) {\n    console.log('$$$$$$$$$$$$$$$$$$', endPoint);\n    console.log('token un getcgfrat  filters------', localStorage.getItem('token')); // dispatch(setLoading());\n\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: localStorage.getItem('token')\n    });\n    axios.get(\"\".concat(config.baseUrl, \"overallEdaFilterData\")).then(function (res) {\n      console.log('respose from EDA data filter', res.data);\n\n      if (res.data.status === false) {\n        dispatch({\n          type: CLEAR_EDA_CHART_DATA\n        });\n        dispatch({\n          type: GET_ERRORS,\n          payload: res.data\n        });\n      } else {\n        console.log('EDA filters data fetched', res);\n        dispatch({\n          type: CLEAR_ERRORS\n        });\n        dispatch({\n          type: GET_EDA_CHART_DATA_FILTERS,\n          payload: res.data\n        });\n      }\n    }).catch(function (err) {\n      // console.log('errorrrrrrrrrrrrrrrrrrrr',  err)\n      dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n  };\n};\nexport var getEdaDepartmentFilters = function getEdaDepartmentFilters(endPoint) {\n  return function (dispatch) {\n    console.log('$$$$$$$$$$$$$$$$$$', endPoint); // dispatch(setLoading());\n\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: localStorage.getItem('token')\n    });\n    axios.post(\"\".concat(config.baseUrl, \"allDeptDropDwonData\")).then(function (res) {\n      // dispatch({\n      //     type: CLEAR_FILTERS_DATA,\n      // });\n      console.log('EDA filters data fetched', res);\n      dispatch({\n        type: CLEAR_ERRORS\n      });\n      dispatch({\n        type: GET_EDA_DEPART_DATA_FILTERS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/EdaActions.js"],"names":["axios","config","GET_ERRORS","DATA_LOADING","CLEAR_ERRORS","SET_CURRENT_USER","GET_EDA_CHART_DATA","CLEAR_EDA_CHART_DATA","GET_EDA_CHART_DATA_FILTERS","GET_EDA_DEPART_DATA_FILTERS","setLoading","type","getEdaData","endPoint","reqObject","dispatch","console","log","payload","localStorage","getItem","post","baseUrl","then","res","data","msg","undefined","status","error","catch","err","getEdaFilters","get","getEdaDepartmentFilters"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { config } from '../utils/config';\nimport { GET_ERRORS, DATA_LOADING, CLEAR_ERRORS, SET_CURRENT_USER, GET_EDA_CHART_DATA, CLEAR_EDA_CHART_DATA, GET_EDA_CHART_DATA_FILTERS, GET_EDA_DEPART_DATA_FILTERS } from './types';\n\nexport const setLoading = () => {\n    return {\n      type: DATA_LOADING\n    };\n  };\n\n// Get chartData from the Api\nexport const getEdaData = (endPoint,reqObject) => dispatch => {\n    console.log('apiiiiiiiiiiiiiiiiiiii',reqObject)\n    dispatch({\n        type: SET_CURRENT_USER,\n        payload:  localStorage.getItem('token')\n     })\n    dispatch({\n        type: CLEAR_EDA_CHART_DATA, \n    });\n    dispatch({\n        type: CLEAR_ERRORS,\n    });\n    dispatch(setLoading());\n\n    axios\n        .post(`${config.baseUrl + endPoint}`,reqObject)\n        .then(res => {\n            console.log('respose from EDA data', res.data)\n            console.log('chart data fetched 111111111111111111111111111', res);\n            if(res.data.msg != undefined && res.data.msg != \"\" || res.data.status === false){\n                console.log('error ----------------------rrrrrrrrrrrooooooooohhhhhaaann', res.data.error )\n                dispatch({\n                    type: CLEAR_EDA_CHART_DATA,\n                });\n                dispatch({\n                    type: GET_ERRORS,\n                    payload: res.data\n                });\n            }else{\n                // console.log('success', res.data)\n                dispatch({\n                    type: CLEAR_ERRORS,\n                });\n                dispatch({\n                    type: GET_EDA_CHART_DATA,\n                    payload: res.data\n                });\n                \n            }\n        })\n        .catch((err) => {\n            // console.log(err)\n            dispatch({\n                type: GET_ERRORS,\n                payload: err\n            });\n        }\n        );\n};\n\n\n\nexport const getEdaFilters = endPoint => dispatch => { \n    console.log('$$$$$$$$$$$$$$$$$$',endPoint)\n    console.log('token un getcgfrat  filters------', localStorage.getItem('token'));\n     // dispatch(setLoading());\n \n     dispatch({\n         type: SET_CURRENT_USER,\n         payload:  localStorage.getItem('token')\n      })\n     \n     axios\n         .get(`${config.baseUrl}overallEdaFilterData`)\n         .then(res => {\n            console.log('respose from EDA data filter', res.data)\n            if(res.data.status === false){\n                dispatch({\n                    type: CLEAR_EDA_CHART_DATA,\n                });\n                dispatch({\n                    type: GET_ERRORS,\n                    payload: res.data\n                });\n            }else{\n                console.log('EDA filters data fetched', res);\n             dispatch({\n                 type: CLEAR_ERRORS,\n             });\n             dispatch({\n                 type: GET_EDA_CHART_DATA_FILTERS,\n                 payload: res.data\n             });\n            }\n             \n         })\n         .catch((err) => {\n             // console.log('errorrrrrrrrrrrrrrrrrrrr',  err)\n             dispatch({\n                 type: GET_ERRORS,\n                 payload: err\n             });\n         }\n         );\n };\n\n export const getEdaDepartmentFilters = endPoint => dispatch => { \n    console.log('$$$$$$$$$$$$$$$$$$',endPoint)\n\n     // dispatch(setLoading());\n \n     dispatch({\n         type: SET_CURRENT_USER,\n         payload:  localStorage.getItem('token')\n      })\n     \n     axios\n         .post(`${config.baseUrl}allDeptDropDwonData`)\n         .then(res => {\n             // dispatch({\n             //     type: CLEAR_FILTERS_DATA,\n             // });\n             console.log('EDA filters data fetched', res);\n             dispatch({\n                 type: CLEAR_ERRORS,\n             });\n             dispatch({\n                 type: GET_EDA_DEPART_DATA_FILTERS,\n                 payload: res.data\n             });\n         })\n         .catch((err) => {\n             dispatch({\n                 type: GET_ERRORS,\n                 payload: err\n             });\n         }\n         );\n };\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}