{"ast":null,"code":"import _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/planSavePopup.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport { InputGroup, FormControl } from 'react-bootstrap';\nimport cloneDeep from 'clone-deep'; // import \"./index.css\"\n\nvar PlanSave =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlanSave, _Component);\n\n  function PlanSave(props) {\n    var _this;\n\n    _classCallCheck(this, PlanSave);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlanSave).call(this, props));\n    _this.state = {\n      planName: '',\n      scenarioName: ''\n    };\n    return _this;\n  }\n\n  _createClass(PlanSave, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var tempArr = cloneDeep(this.props.labels);\n      var tempArr1 = [];\n      tempArr.forEach(function (label) {\n        if (label !== 'Optimal' && label !== 'Comparison') {\n          tempArr1.push({\n            label: label,\n            value: ''\n          });\n        }\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, ' ', React.createElement(\"p\", {\n        className: \"font-size-14 mb-0 ml-3\",\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"*\"), \"Markdown Plan Name\")), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        \"aria-label\": \"planName\",\n        \"aria-describedby\": \"basic-addon2\",\n        style: {\n          padding: '18px'\n        },\n        value: this.state.planName,\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            planName: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })))), tempArr1.map(function (obj) {\n        return React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, ' ', React.createElement(\"p\", {\n          className: \"font-size-14 mb-0 ml-3\",\n          style: {\n            fontWeight: 'bold'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, obj.label)), React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(InputGroup, {\n          className: \"mb-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(FormControl, {\n          \"aria-label\": \"scenarioName\",\n          \"aria-describedby\": \"basic-addon2\",\n          style: {\n            padding: '18px'\n          },\n          value: obj.value,\n          type: \"text\",\n          onChange: function onChange(e) {\n            _this2.setState({\n              scenarioName: e.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }))));\n      }), React.createElement(\"div\", {\n        className: \"saveBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary biconbuttonFilter\",\n        style: {\n          width: '15%'\n        },\n        onClick: function onClick() {\n          return _this2.props.onSave(_this2.state.planName);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Save\")));\n    }\n  }]);\n\n  return PlanSave;\n}(Component);\n\nexport default PlanSave;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/planSavePopup.js"],"names":["React","Component","Select","InputGroup","FormControl","cloneDeep","PlanSave","props","state","planName","scenarioName","tempArr","labels","tempArr1","forEach","label","push","value","fontWeight","padding","e","setState","target","map","obj","width","onSave"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Select from 'react-select';\nimport { InputGroup, FormControl } from 'react-bootstrap';\nimport cloneDeep from 'clone-deep';\n// import \"./index.css\"\nclass PlanSave extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      planName: '',\n      scenarioName: '',\n    };\n  }\n  render() {\n    let tempArr = cloneDeep(this.props.labels);\n    let tempArr1 = [];\n    tempArr.forEach((label) => {\n      if (label !== 'Optimal' && label !== 'Comparison') {\n        tempArr1.push({\n          label: label,\n          value: '',\n        });\n      }\n    });\n    return (\n      <div>\n        <div className=\"row mt-3\">\n          <div className=\"col-md-4\">\n            {' '}\n            <p className=\"font-size-14 mb-0 ml-3\" style={{ fontWeight: 'bold' }}>\n              <span className=\"required\">*</span>Markdown Plan Name\n            </p>\n          </div>\n          <div className=\"col-md-6\">\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                aria-label=\"planName\"\n                aria-describedby=\"basic-addon2\"\n                style={{ padding: '18px' }}\n                value={this.state.planName}\n                type=\"text\"\n                onChange={(e) => {\n                  this.setState({ planName: e.target.value });\n                }}\n              />\n            </InputGroup>\n          </div>\n        </div>\n        {tempArr1.map((obj) => {\n          return (\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                {' '}\n                <p className=\"font-size-14 mb-0 ml-3\" style={{ fontWeight: 'bold' }}>\n                  {obj.label}\n                </p>\n              </div>\n              <div className=\"col-md-6\">\n                <InputGroup className=\"mb-3\">\n                  <FormControl\n                    aria-label=\"scenarioName\"\n                    aria-describedby=\"basic-addon2\"\n                    style={{ padding: '18px' }}\n                    value={obj.value}\n                    type=\"text\"\n                    onChange={(e) => {\n                      this.setState({ scenarioName: e.target.value });\n                    }}\n                  />\n                </InputGroup>\n              </div>\n            </div>\n          );\n        })}\n        <div className=\"saveBtn\">\n          <button\n            className=\"btn btn-primary biconbuttonFilter\"\n            style={{ width: '15%' }}\n            onClick={() => this.props.onSave(this.state.planName)}>\n            Save\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PlanSave;\n"]},"metadata":{},"sourceType":"module"}