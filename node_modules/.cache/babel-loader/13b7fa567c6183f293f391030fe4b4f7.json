{"ast":null,"code":"var _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Summary/aggColdef.js\";\nimport React from 'react';\nimport { toPercentage, toPercentageWithDecimalDraft, toUnit, toDollar } from '../../helper/formatter';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport numeral from 'numeral'; //cellClassName must be same for aggColDef, binToWeekColDef and weekToBinColDef\n\n/********************************************************************* */\n//*******WHILE ADDING NEW COLUMNS ADD A UNIQUE CELLCLASSNAME************/\n\n/********ADD THE COLUMN TO ALL OF THREE COLDEFS*************************/\n\n/********************************************************************* */\n//aggColDef is aggregate level parent table coldef,\n//in this level user can expand both dateRange and Bins cols(when one is expanded the other will disable)\n\nexport var aggColDef = [{\n  Header: 'MD Plan',\n  accessor: 'md_plan',\n  cellClassName: 'summary_md_plan'\n}, {\n  Header: 'Plan Level',\n  accessor: 'level',\n  cellClassName: 'summary_cadence_type'\n}, {\n  id: 'expander',\n  cellClassName: 'summary_expander',\n  Header: 'Date Range',\n  Cell: function Cell(_ref) {\n    var row = _ref.row;\n    return row.original.md_plan ? React.createElement(\"span\", Object.assign({\n      className: \"summary-table-icon\"\n    }, row.getToggleRowExpandedProps({\n      style: {\n        paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n      }\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), moment(row.original.start_date).format('YYYY/MM/DD'), \" -\", ' ', moment(row.original.end_date).format('YYYY/MM/DD'), \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n      class: \"fa fa-angle-down expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      class: \"fa fa-angle-right expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), \"\\xA0\\xA0\\xA0\") : null;\n  }\n}, {\n  id: 'expander1',\n  cellClassName: 'summary_expander1',\n  Header: 'Bins',\n  Cell: function Cell(_ref2) {\n    var row = _ref2.row;\n    return row.original.md_plan ? React.createElement(\"span\", Object.assign({\n      className: \"summary-table-icon\"\n    }, row.getToggleRowExpandedProps({\n      style: {\n        paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n      }\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), row.original.bin_level_data ? row.original.bin_level_data.length : row.original.week_level_data && row.original.week_level_data[0] && row.original.week_level_data[0].bin_level_data ? row.original.week_level_data[0].bin_level_data.length : row.original.week_level_data && row.original.week_level_data[0] && row.original.week_level_data[0].subRows ? row.original.week_level_data[0].subRows.length : '-', \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n      class: \"fa fa-angle-down expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      class: \"fa fa-angle-right expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), \"\\xA0\\xA0\\xA0\") : null;\n  }\n}, {\n  Header: '#Products',\n  accessor: 'overall_product_count',\n  cellClassName: 'summary_product_code',\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \" \", toUnit(props), \" \");\n  }\n}, // {\n//   Header: 'Next week MD',\n//   accessor: 'overall_next_week',\n//   cellClassName: 'summary_next_week',\n//   Cell: ({ row, rows }) => {\n//     return '-';\n//   },\n// },\n{\n  Header: 'Current running MD',\n  accessor: 'overall_next_week',\n  cellClassName: 'summary_current_md',\n  Cell: function Cell(_ref3) {\n    var row = _ref3.row,\n        rows = _ref3.rows;\n    return '-';\n  }\n}, {\n  Header: 'Planned MD',\n  accessor: 'overall_offer_value',\n  cellClassName: 'summary_planned_md',\n  Cell: function Cell(_ref4) {\n    var row = _ref4.row;\n    var value = row.original.overall_offer_value;\n    var type = row.original.overall_offer_type;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, value ? unitCheck(value, type) : '-');\n  }\n}, {\n  Header: 'Refreshed MD',\n  accessor: 'refreshed_md',\n  cellClassName: 'summary_refreshed_md',\n  Cell: function Cell(_ref5) {\n    var row = _ref5.row;\n    var value = row.original.overall_refreshed_md;\n    var type = row.original.overall_offer_type;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, value ? unitCheck(value, type) : '-');\n  }\n}, // {\n//   Header: 'MD Difference',\n//   accessor: 'overall_md_diff',\n//   cellClassName: 'summary_difference',\n//   Cell: ({ row, rows }) => {\n//     return '-';\n//   },\n// },\n{\n  Header: 'Sell through %',\n  accessor: 'overall_sell_through',\n  cellClassName: 'summary_sell_through',\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \" \", toPercentageWithDecimalDraft(props), \" \");\n  }\n}, {\n  Header: 'Markdown %',\n  accessor: 'overall_markdown_perc',\n  cellClassName: 'summary_markdown_perc',\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \" \", toPercentage(props), \" \");\n  }\n}, {\n  Header: 'Margin %',\n  accessor: 'overall_margin_perc',\n  cellClassName: 'summary_margin_perc',\n  metric: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \" \", toPercentage(props), \" \");\n  }\n}, {\n  Header: 'Margin $',\n  accessor: 'overall_margin$',\n  cellClassName: 'summary_margin',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \" \", toDollar(props), \" \");\n  }\n}, {\n  Header: 'AUM $',\n  accessor: 'overall_aum',\n  cellClassName: 'summary_aum',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \" \", toDollar(props), \" \");\n  }\n}, {\n  Header: 'Revenue $',\n  accessor: 'overall_revenue$',\n  cellClassName: 'summary_revenue',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \" \", toDollar(props), \" \");\n  }\n}, {\n  Header: 'Planned units',\n  accessor: 'overall_planned_units',\n  cellClassName: 'summary_pvh_units',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \" \", toUnit(props), \" \");\n  }\n}, {\n  Header: 'Markdown units',\n  accessor: 'overall_markdown_units',\n  cellClassName: 'summary_markdown_units',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \" \", toUnit(props), \" \");\n  }\n}, {\n  Header: 'AUR $',\n  accessor: 'overall_aur',\n  cellClassName: 'summary_aur',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \" \", toDollar(props), \" \");\n  }\n}]; //weekToBinColDef contains accessor in granular level,\n//in Cell method have added a condition to display aggregated level data\n//if u add a new column make sure to copy the same\n//only bins will be expandable\n\nexport var weekToBinColDef = [{\n  Header: 'MD Plan',\n  accessor: 'md_plan',\n  cellClassName: 'summary_md_plan',\n  Cell: function Cell(_ref6) {\n    var row = _ref6.row;\n    return null;\n  }\n}, {\n  Header: 'Plan Level',\n  accessor: 'level',\n  cellClassName: 'summary_cadence_type'\n}, {\n  Header: 'Date Range',\n  id: 'expander',\n  cellClassName: 'summary_expander',\n  Cell: function Cell(_ref7) {\n    var row = _ref7.row;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, row.original.week ? 'W' + row.original.week : '');\n  }\n}, {\n  id: 'expander1',\n  cellClassName: 'summary_expander1',\n  Header: 'Bins',\n  Cell: function Cell(_ref8) {\n    var row = _ref8.row;\n    return row.original.subRows ? React.createElement(\"span\", Object.assign({\n      className: \"summary-table-icon\"\n    }, row.getToggleRowExpandedProps({\n      style: {\n        // We can even use the row.depth property\n        // and paddingLeft to indicate the depth\n        // of the row\n        paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n      }\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), row.original.subRows ? row.original.subRows.length : '-', \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n      class: \"fa fa-angle-down expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      class: \"fa fa-angle-right expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }), \"\\xA0\\xA0\\xA0\") : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, row.original.bin_num ? 'Bin ' + row.original.bin_num : null);\n  }\n}, {\n  Header: '#Products',\n  accessor: 'product_count',\n  cellClassName: 'summary_product_code',\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_product_count : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \" \", toUnit({\n      value: value\n    }), \" \");\n  }\n}, // {\n//   Header: 'Next week MD',\n//   accessor: 'next_week',\n//   cellClassName: 'summary_next_week',\n//   Cell: ({ row, rows }) => {\n//     let typeAccessor = !_.isEmpty(row.subRows) ? 'overall_week_offer_type' : 'offer_type';\n//     let value = findNextWeek(row, rows);\n//     return <span>{value ? unitCheck(value, row.original[typeAccessor]) : '-'}</span>;\n//   },\n// },\n{\n  Header: 'Current running MD',\n  accessor: 'next_week',\n  cellClassName: 'summary_current_md',\n  Cell: function Cell(_ref9) {\n    var row = _ref9.row,\n        rows = _ref9.rows;\n    if (!_.isEmpty(row.subRows)) return '-';\n    var value = '-';\n    var date = moment().year(row.original.year).week(row.original.week_num).day('monday').format('YYYY-MM-DD');\n\n    if (moment().isSameOrBefore(date, 'week')) {\n      var lastWeekNum = moment().subtract(1, 'week').week();\n\n      var found = _.find(rows, {\n        original: {\n          week: lastWeekNum\n        }\n      });\n\n      var found1 = _.find(found && found.originalSubRows && found.originalSubRows, {\n        bin_num: row.original.bin_num\n      });\n\n      value = found1 && found1.refreshed_md ? unitCheck(found1.refreshed_md, row.original.offer_type) : '-';\n    }\n\n    return value;\n  }\n}, {\n  Header: 'Planned MD',\n  accessor: 'offer_value',\n  cellClassName: 'summary_planned_md',\n  Cell: function Cell(_ref10) {\n    var row = _ref10.row;\n    var value = !_.isEmpty(row.subRows) ? row.original.overall_week_offer_value : row.original.offer_value;\n    var type = !_.isEmpty(row.subRows) ? row.original.overall_week_offer_type : row.original.offer_type;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, value ? unitCheck(value, type) : '-');\n  }\n}, {\n  Header: 'Refreshed MD',\n  accessor: 'refreshed_md',\n  cellClassName: 'summary_refreshed_md',\n  Cell: function Cell(_ref11) {\n    var row = _ref11.row;\n    var value = !_.isEmpty(row.subRows) ? row.original.overall_week_refreshed_md : row.original.refreshed_md;\n    var type = !_.isEmpty(row.subRows) ? row.original.overall_week_offer_type : row.original.offer_type;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, value ? unitCheck(value, type) : '-');\n  }\n}, // {\n//   Header: 'MD Difference',\n//   accessor: 'md_diff',\n//   cellClassName: 'summary_difference',\n//   Cell: ({ row, rows }) => {\n//     let accessor = !_.isEmpty(row.subRows) ? 'overall_week_offer_value' : 'offer_value';\n//     let type = !_.isEmpty(row.subRows) ? 'overall_week_offer_type' : 'offer_type';\n//     let nextWeek,\n//       currentWeek = row.original[accessor] ? parseFloat(row.original[accessor]) : 0;\n//     let value = findNextWeek(row, rows);\n//     nextWeek = value ? parseFloat(value) : 0;\n//     return (\n//       <span>{currentWeek ? unitCheck(nextWeek - currentWeek, row.original[type]) : '-'}</span>\n//     );\n//   },\n// },\n{\n  Header: 'Sell through %',\n  accessor: 'sell_through',\n  cellClassName: 'summary_sell_through',\n  Cell: function Cell(_ref12) {\n    var row = _ref12.row,\n        rows = _ref12.rows;\n    var id = row.id.split('.');\n    var value = 0;\n\n    if (_.isEmpty(row.subRows) && (row.original.sell_through || row.original.sell_through === 0)) {\n      for (var i = 0; i <= parseInt(id[0]); i++) {\n        var found = _.find(rows, {\n          id: \"\".concat(i)\n        });\n\n        var data = found && found.originalSubRows && found.originalSubRows[parseInt(id[1])] && found.originalSubRows[parseInt(id[1])].sell_through ? found.originalSubRows[parseInt(id[1])].sell_through : 0;\n        value = value + data;\n      }\n    }\n\n    if (!_.isEmpty(row.subRows) && row.original.overall_week_sell_through) {\n      for (var _i = 0; _i <= parseInt(id[0]); _i++) {\n        var _found = _.find(rows, {\n          id: \"\".concat(_i)\n        });\n\n        var _data = _found && _found.original && _found.original.overall_week_sell_through ? _found.original.overall_week_sell_through : 0;\n\n        value = value + _data;\n      }\n    }\n\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, value || value === 0 ? toPercentageWithDecimalDraft({\n      value: value\n    }) : '-');\n  }\n}, {\n  Header: 'Markdown %',\n  accessor: 'markdown_perc',\n  cellClassName: 'summary_markdown_perc',\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_markdown_perc : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, \" \", toPercentage({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'Margin %',\n  accessor: 'margin_perc',\n  cellClassName: 'summary_margin_perc',\n  metric: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_margin_perc : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, \" \", toPercentage({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'Margin $',\n  accessor: 'margin$',\n  cellClassName: 'summary_margin',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_margin$ : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, \" \", toDollar(value), \" \");\n  }\n}, {\n  Header: 'AUM $',\n  accessor: 'aum',\n  cellClassName: 'summary_aum',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_aum : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, \" \", toDollar({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'Revenue $',\n  accessor: 'revenue$',\n  cellClassName: 'summary_revenue',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_revenue$ : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, \" \", toDollar({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'Planned units',\n  accessor: 'planned_units',\n  cellClassName: 'summary_pvh_units',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_planned_units : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, \" \", toUnit({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'Markdown units',\n  accessor: 'markdown_units',\n  cellClassName: 'summary_markdown_units',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_markdown_units : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, \" \", toUnit({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'AUR $',\n  accessor: 'aur',\n  cellClassName: 'summary_aur',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_week_aur : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, \" \", toDollar({\n      value: value\n    }), \" \");\n  }\n}]; //same as weekToBinColDef, but bin to week level\n//only date range will be expandable\n\nexport var binToWeekColDef = [{\n  Header: 'MD Plan',\n  accessor: 'md_plan',\n  cellClassName: 'summary_md_plan',\n  Cell: function Cell(_ref13) {\n    var row = _ref13.row;\n    return null;\n  }\n}, {\n  Header: 'Plan Level',\n  accessor: 'level',\n  cellClassName: 'summary_cadence_type'\n}, {\n  Header: 'Date Range',\n  id: 'expander',\n  cellClassName: 'summary_expander',\n  Cell: function Cell(_ref14) {\n    var row = _ref14.row;\n    return row.original.subRows ? React.createElement(\"span\", Object.assign({\n      className: \"summary-table-icon\"\n    }, row.getToggleRowExpandedProps({\n      style: {\n        paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n      }\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }), moment(row.original.start_date).format('YYYY/MM/DD'), \" -\", ' ', moment(row.original.end_date).format('YYYY/MM/DD'), \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n      class: \"fa fa-angle-down expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      class: \"fa fa-angle-right expanded-icon-size color-blue\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }), \"\\xA0\\xA0\\xA0\") : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, row.original.week_num ? 'W' + row.original.week_num : '');\n  }\n}, {\n  id: 'expander1',\n  cellClassName: 'summary_expander1',\n  Header: 'Bins',\n  Cell: function Cell(_ref15) {\n    var row = _ref15.row;\n    return row.original.bin ? 'Bin ' + row.original.bin : null;\n  }\n}, {\n  Header: '#Products',\n  accessor: 'product_count',\n  cellClassName: 'summary_product_code',\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_product_count : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    }, \" \", toUnit({\n      value: value\n    }), \" \");\n  }\n}, // {\n//   Header: 'Next week MD',\n//   accessor: 'next_week',\n//   cellClassName: 'summary_next_week',\n//   Cell: ({ row, rows }) => {\n//     let id, value;\n//     let accessor = !_.isEmpty(row.subRows) ? 'overall_bin_offer_value' : 'offer_value';\n//     let typeAccessor = !_.isEmpty(row.subRows)\n//       ? row.original.overall_bin_offer_type\n//       : row.original.offer_type;\n//     if (row.original[accessor]) {\n//       id = row.id.split('.');\n//       let find = _.find(rows, { id: id[0] });\n//       value =\n//         find.originalSubRows &&\n//         find.originalSubRows[parseInt(id[1]) + 1] &&\n//         find.originalSubRows[parseInt(id[1]) + 1][accessor];\n//     }\n//     return <span>{value ? unitCheck(value, typeAccessor) : '-'}</span>;\n//   },\n// },\n{\n  Header: 'Current running MD',\n  accessor: 'next_week',\n  cellClassName: 'summary_current_md',\n  Cell: function Cell(_ref16) {\n    var row = _ref16.row,\n        rows = _ref16.rows;\n    if (!_.isEmpty(row.subRows)) return '-';\n    var value = '-';\n    var date = moment().year(row.original.year).week(row.original.week_num).day('monday').format('YYYY-MM-DD');\n\n    if (moment().isSameOrBefore(date, 'week')) {\n      value = findPrevWeek(row, rows, date);\n      value = value !== '-' ? unitCheck(value, row.original.offer_type) : value;\n    }\n\n    return value;\n  }\n}, {\n  Header: 'Planned MD',\n  accessor: 'offer_value',\n  cellClassName: 'summary_planned_md',\n  Cell: function Cell(_ref17) {\n    var row = _ref17.row;\n    var value = !_.isEmpty(row.subRows) ? row.original.overall_bin_offer_value : row.original.offer_value;\n    var type = !_.isEmpty(row.subRows) ? row.original.overall_bin_offer_type : row.original.offer_type;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, value ? unitCheck(value, type) : '-');\n  }\n}, {\n  Header: 'Refreshed MD',\n  accessor: 'refreshed_md',\n  cellClassName: 'summary_refreshed_md',\n  Cell: function Cell(_ref18) {\n    var row = _ref18.row;\n    var value = !_.isEmpty(row.subRows) ? row.original.overall_bin_refreshed_md : row.original.refreshed_md;\n    var type = !_.isEmpty(row.subRows) ? row.original.overall_bin_offer_type : row.original.offer_type;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619\n      },\n      __self: this\n    }, value ? unitCheck(value, type) : '-');\n  }\n}, // {\n//   Header: 'MD Difference',\n//   accessor: 'md_diff',\n//   cellClassName: 'summary_difference',\n//   Cell: ({ row, rows }) => {\n//     let accessor = !_.isEmpty(row.subRows) ? 'overall_bin_offer_value' : 'offer_value';\n//     let type = !_.isEmpty(row.subRows) ? 'overall_bin_offer_type' : 'offer_type';\n//     let id,\n//       nextWeek,\n//       currentWeek = row.original[[accessor]] ? parseFloat(row.original[[accessor]]) : 0;\n//     if (row.original[[accessor]]) {\n//       id = row.id.split('.');\n//       let find = _.find(rows, { id: id[0] });\n//       let value =\n//         find.originalSubRows &&\n//         find.originalSubRows[parseInt(id[1]) + 1] &&\n//         find.originalSubRows[parseInt(id[1]) + 1][[accessor]];\n//       nextWeek = value ? parseFloat(value) : 0;\n//     }\n//     return (\n//       <span>{currentWeek ? unitCheck(nextWeek - currentWeek, row.original[type]) : '-'}</span>\n//     );\n//   },\n// },\n{\n  Header: 'Sell through %',\n  accessor: 'sell_through',\n  cellClassName: 'summary_sell_through',\n  Cell: function Cell(_ref19) {\n    var row = _ref19.row,\n        rows = _ref19.rows;\n    var id = row.id.split('.');\n    var value = 0;\n\n    if (_.isEmpty(row.subRows) && (row.original.sell_through || row.original.sell_through === 0)) {\n      var found = _.find(rows, {\n        id: id[0]\n      });\n\n      for (var i = 0; i <= parseInt(id[1]); i++) {\n        var data = found && found.originalSubRows && found.originalSubRows[i] && found.originalSubRows[i].sell_through ? found.originalSubRows[i].sell_through : 0;\n        value = value + data;\n      }\n    }\n\n    if (!_.isEmpty(row.subRows) && row.original.overall_bin_sell_through) {\n      for (var _i2 = 0; _i2 <= parseInt(id[0]); _i2++) {\n        var _found2 = _.find(rows, {\n          id: \"\".concat(_i2)\n        });\n\n        var _data2 = _found2 && _found2.original && _found2.original.overall_bin_sell_through ? _found2.original.overall_bin_sell_through : 0;\n\n        value = value + _data2;\n      }\n    }\n\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682\n      },\n      __self: this\n    }, value || value === 0 ? toPercentageWithDecimalDraft({\n      value: value\n    }) : '-');\n  }\n}, {\n  Header: 'Markdown %',\n  accessor: 'markdown_perc',\n  cellClassName: 'summary_markdown_perc',\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_markdown_perc : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694\n      },\n      __self: this\n    }, \" \", toPercentage({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'Margin %',\n  accessor: 'margin_perc',\n  cellClassName: 'summary_margin_perc',\n  metric: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_margin_perc : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706\n      },\n      __self: this\n    }, \" \", toPercentage({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'Margin $',\n  accessor: 'margin$',\n  cellClassName: 'summary_margin',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_margin$ : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716\n      },\n      __self: this\n    }, \" \", toDollar({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'AUM $',\n  accessor: 'aum',\n  cellClassName: 'summary_aum',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_aum : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726\n      },\n      __self: this\n    }, \" \", toDollar({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'Revenue $',\n  accessor: 'revenue$',\n  cellClassName: 'summary_revenue',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_revenue$ : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738\n      },\n      __self: this\n    }, \" \", toDollar({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'Planned units',\n  accessor: 'planned_units',\n  cellClassName: 'summary_pvh_units',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_planned_units : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750\n      },\n      __self: this\n    }, \" \", toUnit({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'Markdown units',\n  accessor: 'markdown_units',\n  cellClassName: 'summary_markdown_units',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_markdown_units : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762\n      },\n      __self: this\n    }, \" \", toUnit({\n      value: value\n    }), \" \");\n  }\n}, {\n  Header: 'AUR $',\n  accessor: 'aur',\n  cellClassName: 'summary_aur',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    var value = props.row.original.subRows ? props.row.original.overall_bin_aur : props.value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772\n      },\n      __self: this\n    }, \" \", toDollar({\n      value: value\n    }), \" \");\n  }\n}]; /////detailed table coldefs\n\nexport var detailedColDef = [{\n  Header: 'MD Plan',\n  accessor: 'title'\n}, {\n  Header: 'Plan Level',\n  accessor: 'level'\n}, // {\n//   accessor: 'date',\n//   Header: 'Date Range',\n//   Cell: ({ row }) => {\n//     return (\n//       <span>\n//         {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n//         {moment(row.original.end_date).format('YYYY/MM/DD')}\n//       </span>\n//     );\n//   },\n// },\n{\n  accessor: 'week',\n  Header: 'Week Number',\n  Cell: function Cell(_ref20) {\n    var row = _ref20.row;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 803\n      },\n      __self: this\n    }, row.original.week ? \"W\".concat(row.original.week) : null);\n  }\n}, {\n  accessor: 'bins',\n  Header: 'Bins',\n  Cell: function Cell(_ref21) {\n    var row = _ref21.row;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 811\n      },\n      __self: this\n    }, \"Bin \", row.original.bins);\n  }\n}, {\n  Header: 'Product code',\n  accessor: 'product_code'\n}, // {\n//   Header: 'Next week MD',\n//   accessor: 'overall_next_week',\n// },\n{\n  Header: 'Current running MD',\n  accessor: 'week_level_runnig_value',\n  Cell: function Cell() {\n    return '-';\n  }\n}, {\n  Header: 'Planned MD',\n  accessor: 'week_level_offer_value'\n}, {\n  Header: 'Refreshed MD',\n  accessor: 'refreshed_md',\n  Cell: function Cell(_ref22) {\n    var row = _ref22.row;\n    return row.original.week_level_offer_value;\n  }\n}, // {\n//   Header: 'MD Difference',\n//   accessor: 'overall_md_diff',\n// },\n{\n  Header: 'Sell through %',\n  accessor: 'week_level_sell_through',\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849\n      },\n      __self: this\n    }, \" \", toPercentageWithDecimalDraft(props), \" \");\n  }\n}, {\n  Header: 'Markdown %',\n  accessor: 'week_level_markdown_perc',\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855\n      },\n      __self: this\n    }, \" \", toPercentage(props), \" \");\n  }\n}, {\n  Header: 'Margin %',\n  accessor: 'week_level_margin_perc',\n  metric: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861\n      },\n      __self: this\n    }, \" \", toPercentage(props), \" \");\n  }\n}, {\n  Header: 'Margin $',\n  accessor: 'week_level_margin$',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 867\n      },\n      __self: this\n    }, \" \", toDollar(props), \" \");\n  }\n}, {\n  Header: 'AUM $',\n  accessor: 'week_level_aum',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 873\n      },\n      __self: this\n    }, \" \", toDollar(props), \" \");\n  }\n}, {\n  Header: 'Revenue $',\n  accessor: 'week_level_revenue$',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879\n      },\n      __self: this\n    }, \" \", toDollar(props), \" \");\n  }\n}, {\n  Header: 'Planned units',\n  accessor: 'week_level_planned_units',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885\n      },\n      __self: this\n    }, \" \", toUnit(props), \" \");\n  }\n}, {\n  Header: 'Markdown units',\n  accessor: 'week_level_markdown_units',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 891\n      },\n      __self: this\n    }, \" \", toUnit(props), \" \");\n  }\n}, {\n  Header: 'AUR $',\n  accessor: 'week_level_aur',\n  hideColumn: true,\n  Cell: function Cell(props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 897\n      },\n      __self: this\n    }, \" \", toDollar(props), \" \");\n  }\n}];\n\nfunction unitCheck(value, type) {\n  if (!value && value !== 0) return '-';\n  if (type === 'percent_off') return toPercentage({\n    value: value\n  });\n  if (type === 'fixed_price') return toDollar({\n    value: value\n  });\n}\n\nfunction findNextWeek(row, rows) {\n  var value;\n  var id = row.id.split('.');\n\n  var found = _.find(rows, {\n    id: \"\".concat(parseInt(id[0]) + 1)\n  });\n\n  if (!_.isEmpty(found) && _.isEmpty(row.subRows) && row.original.offer_value) {\n    value = found.originalSubRows && found.originalSubRows[parseInt(id[1])] && found.originalSubRows[parseInt(id[1])].offer_value;\n  }\n\n  if (!_.isEmpty(found) && !_.isEmpty(row.subRows) && row.original.overall_week_offer_value) {\n    value = found.original && found.original.overall_week_offer_value;\n  }\n\n  return value;\n}\n\nfunction findPrevWeek(row, rows) {\n  var value = '-';\n  var id = row.id.split('.');\n\n  var found = _.find(rows, {\n    id: id[0]\n  });\n\n  if (!_.isEmpty(found) && found.originalSubRows.length) {\n    var lastWeekNum = moment().subtract(1, 'week').week();\n\n    var find = _.find(found.originalSubRows, {\n      week_num: lastWeekNum\n    });\n\n    if (!find) return '-';\n    value = find.refreshed_md;\n  }\n\n  return value;\n}","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Summary/aggColdef.js"],"names":["React","toPercentage","toPercentageWithDecimalDraft","toUnit","toDollar","_","moment","numeral","aggColDef","Header","accessor","cellClassName","id","Cell","row","original","md_plan","getToggleRowExpandedProps","style","paddingLeft","depth","start_date","format","end_date","isExpanded","bin_level_data","length","week_level_data","subRows","props","rows","value","overall_offer_value","type","overall_offer_type","unitCheck","overall_refreshed_md","metric","hideColumn","weekToBinColDef","week","bin_num","overall_week_product_count","isEmpty","date","year","week_num","day","isSameOrBefore","lastWeekNum","subtract","found","find","found1","originalSubRows","refreshed_md","offer_type","overall_week_offer_value","offer_value","overall_week_offer_type","overall_week_refreshed_md","split","sell_through","i","parseInt","data","overall_week_sell_through","overall_week_markdown_perc","overall_week_margin_perc","overall_week_margin$","overall_week_aum","overall_week_revenue$","overall_week_planned_units","overall_week_markdown_units","overall_week_aur","binToWeekColDef","bin","overall_bin_product_count","findPrevWeek","overall_bin_offer_value","overall_bin_offer_type","overall_bin_refreshed_md","overall_bin_sell_through","overall_bin_markdown_perc","overall_bin_margin_perc","overall_bin_margin$","overall_bin_aum","overall_bin_revenue$","overall_bin_planned_units","overall_bin_markdown_units","overall_bin_aur","detailedColDef","bins","week_level_offer_value","findNextWeek"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  toPercentage,\n  toPercentageWithDecimalDraft,\n  toUnit,\n  toDollar,\n} from '../../helper/formatter';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport numeral from 'numeral';\n//cellClassName must be same for aggColDef, binToWeekColDef and weekToBinColDef\n/********************************************************************* */\n//*******WHILE ADDING NEW COLUMNS ADD A UNIQUE CELLCLASSNAME************/\n/********ADD THE COLUMN TO ALL OF THREE COLDEFS*************************/\n/********************************************************************* */\n//aggColDef is aggregate level parent table coldef,\n//in this level user can expand both dateRange and Bins cols(when one is expanded the other will disable)\nexport const aggColDef = [\n  {\n    Header: 'MD Plan',\n    accessor: 'md_plan',\n    cellClassName: 'summary_md_plan',\n  },\n  {\n    Header: 'Plan Level',\n    accessor: 'level',\n    cellClassName: 'summary_cadence_type',\n  },\n  {\n    id: 'expander',\n    cellClassName: 'summary_expander',\n    Header: 'Date Range',\n    Cell: ({ row }) => {\n      return row.original.md_plan ? (\n        <span\n          className=\"summary-table-icon\"\n          {...row.getToggleRowExpandedProps({\n            style: {\n              paddingLeft: `${row.depth * 2}rem`,\n            },\n          })}>\n          {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n          {moment(row.original.end_date).format('YYYY/MM/DD')}\n          &nbsp;&nbsp;&nbsp;\n          {row.isExpanded ? (\n            <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          ) : (\n            <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          )}\n          &nbsp;&nbsp;&nbsp;\n        </span>\n      ) : null;\n    },\n  },\n\n  {\n    id: 'expander1',\n    cellClassName: 'summary_expander1',\n    Header: 'Bins',\n    Cell: ({ row }) => {\n      return row.original.md_plan ? (\n        <span\n          className=\"summary-table-icon\"\n          {...row.getToggleRowExpandedProps({\n            style: {\n              paddingLeft: `${row.depth * 2}rem`,\n            },\n          })}>\n          {row.original.bin_level_data\n            ? row.original.bin_level_data.length\n            : row.original.week_level_data &&\n              row.original.week_level_data[0] &&\n              row.original.week_level_data[0].bin_level_data\n            ? row.original.week_level_data[0].bin_level_data.length\n            : row.original.week_level_data &&\n              row.original.week_level_data[0] &&\n              row.original.week_level_data[0].subRows\n            ? row.original.week_level_data[0].subRows.length\n            : '-'}\n          &nbsp;&nbsp;&nbsp;\n          {row.isExpanded ? (\n            <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          ) : (\n            <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          )}\n          &nbsp;&nbsp;&nbsp;\n        </span>\n      ) : null;\n    },\n  },\n\n  {\n    Header: '#Products',\n    accessor: 'overall_product_count',\n    cellClassName: 'summary_product_code',\n    Cell: (props) => {\n      return <div> {toUnit(props)} </div>;\n    },\n  },\n  // {\n  //   Header: 'Next week MD',\n  //   accessor: 'overall_next_week',\n  //   cellClassName: 'summary_next_week',\n  //   Cell: ({ row, rows }) => {\n  //     return '-';\n  //   },\n  // },\n  {\n    Header: 'Current running MD',\n    accessor: 'overall_next_week',\n    cellClassName: 'summary_current_md',\n    Cell: ({ row, rows }) => {\n      return '-';\n    },\n  },\n  {\n    Header: 'Planned MD',\n    accessor: 'overall_offer_value',\n    cellClassName: 'summary_planned_md',\n    Cell: ({ row }) => {\n      let value = row.original.overall_offer_value;\n      let type = row.original.overall_offer_type;\n      return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    },\n  },\n  {\n    Header: 'Refreshed MD',\n    accessor: 'refreshed_md',\n    cellClassName: 'summary_refreshed_md',\n    Cell: ({ row }) => {\n      let value = row.original.overall_refreshed_md;\n      let type = row.original.overall_offer_type;\n      return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    },\n  },\n  // {\n  //   Header: 'MD Difference',\n  //   accessor: 'overall_md_diff',\n  //   cellClassName: 'summary_difference',\n  //   Cell: ({ row, rows }) => {\n  //     return '-';\n  //   },\n  // },\n  {\n    Header: 'Sell through %',\n    accessor: 'overall_sell_through',\n    cellClassName: 'summary_sell_through',\n    Cell: (props) => <div> {toPercentageWithDecimalDraft(props)} </div>,\n  },\n\n  {\n    Header: 'Markdown %',\n    accessor: 'overall_markdown_perc',\n    cellClassName: 'summary_markdown_perc',\n    Cell: (props) => <div> {toPercentage(props)} </div>,\n  },\n  {\n    Header: 'Margin %',\n    accessor: 'overall_margin_perc',\n    cellClassName: 'summary_margin_perc',\n    metric: true,\n    Cell: (props) => <div> {toPercentage(props)} </div>,\n  },\n  {\n    Header: 'Margin $',\n    accessor: 'overall_margin$',\n    cellClassName: 'summary_margin',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollar(props)} </div>,\n  },\n  {\n    Header: 'AUM $',\n    accessor: 'overall_aum',\n    cellClassName: 'summary_aum',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollar(props)} </div>,\n  },\n  {\n    Header: 'Revenue $',\n    accessor: 'overall_revenue$',\n    cellClassName: 'summary_revenue',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollar(props)} </div>,\n  },\n  {\n    Header: 'Planned units',\n    accessor: 'overall_planned_units',\n    cellClassName: 'summary_pvh_units',\n    hideColumn: true,\n    Cell: (props) => <div> {toUnit(props)} </div>,\n  },\n  {\n    Header: 'Markdown units',\n    accessor: 'overall_markdown_units',\n    cellClassName: 'summary_markdown_units',\n    hideColumn: true,\n    Cell: (props) => <div> {toUnit(props)} </div>,\n  },\n  {\n    Header: 'AUR $',\n    accessor: 'overall_aur',\n    cellClassName: 'summary_aur',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollar(props)} </div>,\n  },\n];\n//weekToBinColDef contains accessor in granular level,\n//in Cell method have added a condition to display aggregated level data\n//if u add a new column make sure to copy the same\n//only bins will be expandable\nexport const weekToBinColDef = [\n  {\n    Header: 'MD Plan',\n    accessor: 'md_plan',\n    cellClassName: 'summary_md_plan',\n    Cell: ({ row }) => null,\n  },\n  {\n    Header: 'Plan Level',\n    accessor: 'level',\n    cellClassName: 'summary_cadence_type',\n  },\n  {\n    Header: 'Date Range',\n    id: 'expander',\n    cellClassName: 'summary_expander',\n    Cell: ({ row }) => {\n      return <span>{row.original.week ? 'W' + row.original.week : ''}</span>;\n    },\n  },\n\n  {\n    id: 'expander1',\n    cellClassName: 'summary_expander1',\n    Header: 'Bins',\n    Cell: ({ row }) => {\n      return row.original.subRows ? (\n        <span\n          className=\"summary-table-icon\"\n          {...row.getToggleRowExpandedProps({\n            style: {\n              // We can even use the row.depth property\n              // and paddingLeft to indicate the depth\n              // of the row\n              paddingLeft: `${row.depth * 2}rem`,\n            },\n          })}>\n          {row.original.subRows ? row.original.subRows.length : '-'}\n          &nbsp;&nbsp;&nbsp;\n          {row.isExpanded ? (\n            <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          ) : (\n            <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          )}\n          &nbsp;&nbsp;&nbsp;\n        </span>\n      ) : (\n        <span>{row.original.bin_num ? 'Bin ' + row.original.bin_num : null}</span>\n      );\n    },\n  },\n\n  {\n    Header: '#Products',\n    accessor: 'product_count',\n    cellClassName: 'summary_product_code',\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_week_product_count\n        : props.value;\n      return <div> {toUnit({ value: value })} </div>;\n    },\n  },\n  // {\n  //   Header: 'Next week MD',\n  //   accessor: 'next_week',\n  //   cellClassName: 'summary_next_week',\n  //   Cell: ({ row, rows }) => {\n  //     let typeAccessor = !_.isEmpty(row.subRows) ? 'overall_week_offer_type' : 'offer_type';\n  //     let value = findNextWeek(row, rows);\n\n  //     return <span>{value ? unitCheck(value, row.original[typeAccessor]) : '-'}</span>;\n  //   },\n  // },\n  {\n    Header: 'Current running MD',\n    accessor: 'next_week',\n    cellClassName: 'summary_current_md',\n    Cell: ({ row, rows }) => {\n      if (!_.isEmpty(row.subRows)) return '-';\n      let value = '-';\n      let date = moment()\n        .year(row.original.year)\n        .week(row.original.week_num)\n        .day('monday')\n        .format('YYYY-MM-DD');\n      if (moment().isSameOrBefore(date, 'week')) {\n        let lastWeekNum = moment().subtract(1, 'week').week();\n        let found = _.find(rows, { original: { week: lastWeekNum } });\n        let found1 = _.find(found && found.originalSubRows && found.originalSubRows, {\n          bin_num: row.original.bin_num,\n        });\n        value =\n          found1 && found1.refreshed_md\n            ? unitCheck(found1.refreshed_md, row.original.offer_type)\n            : '-';\n      }\n      return value;\n    },\n  },\n  {\n    Header: 'Planned MD',\n    accessor: 'offer_value',\n    cellClassName: 'summary_planned_md',\n    Cell: ({ row }) => {\n      let value = !_.isEmpty(row.subRows)\n        ? row.original.overall_week_offer_value\n        : row.original.offer_value;\n      let type = !_.isEmpty(row.subRows)\n        ? row.original.overall_week_offer_type\n        : row.original.offer_type;\n      return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    },\n  },\n  {\n    Header: 'Refreshed MD',\n    accessor: 'refreshed_md',\n    cellClassName: 'summary_refreshed_md',\n    Cell: ({ row }) => {\n      let value = !_.isEmpty(row.subRows)\n        ? row.original.overall_week_refreshed_md\n        : row.original.refreshed_md;\n      let type = !_.isEmpty(row.subRows)\n        ? row.original.overall_week_offer_type\n        : row.original.offer_type;\n      return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    },\n  },\n  // {\n  //   Header: 'MD Difference',\n  //   accessor: 'md_diff',\n  //   cellClassName: 'summary_difference',\n  //   Cell: ({ row, rows }) => {\n  //     let accessor = !_.isEmpty(row.subRows) ? 'overall_week_offer_value' : 'offer_value';\n  //     let type = !_.isEmpty(row.subRows) ? 'overall_week_offer_type' : 'offer_type';\n\n  //     let nextWeek,\n  //       currentWeek = row.original[accessor] ? parseFloat(row.original[accessor]) : 0;\n  //     let value = findNextWeek(row, rows);\n  //     nextWeek = value ? parseFloat(value) : 0;\n  //     return (\n  //       <span>{currentWeek ? unitCheck(nextWeek - currentWeek, row.original[type]) : '-'}</span>\n  //     );\n  //   },\n  // },\n  {\n    Header: 'Sell through %',\n    accessor: 'sell_through',\n    cellClassName: 'summary_sell_through',\n    Cell: ({ row, rows }) => {\n      let id = row.id.split('.');\n      let value = 0;\n\n      if (\n        _.isEmpty(row.subRows) &&\n        (row.original.sell_through || row.original.sell_through === 0)\n      ) {\n        for (let i = 0; i <= parseInt(id[0]); i++) {\n          let found = _.find(rows, { id: `${i}` });\n          let data =\n            found &&\n            found.originalSubRows &&\n            found.originalSubRows[parseInt(id[1])] &&\n            found.originalSubRows[parseInt(id[1])].sell_through\n              ? found.originalSubRows[parseInt(id[1])].sell_through\n              : 0;\n          value = value + data;\n        }\n      }\n      if (!_.isEmpty(row.subRows) && row.original.overall_week_sell_through) {\n        for (let i = 0; i <= parseInt(id[0]); i++) {\n          let found = _.find(rows, { id: `${i}` });\n          let data =\n            found && found.original && found.original.overall_week_sell_through\n              ? found.original.overall_week_sell_through\n              : 0;\n          value = value + data;\n        }\n      }\n      return (\n        <span>{value || value === 0 ? toPercentageWithDecimalDraft({ value: value }) : '-'}</span>\n      );\n    },\n  },\n  {\n    Header: 'Markdown %',\n    accessor: 'markdown_perc',\n    cellClassName: 'summary_markdown_perc',\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_week_markdown_perc\n        : props.value;\n      return <div> {toPercentage({ value })} </div>;\n    },\n  },\n\n  {\n    Header: 'Margin %',\n    accessor: 'margin_perc',\n    cellClassName: 'summary_margin_perc',\n    metric: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_week_margin_perc\n        : props.value;\n      return <div> {toPercentage({ value })} </div>;\n    },\n  },\n  {\n    Header: 'Margin $',\n    accessor: 'margin$',\n    cellClassName: 'summary_margin',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_week_margin$\n        : props.value;\n      return <div> {toDollar(value)} </div>;\n    },\n  },\n  {\n    Header: 'AUM $',\n    accessor: 'aum',\n    cellClassName: 'summary_aum',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows ? props.row.original.overall_week_aum : props.value;\n      return <div> {toDollar({ value })} </div>;\n    },\n  },\n  {\n    Header: 'Revenue $',\n    accessor: 'revenue$',\n    cellClassName: 'summary_revenue',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_week_revenue$\n        : props.value;\n      return <div> {toDollar({ value })} </div>;\n    },\n  },\n  {\n    Header: 'Planned units',\n    accessor: 'planned_units',\n    cellClassName: 'summary_pvh_units',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_week_planned_units\n        : props.value;\n      return <div> {toUnit({ value })} </div>;\n    },\n  },\n  {\n    Header: 'Markdown units',\n    accessor: 'markdown_units',\n    cellClassName: 'summary_markdown_units',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_week_markdown_units\n        : props.value;\n      return <div> {toUnit({ value })} </div>;\n    },\n  },\n  {\n    Header: 'AUR $',\n    accessor: 'aur',\n    cellClassName: 'summary_aur',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows ? props.row.original.overall_week_aur : props.value;\n      return <div> {toDollar({ value })} </div>;\n    },\n  },\n];\n//same as weekToBinColDef, but bin to week level\n//only date range will be expandable\nexport const binToWeekColDef = [\n  {\n    Header: 'MD Plan',\n    accessor: 'md_plan',\n    cellClassName: 'summary_md_plan',\n    Cell: ({ row }) => null,\n  },\n  {\n    Header: 'Plan Level',\n    accessor: 'level',\n    cellClassName: 'summary_cadence_type',\n  },\n  {\n    Header: 'Date Range',\n    id: 'expander',\n    cellClassName: 'summary_expander',\n    Cell: ({ row }) => {\n      return row.original.subRows ? (\n        <span\n          className=\"summary-table-icon\"\n          {...row.getToggleRowExpandedProps({\n            style: {\n              paddingLeft: `${row.depth * 2}rem`,\n            },\n          })}>\n          {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n          {moment(row.original.end_date).format('YYYY/MM/DD')}\n          &nbsp;&nbsp;&nbsp;\n          {row.isExpanded ? (\n            <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          ) : (\n            <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n          )}\n          &nbsp;&nbsp;&nbsp;\n        </span>\n      ) : (\n        <span>{row.original.week_num ? 'W' + row.original.week_num : ''}</span>\n      );\n    },\n  },\n\n  {\n    id: 'expander1',\n    cellClassName: 'summary_expander1',\n    Header: 'Bins',\n    Cell: ({ row }) => {\n      return row.original.bin ? 'Bin ' + row.original.bin : null;\n    },\n  },\n\n  {\n    Header: '#Products',\n    accessor: 'product_count',\n    cellClassName: 'summary_product_code',\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_bin_product_count\n        : props.value;\n      return <div> {toUnit({ value: value })} </div>;\n    },\n  },\n  // {\n  //   Header: 'Next week MD',\n  //   accessor: 'next_week',\n  //   cellClassName: 'summary_next_week',\n  //   Cell: ({ row, rows }) => {\n  //     let id, value;\n  //     let accessor = !_.isEmpty(row.subRows) ? 'overall_bin_offer_value' : 'offer_value';\n  //     let typeAccessor = !_.isEmpty(row.subRows)\n  //       ? row.original.overall_bin_offer_type\n  //       : row.original.offer_type;\n\n  //     if (row.original[accessor]) {\n  //       id = row.id.split('.');\n  //       let find = _.find(rows, { id: id[0] });\n  //       value =\n  //         find.originalSubRows &&\n  //         find.originalSubRows[parseInt(id[1]) + 1] &&\n  //         find.originalSubRows[parseInt(id[1]) + 1][accessor];\n  //     }\n  //     return <span>{value ? unitCheck(value, typeAccessor) : '-'}</span>;\n  //   },\n  // },\n\n  {\n    Header: 'Current running MD',\n    accessor: 'next_week',\n    cellClassName: 'summary_current_md',\n    Cell: ({ row, rows }) => {\n      if (!_.isEmpty(row.subRows)) return '-';\n      let value = '-';\n      let date = moment()\n        .year(row.original.year)\n        .week(row.original.week_num)\n        .day('monday')\n        .format('YYYY-MM-DD');\n      if (moment().isSameOrBefore(date, 'week')) {\n        value = findPrevWeek(row, rows, date);\n        value = value !== '-' ? unitCheck(value, row.original.offer_type) : value;\n      }\n      return value;\n    },\n  },\n  {\n    Header: 'Planned MD',\n    accessor: 'offer_value',\n    cellClassName: 'summary_planned_md',\n    Cell: ({ row }) => {\n      let value = !_.isEmpty(row.subRows)\n        ? row.original.overall_bin_offer_value\n        : row.original.offer_value;\n      let type = !_.isEmpty(row.subRows)\n        ? row.original.overall_bin_offer_type\n        : row.original.offer_type;\n      return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    },\n  },\n\n  {\n    Header: 'Refreshed MD',\n    accessor: 'refreshed_md',\n    cellClassName: 'summary_refreshed_md',\n    Cell: ({ row }) => {\n      let value = !_.isEmpty(row.subRows)\n        ? row.original.overall_bin_refreshed_md\n        : row.original.refreshed_md;\n      let type = !_.isEmpty(row.subRows)\n        ? row.original.overall_bin_offer_type\n        : row.original.offer_type;\n      return <span>{value ? unitCheck(value, type) : '-'}</span>;\n    },\n  },\n  // {\n  //   Header: 'MD Difference',\n  //   accessor: 'md_diff',\n  //   cellClassName: 'summary_difference',\n  //   Cell: ({ row, rows }) => {\n  //     let accessor = !_.isEmpty(row.subRows) ? 'overall_bin_offer_value' : 'offer_value';\n  //     let type = !_.isEmpty(row.subRows) ? 'overall_bin_offer_type' : 'offer_type';\n\n  //     let id,\n  //       nextWeek,\n  //       currentWeek = row.original[[accessor]] ? parseFloat(row.original[[accessor]]) : 0;\n  //     if (row.original[[accessor]]) {\n  //       id = row.id.split('.');\n  //       let find = _.find(rows, { id: id[0] });\n  //       let value =\n  //         find.originalSubRows &&\n  //         find.originalSubRows[parseInt(id[1]) + 1] &&\n  //         find.originalSubRows[parseInt(id[1]) + 1][[accessor]];\n  //       nextWeek = value ? parseFloat(value) : 0;\n  //     }\n  //     return (\n  //       <span>{currentWeek ? unitCheck(nextWeek - currentWeek, row.original[type]) : '-'}</span>\n  //     );\n  //   },\n  // },\n  {\n    Header: 'Sell through %',\n    accessor: 'sell_through',\n    cellClassName: 'summary_sell_through',\n    Cell: ({ row, rows }) => {\n      let id = row.id.split('.');\n      let value = 0;\n\n      if (\n        _.isEmpty(row.subRows) &&\n        (row.original.sell_through || row.original.sell_through === 0)\n      ) {\n        let found = _.find(rows, { id: id[0] });\n        for (let i = 0; i <= parseInt(id[1]); i++) {\n          let data =\n            found &&\n            found.originalSubRows &&\n            found.originalSubRows[i] &&\n            found.originalSubRows[i].sell_through\n              ? found.originalSubRows[i].sell_through\n              : 0;\n          value = value + data;\n        }\n      }\n      if (!_.isEmpty(row.subRows) && row.original.overall_bin_sell_through) {\n        for (let i = 0; i <= parseInt(id[0]); i++) {\n          let found = _.find(rows, { id: `${i}` });\n          let data =\n            found && found.original && found.original.overall_bin_sell_through\n              ? found.original.overall_bin_sell_through\n              : 0;\n          value = value + data;\n        }\n      }\n      return (\n        <span>{value || value === 0 ? toPercentageWithDecimalDraft({ value: value }) : '-'}</span>\n      );\n    },\n  },\n  {\n    Header: 'Markdown %',\n    accessor: 'markdown_perc',\n    cellClassName: 'summary_markdown_perc',\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_bin_markdown_perc\n        : props.value;\n      return <div> {toPercentage({ value })} </div>;\n    },\n  },\n  {\n    Header: 'Margin %',\n    accessor: 'margin_perc',\n    cellClassName: 'summary_margin_perc',\n    metric: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_bin_margin_perc\n        : props.value;\n      return <div> {toPercentage({ value })} </div>;\n    },\n  },\n  {\n    Header: 'Margin $',\n    accessor: 'margin$',\n    cellClassName: 'summary_margin',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows ? props.row.original.overall_bin_margin$ : props.value;\n      return <div> {toDollar({ value })} </div>;\n    },\n  },\n  {\n    Header: 'AUM $',\n    accessor: 'aum',\n    cellClassName: 'summary_aum',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows ? props.row.original.overall_bin_aum : props.value;\n      return <div> {toDollar({ value })} </div>;\n    },\n  },\n  {\n    Header: 'Revenue $',\n    accessor: 'revenue$',\n    cellClassName: 'summary_revenue',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_bin_revenue$\n        : props.value;\n      return <div> {toDollar({ value })} </div>;\n    },\n  },\n  {\n    Header: 'Planned units',\n    accessor: 'planned_units',\n    cellClassName: 'summary_pvh_units',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_bin_planned_units\n        : props.value;\n      return <div> {toUnit({ value })} </div>;\n    },\n  },\n  {\n    Header: 'Markdown units',\n    accessor: 'markdown_units',\n    cellClassName: 'summary_markdown_units',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows\n        ? props.row.original.overall_bin_markdown_units\n        : props.value;\n      return <div> {toUnit({ value })} </div>;\n    },\n  },\n  {\n    Header: 'AUR $',\n    accessor: 'aur',\n    cellClassName: 'summary_aur',\n    hideColumn: true,\n    Cell: (props) => {\n      let value = props.row.original.subRows ? props.row.original.overall_bin_aur : props.value;\n      return <div> {toDollar({ value })} </div>;\n    },\n  },\n];\n\n/////detailed table coldefs\nexport const detailedColDef = [\n  {\n    Header: 'MD Plan',\n    accessor: 'title',\n  },\n  {\n    Header: 'Plan Level',\n    accessor: 'level',\n  },\n  // {\n  //   accessor: 'date',\n  //   Header: 'Date Range',\n  //   Cell: ({ row }) => {\n  //     return (\n  //       <span>\n  //         {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n  //         {moment(row.original.end_date).format('YYYY/MM/DD')}\n  //       </span>\n  //     );\n  //   },\n  // },\n  {\n    accessor: 'week',\n    Header: 'Week Number',\n    Cell: ({ row }) => {\n      return <span>{row.original.week ? `W${row.original.week}` : null}</span>;\n    },\n  },\n\n  {\n    accessor: 'bins',\n    Header: 'Bins',\n    Cell: ({ row }) => {\n      return <span>Bin {row.original.bins}</span>;\n    },\n  },\n\n  {\n    Header: 'Product code',\n    accessor: 'product_code',\n  },\n  // {\n  //   Header: 'Next week MD',\n  //   accessor: 'overall_next_week',\n  // },\n  {\n    Header: 'Current running MD',\n    accessor: 'week_level_runnig_value',\n    Cell: () => {\n      return '-';\n    },\n  },\n  {\n    Header: 'Planned MD',\n    accessor: 'week_level_offer_value',\n  },\n\n  {\n    Header: 'Refreshed MD',\n    accessor: 'refreshed_md',\n    Cell: ({ row }) => {\n      return row.original.week_level_offer_value;\n    },\n  },\n  // {\n  //   Header: 'MD Difference',\n  //   accessor: 'overall_md_diff',\n  // },\n  {\n    Header: 'Sell through %',\n    accessor: 'week_level_sell_through',\n    Cell: (props) => <div> {toPercentageWithDecimalDraft(props)} </div>,\n  },\n\n  {\n    Header: 'Markdown %',\n    accessor: 'week_level_markdown_perc',\n    Cell: (props) => <div> {toPercentage(props)} </div>,\n  },\n  {\n    Header: 'Margin %',\n    accessor: 'week_level_margin_perc',\n    metric: true,\n    Cell: (props) => <div> {toPercentage(props)} </div>,\n  },\n  {\n    Header: 'Margin $',\n    accessor: 'week_level_margin$',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollar(props)} </div>,\n  },\n  {\n    Header: 'AUM $',\n    accessor: 'week_level_aum',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollar(props)} </div>,\n  },\n  {\n    Header: 'Revenue $',\n    accessor: 'week_level_revenue$',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollar(props)} </div>,\n  },\n  {\n    Header: 'Planned units',\n    accessor: 'week_level_planned_units',\n    hideColumn: true,\n    Cell: (props) => <div> {toUnit(props)} </div>,\n  },\n  {\n    Header: 'Markdown units',\n    accessor: 'week_level_markdown_units',\n    hideColumn: true,\n    Cell: (props) => <div> {toUnit(props)} </div>,\n  },\n  {\n    Header: 'AUR $',\n    accessor: 'week_level_aur',\n    hideColumn: true,\n    Cell: (props) => <div> {toDollar(props)} </div>,\n  },\n];\n\nfunction unitCheck(value, type) {\n  if (!value && value !== 0) return '-';\n  if (type === 'percent_off') return toPercentage({ value });\n  if (type === 'fixed_price') return toDollar({ value });\n}\nfunction findNextWeek(row, rows) {\n  let value;\n  let id = row.id.split('.');\n  let found = _.find(rows, { id: `${parseInt(id[0]) + 1}` });\n\n  if (!_.isEmpty(found) && _.isEmpty(row.subRows) && row.original.offer_value) {\n    value =\n      found.originalSubRows &&\n      found.originalSubRows[parseInt(id[1])] &&\n      found.originalSubRows[parseInt(id[1])].offer_value;\n  }\n  if (!_.isEmpty(found) && !_.isEmpty(row.subRows) && row.original.overall_week_offer_value) {\n    value = found.original && found.original.overall_week_offer_value;\n  }\n  return value;\n}\n\nfunction findPrevWeek(row, rows) {\n  let value = '-';\n  let id = row.id.split('.');\n  let found = _.find(rows, { id: id[0] });\n  if (!_.isEmpty(found) && found.originalSubRows.length) {\n    let lastWeekNum = moment().subtract(1, 'week').week();\n    let find = _.find(found.originalSubRows, { week_num: lastWeekNum });\n    if (!find) return '-';\n    value = find.refreshed_md;\n  }\n\n  return value;\n}\n"]},"metadata":{},"sourceType":"module"}