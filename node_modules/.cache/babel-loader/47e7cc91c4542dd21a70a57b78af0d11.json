{"ast":null,"code":"import _defineProperty from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/draftStatus/status/coldef.js\";\nimport React from 'react';\nimport { toPercentage, toPercentageWithDecimalDraft, toDollarWithlDraft, toUnitDraft, toFixedToTwoDraft } from '../../../helper/formatter';\nimport moment from 'moment';\n\nfunction StatusCellStyling(_ref) {\n  var _React$createElement, _React$createElement2;\n\n  var value = _ref.value;\n  console.log(value, 'vvvvvvvvalalla');\n\n  switch (value) {\n    case 'rejected':\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"i\", (_React$createElement = {\n        style: {\n          fontSize: '25px'\n        },\n        className: \"fa fa-ban fa-lg\",\n        \"aria-hidden\": \"true\"\n      }, _defineProperty(_React$createElement, \"style\", {\n        color: '#D84039'\n      }), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), ' ', value, \" \\xA0 \\xA0\", ' ', React.createElement(\"i\", (_React$createElement2 = {\n        style: {\n          fontSize: '25px'\n        },\n        className: \"fa fa-commenting fa-lg\",\n        \"aria-hidden\": \"true\"\n      }, _defineProperty(_React$createElement2, \"style\", {\n        cursor: 'pointer'\n      }), _defineProperty(_React$createElement2, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      }), _defineProperty(_React$createElement2, \"__self\", this), _React$createElement2)));\n\n    case 'draft':\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, value, \" \\xA0 \\xA0\", ' ');\n\n    case 'pending':\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-exclamation-circle fa-lg\",\n        style: {\n          color: '#E0D337'\n        },\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), ' ', value);\n\n    case 'approved':\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-check-circle fa-lg\",\n        \"aria-hidden\": \"true\",\n        style: {\n          color: '#59C770'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), ' ', value);\n\n    default:\n      return '-';\n  }\n}\n\nexport default (function () {\n  var colDef = [{\n    Header: 'MD Plan',\n    accessor: 'md_plan',\n    disableGroupBy: true,\n    // isGroupBy: false,\n    align: 'left',\n    enableRowSpan: true // aggregate: 'uniqueCount',\n    // Aggregated: ({ value }) => `${value} scenario`,\n\n  }, {\n    Header: 'Scenario',\n    accessor: 'scenario',\n    disableGroupBy: true,\n    enableRowSpan: true // Cell: ({ row, rows }) => (row.original.scenario ? row.original.scenario : null),\n\n  }, {\n    // Build our expander column\n    id: 'expander',\n    // Make sure it has an ID\n    // Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n    //   <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}</span>\n    // ),\n    Header: 'Date Range',\n    width: 15,\n    Cell: function Cell(_ref2) {\n      var row = _ref2.row;\n      // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n      // to build the toggle for expanding a row\n      console.log('czseferuuuuuuu', row);\n      return row.canExpand ? React.createElement(\"span\", Object.assign({}, row.getToggleRowExpandedProps({\n        style: {\n          // We can even use the row.depth property\n          // and paddingLeft to indicate the depth\n          // of the row\n          paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n        }\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), moment(row.original.start_date).format('YYYY/MM/DD'), \" -\", ' ', moment(row.original.end_date).format('YYYY/MM/DD'), \"\\xA0\\xA0\\xA0\", row.isExpanded ? React.createElement(\"i\", {\n        class: \"fa fa-angle-down expanded-icon-size color-blue\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }) : React.createElement(\"i\", {\n        class: \"fa fa-angle-right expanded-icon-size color-blue\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })) : '-';\n    }\n  }, {\n    Header: 'Time Period',\n    accessor: 'week_num',\n    disableGroupBy: false,\n    isGroupBy: false,\n    // aggregate: 'uniqueCount',\n    Aggregated: function Aggregated(_ref3) {\n      var value = _ref3.value,\n          row = _ref3.row;\n      return \"weeks (\".concat(row.subRows.length, \")\");\n    }\n  }, {\n    Header: 'Sell through%',\n    accessor: 'sell_through',\n    disableGroupBy: true,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \" \", toPercentageWithDecimalDraft(props), \" \");\n    },\n    Aggregated: function Aggregated(row) {\n      var val = row.row.original.overall_sell_through;\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, val ? parseFloat(val).toFixed(2) : '-');\n    }\n  }, {\n    Header: 'Markdown %',\n    accessor: 'markdown_perc',\n    disableGroupBy: true,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \" \", toPercentage(props), \" \");\n    },\n    Aggregated: function Aggregated(_ref4) {\n      var value = _ref4.value;\n      return \"-\";\n    }\n  }, {\n    Header: 'Margin%',\n    accessor: 'margin_perc',\n    disableGroupBy: true,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \" \", toPercentageWithDecimalDraft(props), \" \");\n    },\n    Aggregated: function Aggregated(row) {\n      var val = row.row.original.overall_margin;\n      console.log(row.row.original.overall_margin);\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, val ? Number(val).toFixed(2) : '-');\n    }\n  }, {\n    Header: 'AUM',\n    accessor: 'aum',\n    disableGroupBy: true,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, toFixedToTwoDraft(props));\n    },\n    Aggregated: function Aggregated(row) {\n      var val = row.row.original.overall_aum;\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, val ? Number(val).toFixed(2) : '-');\n    }\n  }, {\n    Header: 'AUR',\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, toFixedToTwoDraft(props));\n    },\n    accessor: 'aur',\n    disableGroupBy: true,\n    Aggregated: function Aggregated(row) {\n      var val = row.row.original.overall_aur;\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, val ? Number(val).toFixed(2) : '-');\n    }\n  }, {\n    Header: 'Planned Units',\n    accessor: 'plannedUnits',\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, toUnitDraft(props));\n    },\n    disableGroupBy: true,\n    Aggregated: function Aggregated(row) {\n      var val = row.row.original.overall_planned_units;\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, val ? Number(val).toLocaleString('en') : '-');\n    }\n  }, {\n    Header: 'Actual Units',\n    accessor: 'actualUnits',\n    disableGroupBy: true,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, toUnitDraft(props));\n    },\n    Aggregated: function Aggregated(row) {\n      var val = row.row.original.overall_units;\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, val ? Number(val).toLocaleString('en') : '-');\n    }\n  }, {\n    Header: 'Revenue',\n    accessor: 'revenue$',\n    disableGroupBy: true,\n    Cell: function Cell(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \" \", toDollarWithlDraft(props), \" \");\n    },\n    Aggregated: function Aggregated(row) {\n      var val = row.row.original.overall_revenue$;\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, val ? parseInt(val).toLocaleString('en') : '-');\n    }\n  }, {\n    Header: 'Status',\n    accessor: 'status',\n    disableGroupBy: true,\n    Cell: StatusCellStyling\n  }];\n  return colDef;\n});","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/draftStatus/status/coldef.js"],"names":["React","toPercentage","toPercentageWithDecimalDraft","toDollarWithlDraft","toUnitDraft","toFixedToTwoDraft","moment","StatusCellStyling","value","console","log","fontSize","color","cursor","colDef","Header","accessor","disableGroupBy","align","enableRowSpan","id","width","Cell","row","canExpand","getToggleRowExpandedProps","style","paddingLeft","depth","original","start_date","format","end_date","isExpanded","isGroupBy","Aggregated","subRows","length","props","val","overall_sell_through","parseFloat","toFixed","overall_margin","Number","overall_aum","overall_aur","overall_planned_units","toLocaleString","overall_units","overall_revenue$","parseInt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  toPercentage,\n  toPercentageWithDecimalDraft,\n  toDollarWithlDraft,\n  toUnitDraft,\n  toFixedToTwoDraft,\n} from '../../../helper/formatter';\nimport moment from 'moment';\n\nfunction StatusCellStyling({ value }) {\n  console.log(value, 'vvvvvvvvalalla');\n  switch (value) {\n    case 'rejected':\n      return (\n        <span>\n          <i\n            style={{ fontSize: '25px' }}\n            className=\"fa fa-ban fa-lg\"\n            aria-hidden=\"true\"\n            style={{ color: '#D84039' }}></i>{' '}\n          {value} &nbsp; &nbsp;{' '}\n          <i\n            style={{ fontSize: '25px' }}\n            className=\"fa fa-commenting fa-lg\"\n            aria-hidden=\"true\"\n            style={{ cursor: 'pointer' }}></i>\n        </span>\n      );\n    case 'draft':\n      return (\n        <span>\n          {/* <i className=\"fa fa-ban fa-lg\" aria-hidden=\"true\" style={{ color: '#D84039' }}></i>{' '} */}\n          {value} &nbsp; &nbsp;{' '}\n        </span>\n      );\n    case 'pending':\n      return (\n        <span>\n          <i\n            className=\"fa fa-exclamation-circle fa-lg\"\n            style={{ color: '#E0D337' }}\n            aria-hidden=\"true\"></i>{' '}\n          {value}\n        </span>\n      );\n    case 'approved':\n      return (\n        <span>\n          <i\n            className=\"fa fa-check-circle fa-lg\"\n            aria-hidden=\"true\"\n            style={{ color: '#59C770' }}></i>{' '}\n          {value}\n        </span>\n      );\n\n    default:\n      return '-';\n  }\n}\n\nexport default () => {\n  const colDef = [\n    {\n      Header: 'MD Plan',\n      accessor: 'md_plan',\n      disableGroupBy: true,\n\n      // isGroupBy: false,\n      align: 'left',\n      enableRowSpan: true,\n      // aggregate: 'uniqueCount',\n      // Aggregated: ({ value }) => `${value} scenario`,\n    },\n    {\n      Header: 'Scenario',\n      accessor: 'scenario',\n      disableGroupBy: true,\n      enableRowSpan: true,\n\n      // Cell: ({ row, rows }) => (row.original.scenario ? row.original.scenario : null),\n    },\n    {\n      // Build our expander column\n      id: 'expander', // Make sure it has an ID\n      // Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n      //   <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}</span>\n      // ),\n      Header: 'Date Range',\n      width: 15,\n      Cell: ({ row }) => {\n        // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n        // to build the toggle for expanding a row\n        console.log('czseferuuuuuuu', row);\n\n        return row.canExpand ? (\n          <span\n            {...row.getToggleRowExpandedProps({\n              style: {\n                // We can even use the row.depth property\n                // and paddingLeft to indicate the depth\n                // of the row\n                paddingLeft: `${row.depth * 2}rem`,\n              },\n            })}>\n            {moment(row.original.start_date).format('YYYY/MM/DD')} -{' '}\n            {moment(row.original.end_date).format('YYYY/MM/DD')}&nbsp;&nbsp;&nbsp;\n            {row.isExpanded ? (\n              <i class=\"fa fa-angle-down expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n            ) : (\n              <i class=\"fa fa-angle-right expanded-icon-size color-blue\" aria-hidden=\"true\"></i>\n            )}\n          </span>\n        ) : (\n          '-'\n        );\n      },\n    },\n    {\n      Header: 'Time Period',\n      accessor: 'week_num',\n      disableGroupBy: false,\n      isGroupBy: false,\n\n      // aggregate: 'uniqueCount',\n      Aggregated: ({ value, row }) => `weeks (${row.subRows.length})`,\n    },\n    {\n      Header: 'Sell through%',\n      accessor: 'sell_through',\n      disableGroupBy: true,\n\n      Cell: (props) => <div> {toPercentageWithDecimalDraft(props)} </div>,\n      Aggregated: (row) => {\n        let val = row.row.original.overall_sell_through;\n        return <span>{val ? parseFloat(val).toFixed(2) : '-'}</span>;\n      },\n    },\n    {\n      Header: 'Markdown %',\n      accessor: 'markdown_perc',\n      disableGroupBy: true,\n      Cell: (props) => <div> {toPercentage(props)} </div>,\n      Aggregated: ({ value }) => `-`,\n    },\n\n    {\n      Header: 'Margin%',\n      accessor: 'margin_perc',\n      disableGroupBy: true,\n      Cell: (props) => <div> {toPercentageWithDecimalDraft(props)} </div>,\n      Aggregated: (row) => {\n        let val = row.row.original.overall_margin;\n        console.log(row.row.original.overall_margin);\n        return <span>{val ? Number(val).toFixed(2) : '-'}</span>;\n      },\n    },\n    {\n      Header: 'AUM',\n      accessor: 'aum',\n      disableGroupBy: true,\n      Cell: (props) => <div>{toFixedToTwoDraft(props)}</div>,\n      Aggregated: (row) => {\n        let val = row.row.original.overall_aum;\n        return <span>{val ? Number(val).toFixed(2) : '-'}</span>;\n      },\n    },\n    {\n      Header: 'AUR',\n      Cell: (props) => <div>{toFixedToTwoDraft(props)}</div>,\n      accessor: 'aur',\n      disableGroupBy: true,\n      Aggregated: (row) => {\n        let val = row.row.original.overall_aur;\n        return <span>{val ? Number(val).toFixed(2) : '-'}</span>;\n      },\n    },\n    {\n      Header: 'Planned Units',\n      accessor: 'plannedUnits',\n      Cell: (props) => <div>{toUnitDraft(props)}</div>,\n\n      disableGroupBy: true,\n      Aggregated: (row) => {\n        let val = row.row.original.overall_planned_units;\n        return <span>{val ? Number(val).toLocaleString('en') : '-'}</span>;\n      },\n    },\n    {\n      Header: 'Actual Units',\n      accessor: 'actualUnits',\n      disableGroupBy: true,\n      Cell: (props) => <div>{toUnitDraft(props)}</div>,\n\n      Aggregated: (row) => {\n        let val = row.row.original.overall_units;\n        return <span>{val ? Number(val).toLocaleString('en') : '-'}</span>;\n      },\n    },\n    {\n      Header: 'Revenue',\n      accessor: 'revenue$',\n      disableGroupBy: true,\n      Cell: (props) => <div> {toDollarWithlDraft(props)} </div>,\n      Aggregated: (row) => {\n        let val = row.row.original.overall_revenue$;\n        return <span>{val ? parseInt(val).toLocaleString('en') : '-'}</span>;\n      },\n    },\n    {\n      Header: 'Status',\n      accessor: 'status',\n      disableGroupBy: true,\n      Cell: StatusCellStyling,\n    },\n  ];\n  return colDef;\n};\n"]},"metadata":{},"sourceType":"module"}