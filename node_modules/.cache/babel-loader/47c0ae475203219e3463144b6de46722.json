{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Finalize/FinalizeMarkdown.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Filters from '../../services/filters';\nimport './finalizeMarkdownStyle.css';\nimport styled from 'styled-components';\nimport NoData from '../noTableData';\nimport FinalizeAction from '../../actions/draftStausFinalizeAction';\nimport Coldef from './coldef';\nimport _ from 'lodash';\nimport cloneDeep from 'clone-deep';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport AlertWarning from '../../utils/AlertMessage/alertDanger';\nimport AlertSuccess from '../../utils/AlertMessage/alertSuccess';\nimport CardComponent from '../../services/cardComponent/cardComponent';\nimport moment from 'moment';\nimport card1Image from '../../images/card1Image.png';\nimport card2Image from '../../images/card2Image.png';\nimport card3Image from '../../images/card3Image.png';\nimport card4Image from '../../images/card4Image.png';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox';\n\nvar FinalizeMarkdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FinalizeMarkdown, _Component);\n\n  function FinalizeMarkdown(_props) {\n    var _this;\n\n    _classCallCheck(this, FinalizeMarkdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FinalizeMarkdown).call(this, _props));\n\n    _this.findStatusColor = function (status, color) {\n      switch (status) {\n        case 'high':\n          return color.high;\n\n        case 'medium':\n          return color.medium;\n\n        case 'low':\n          return color.low;\n\n        default:\n          break;\n      }\n    };\n\n    _this.bgmCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var bgCol = {\n        high: '#F8E8E8',\n        medium: '#FCF3D1',\n        low: '#E8F8F5'\n      };\n      return _this.findStatusColor(status, bgCol);\n    };\n\n    _this.txtCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var txtCol = {\n        high: '#D38485',\n        medium: '#F0C53A',\n        low: '#66CFBA'\n      };\n      return _this.findStatusColor(status, txtCol);\n    };\n\n    _this.sendForReject = function () {\n      var payload = {\n        markdown_data: _this.state.selectedRows.map(function (item) {\n          return {\n            id: item.markdown_id\n          };\n        }),\n        update_status: 'rejected'\n      };\n      console.log(payload, 'sendForReject');\n\n      _this.props.sendForApproval(payload);\n    };\n\n    _this.sendForApprove = function () {\n      var payload = {\n        markdown_data: _this.state.selectedRows.map(function (item) {\n          return {\n            id: item.markdown_id // scenario: item.scenario,\n\n          };\n        }),\n        update_status: 'approved'\n      };\n      console.log(payload, 'sendForApprove');\n\n      _this.props.sendForApproval(payload);\n    };\n\n    _this.scenarioSelectedHandler = function (value, row) {\n      _this.setState({\n        scenarioSelected: {\n          value: value,\n          row: row\n        }\n      });\n    };\n\n    _this.onActionSelection = function (rowData) {\n      var selectedRows = _this.state.selectedRows;\n\n      var foundEle = _.find(selectedRows, {\n        markdown_id: rowData.original.markdown_id\n      });\n\n      if (foundEle) {\n        _.remove(selectedRows, function (item) {\n          return item.markdown_id === rowData.original.markdown_id;\n        });\n      } else {\n        selectedRows.push(rowData.original);\n      }\n\n      console.log(selectedRows, 'onActionSelection', rowData);\n\n      _this.setState({\n        selectedRows: selectedRows\n      });\n    };\n\n    _this.onScenarioSelection = function (rowData) {\n      var selectedRows = _this.state.selectedRows;\n\n      var foundEle = _.find(selectedRows, {\n        markdown_id: rowData.original.markdown_id\n      });\n\n      if (foundEle) {\n        _.remove(selectedRows, function (item) {\n          return item.markdown_id === rowData.original.markdown_id;\n        });\n      } else {\n        selectedRows.push(rowData.original);\n      }\n\n      console.log(selectedRows, 'asdfmasdf', rowData);\n\n      _this.setState({\n        selectedRows: selectedRows\n      });\n    };\n\n    _this.onHandleSelect = function (selOptions) {\n      console.log('option:', selOptions);\n      var headers = cloneDeep(_this.state.columns);\n\n      _.remove(headers, function (item) {\n        return item.metric;\n      });\n\n      console.log(headers, 'selheader');\n      selOptions.forEach(function (item) {\n        console.log(item, 'itemitemitemitemd');\n        var newTableCols = headers.filter(function (a) {\n          return a.accessor === item.value;\n        });\n        console.log(newTableCols, 'neww');\n\n        if (newTableCols.length == 0) {\n          headers.push({\n            Header: item.label,\n            accessor: item.value,\n            Aggregated: function Aggregated(_ref) {\n              var row = _ref.row;\n              var accessorName = \"overall_\".concat(item.value);\n              var val = row.original[accessorName];\n              var check = row.original.checked_for_approval;\n              return check ? React.createElement(\"span\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 170\n                },\n                __self: this\n              }, val ? Math.round(val) : '-') : null; // return <span>{val ? Math.round(val) : '-'}</span>;\n            },\n            Cell: function Cell(_ref2) {\n              var row = _ref2.row;\n              var check = row.original.checked_for_approval;\n              return !check ? null : check ? React.createElement(\"span\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 176\n                },\n                __self: this\n              }, row.original[item.value]) : '-';\n            },\n            metric: true\n          });\n        }\n      });\n      console.log(headers, 'headeererererer');\n\n      _this.setState({\n        columns: headers\n      });\n    };\n\n    _this.onHandleCheckBox = function (e, label, index) {\n      //adding\n      if (e.target.checked) {\n        if (_this.state.selLabels.indexOf(label) === -1) {\n          var labels = [].concat(_toConsumableArray(_this.state.selLabels), [label]);\n          var tempArr = [];\n          labels.forEach(function (label) {\n            var columns = _this.props.getColumnHeaders[label];\n            var labelColumns = Object.keys(columns);\n            var options = labelColumns.map(function (label) {\n              return {\n                label: label,\n                value: columns[label]\n              };\n            });\n            tempArr.push.apply(tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selLabels: labels,\n            columnOptions: tempArr\n          });\n        }\n      } else {\n        //removing\n        var _index = _this.state.selLabels.indexOf(label);\n\n        if (_index !== -1) {\n          var selectedLabel = cloneDeep(_this.state.selLabels);\n          selectedLabel.splice(_index, 1);\n          var _tempArr = [];\n          selectedLabel.forEach(function (label) {\n            var columns = _this.props.getColumnHeaders[label];\n            var labelColumns = Object.keys(columns);\n            var options = labelColumns.map(function (label) {\n              return {\n                label: label,\n                value: columns[label]\n              };\n            });\n\n            _tempArr.push.apply(_tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selLabels: selectedLabel,\n            columnOptions: _tempArr\n          });\n        }\n      }\n    };\n\n    _this.onFilter = function () {\n      var payload = {\n        filters: {\n          hierarchy1: _this.props.selectedHierarchy1,\n          hierarchy2: _this.props.selectedHierarchy2,\n          hierarchy3: _this.props.selectedHierarchy3,\n          hierarchy4: _this.props.selectedHierarchy4,\n          hierarchy5: _this.props.selectedHierarchy5,\n          hierarchy6: _this.props.selectedHierarchy6,\n          hierarchy7: _this.props.selectedHierarchy7,\n          hierarchy8: _this.props.selectedHierarchy8,\n          tiers: _this.props.selectedStores\n        },\n        startDate: moment(_this.props.startDate).format('YYYY-MM-DD'),\n        endDate: moment(_this.props.endDate).format('YYYY-MM-DD'),\n        status: 'pending'\n      };\n      console.log(payload, 'finalizepayl');\n\n      _this.props.getMarkdowns(payload).then(function (resp) {\n        var tempStatusObj = {};\n\n        _this.props.markdowns.forEach(function (row) {\n          if (tempStatusObj.hasOwnProperty(row.status)) {\n            tempStatusObj[row.status] += 1;\n          } else {\n            tempStatusObj[\"\".concat(row.status)] = 1;\n          }\n        });\n\n        _this.setState({\n          statusCounts: tempStatusObj\n        });\n\n        if (resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n          (function () {\n            var defaultHeader = Object.keys(resp.columnHeaders.default);\n            var setDefaultColDef = Coldef().filter(function (col) {\n              return defaultHeader.includes(col.Header) || col.Header === 'Time Period' || col.Header === 'Actions' || col.id === 'expander';\n            } // col.accessor === 'sell_through' ||\n            );\n            var setDefaultLabel = [];\n            var setDefaultColumnOptions = [];\n            var setDefaultColumnOptions1 = [];\n            var setDefaultItems = [];\n\n            var colHeaders = _.cloneDeep(resp.columnHeaders);\n\n            var labels = Object.keys(colHeaders);\n            labels.splice(labels.indexOf('fixed'), 1);\n            labels.splice(labels.indexOf('default'), 1);\n\n            var _loop = function _loop() {\n              var label = _labels[_i];\n              var labelArray = Object.keys(resp.columnHeaders[label]);\n\n              function diff() {\n                var A = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : labelArray;\n                var B = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultHeader;\n                return A.filter(function (a) {\n                  return B.indexOf(a) !== -1;\n                });\n              }\n\n              if (diff().length) {\n                setDefaultColumnOptions.push.apply(setDefaultColumnOptions, _toConsumableArray(Object.keys(resp.columnHeaders[label])));\n                setDefaultColumnOptions1.push(resp.columnHeaders[label]);\n                setDefaultItems.push.apply(setDefaultItems, _toConsumableArray(diff()));\n                setDefaultLabel.push(label);\n              }\n            };\n\n            for (var _i = 0, _labels = labels; _i < _labels.length; _i++) {\n              _loop();\n            }\n\n            var options = setDefaultColumnOptions.map(function (label) {\n              var find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n              return {\n                label: label,\n                value: find\n              };\n            });\n            var selectedItems = setDefaultItems.map(function (label) {\n              var find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n              return {\n                label: label,\n                value: find\n              };\n            });\n            setDefaultColDef.push({\n              id: 'selection',\n              groupByBoundary: true,\n              Header: 'Actions',\n              // fixed: 'left',\n              Cell: function Cell(props) {\n                var row = props.row,\n                    rows = props.rows;\n\n                var mdPlan = row.values.md_plan,\n                    mainGrp = _.find(rows, {\n                  isSelected: true,\n                  values: {\n                    md_plan: mdPlan\n                  }\n                }),\n                    checkboxDisabled = mainGrp && !row.isSelected ? true : false;\n\n                return row.canExpand ? React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 327\n                  },\n                  __self: this\n                }, React.createElement(IndeterminateCheckbox, Object.assign({\n                  row: row.id,\n                  onClick: function onClick() {\n                    _this.scenarioSelectedHandler(true, row);\n                  },\n                  disabled: checkboxDisabled\n                }, row.getToggleRowSelectedProps(), {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 328\n                  },\n                  __self: this\n                }))) : null;\n              }\n            });\n            console.log(setDefaultLabel, 'Xaslderoooooooo', setDefaultItems, options, selectedItems);\n\n            _this.setState({\n              columns: setDefaultColDef,\n              selLabels: setDefaultLabel,\n              selectedItems: selectedItems,\n              columnOptions: options\n            });\n          })();\n        }\n      });\n    };\n\n    _this.state = {\n      attributes: ['Margin', 'Sales', 'Inventory'],\n      firstCardText: 'KPIs to be decided',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month',\n      selectedItems: [],\n      columnOptions: [],\n      selLabels: [],\n      scenarioSelected: {\n        value: false,\n        row: []\n      },\n      columns: [],\n      selectedRows: []\n    };\n    return _this;\n  }\n\n  _createClass(FinalizeMarkdown, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.setMarkDowns([]);\n      this.props.setMDColumnHeaders({});\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.state.scenarioSelected.value) {\n        this.scenarioSelectedHandler(false, []);\n        this.onScenarioSelection(this.state.scenarioSelected.row);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getMarkdowns({\n        status: 'pending'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.finalizeMarkdownData, 'finalizeMarkdownData');\n      return React.createElement(\"div\", {\n        className: \"createMd pl-2 pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"alertDivs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, this.state.showAlertWarning ? React.createElement(AlertWarning, {\n        message: \"Markdown Finalization Failed!\",\n        show: this.state.showAlertWarning,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }) : null, this.state.showAlertSuccess ? React.createElement(AlertSuccess, {\n        message: 'Markdown(s) are ' + this.state.message,\n        show: this.state.showAlertSuccess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }) : null), React.createElement(\"div\", {\n        className: \"card CalendarMain promoCalendarDiv1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"font-size-14  pad-10 markdown-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, \"Markdown Optimization /\", React.createElement(\"span\", {\n        className: \"font-bold color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, \"Finalize\"))), React.createElement(\"hr\", {\n        className: \"mb-2\",\n        style: {\n          marginTop: '-4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"filterCol mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(Filters, {\n        onFilter: this.onFilter,\n        stores: true,\n        dateRange: true,\n        hierarchy: [{\n          type: 'hierarchy1',\n          isMandatory: true,\n          isMultiple: false\n        }, {\n          type: 'hierarchy2',\n          isMandatory: true,\n          isMultiple: true\n        }, {\n          type: 'hierarchy3',\n          isMandatory: true,\n          isMultiple: true\n        }, {\n          type: 'hierarchy4',\n          isMandatory: true,\n          isMultiple: true\n        }, {\n          type: 'hierarchy5',\n          isMandatory: true,\n          isMultiple: true\n        }, {\n          type: 'hierarchy6',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'hierarchy7',\n          isMandatory: false,\n          isMultiple: true\n        }, {\n          type: 'hierarchy8',\n          isMandatory: false,\n          isMultiple: true\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }))), this.props.finalizeMarkdownData && this.props.finalizeMarkdownData.length ? React.createElement(\"div\", {\n        className: \"card pl-3 pr-3 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, React.createElement(ColSelBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }, this.props.getColumnHeaders && Object.keys(this.props.getColumnHeaders).length && React.createElement(ColumnSelection, {\n        onHandleCheckBox: this.onHandleCheckBox,\n        columnHeaders: this.props.getColumnHeaders,\n        onHandleSelect: this.onHandleSelect,\n        columnOptions: this.state.columnOptions,\n        selectedItems: this.state.selectedItems,\n        selLabels: this.state.selLabels,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          padding: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.sendForApprove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, \"Approve\"), \"\\xA0\", React.createElement(\"button\", {\n        className: \"btn btn-primary  btn-filter-reset\",\n        onClick: this.sendForReject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, \"Reject\"))), React.createElement(DataTable, {\n        columns: this.state.columns,\n        isSort: true // isColumnFilter={true}\n        ,\n        data: this.props.finalizeMarkdownData,\n        updateMyData: this.updateMyData // visibleColumns=\"markDownDrafts\"\n        ,\n        isPagination: true,\n        getColumnProps: function getColumnProps(column) {\n          return {// onClick: () => this.onColumnClick(column),\n          };\n        },\n        getCellProps: function getCellProps(cellInfo) {\n          return {\n            style: {\n              backgroundColor: _this2.bgmCol(cellInfo),\n              color: _this2.txtCol(cellInfo),\n              // textAlign: \"center\",\n              margin: '4px 4px',\n              borderRadius: '2px'\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      })) : React.createElement(NoData, {\n        description: \"Please select filters to show Markdown plans.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FinalizeMarkdown;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  console.log(store, 'storestore');\n  console.log(store.draftStatusReducer.markdowns, 'markdownsstore');\n  return {\n    finalizeMarkdownData: store.draftStatusReducer.markdowns,\n    getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    getMetricOptions: store.finalizeReducer.metricOptions,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    selectedStores: store.filtersReducer.selectedStores,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate\n  };\n};\n\nvar mapActionToProps = {\n  getMarkdowns: FinalizeAction.getMarkdowns,\n  setMarkDowns: FinalizeAction.setMarkDowns,\n  setMDColumnHeaders: FinalizeAction.setMDColumnHeaders,\n  sendForApproval: FinalizeAction.sendForApproval\n};\nexport default connect(mapStateToProps, mapActionToProps)(withRouter(FinalizeMarkdown));\nvar ColSelBtn = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Finalize/FinalizeMarkdown.js"],"names":["React","Component","connect","withRouter","Filters","styled","NoData","FinalizeAction","Coldef","_","cloneDeep","DataTable","ColumnSelection","AlertWarning","AlertSuccess","CardComponent","moment","card1Image","card2Image","card3Image","card4Image","IndeterminateCheckbox","FinalizeMarkdown","props","findStatusColor","status","color","high","medium","low","bgmCol","cellInfo","column","id","row","original","md_status","bgCol","txtCol","sendForReject","payload","markdown_data","state","selectedRows","map","item","markdown_id","update_status","console","log","sendForApproval","sendForApprove","scenarioSelectedHandler","value","setState","scenarioSelected","onActionSelection","rowData","foundEle","find","remove","push","onScenarioSelection","onHandleSelect","selOptions","headers","columns","metric","forEach","newTableCols","filter","a","accessor","length","Header","label","Aggregated","accessorName","val","check","checked_for_approval","Math","round","Cell","onHandleCheckBox","e","index","target","checked","selLabels","indexOf","labels","tempArr","getColumnHeaders","labelColumns","Object","keys","options","columnOptions","selectedLabel","splice","onFilter","filters","hierarchy1","selectedHierarchy1","hierarchy2","selectedHierarchy2","hierarchy3","selectedHierarchy3","hierarchy4","selectedHierarchy4","hierarchy5","selectedHierarchy5","hierarchy6","selectedHierarchy6","hierarchy7","selectedHierarchy7","hierarchy8","selectedHierarchy8","tiers","selectedStores","startDate","format","endDate","getMarkdowns","then","resp","tempStatusObj","markdowns","hasOwnProperty","statusCounts","columnHeaders","defaultHeader","default","setDefaultColDef","col","includes","setDefaultLabel","setDefaultColumnOptions","setDefaultColumnOptions1","setDefaultItems","colHeaders","labelArray","diff","A","B","selectedItems","groupByBoundary","rows","mdPlan","values","md_plan","mainGrp","isSelected","checkboxDisabled","canExpand","getToggleRowSelectedProps","attributes","firstCardText","firstCardFirstValue","firstCardSecondValue","secondCardFirstValue","secondCardSecondValue","thirdCardFirstValue","thirdCardSecondValue","fourthCardFirstValue","fourthCardSecondValue","cardWeekText","cardMonthText","setMarkDowns","setMDColumnHeaders","finalizeMarkdownData","showAlertWarning","showAlertSuccess","message","marginTop","type","isMandatory","isMultiple","padding","updateMyData","style","backgroundColor","margin","borderRadius","mapStateToProps","store","draftStatusReducer","getMetricOptions","finalizeReducer","metricOptions","filtersReducer","mapActionToProps","ColSelBtn","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Filters from '../../services/filters';\nimport './finalizeMarkdownStyle.css';\nimport styled from 'styled-components';\nimport NoData from '../noTableData';\nimport FinalizeAction from '../../actions/draftStausFinalizeAction';\nimport Coldef from './coldef';\nimport _ from 'lodash';\nimport cloneDeep from 'clone-deep';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport AlertWarning from '../../utils/AlertMessage/alertDanger';\nimport AlertSuccess from '../../utils/AlertMessage/alertSuccess';\nimport CardComponent from '../../services/cardComponent/cardComponent';\nimport moment from 'moment';\nimport card1Image from '../../images/card1Image.png';\nimport card2Image from '../../images/card2Image.png';\nimport card3Image from '../../images/card3Image.png';\nimport card4Image from '../../images/card4Image.png';\nimport IndeterminateCheckbox from '../../components/cellRenders/inderterminateCheckbox';\nclass FinalizeMarkdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      attributes: ['Margin', 'Sales', 'Inventory'],\n      firstCardText: 'KPIs to be decided',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month',\n      selectedItems: [],\n      columnOptions: [],\n      selLabels: [],\n      scenarioSelected: { value: false, row: [] },\n      columns: [],\n      selectedRows: [],\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.setMarkDowns([]);\n    this.props.setMDColumnHeaders({});\n  }\n\n  findStatusColor = (status, color) => {\n    switch (status) {\n      case 'high':\n        return color.high;\n      case 'medium':\n        return color.medium;\n      case 'low':\n        return color.low;\n      default:\n        break;\n    }\n  };\n\n  bgmCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let bgCol = {\n      high: '#F8E8E8',\n      medium: '#FCF3D1',\n      low: '#E8F8F5',\n    };\n    return this.findStatusColor(status, bgCol);\n  };\n  txtCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let txtCol = {\n      high: '#D38485',\n      medium: '#F0C53A',\n      low: '#66CFBA',\n    };\n    return this.findStatusColor(status, txtCol);\n  };\n  sendForReject = () => {\n    let payload = {\n      markdown_data: this.state.selectedRows.map((item) => {\n        return {\n          id: item.markdown_id,\n        };\n      }),\n      update_status: 'rejected',\n    };\n    console.log(payload, 'sendForReject');\n    this.props.sendForApproval(payload);\n  };\n  sendForApprove = () => {\n    let payload = {\n      markdown_data: this.state.selectedRows.map((item) => {\n        return {\n          id: item.markdown_id,\n          // scenario: item.scenario,\n        };\n      }),\n      update_status: 'approved',\n    };\n\n    console.log(payload, 'sendForApprove');\n    this.props.sendForApproval(payload);\n  };\n  scenarioSelectedHandler = (value, row) => {\n    this.setState({ scenarioSelected: { value, row } });\n  };\n  componentDidUpdate() {\n    if (this.state.scenarioSelected.value) {\n      this.scenarioSelectedHandler(false, []);\n      this.onScenarioSelection(this.state.scenarioSelected.row);\n    }\n  }\n  onActionSelection = (rowData) => {\n    let { selectedRows } = this.state;\n    let foundEle = _.find(selectedRows, { markdown_id: rowData.original.markdown_id });\n    if (foundEle) {\n      _.remove(selectedRows, (item) => item.markdown_id === rowData.original.markdown_id);\n    } else {\n      selectedRows.push(rowData.original);\n    }\n    console.log(selectedRows, 'onActionSelection', rowData);\n\n    this.setState({\n      selectedRows,\n    });\n  };\n  componentDidMount() {\n    this.props.getMarkdowns({ status: 'pending' });\n  }\n\n  onScenarioSelection = (rowData) => {\n    let { selectedRows } = this.state;\n    let foundEle = _.find(selectedRows, { markdown_id: rowData.original.markdown_id });\n    if (foundEle) {\n      _.remove(selectedRows, (item) => item.markdown_id === rowData.original.markdown_id);\n    } else {\n      selectedRows.push(rowData.original);\n    }\n    console.log(selectedRows, 'asdfmasdf', rowData);\n\n    this.setState({\n      selectedRows,\n    });\n  };\n  onHandleSelect = (selOptions) => {\n    console.log('option:', selOptions);\n    let headers = cloneDeep(this.state.columns);\n    _.remove(headers, (item) => item.metric);\n    console.log(headers, 'selheader');\n    selOptions.forEach((item) => {\n      console.log(item, 'itemitemitemitemd');\n      let newTableCols = headers.filter((a) => {\n        return a.accessor === item.value;\n      });\n      console.log(newTableCols, 'neww');\n      if (newTableCols.length == 0) {\n        headers.push({\n          Header: item.label,\n          accessor: item.value,\n          Aggregated: ({ row }) => {\n            let accessorName = `overall_${item.value}`;\n            let val = row.original[accessorName];\n            let check = row.original.checked_for_approval;\n            return check ? <span>{val ? Math.round(val) : '-'}</span> : null;\n            // return <span>{val ? Math.round(val) : '-'}</span>;\n          },\n\n          Cell: ({ row }) => {\n            let check = row.original.checked_for_approval;\n            return !check ? null : check ? <span>{row.original[item.value]}</span> : '-';\n          },\n          metric: true,\n        });\n      }\n    });\n    console.log(headers, 'headeererererer');\n    this.setState({\n      columns: headers,\n    });\n  };\n  onHandleCheckBox = (e, label, index) => {\n    //adding\n    if (e.target.checked) {\n      if (this.state.selLabels.indexOf(label) === -1) {\n        let labels = [...this.state.selLabels, label];\n        let tempArr = [];\n        labels.forEach((label) => {\n          let columns = this.props.getColumnHeaders[label];\n          let labelColumns = Object.keys(columns);\n          let options = labelColumns.map((label) => {\n            return {\n              label: label,\n              value: columns[label],\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selLabels: labels,\n          columnOptions: tempArr,\n        });\n      }\n    } else {\n      //removing\n      let index = this.state.selLabels.indexOf(label);\n      if (index !== -1) {\n        let selectedLabel = cloneDeep(this.state.selLabels);\n        selectedLabel.splice(index, 1);\n        let tempArr = [];\n        selectedLabel.forEach((label) => {\n          let columns = this.props.getColumnHeaders[label];\n          let labelColumns = Object.keys(columns);\n          let options = labelColumns.map((label) => {\n            return {\n              label: label,\n              value: columns[label],\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selLabels: selectedLabel,\n          columnOptions: tempArr,\n        });\n      }\n    }\n  };\n  onFilter = () => {\n    let payload = {\n      filters: {\n        hierarchy1: this.props.selectedHierarchy1,\n        hierarchy2: this.props.selectedHierarchy2,\n        hierarchy3: this.props.selectedHierarchy3,\n        hierarchy4: this.props.selectedHierarchy4,\n        hierarchy5: this.props.selectedHierarchy5,\n        hierarchy6: this.props.selectedHierarchy6,\n        hierarchy7: this.props.selectedHierarchy7,\n        hierarchy8: this.props.selectedHierarchy8,\n        tiers: this.props.selectedStores,\n      },\n      startDate: moment(this.props.startDate).format('YYYY-MM-DD'),\n      endDate: moment(this.props.endDate).format('YYYY-MM-DD'),\n      status: 'pending',\n    };\n    console.log(payload, 'finalizepayl');\n    this.props.getMarkdowns(payload).then((resp) => {\n      let tempStatusObj = {};\n      this.props.markdowns.forEach((row) => {\n        if (tempStatusObj.hasOwnProperty(row.status)) {\n          tempStatusObj[row.status] += 1;\n        } else {\n          tempStatusObj[`${row.status}`] = 1;\n        }\n      });\n      this.setState({\n        statusCounts: tempStatusObj,\n      });\n      if (resp.columnHeaders && Object.keys(resp.columnHeaders).length) {\n        let defaultHeader = Object.keys(resp.columnHeaders.default);\n\n        let setDefaultColDef = Coldef().filter(\n          (col) =>\n            defaultHeader.includes(col.Header) ||\n            col.Header === 'Time Period' ||\n            col.Header === 'Actions' ||\n            col.id === 'expander'\n          // col.accessor === 'sell_through' ||\n        );\n        let setDefaultLabel = [];\n        let setDefaultColumnOptions = [];\n        let setDefaultColumnOptions1 = [];\n        let setDefaultItems = [];\n        let colHeaders = _.cloneDeep(resp.columnHeaders);\n        let labels = Object.keys(colHeaders);\n        labels.splice(labels.indexOf('fixed'), 1);\n        labels.splice(labels.indexOf('default'), 1);\n        for (const label of labels) {\n          let labelArray = Object.keys(resp.columnHeaders[label]);\n          function diff(A = labelArray, B = defaultHeader) {\n            return A.filter(function (a) {\n              return B.indexOf(a) !== -1;\n            });\n          }\n\n          if (diff().length) {\n            setDefaultColumnOptions.push(...Object.keys(resp.columnHeaders[label]));\n            setDefaultColumnOptions1.push(resp.columnHeaders[label]);\n            setDefaultItems.push(...diff());\n            setDefaultLabel.push(label);\n          }\n        }\n        let options = setDefaultColumnOptions.map((label) => {\n          let find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n          return {\n            label: label,\n            value: find,\n          };\n        });\n        let selectedItems = setDefaultItems.map((label) => {\n          let find = setDefaultColumnOptions1 && setDefaultColumnOptions1[0][label];\n          return {\n            label: label,\n            value: find,\n          };\n        });\n        setDefaultColDef.push({\n          id: 'selection',\n          groupByBoundary: true,\n          Header: 'Actions',\n          // fixed: 'left',\n          Cell: (props) => {\n            let { row, rows } = props;\n            let mdPlan = row.values.md_plan,\n              mainGrp = _.find(rows, {\n                isSelected: true,\n                values: { md_plan: mdPlan },\n              }),\n              checkboxDisabled = mainGrp && !row.isSelected ? true : false;\n\n            return row.canExpand ? (\n              <div>\n                <IndeterminateCheckbox\n                  row={row.id}\n                  onClick={() => {\n                    this.scenarioSelectedHandler(true, row);\n                  }}\n                  disabled={checkboxDisabled}\n                  {...row.getToggleRowSelectedProps()}\n                />\n              </div>\n            ) : null;\n          },\n        });\n        console.log(setDefaultLabel, 'Xaslderoooooooo', setDefaultItems, options, selectedItems);\n\n        this.setState({\n          columns: setDefaultColDef,\n          selLabels: setDefaultLabel,\n          selectedItems: selectedItems,\n          columnOptions: options,\n        });\n      }\n    });\n  };\n\n  render() {\n    console.log(this.props.finalizeMarkdownData, 'finalizeMarkdownData');\n    return (\n      <div className=\"createMd pl-2 pr-2\">\n        <div className=\"alertDivs\">\n          {this.state.showAlertWarning ? (\n            <AlertWarning\n              message=\"Markdown Finalization Failed!\"\n              show={this.state.showAlertWarning}\n            />\n          ) : null}\n          {this.state.showAlertSuccess ? (\n            <AlertSuccess\n              message={'Markdown(s) are ' + this.state.message}\n              show={this.state.showAlertSuccess}\n            />\n          ) : null}\n        </div>\n        <div className=\"card CalendarMain promoCalendarDiv1 mt-3\">\n          <div>\n            <h4 className=\"font-size-14  pad-10 markdown-heading\">\n              Markdown Optimization /<span className=\"font-bold color-blue\">Finalize</span>\n            </h4>\n          </div>\n          <hr\n            className=\"mb-2\"\n            style={{\n              marginTop: '-4px',\n            }}\n          />\n          <div className=\"filterCol mb-4\">\n            <Filters\n              onFilter={this.onFilter}\n              stores\n              dateRange\n              hierarchy={[\n                {\n                  type: 'hierarchy1',\n                  isMandatory: true,\n                  isMultiple: false,\n                },\n                {\n                  type: 'hierarchy2',\n                  isMandatory: true,\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy3',\n                  isMandatory: true,\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy4',\n                  isMandatory: true,\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy5',\n                  isMandatory: true,\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy6',\n                  isMandatory: false,\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy7',\n                  isMandatory: false,\n                  isMultiple: true,\n                },\n                {\n                  type: 'hierarchy8',\n                  isMandatory: false,\n                  isMultiple: true,\n                },\n              ]}\n            />\n          </div>\n        </div>\n        {/* <div className=\"row\" style={{ marginTop: '15px' }}>\n          <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n            <CardComponent\n              cardImage={card1Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.firstCardFirstValue}\n              cardValueSecond={this.state.firstCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border1',\n                cardValue: 'card1-value',\n                cardImg: 'card1-img',\n                cardValueSecond: 'card-value-second',\n                cardSubHeading: 'card-subHeading',\n              }}\n            />\n          </div>\n          <div className=\"col-md-3 col-sm-3 col-xs-6\">\n            <CardComponent\n              cardImage={card2Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.secondCardFirstValue}\n              cardValueSecond={this.state.secondCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border2',\n                cardValue: 'card1-value',\n                cardImg: 'card2-img',\n                cardValueSecond: 'card-value-second',\n                cardSubHeading: 'card-subHeading',\n              }}\n            />\n          </div>\n          <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n            <CardComponent\n              cardImage={card3Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.thirdCardFirstValue}\n              cardValueSecond={this.state.thirdCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border3',\n                cardValue: 'card1-value',\n                cardImg: 'card3-img',\n                cardValueSecond: 'card-value-second',\n                cardSubHeading: 'card-subHeading',\n              }}\n            />\n          </div>\n          <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n            <CardComponent\n              cardImage={card4Image}\n              cardText={this.state.firstCardText}\n              cardValue={this.state.fourthCardFirstValue}\n              cardValueSecond={this.state.fourthCardSecondValue}\n              cardWeekText={this.state.cardWeekText}\n              cardMonthText={this.state.cardMonthText}\n              cardStyles={{\n                cardClass: 'card-border4',\n                cardValue: 'card1-value',\n                cardImg: 'card4-img',\n              }}\n            />\n          </div>\n        </div> */}\n        {this.props.finalizeMarkdownData && this.props.finalizeMarkdownData.length ? (\n          <div className=\"card pl-3 pr-3 mt-3\">\n            <ColSelBtn>\n              {this.props.getColumnHeaders && Object.keys(this.props.getColumnHeaders).length && (\n                <ColumnSelection\n                  onHandleCheckBox={this.onHandleCheckBox}\n                  columnHeaders={this.props.getColumnHeaders}\n                  onHandleSelect={this.onHandleSelect}\n                  columnOptions={this.state.columnOptions}\n                  selectedItems={this.state.selectedItems}\n                  selLabels={this.state.selLabels}\n                />\n              )}\n              <div style={{ padding: '1rem' }}>\n                <button className=\"btn btn-primary\" onClick={this.sendForApprove}>\n                  Approve\n                </button>\n                &nbsp;\n                <button className=\"btn btn-primary  btn-filter-reset\" onClick={this.sendForReject}>\n                  Reject\n                </button>\n              </div>\n            </ColSelBtn>\n            <DataTable\n              columns={this.state.columns}\n              isSort={true}\n              // isColumnFilter={true}\n              data={this.props.finalizeMarkdownData}\n              updateMyData={this.updateMyData}\n              // visibleColumns=\"markDownDrafts\"\n              isPagination={true}\n              getColumnProps={(column) => ({\n                // onClick: () => this.onColumnClick(column),\n              })}\n              getCellProps={(cellInfo) => ({\n                style: {\n                  backgroundColor: this.bgmCol(cellInfo),\n                  color: this.txtCol(cellInfo),\n                  // textAlign: \"center\",\n                  margin: '4px 4px',\n                  borderRadius: '2px',\n                },\n              })}\n            />\n          </div>\n        ) : (\n          <NoData description=\"Please select filters to show Markdown plans.\" />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  console.log(store, 'storestore');\n  console.log(store.draftStatusReducer.markdowns, 'markdownsstore');\n  return {\n    finalizeMarkdownData: store.draftStatusReducer.markdowns,\n    getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    getMetricOptions: store.finalizeReducer.metricOptions,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    selectedStores: store.filtersReducer.selectedStores,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n  };\n};\n\nconst mapActionToProps = {\n  getMarkdowns: FinalizeAction.getMarkdowns,\n  setMarkDowns: FinalizeAction.setMarkDowns,\n  setMDColumnHeaders: FinalizeAction.setMDColumnHeaders,\n  sendForApproval: FinalizeAction.sendForApproval,\n};\nexport default connect(mapStateToProps, mapActionToProps)(withRouter(FinalizeMarkdown));\n\nconst ColSelBtn = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n"]},"metadata":{},"sourceType":"module"}