{"ast":null,"code":"import _defineProperty from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/services/filters/index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { labels, validations } from './config';\nimport Select from '../select';\nimport './index.css';\nimport { connect } from 'react-redux';\nimport DateRangePicker from '../RetailCalendarDatePicker';\nimport FilterActions from '../../actions/filtersAction';\nimport { toast } from 'react-toastify';\nimport _ from 'lodash';\n\nvar Filters =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Filters, _Component);\n\n  function Filters(props) {\n    var _this;\n\n    _classCallCheck(this, Filters);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filters).call(this, props));\n\n    _this.onHierarchyOneSelection = function (val) {\n      var hierarchyClone = _.cloneDeep(_this.props.filtersOptions);\n\n      var valiadtion = validations[val[0].label];\n\n      var findIndex = function findIndex(index, key) {\n        return _.findIndex(hierarchyClone, {\n          type: \"\".concat(valiadtion[key][index])\n        });\n      }; //finding index num for swap case from validations\n\n\n      if (valiadtion && !_.isEmpty(valiadtion.swap)) {\n        //swaping filters\n        var a = findIndex(0, 'swap'),\n            b = findIndex(1, 'swap');\n        var temp = hierarchyClone[a];\n        hierarchyClone[a] = hierarchyClone[b];\n        hierarchyClone[b] = temp;\n      }\n\n      if (valiadtion && !_.isEmpty(valiadtion.remove)) {\n        //remove filters case\n        _.map(valiadtion.remove, function (item, i) {\n          _.remove(hierarchyClone, function (itm, index) {\n            return index === findIndex(i, 'remove');\n          });\n        });\n      }\n\n      _this.setState({\n        hierarchy: hierarchyClone\n      });\n\n      return hierarchyClone;\n    };\n\n    _this.setSelectionHandler =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(val, actionName, name) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(name === 'customStoreGroup')) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _context.next = 3;\n                return _this.props.setSelectedCustomStoreGroup(val.map(function (v) {\n                  return v.value;\n                }));\n\n              case 3:\n                return _context.abrupt(\"return\");\n\n              case 4:\n                if (!(name === 'customStyleGroup')) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _this.props.setSelectedCustomGroup(val.map(function (v) {\n                  return v.value;\n                }), 'name');\n\n                _context.next = 8;\n                return _this.props.setSelectedCustomGroup(val.map(function (v) {\n                  return v.id;\n                }), 'id');\n\n              case 8:\n                return _context.abrupt(\"return\");\n\n              case 9:\n                _context.next = 11;\n                return _this.props[actionName](val.map(function (e) {\n                  return e.label;\n                }));\n\n              case 11:\n                return _context.abrupt(\"return\");\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.getHierarchyOptions =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(val, filterIndex, currFilterName, isHierarchyPrev, nextFilterName, isHierarchyNext) {\n        var hierarchy, nameCapitalized, resetHierachies;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                !Array.isArray(val) && (val = [val]);\n                hierarchy = _.cloneDeep(_this.state.hierarchy);\n\n                if (!(currFilterName === 'hierarchy1')) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                _context3.next = 5;\n                return _this.onHierarchyOneSelection(val);\n\n              case 5:\n                hierarchy = _context3.sent;\n\n              case 6:\n                if (_.findIndex(hierarchy, {\n                  type: 'hierarchy1'\n                }) > filterIndex) {\n                  _this.setState({\n                    hierarchy: _this.props.filtersOptions\n                  }); //reset filters that are removed or swapped when filters that comes before H1 are set\n\n                }\n\n                nameCapitalized = currFilterName && currFilterName.charAt(0).toUpperCase() + currFilterName.slice(1); //capitalizing the name to match action/reducer name\n\n                resetHierachies = {};\n\n                _.map(hierarchy, function (item, index) {\n                  if (index > filterIndex) {\n                    resetHierachies[item.type] = null; //all fiters value, which comes after selected filter becomes null(reset)\n                  }\n                });\n\n                _this.setState(_objectSpread(_defineProperty({}, currFilterName, val), resetHierachies),\n                /*#__PURE__*/\n                _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee2() {\n                  var actionName, req;\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          actionName = isHierarchyPrev ? \"setSelected\".concat(nameCapitalized) : \"setSelectedExtraFil\".concat(nameCapitalized);\n                          _context2.next = 3;\n                          return _this.setSelectionHandler(val, actionName, currFilterName);\n\n                        case 3:\n                          //handles setSelected action calls\n                          req = {};\n\n                          _.map(hierarchy, function (item, index) {\n                            if (index <= filterIndex) {\n                              var _nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n                              // if (_.isEmpty(this.props[`selected${nameCapitalized}`])) return; //uncomment if u want empty filters removed\n\n\n                              var filterName = item.type === 'storeCluster' ? 'store_cluster' : item.type === 'exclusionList' ? 'exclusion_list' : item.type === 'styleColor' ? 'style_color' : item.type;\n                              req[filterName] = _this.props[\"selected\".concat(_nameCapitalized)]; //this goes as filters req obj in api calls\n                            }\n                          });\n\n                          _this.setState({\n                            filters: _objectSpread({}, req)\n                          });\n\n                        case 6:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                })));\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4, _x5, _x6, _x7, _x8, _x9) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.setDrop = function (val) {\n      var req = {};\n      var selItems = val.map(function (item) {\n        return item.label;\n      });\n      req['drop'] = selItems;\n\n      _this.setState({\n        filters: _objectSpread({}, req),\n        drops: val\n      }, function () {\n        _this.props.setSelectedDrops(val.map(function (v) {\n          return v.value;\n        }));\n      });\n    };\n\n    _this.actionCallHandler = function (func, isHierarchyNext, nextFilterName, req) {\n      var typeName = isHierarchyNext ? nextFilterName.toUpperCase() : labels[nextFilterName].toUpperCase();\n      if (nextFilterName === 'store') typeName = 'STORE_CODE';\n      var reqObj = {\n        filters: req,\n        allowInactiveProducts: _this.props.allowInactiveProducts || false\n      };\n      if (isHierarchyNext) reqObj.hierarchyType = typeName;\n      if (!isHierarchyNext) reqObj.filterType = typeName.replaceAll(' ', '_');\n\n      if (nextFilterName === 'customStyleGroup') {\n        var _req = {\n          filters: reqObj.filters,\n          disable_empty_flag: _this.props.disable_empty_flag && !_this.props.isEdit ? _this.props.disable_empty_flag : false\n        };\n        reqObj = _req;\n        func = \"fetchStyleGroups\";\n      }\n\n      if (nextFilterName === 'customStoreGroup') {\n        reqObj = {};\n        func = \"getCustomStores\";\n      }\n\n      _this.props[func](reqObj);\n    };\n\n    _this.filterOnFocusHandler = function (filterIndex, filterName, isHierarchy) {\n      var options = _this.props[filterName];\n      if (filterName && options && !options.callApi && !_.isEmpty(_this.props[filterName]) || !_this.validateFilters(filterIndex)) //if filter options already exists or if all of the mandatory filters that comes before this filter is not selected , return\n        return;\n\n      if (filterName === 'channel') {\n        _this.props.getExtraFilterChannel();\n\n        return;\n      }\n\n      var func = isHierarchy ? \"getHierarchyOptions\" : \"getExtraFiltersOptions\";\n      var req = {};\n\n      _.map(_this.state.hierarchy, function (item, index) {\n        if (index < filterIndex) {\n          var nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n\n          var selected = _this.props[\"selected\".concat(nameCapitalized)]; // if (_.isEmpty(selected)) return; //uncomment if u want empty filters removed\n\n\n          var _filterName = item.type === 'storeCluster' ? 'store_cluster' : item.type === 'exclusionList' ? 'exclusion_list' : item.type === 'styleColor' ? 'style_color' : item.type;\n\n          req[_filterName] = selected; //this goes as filters req obj in api calls\n\n          if (item.type === 'channel' && selected[0] === 'Web') req['ecom_flag'] = [1];\n          if (item.type === 'channel' && selected[0] === 'Outlet') req['retail_flag'] = [1];\n        }\n      });\n\n      if (filterName && _this.props[func]) {\n        //&& Object.keys(req).length\n        _this.actionCallHandler(func, isHierarchy, filterName, req); //calles next filters action, to get it's options\n\n      }\n    };\n\n    _this.setCustomStyleGroup = function (val) {\n      // let val = [item];\n      var selItems = val.map(function (item) {\n        return item.label;\n      }); // req['stores'] = selItems;\n\n      var newFilters = _objectSpread({}, _this.state.filters, {\n        customStyleGroup: selItems\n      });\n\n      _this.setState({\n        filters: newFilters,\n        customStyleGroup: val\n      }, function () {\n        // this.props.setSelectedCustomGroup(val.map((v) => v.id));\n        _this.props.setSelectedCustomGroup(val.map(function (v) {\n          return v.value;\n        }), 'name');\n\n        _this.props.setSelectedCustomGroup(val.map(function (v) {\n          return v.id;\n        }), 'id');\n      });\n    };\n\n    _this.setCustomStores = function (val) {\n      var selItems = val.map(function (item) {\n        return item.label;\n      });\n\n      var newFilters = _objectSpread({}, _this.state.filters, {\n        customStoreGroup: selItems\n      });\n\n      _this.setState({\n        filters: newFilters,\n        customStoreGroup: val\n      }, function () {\n        _this.props.setSelectedCustomStoreGroup(val.map(function (v) {\n          return v.value;\n        }));\n      });\n    };\n\n    _this.reset = function () {\n      _this.setState({\n        startDate: null,\n        endDate: null,\n        country: null,\n        channel: null,\n        storeCluster: null,\n        customStoreGroup: null,\n        store: null,\n        hierarchy1: null,\n        hierarchy2: null,\n        hierarchy3: null,\n        hierarchy4: null,\n        hierarchy5: null,\n        season: null,\n        matrix: null,\n        exclusionList: null,\n        clearance: null,\n        customStyleGroup: null,\n        styleColor: null,\n        hierarchy: _this.props.filtersOptions,\n        filters: {}\n      }, function () {\n        if (_this.props.from !== 'draft/status') _this.props.resetFilters(); ////////// handling reset issues rising bcs of tabs, only reset this component state, not reducer\n\n        _this.props.onReset && _this.props.onReset();\n      });\n    };\n\n    _this.onDatesChange = function (_ref4) {\n      var startDate = _ref4.startDate,\n          endDate = _ref4.endDate;\n\n      _this.setState({\n        startDate: startDate,\n        endDate: endDate\n      }, function () {\n        var weeks = [];\n\n        if (endDate) {\n          for (var i = startDate.clone(); i <= endDate; i = i.add(7, 'd')) {\n            weeks.push(i.week());\n          }\n        }\n\n        _this.props.setDateRange({\n          startDate: startDate && startDate.format('YYYY-MM-DD'),\n          endDate: endDate && endDate.format('YYYY-MM-DD'),\n          weeks: weeks\n        });\n      });\n    };\n\n    _this.validateFilters = function (filterIndex, dateRange) {\n      var hierarchy = _this.state.hierarchy;\n\n      for (var i = 0; i < filterIndex; i++) {\n        var type = hierarchy[i] && hierarchy[i].type;\n        var nameCapitalized = type && type.charAt(0).toUpperCase() + type.slice(1); //capitalizing the name to match action/reducer name\n\n        if (hierarchy[i] && hierarchy[i].isMandatory && _.isEmpty(_this.props[\"selected\".concat(nameCapitalized)])) {\n          return false;\n        }\n      }\n\n      if (dateRange && (_.isEmpty(_this.state.startDate) || _.isEmpty(_this.state.endDate))) return false;\n      return true;\n    };\n\n    _this.onFilterHandler = function () {\n      // if (!this.validateFilters(this.state.hierarchy.length, this.props.dateRange)) {\n      //   toast.error(`Please select mandatory filters`, {\n      //     autoClose: 15000,\n      //     hideProgressBar: true,\n      //   });\n      //   return;\n      // }\n      _this.props.onFilter({\n        filters: _this.state.filters,\n        startDate: _this.state.startDate,\n        endDate: _this.state.endDate,\n        customStyleGroup: _this.state.customStyleGroup\n      });\n    };\n\n    _this.state = {\n      filters: {},\n      startDate: null,\n      endDate: null,\n      hierarchy: [],\n      hierarchy1: props.retainFilters && props.selectedHierarchy1 ? props.selectedHierarchy1.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy2: props.retainFilters && props.selectedHierarchy2 ? props.selectedHierarchy2.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy3: props.retainFilters && props.selectedHierarchy3 ? props.selectedHierarchy3.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy4: props.retainFilters && props.selectedHierarchy4 ? props.selectedHierarchy4.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy5: props.retainFilters && props.selectedHierarchy5 ? props.selectedHierarchy5.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy6: props.retainFilters && props.selectedHierarchy6 ? props.selectedHierarchy6.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy7: props.retainFilters && props.selectedHierarchy7 ? props.selectedHierarchy7.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy8: props.retainFilters && props.selectedHierarchy8 && props.location.state ? props.location.state.styles.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : props.retainFilters && props.selectedHierarchy8 && _this.props.styleGroupEdit ? props.selectedHierarchy8.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      customStyleGroup: props.retainFilters && props.selectedCustomStyleGroup ? props.selectedCustomStyleGroup.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      stores: props.retainFilters && props.selectedStores ? props.selectedStores.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      season: props.retainFilters && props.selectedSeason ? props.selectedSeason.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      clearance: props.retainFilters && props.selectedClearance ? props.selectedClearance.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      matrix: props.retainFilters && props.selectedMatrix ? props.selectedMatrix.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      exclusionList: props.retainFilters && props.selectedExclusionList ? props.selectedExclusionList.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      styleColor: props.retainFilters && props.selectedStyleColor ? props.selectedStyleColor.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      country: props.retainFilters && props.selectedCountry ? props.selectedCountry.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      storeCluster: props.retainFilters && props.selectedStoreCluster ? props.selectedStoreCluster.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      store: props.retainFilters && props.selectedStore ? props.selectedStore.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      channel: props.retainFilters && props.selectedChannel ? props.selectedChannel.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      customStoreGroup: props.retainFilters && props.selectedCustomStoreGroup ? props.selectedCustomStoreGroup.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null\n    }; // +  !props.retainFilters && props.resetFilters();\n    // !props.isEdit &&\n    //   props.getHierarchyOptions({\n    //     filters: {},\n    //     hierarchyType: 'HIERARCHY1',\n    //     allowInactiveProducts: this.props.allowInactiveProducts || false,\n    //   });\n\n    props.getExtraFiltersOptions({\n      filters: {},\n      filterType: 'COUNTRY',\n      allowInactiveProducts: _this.props.allowInactiveProducts || false\n    });\n\n    if (props.retainFilters && props.location.state) {\n      props.setSelectedHierarchy7(props.location.state.styles, true);\n      props.setSelectedStores(_this.state.stores.map(function (e) {\n        return e.label;\n      }));\n    }\n\n    props.getCustomStores().then(function (res) {\n      if (_this.props.isEdit && _this.props.editPlanDetails[0] && !_.isEmpty(_this.props.editPlanDetails[0] && _this.props.editPlanDetails[0].request_obj)) {\n        var customStoreGroup = _this.props.editPlanDetails[0] && _this.props.editPlanDetails[0].request_obj && _this.props.editPlanDetails[0].request_obj.filters && _this.props.editPlanDetails[0].request_obj.filters.customStoreGroup;\n        var selectedCustomStore = [];\n\n        _.map(res, function (item) {\n          if (customStoreGroup && customStoreGroup.includes(item.value)) {\n            selectedCustomStore.push(item);\n          }\n        });\n\n        _this.setCustomStores(selectedCustomStore);\n      }\n    });\n    props.fetchStyleGroups({\n      disable_empty_flag: false,\n      filters: {}\n    }); // if (props.retainFilters && props.location.state) {\n    // props.setSelectedHierarchy7(props.location.state.styles, 'reporting');\n    // props.setSelectedStores(this.state.stores.map((e) => e.label));\n    // }\n\n    props.setRetainFilters(false);\n    return _this;\n  }\n\n  _createClass(Filters, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.retainFilters && !_.isEmpty(this.props.selectedHierarchy1)) {\n        var val = [{\n          label: this.props.selectedHierarchy1[0],\n          value: this.props.selectedHierarchy1[0]\n        }];\n        this.onHierarchyOneSelection(val);\n        return;\n      }\n\n      this.setState({\n        hierarchy: this.props.filtersOptions\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.filterReset) {\n        this.props.filterResetHandler(false);\n        this.reset(); // reset filters from configFilters\n      }\n\n      if (this.props.fromNotification && _.isEmpty(this.state.hierarchy1) && !_.isEmpty(this.props.cadenceInput) && !_.isEmpty(this.props.cadenceInput.filters)) {\n        var filters = this.props.cadenceInput.filters;\n        this.props.presetFilters(filters, true); //2nd argument to set a flag to call options api\n\n        this.setState({\n          country: _.map(filters.country, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          channel: _.map(filters.channel, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          storeCluster: _.map(filters.storeCluster, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          // customStoreGroup: _.map(filters.customStoreGroup, (item) => ({ value: item, label: item })),\n          store: _.map(filters.store, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy1: _.map(filters.hierarchy1, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy2: _.map(filters.hierarchy2, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy3: _.map(filters.hierarchy3, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy4: _.map(filters.hierarchy4, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy5: _.map(filters.hierarchy5, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          season: _.map(filters.season, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          matrix: _.map(filters.matrix, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          exclusionList: _.map(filters.exclusionList, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          clearance: _.map(filters.clearance, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          customStyleGroup: _.map(filters.customStyleGroup, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          styleColor: _.map(filters.styleColor, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          })\n        });\n\n        if (!_.isEmpty(this.props.customStoreGroup)) {\n          var selectedCustomStore = [];\n\n          _.map(this.props.customStoreGroup, function (item) {\n            if (filters.customStoreGroup && filters.customStoreGroup.includes(item.value)) {\n              selectedCustomStore.push(item);\n            }\n          });\n\n          this.setState({\n            customStoreGroup: selectedCustomStore\n          });\n          this.setCustomStores(selectedCustomStore);\n        }\n\n        if (!_.isEmpty(this.props.customStyleGroup)) {\n          var selectedCustomStyle = [];\n\n          _.map(this.props.customStyleGroup, function (item) {\n            if (filters.customStyleGroup && typeof filters.customStyleGroup[0] === 'string' && filters.customStyleGroup.includes(item.value)) {\n              selectedCustomStyle.push(item);\n              return;\n            }\n\n            if (filters.customStyleGroup && filters.customStyleGroup.includes(item.id)) {\n              selectedCustomStyle.push(item);\n            }\n          });\n\n          this.setState({\n            customStyleGroup: selectedCustomStyle\n          });\n          this.setCustomStyleGroup(selectedCustomStyle);\n        }\n      }\n\n      if (this.props.isEdit && _.isEmpty(this.state.styleColor) && this.props.editPlanDetails[0] && !_.isEmpty(this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj)) {\n        var _this$props$editPlanD = this.props.editPlanDetails[0].request_obj.filters,\n            country = _this$props$editPlanD.country,\n            clearance = _this$props$editPlanD.clearance,\n            matrix = _this$props$editPlanD.matrix,\n            exclusionList = _this$props$editPlanD.exclusionList,\n            styleColor = _this$props$editPlanD.styleColor,\n            storeCluster = _this$props$editPlanD.storeCluster,\n            store = _this$props$editPlanD.store,\n            channel = _this$props$editPlanD.channel,\n            customStyleGroup = _this$props$editPlanD.customStyleGroup,\n            customStoreGroup = _this$props$editPlanD.customStoreGroup,\n            season = _this$props$editPlanD.season,\n            hierarchy1 = _this$props$editPlanD.hierarchy1,\n            hierarchy2 = _this$props$editPlanD.hierarchy2,\n            hierarchy3 = _this$props$editPlanD.hierarchy3,\n            hierarchy4 = _this$props$editPlanD.hierarchy4,\n            hierarchy5 = _this$props$editPlanD.hierarchy5;\n        var customStyleName = this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj && this.props.editPlanDetails[0].request_obj.customStyleName; // this.props.presetFilters([\n        //   country,\n        //   channel,\n        //   storeCluster,\n        //   customStoreGroup,\n        //   store,\n        //   hierarchy1,\n        //   hierarchy2,\n        //   hierarchy3,\n        //   hierarchy4,\n        //   hierarchy5,\n        //   season,\n        //   matrix,\n        //   exclusionList,\n        //   clearance,\n        //   customStyleGroup,\n        //   styleColor,\n        // ]);\n\n        this.props.presetFilters(this.props.editPlanDetails[0].request_obj.filters);\n        this.setState({\n          country: _.map(country, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          channel: _.map(channel, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          storeCluster: _.map(storeCluster, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          customStoreGroup: _.map(customStoreGroup, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          store: _.map(store, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy1: _.map(hierarchy1, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy2: _.map(hierarchy2, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy3: _.map(hierarchy3, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy4: _.map(hierarchy4, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy5: _.map(hierarchy5, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          season: _.map(season, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          matrix: _.map(matrix, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          exclusionList: _.map(exclusionList, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          clearance: _.map(clearance, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          customStyleGroup: _.map(customStyleGroup, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          styleColor: _.map(styleColor, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          })\n        });\n      } // if (\n      //   this.props.from !== 'styleConfig' &&\n      //   this.props.from !== 'styleGroupConfig' &&\n      //   !_.isEmpty(this.props.selectedHierarchy8) &&\n      //   !_.isEqual(prevProps.selectedHierarchy8, this.props.selectedHierarchy8)\n      // ) {\n      //   let req = {\n      //     filters: {\n      //       hierarchy1: this.props.selectedHierarchy1,\n      //       hierarchy2: this.props.selectedHierarchy2,\n      //       hierarchy3: this.props.selectedHierarchy3,\n      //       hierarchy4: this.props.selectedHierarchy4,\n      //       hierarchy5: this.props.selectedHierarchy5,\n      //       // hierarchy6: this.props.selectedHierarchy6,\n      //       // hierarchy7: this.props.selectedHierarchy7,\n      //       // hierarchy8: this.props.selectedHierarchy8,\n      //     },\n      //     disable_empty_flag:\n      //       this.props.disable_empty_flag && !this.props.isEdit\n      //         ? this.props.disable_empty_flag\n      //         : false,\n      //   };\n      //   this.props.fetchStyleGroups(req);\n      // }\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: this.props.isEdit ? 'row d-flex ml-4 mr-4 edit-markdown-filters' : ' d-flex row ml-4 mr-4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650\n        },\n        __self: this\n      }, this.state.hierarchy && this.state.hierarchy.map(function (filter, i) {\n        return labels[filter.type] && React.createElement(\"div\", {\n          className: \"col-md-2 \",\n          key: filter.type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 660\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"mb-1 mt-3\",\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 661\n          },\n          __self: this\n        }, labels[filter.type], filter.isMandatory ? React.createElement(\"span\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 663\n          },\n          __self: this\n        }, \" * \") : null), React.createElement(Select, {\n          name: filter.type,\n          options: _this2.props[filter.type],\n          onFocus: function onFocus(e) {\n            return _this2.filterOnFocusHandler(i, filter.type, filter.isHierarchy);\n          },\n          onChange: function onChange(option) {\n            return _this2.getHierarchyOptions(option, i, filter.type, filter.isHierarchy, _this2.state.hierarchy[i + 1] && _this2.state.hierarchy[i + 1].type, _this2.state.hierarchy[i + 1] && _this2.state.hierarchy[i + 1].isHierarchy);\n          },\n          value: _this2.state[filter.type],\n          isMulti: filter.isMultiple,\n          isDisabled: i === 0 && _this2.props.styleGroupEdit ? true : false // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 665\n          },\n          __self: this\n        }));\n      }), this.props.dateRange && React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"mb-1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724\n        },\n        __self: this\n      }, \"Date range \", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725\n        },\n        __self: this\n      }, \" * \")), React.createElement(DateRangePicker, {\n        startDate: this.state.startDate,\n        startDateId: \"startDate_11\",\n        endDate: this.state.endDate,\n        endDateId: \"endDate_11\",\n        onDatesChange: this.onDatesChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727\n        },\n        __self: this\n      })), !this.props.hidefilterButton && React.createElement(\"div\", {\n        className: !this.props.dateRange && !this.props.hideCustomStores ? 'col-md-2 mt-5 px-0' //'col-md-3 mt-4  ml-auto text-right'\n        : 'col-md-3 mt-5',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        disabled: this.props.isEdit,\n        onClick: this.onFilterHandler,\n        className: !this.props.dateRange && !this.props.hideCustomStores ? 'col-md-5 btn btn-primary btn-filter ml-2' : 'col-md-4 btn btn-primary btn-filter',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752\n        },\n        __self: this\n      }), \"\\xA0 Filter\")), React.createElement(\"button\", {\n        disabled: this.props.isEdit || this.props.styleGroupEdit,\n        className: !this.props.dateRange && !this.props.hideCustomStores ? ' col-md-5 btn btn-primary btn-filter btn-filter-reset ml-3' : 'col-md-4 offset-1 btn btn-primary btn-filter btn-filter-reset',\n        onClick: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-repeat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764\n        },\n        __self: this\n      }), \"\\xA0 Reset\")))));\n    }\n  }]);\n\n  return Filters;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    drops: store.filtersReducer.drops,\n    selectedDrops: store.filtersReducer.selectedDrops,\n    hierarchy1: store.filtersReducer.hierarchy1,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    hierarchy2: store.filtersReducer.hierarchy2,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    hierarchy3: store.filtersReducer.hierarchy3,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    hierarchy4: store.filtersReducer.hierarchy4,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    hierarchy5: store.filtersReducer.hierarchy5,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    hierarchy6: store.filtersReducer.hierarchy6,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    hierarchy7: store.filtersReducer.hierarchy7,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    hierarchy8: store.filtersReducer.hierarchy8,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    stores: store.filtersReducer.stores,\n    customStoreGroup: store.filtersReducer.customStoreGroup,\n    customStyleGroup: store.filtersReducer.customStyleGroup,\n    selectedStores: store.filtersReducer.selectedStores,\n    selectedCustomStyleGroup: store.filtersReducer.selectedCustomStyleGroup,\n    selectedCustomStoreGroup: store.filtersReducer.selectedCustomStoreGroup,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks,\n    retainFilters: store.filtersReducer.retainFilters,\n    editPlanDetails: store.manuallyCreateMdData.editPlanDetails,\n    season: store.filtersReducer.season,\n    selectedSeason: store.filtersReducer.selectedSeason,\n    clearance: store.filtersReducer.clearance,\n    selectedClearance: store.filtersReducer.selectedClearance,\n    matrix: store.filtersReducer.matrix,\n    selectedMatrix: store.filtersReducer.selectedMatrix,\n    exclusionList: store.filtersReducer.exclusionList,\n    selectedExclusionList: store.filtersReducer.selectedExclusionList,\n    styleColor: store.filtersReducer.styleColor,\n    selectedStyleColor: store.filtersReducer.selectedStyleColor,\n    country: store.filtersReducer.country,\n    selectedCountry: store.filtersReducer.selectedCountry,\n    storeCluster: store.filtersReducer.storeCluster,\n    selectedStoreCluster: store.filtersReducer.selectedStoreCluster,\n    store: store.filtersReducer.store,\n    selectedStore: store.filtersReducer.selectedStore,\n    channel: store.filtersReducer.channel,\n    selectedChannel: store.filtersReducer.selectedChannel,\n    cadenceInput: store.manuallyCreateMdData.cadenceInput\n  };\n};\n\nvar mapDispatchToProps = {\n  getHierarchyOptions: FilterActions.getHierarchyOptions,\n  getExtraFiltersOptions: FilterActions.getExtraFiltersOptions,\n  getStores: FilterActions.getStores,\n  getCustomStores: FilterActions.getCustomStores,\n  setSelectedDrops: FilterActions.setSelectedDrops,\n  setSelectedHierarchy1: FilterActions.setSelectedHierarchy1,\n  setSelectedHierarchy2: FilterActions.setSelectedHierarchy2,\n  setSelectedHierarchy3: FilterActions.setSelectedHierarchy3,\n  setSelectedHierarchy4: FilterActions.setSelectedHierarchy4,\n  setSelectedHierarchy5: FilterActions.setSelectedHierarchy5,\n  setSelectedHierarchy6: FilterActions.setSelectedHierarchy6,\n  setSelectedHierarchy7: FilterActions.setSelectedHierarchy7,\n  setSelectedHierarchy8: FilterActions.setSelectedHierarchy8,\n  setSelectedStores: FilterActions.setSelectedStores,\n  setSelectedCustomGroup: FilterActions.setSelectedCustomGroup,\n  setSelectedCustomStoreGroup: FilterActions.setSelectedCustomStoreGroup,\n  setDateRange: FilterActions.setDateRange,\n  resetFilters: FilterActions.resetFilters,\n  setRetainFilters: FilterActions.setRetainFilters,\n  presetFilters: FilterActions.presetFilters,\n  getExtraFilterChannel: FilterActions.getExtraFilterChannel,\n  setSelectedExtraFilSeason: FilterActions.setSelectedExtraFilSeason,\n  setSelectedExtraFilMatrix: FilterActions.setSelectedExtraFilMatrix,\n  setSelectedExtraFilExclusionList: FilterActions.setSelectedExtraFilExclusionList,\n  setSelectedExtraFilClearance: FilterActions.setSelectedExtraFilClearance,\n  setSelectedExtraFilStyleColor: FilterActions.setSelectedExtraFilStyleColor,\n  setSelectedExtraFilCountry: FilterActions.setSelectedExtraFilCountry,\n  setSelectedExtraFilStoreCluster: FilterActions.setSelectedExtraFilStoreCluster,\n  setSelectedExtraFilChannel: FilterActions.setSelectedExtraFilChannel,\n  setSelectedExtraFilStore: FilterActions.setSelectedExtraFilStore,\n  fetchStyleGroups: FilterActions.fetchStyleGroups\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Filters));","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/services/filters/index.js"],"names":["React","Component","withRouter","labels","validations","Select","connect","DateRangePicker","FilterActions","toast","_","Filters","props","onHierarchyOneSelection","val","hierarchyClone","cloneDeep","filtersOptions","valiadtion","label","findIndex","index","key","type","isEmpty","swap","a","b","temp","remove","map","item","i","itm","setState","hierarchy","setSelectionHandler","actionName","name","setSelectedCustomStoreGroup","v","value","setSelectedCustomGroup","id","e","getHierarchyOptions","filterIndex","currFilterName","isHierarchyPrev","nextFilterName","isHierarchyNext","Array","isArray","state","nameCapitalized","charAt","toUpperCase","slice","resetHierachies","req","filterName","filters","setDrop","selItems","drops","setSelectedDrops","actionCallHandler","func","typeName","reqObj","allowInactiveProducts","hierarchyType","filterType","replaceAll","disable_empty_flag","isEdit","filterOnFocusHandler","isHierarchy","options","callApi","validateFilters","getExtraFilterChannel","selected","setCustomStyleGroup","newFilters","customStyleGroup","setCustomStores","customStoreGroup","reset","startDate","endDate","country","channel","storeCluster","store","hierarchy1","hierarchy2","hierarchy3","hierarchy4","hierarchy5","season","matrix","exclusionList","clearance","styleColor","from","resetFilters","onReset","onDatesChange","weeks","clone","add","push","week","setDateRange","format","dateRange","isMandatory","onFilterHandler","onFilter","retainFilters","selectedHierarchy1","selectedHierarchy2","selectedHierarchy3","selectedHierarchy4","selectedHierarchy5","hierarchy6","selectedHierarchy6","hierarchy7","selectedHierarchy7","hierarchy8","selectedHierarchy8","location","styles","styleGroupEdit","selectedCustomStyleGroup","stores","selectedStores","selectedSeason","selectedClearance","selectedMatrix","selectedExclusionList","selectedStyleColor","selectedCountry","selectedStoreCluster","selectedStore","selectedChannel","selectedCustomStoreGroup","getExtraFiltersOptions","setSelectedHierarchy7","setSelectedStores","getCustomStores","then","res","editPlanDetails","request_obj","selectedCustomStore","includes","fetchStyleGroups","setRetainFilters","prevProps","prevState","filterReset","filterResetHandler","fromNotification","cadenceInput","presetFilters","selectedCustomStyle","customStyleName","filter","whiteSpace","color","option","isMultiple","hidefilterButton","hideCustomStores","mapStateToProps","filtersReducer","selectedDrops","manuallyCreateMdData","mapDispatchToProps","getStores","setSelectedHierarchy1","setSelectedHierarchy2","setSelectedHierarchy3","setSelectedHierarchy4","setSelectedHierarchy5","setSelectedHierarchy6","setSelectedHierarchy8","setSelectedExtraFilSeason","setSelectedExtraFilMatrix","setSelectedExtraFilExclusionList","setSelectedExtraFilClearance","setSelectedExtraFilStyleColor","setSelectedExtraFilCountry","setSelectedExtraFilStoreCluster","setSelectedExtraFilChannel","setSelectedExtraFilStore"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { labels, validations } from './config';\nimport Select from '../select';\nimport './index.css';\nimport { connect } from 'react-redux';\nimport DateRangePicker from '../RetailCalendarDatePicker';\nimport FilterActions from '../../actions/filtersAction';\nimport { toast } from 'react-toastify';\nimport _ from 'lodash';\n\nclass Filters extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filters: {},\n      startDate: null,\n      endDate: null,\n      hierarchy: [],\n      hierarchy1:\n        props.retainFilters && props.selectedHierarchy1\n          ? props.selectedHierarchy1.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy2:\n        props.retainFilters && props.selectedHierarchy2\n          ? props.selectedHierarchy2.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy3:\n        props.retainFilters && props.selectedHierarchy3\n          ? props.selectedHierarchy3.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy4:\n        props.retainFilters && props.selectedHierarchy4\n          ? props.selectedHierarchy4.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy5:\n        props.retainFilters && props.selectedHierarchy5\n          ? props.selectedHierarchy5.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy6:\n        props.retainFilters && props.selectedHierarchy6\n          ? props.selectedHierarchy6.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy7:\n        props.retainFilters && props.selectedHierarchy7\n          ? props.selectedHierarchy7.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy8:\n        props.retainFilters && props.selectedHierarchy8 && props.location.state\n          ? props.location.state.styles.map((e) => {\n              return { value: e, label: e };\n            })\n          : props.retainFilters && props.selectedHierarchy8 && this.props.styleGroupEdit\n          ? props.selectedHierarchy8.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      customStyleGroup:\n        props.retainFilters && props.selectedCustomStyleGroup\n          ? props.selectedCustomStyleGroup.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      stores:\n        props.retainFilters && props.selectedStores\n          ? props.selectedStores.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      season:\n        props.retainFilters && props.selectedSeason\n          ? props.selectedSeason.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      clearance:\n        props.retainFilters && props.selectedClearance\n          ? props.selectedClearance.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      matrix:\n        props.retainFilters && props.selectedMatrix\n          ? props.selectedMatrix.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      exclusionList:\n        props.retainFilters && props.selectedExclusionList\n          ? props.selectedExclusionList.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      styleColor:\n        props.retainFilters && props.selectedStyleColor\n          ? props.selectedStyleColor.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      country:\n        props.retainFilters && props.selectedCountry\n          ? props.selectedCountry.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      storeCluster:\n        props.retainFilters && props.selectedStoreCluster\n          ? props.selectedStoreCluster.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      store:\n        props.retainFilters && props.selectedStore\n          ? props.selectedStore.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      channel:\n        props.retainFilters && props.selectedChannel\n          ? props.selectedChannel.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      customStoreGroup:\n        props.retainFilters && props.selectedCustomStoreGroup\n          ? props.selectedCustomStoreGroup.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n    };\n    // +  !props.retainFilters && props.resetFilters();\n    // !props.isEdit &&\n    //   props.getHierarchyOptions({\n    //     filters: {},\n    //     hierarchyType: 'HIERARCHY1',\n    //     allowInactiveProducts: this.props.allowInactiveProducts || false,\n    //   });\n    props.getExtraFiltersOptions({\n      filters: {},\n      filterType: 'COUNTRY',\n      allowInactiveProducts: this.props.allowInactiveProducts || false,\n    });\n    if (props.retainFilters && props.location.state) {\n      props.setSelectedHierarchy7(props.location.state.styles, true);\n      props.setSelectedStores(this.state.stores.map((e) => e.label));\n    }\n    props.getCustomStores().then((res) => {\n      if (\n        this.props.isEdit &&\n        this.props.editPlanDetails[0] &&\n        !_.isEmpty(this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj)\n      ) {\n        let customStoreGroup =\n          this.props.editPlanDetails[0] &&\n          this.props.editPlanDetails[0].request_obj &&\n          this.props.editPlanDetails[0].request_obj.filters &&\n          this.props.editPlanDetails[0].request_obj.filters.customStoreGroup;\n        let selectedCustomStore = [];\n        _.map(res, (item) => {\n          if (customStoreGroup && customStoreGroup.includes(item.value)) {\n            selectedCustomStore.push(item);\n          }\n        });\n        this.setCustomStores(selectedCustomStore);\n      }\n    });\n    props.fetchStyleGroups({\n      disable_empty_flag: false,\n      filters: {},\n    });\n\n    // if (props.retainFilters && props.location.state) {\n    // props.setSelectedHierarchy7(props.location.state.styles, 'reporting');\n    // props.setSelectedStores(this.state.stores.map((e) => e.label));\n    // }\n    props.setRetainFilters(false);\n  }\n  componentDidMount() {\n    if (this.props.retainFilters && !_.isEmpty(this.props.selectedHierarchy1)) {\n      let val = [\n        {\n          label: this.props.selectedHierarchy1[0],\n          value: this.props.selectedHierarchy1[0],\n        },\n      ];\n      this.onHierarchyOneSelection(val);\n      return;\n    }\n    this.setState({ hierarchy: this.props.filtersOptions });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.filterReset) {\n      this.props.filterResetHandler(false);\n      this.reset(); // reset filters from configFilters\n    }\n    if (\n      this.props.fromNotification &&\n      _.isEmpty(this.state.hierarchy1) &&\n      !_.isEmpty(this.props.cadenceInput) &&\n      !_.isEmpty(this.props.cadenceInput.filters)\n    ) {\n      let filters = this.props.cadenceInput.filters;\n      this.props.presetFilters(filters, true); //2nd argument to set a flag to call options api\n      this.setState({\n        country: _.map(filters.country, (item) => ({ value: item, label: item })),\n        channel: _.map(filters.channel, (item) => ({ value: item, label: item })),\n        storeCluster: _.map(filters.storeCluster, (item) => ({ value: item, label: item })),\n        // customStoreGroup: _.map(filters.customStoreGroup, (item) => ({ value: item, label: item })),\n        store: _.map(filters.store, (item) => ({ value: item, label: item })),\n        hierarchy1: _.map(filters.hierarchy1, (item) => ({ value: item, label: item })),\n        hierarchy2: _.map(filters.hierarchy2, (item) => ({ value: item, label: item })),\n        hierarchy3: _.map(filters.hierarchy3, (item) => ({ value: item, label: item })),\n        hierarchy4: _.map(filters.hierarchy4, (item) => ({ value: item, label: item })),\n        hierarchy5: _.map(filters.hierarchy5, (item) => ({ value: item, label: item })),\n        season: _.map(filters.season, (item) => ({ value: item, label: item })),\n        matrix: _.map(filters.matrix, (item) => ({ value: item, label: item })),\n        exclusionList: _.map(filters.exclusionList, (item) => ({ value: item, label: item })),\n        clearance: _.map(filters.clearance, (item) => ({ value: item, label: item })),\n        customStyleGroup: _.map(filters.customStyleGroup, (item) => ({ value: item, label: item })),\n        styleColor: _.map(filters.styleColor, (item) => ({ value: item, label: item })),\n      });\n      if (!_.isEmpty(this.props.customStoreGroup)) {\n        let selectedCustomStore = [];\n        _.map(this.props.customStoreGroup, (item) => {\n          if (filters.customStoreGroup && filters.customStoreGroup.includes(item.value)) {\n            selectedCustomStore.push(item);\n          }\n        });\n        this.setState({\n          customStoreGroup: selectedCustomStore,\n        });\n        this.setCustomStores(selectedCustomStore);\n      }\n      if (!_.isEmpty(this.props.customStyleGroup)) {\n        let selectedCustomStyle = [];\n        _.map(this.props.customStyleGroup, (item) => {\n          if (\n            filters.customStyleGroup &&\n            typeof filters.customStyleGroup[0] === 'string' &&\n            filters.customStyleGroup.includes(item.value)\n          ) {\n            selectedCustomStyle.push(item);\n            return;\n          }\n          if (filters.customStyleGroup && filters.customStyleGroup.includes(item.id)) {\n            selectedCustomStyle.push(item);\n          }\n        });\n        this.setState({\n          customStyleGroup: selectedCustomStyle,\n        });\n        this.setCustomStyleGroup(selectedCustomStyle);\n      }\n    }\n    if (\n      this.props.isEdit &&\n      _.isEmpty(this.state.styleColor) &&\n      this.props.editPlanDetails[0] &&\n      !_.isEmpty(this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj)\n    ) {\n      let {\n        country,\n        clearance,\n        matrix,\n        exclusionList,\n        styleColor,\n        storeCluster,\n        store,\n        channel,\n        customStyleGroup,\n        customStoreGroup,\n        season,\n        hierarchy1,\n        hierarchy2,\n        hierarchy3,\n        hierarchy4,\n        hierarchy5,\n      } = this.props.editPlanDetails[0].request_obj.filters;\n\n      let customStyleName =\n        this.props.editPlanDetails[0] &&\n        this.props.editPlanDetails[0].request_obj &&\n        this.props.editPlanDetails[0].request_obj.customStyleName;\n\n      // this.props.presetFilters([\n      //   country,\n      //   channel,\n      //   storeCluster,\n      //   customStoreGroup,\n      //   store,\n      //   hierarchy1,\n      //   hierarchy2,\n      //   hierarchy3,\n      //   hierarchy4,\n      //   hierarchy5,\n      //   season,\n      //   matrix,\n      //   exclusionList,\n      //   clearance,\n      //   customStyleGroup,\n      //   styleColor,\n      // ]);\n      this.props.presetFilters(this.props.editPlanDetails[0].request_obj.filters);\n      this.setState({\n        country: _.map(country, (item) => ({ value: item, label: item })),\n        channel: _.map(channel, (item) => ({ value: item, label: item })),\n        storeCluster: _.map(storeCluster, (item) => ({ value: item, label: item })),\n        customStoreGroup: _.map(customStoreGroup, (item) => ({ value: item, label: item })),\n        store: _.map(store, (item) => ({ value: item, label: item })),\n        hierarchy1: _.map(hierarchy1, (item) => ({ value: item, label: item })),\n        hierarchy2: _.map(hierarchy2, (item) => ({ value: item, label: item })),\n        hierarchy3: _.map(hierarchy3, (item) => ({ value: item, label: item })),\n        hierarchy4: _.map(hierarchy4, (item) => ({ value: item, label: item })),\n        hierarchy5: _.map(hierarchy5, (item) => ({ value: item, label: item })),\n        season: _.map(season, (item) => ({ value: item, label: item })),\n        matrix: _.map(matrix, (item) => ({ value: item, label: item })),\n        exclusionList: _.map(exclusionList, (item) => ({ value: item, label: item })),\n        clearance: _.map(clearance, (item) => ({ value: item, label: item })),\n        customStyleGroup: _.map(customStyleGroup, (item) => ({ value: item, label: item })),\n        styleColor: _.map(styleColor, (item) => ({ value: item, label: item })),\n      });\n    }\n    // if (\n    //   this.props.from !== 'styleConfig' &&\n    //   this.props.from !== 'styleGroupConfig' &&\n    //   !_.isEmpty(this.props.selectedHierarchy8) &&\n    //   !_.isEqual(prevProps.selectedHierarchy8, this.props.selectedHierarchy8)\n    // ) {\n    //   let req = {\n    //     filters: {\n    //       hierarchy1: this.props.selectedHierarchy1,\n    //       hierarchy2: this.props.selectedHierarchy2,\n    //       hierarchy3: this.props.selectedHierarchy3,\n    //       hierarchy4: this.props.selectedHierarchy4,\n    //       hierarchy5: this.props.selectedHierarchy5,\n    //       // hierarchy6: this.props.selectedHierarchy6,\n    //       // hierarchy7: this.props.selectedHierarchy7,\n    //       // hierarchy8: this.props.selectedHierarchy8,\n    //     },\n    //     disable_empty_flag:\n    //       this.props.disable_empty_flag && !this.props.isEdit\n    //         ? this.props.disable_empty_flag\n    //         : false,\n    //   };\n    //   this.props.fetchStyleGroups(req);\n    // }\n  }\n  onHierarchyOneSelection = (val) => {\n    let hierarchyClone = _.cloneDeep(this.props.filtersOptions);\n    let valiadtion = validations[val[0].label];\n    let findIndex = (index, key) =>\n      _.findIndex(hierarchyClone, {\n        type: `${valiadtion[key][index]}`,\n      }); //finding index num for swap case from validations\n    if (valiadtion && !_.isEmpty(valiadtion.swap)) {\n      //swaping filters\n      let a = findIndex(0, 'swap'),\n        b = findIndex(1, 'swap');\n      let temp = hierarchyClone[a];\n\n      hierarchyClone[a] = hierarchyClone[b];\n      hierarchyClone[b] = temp;\n    }\n    if (valiadtion && !_.isEmpty(valiadtion.remove)) {\n      //remove filters case\n      _.map(valiadtion.remove, (item, i) => {\n        _.remove(hierarchyClone, (itm, index) => index === findIndex(i, 'remove'));\n      });\n    }\n    this.setState({ hierarchy: hierarchyClone });\n    return hierarchyClone;\n  };\n\n  setSelectionHandler = async (val, actionName, name) => {\n    if (name === 'customStoreGroup') {\n      await this.props.setSelectedCustomStoreGroup(val.map((v) => v.value));\n      return;\n    }\n    if (name === 'customStyleGroup') {\n      this.props.setSelectedCustomGroup(\n        val.map((v) => v.value),\n        'name'\n      );\n      await this.props.setSelectedCustomGroup(\n        val.map((v) => v.id),\n        'id'\n      );\n      return;\n    }\n    await this.props[actionName](val.map((e) => e.label));\n    return;\n  };\n  getHierarchyOptions = async (\n    val,\n    filterIndex,\n    currFilterName,\n    isHierarchyPrev,\n    nextFilterName,\n    isHierarchyNext\n  ) => {\n    !Array.isArray(val) && (val = [val]);\n    let hierarchy = _.cloneDeep(this.state.hierarchy);\n\n    if (currFilterName === 'hierarchy1') {\n      //Division selected case\n      hierarchy = await this.onHierarchyOneSelection(val); //returns updated hierarchy data;\n    }\n    if (_.findIndex(hierarchy, { type: 'hierarchy1' }) > filterIndex) {\n      this.setState({ hierarchy: this.props.filtersOptions }); //reset filters that are removed or swapped when filters that comes before H1 are set\n    }\n\n    let nameCapitalized =\n      currFilterName && currFilterName.charAt(0).toUpperCase() + currFilterName.slice(1); //capitalizing the name to match action/reducer name\n    let resetHierachies = {};\n    _.map(hierarchy, (item, index) => {\n      if (index > filterIndex) {\n        resetHierachies[item.type] = null; //all fiters value, which comes after selected filter becomes null(reset)\n      }\n    });\n    this.setState({ [currFilterName]: val, ...resetHierachies }, async () => {\n      let actionName = isHierarchyPrev\n        ? `setSelected${nameCapitalized}`\n        : `setSelectedExtraFil${nameCapitalized}`;\n\n      await this.setSelectionHandler(val, actionName, currFilterName); //handles setSelected action calls\n\n      let req = {};\n      _.map(hierarchy, (item, index) => {\n        if (index <= filterIndex) {\n          let nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n          // if (_.isEmpty(this.props[`selected${nameCapitalized}`])) return; //uncomment if u want empty filters removed\n          let filterName =\n            item.type === 'storeCluster'\n              ? 'store_cluster'\n              : item.type === 'exclusionList'\n              ? 'exclusion_list'\n              : item.type === 'styleColor'\n              ? 'style_color'\n              : item.type;\n          req[filterName] = this.props[`selected${nameCapitalized}`]; //this goes as filters req obj in api calls\n        }\n      });\n      this.setState({ filters: { ...req } });\n    });\n  };\n  setDrop = (val) => {\n    let req = {};\n    let selItems = val.map((item) => item.label);\n    req['drop'] = selItems;\n    this.setState({ filters: { ...req }, drops: val }, () => {\n      this.props.setSelectedDrops(val.map((v) => v.value));\n    });\n  };\n  actionCallHandler = (func, isHierarchyNext, nextFilterName, req) => {\n    let typeName = isHierarchyNext\n      ? nextFilterName.toUpperCase()\n      : labels[nextFilterName].toUpperCase();\n    if (nextFilterName === 'store') typeName = 'STORE_CODE';\n    let reqObj = {\n      filters: req,\n      allowInactiveProducts: this.props.allowInactiveProducts || false,\n    };\n    if (isHierarchyNext) reqObj.hierarchyType = typeName;\n    if (!isHierarchyNext) reqObj.filterType = typeName.replaceAll(' ', '_');\n    if (nextFilterName === 'customStyleGroup') {\n      let req = {\n        filters: reqObj.filters,\n        disable_empty_flag:\n          this.props.disable_empty_flag && !this.props.isEdit\n            ? this.props.disable_empty_flag\n            : false,\n      };\n      reqObj = req;\n      func = `fetchStyleGroups`;\n    }\n    if (nextFilterName === 'customStoreGroup') {\n      reqObj = {};\n      func = `getCustomStores`;\n    }\n\n    this.props[func](reqObj);\n  };\n  filterOnFocusHandler = (filterIndex, filterName, isHierarchy) => {\n    let options = this.props[filterName];\n    if (\n      (filterName && options && !options.callApi && !_.isEmpty(this.props[filterName])) ||\n      !this.validateFilters(filterIndex)\n    )\n      //if filter options already exists or if all of the mandatory filters that comes before this filter is not selected , return\n      return;\n\n    if (filterName === 'channel') {\n      this.props.getExtraFilterChannel();\n      return;\n    }\n    let func = isHierarchy ? `getHierarchyOptions` : `getExtraFiltersOptions`;\n    let req = {};\n    _.map(this.state.hierarchy, (item, index) => {\n      if (index < filterIndex) {\n        let nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n        let selected = this.props[`selected${nameCapitalized}`];\n        // if (_.isEmpty(selected)) return; //uncomment if u want empty filters removed\n        let filterName =\n          item.type === 'storeCluster'\n            ? 'store_cluster'\n            : item.type === 'exclusionList'\n            ? 'exclusion_list'\n            : item.type === 'styleColor'\n            ? 'style_color'\n            : item.type;\n        req[filterName] = selected; //this goes as filters req obj in api calls\n        if (item.type === 'channel' && selected[0] === 'Web') req['ecom_flag'] = [1];\n        if (item.type === 'channel' && selected[0] === 'Outlet') req['retail_flag'] = [1];\n      }\n    });\n    if (filterName && this.props[func]) {\n      //&& Object.keys(req).length\n      this.actionCallHandler(func, isHierarchy, filterName, req); //calles next filters action, to get it's options\n    }\n  };\n  setCustomStyleGroup = (val) => {\n    // let val = [item];\n    let selItems = val.map((item) => item.label);\n    // req['stores'] = selItems;\n    let newFilters = { ...this.state.filters, customStyleGroup: selItems };\n    this.setState({ filters: newFilters, customStyleGroup: val }, () => {\n      // this.props.setSelectedCustomGroup(val.map((v) => v.id));\n      this.props.setSelectedCustomGroup(\n        val.map((v) => v.value),\n        'name'\n      );\n      this.props.setSelectedCustomGroup(\n        val.map((v) => v.id),\n        'id'\n      );\n    });\n  };\n  setCustomStores = (val) => {\n    let selItems = val.map((item) => item.label);\n    let newFilters = { ...this.state.filters, customStoreGroup: selItems };\n    this.setState({ filters: newFilters, customStoreGroup: val }, () => {\n      this.props.setSelectedCustomStoreGroup(val.map((v) => v.value));\n    });\n  };\n  reset = () => {\n    this.setState(\n      {\n        startDate: null,\n        endDate: null,\n        country: null,\n        channel: null,\n        storeCluster: null,\n        customStoreGroup: null,\n        store: null,\n        hierarchy1: null,\n        hierarchy2: null,\n        hierarchy3: null,\n        hierarchy4: null,\n        hierarchy5: null,\n        season: null,\n        matrix: null,\n        exclusionList: null,\n        clearance: null,\n        customStyleGroup: null,\n        styleColor: null,\n        hierarchy: this.props.filtersOptions,\n        filters: {},\n      },\n      () => {\n        if (this.props.from !== 'draft/status') this.props.resetFilters(); ////////// handling reset issues rising bcs of tabs, only reset this component state, not reducer\n        this.props.onReset && this.props.onReset();\n      }\n    );\n  };\n  onDatesChange = ({ startDate, endDate }) => {\n    this.setState(\n      {\n        startDate,\n        endDate,\n      },\n      () => {\n        let weeks = [];\n        if (endDate) {\n          for (let i = startDate.clone(); i <= endDate; i = i.add(7, 'd')) {\n            weeks.push(i.week());\n          }\n        }\n\n        this.props.setDateRange({\n          startDate: startDate && startDate.format('YYYY-MM-DD'),\n          endDate: endDate && endDate.format('YYYY-MM-DD'),\n          weeks,\n        });\n      }\n    );\n  };\n\n  validateFilters = (filterIndex, dateRange) => {\n    let { hierarchy } = this.state;\n    for (let i = 0; i < filterIndex; i++) {\n      let type = hierarchy[i] && hierarchy[i].type;\n\n      let nameCapitalized = type && type.charAt(0).toUpperCase() + type.slice(1); //capitalizing the name to match action/reducer name\n\n      if (\n        hierarchy[i] &&\n        hierarchy[i].isMandatory &&\n        _.isEmpty(this.props[`selected${nameCapitalized}`])\n      ) {\n        return false;\n      }\n    }\n    if (dateRange && (_.isEmpty(this.state.startDate) || _.isEmpty(this.state.endDate)))\n      return false;\n\n    return true;\n  };\n  onFilterHandler = () => {\n    // if (!this.validateFilters(this.state.hierarchy.length, this.props.dateRange)) {\n    //   toast.error(`Please select mandatory filters`, {\n    //     autoClose: 15000,\n    //     hideProgressBar: true,\n    //   });\n    //   return;\n    // }\n    this.props.onFilter({\n      filters: this.state.filters,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      customStyleGroup: this.state.customStyleGroup,\n    });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div\n          className={\n            this.props.isEdit\n              ? 'row d-flex ml-4 mr-4 edit-markdown-filters'\n              : ' d-flex row ml-4 mr-4'\n          }>\n          {this.state.hierarchy &&\n            this.state.hierarchy.map(\n              (filter, i) =>\n                labels[filter.type] && (\n                  <div className=\"col-md-2 \" key={filter.type}>\n                    <label className=\"mb-1 mt-3\" style={{ whiteSpace: 'nowrap' }}>\n                      {labels[filter.type]}\n                      {filter.isMandatory ? <span style={{ color: 'red' }}> * </span> : null}\n                    </label>\n                    <Select\n                      name={filter.type}\n                      options={this.props[filter.type]}\n                      onFocus={(e) => this.filterOnFocusHandler(i, filter.type, filter.isHierarchy)}\n                      onChange={(option) =>\n                        this.getHierarchyOptions(\n                          option,\n                          i,\n                          filter.type,\n                          filter.isHierarchy,\n                          this.state.hierarchy[i + 1] && this.state.hierarchy[i + 1].type,\n                          this.state.hierarchy[i + 1] && this.state.hierarchy[i + 1].isHierarchy\n                        )\n                      }\n                      value={this.state[filter.type]}\n                      isMulti={filter.isMultiple}\n                      isDisabled={i === 0 && this.props.styleGroupEdit ? true : false}\n                      // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n                    />\n                  </div>\n                )\n            )}\n\n          {/* {this.props.customStyleGroups &&\n            labels.customStyleGroup &&\n            !this.props.hideCustomStyleGroup && (\n              <div className=\"col-md-2 \">\n                <label className=\"mb-1 mt-3\">\n                  Custom Style Group\n                  {this.props.customStyleGrpMandatory ? (\n                    <span style={{ color: 'red' }}> * </span>\n                  ) : null}\n                </label>\n                <Select\n                  options={this.props.customStyleGroup}\n                  onChange={(option) => this.setCustomStyleGroup(option)}\n                  value={this.state.customStyleGroup}\n                  isMulti\n                  // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n                />\n              </div>\n            )}\n          {this.props.customStoreGroup && labels.customStoreGroup && !this.props.hideCustomStores && (\n            <div className=\"col-md-2 \">\n              <label className=\"mb-1 mt-3\">\n                {labels.customStoreGroup}\n                \n              </label>\n              <Select\n                options={this.props.customStoreGroup}\n                onChange={(option) => this.setCustomStores(option)}\n                value={this.state.customStoreGroup}\n                isMulti\n                // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n              />\n            </div>\n          )} */}\n          {this.props.dateRange && (\n            <div className=\"col-md-3\">\n              <label className=\"mb-1 mt-3\">\n                Date range <span style={{ color: 'red' }}> * </span>\n              </label>\n              <DateRangePicker\n                startDate={this.state.startDate}\n                startDateId=\"startDate_11\"\n                endDate={this.state.endDate}\n                endDateId=\"endDate_11\"\n                onDatesChange={this.onDatesChange}\n              />\n            </div>\n          )}\n          {!this.props.hidefilterButton && (\n            <div\n              className={\n                !this.props.dateRange && !this.props.hideCustomStores\n                  ? 'col-md-2 mt-5 px-0' //'col-md-3 mt-4  ml-auto text-right'\n                  : 'col-md-3 mt-5'\n              }>\n              <button\n                disabled={this.props.isEdit}\n                onClick={this.onFilterHandler}\n                className={\n                  !this.props.dateRange && !this.props.hideCustomStores\n                    ? 'col-md-5 btn btn-primary btn-filter ml-2'\n                    : 'col-md-4 btn btn-primary btn-filter'\n                }>\n                <span>\n                  <i className=\"fa fa-filter\"></i>&nbsp; Filter\n                </span>\n              </button>\n              <button\n                disabled={this.props.isEdit || this.props.styleGroupEdit}\n                className={\n                  !this.props.dateRange && !this.props.hideCustomStores\n                    ? ' col-md-5 btn btn-primary btn-filter btn-filter-reset ml-3'\n                    : 'col-md-4 offset-1 btn btn-primary btn-filter btn-filter-reset'\n                }\n                onClick={this.reset}>\n                <span>\n                  <i className=\"fa fa-repeat\"></i>&nbsp; Reset\n                </span>\n              </button>\n            </div>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    drops: store.filtersReducer.drops,\n    selectedDrops: store.filtersReducer.selectedDrops,\n    hierarchy1: store.filtersReducer.hierarchy1,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    hierarchy2: store.filtersReducer.hierarchy2,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    hierarchy3: store.filtersReducer.hierarchy3,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    hierarchy4: store.filtersReducer.hierarchy4,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    hierarchy5: store.filtersReducer.hierarchy5,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    hierarchy6: store.filtersReducer.hierarchy6,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    hierarchy7: store.filtersReducer.hierarchy7,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    hierarchy8: store.filtersReducer.hierarchy8,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    stores: store.filtersReducer.stores,\n    customStoreGroup: store.filtersReducer.customStoreGroup,\n    customStyleGroup: store.filtersReducer.customStyleGroup,\n    selectedStores: store.filtersReducer.selectedStores,\n    selectedCustomStyleGroup: store.filtersReducer.selectedCustomStyleGroup,\n    selectedCustomStoreGroup: store.filtersReducer.selectedCustomStoreGroup,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks,\n    retainFilters: store.filtersReducer.retainFilters,\n    editPlanDetails: store.manuallyCreateMdData.editPlanDetails,\n\n    season: store.filtersReducer.season,\n    selectedSeason: store.filtersReducer.selectedSeason,\n    clearance: store.filtersReducer.clearance,\n    selectedClearance: store.filtersReducer.selectedClearance,\n    matrix: store.filtersReducer.matrix,\n    selectedMatrix: store.filtersReducer.selectedMatrix,\n    exclusionList: store.filtersReducer.exclusionList,\n    selectedExclusionList: store.filtersReducer.selectedExclusionList,\n    styleColor: store.filtersReducer.styleColor,\n    selectedStyleColor: store.filtersReducer.selectedStyleColor,\n    country: store.filtersReducer.country,\n    selectedCountry: store.filtersReducer.selectedCountry,\n    storeCluster: store.filtersReducer.storeCluster,\n    selectedStoreCluster: store.filtersReducer.selectedStoreCluster,\n    store: store.filtersReducer.store,\n    selectedStore: store.filtersReducer.selectedStore,\n    channel: store.filtersReducer.channel,\n    selectedChannel: store.filtersReducer.selectedChannel,\n    cadenceInput: store.manuallyCreateMdData.cadenceInput,\n  };\n};\nconst mapDispatchToProps = {\n  getHierarchyOptions: FilterActions.getHierarchyOptions,\n  getExtraFiltersOptions: FilterActions.getExtraFiltersOptions,\n  getStores: FilterActions.getStores,\n  getCustomStores: FilterActions.getCustomStores,\n  setSelectedDrops: FilterActions.setSelectedDrops,\n  setSelectedHierarchy1: FilterActions.setSelectedHierarchy1,\n  setSelectedHierarchy2: FilterActions.setSelectedHierarchy2,\n  setSelectedHierarchy3: FilterActions.setSelectedHierarchy3,\n  setSelectedHierarchy4: FilterActions.setSelectedHierarchy4,\n  setSelectedHierarchy5: FilterActions.setSelectedHierarchy5,\n  setSelectedHierarchy6: FilterActions.setSelectedHierarchy6,\n  setSelectedHierarchy7: FilterActions.setSelectedHierarchy7,\n  setSelectedHierarchy8: FilterActions.setSelectedHierarchy8,\n  setSelectedStores: FilterActions.setSelectedStores,\n  setSelectedCustomGroup: FilterActions.setSelectedCustomGroup,\n  setSelectedCustomStoreGroup: FilterActions.setSelectedCustomStoreGroup,\n  setDateRange: FilterActions.setDateRange,\n  resetFilters: FilterActions.resetFilters,\n  setRetainFilters: FilterActions.setRetainFilters,\n  presetFilters: FilterActions.presetFilters,\n  getExtraFilterChannel: FilterActions.getExtraFilterChannel,\n  setSelectedExtraFilSeason: FilterActions.setSelectedExtraFilSeason,\n  setSelectedExtraFilMatrix: FilterActions.setSelectedExtraFilMatrix,\n  setSelectedExtraFilExclusionList: FilterActions.setSelectedExtraFilExclusionList,\n  setSelectedExtraFilClearance: FilterActions.setSelectedExtraFilClearance,\n  setSelectedExtraFilStyleColor: FilterActions.setSelectedExtraFilStyleColor,\n  setSelectedExtraFilCountry: FilterActions.setSelectedExtraFilCountry,\n  setSelectedExtraFilStoreCluster: FilterActions.setSelectedExtraFilStoreCluster,\n  setSelectedExtraFilChannel: FilterActions.setSelectedExtraFilChannel,\n  setSelectedExtraFilStore: FilterActions.setSelectedExtraFilStore,\n  fetchStyleGroups: FilterActions.fetchStyleGroups,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Filters));\n"]},"metadata":{},"sourceType":"module"}