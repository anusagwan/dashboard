{"ast":null,"code":"import _objectSpread from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _ from 'lodash';\nvar initialState = {\n  markdownAnalysisGraphData: [],\n  editMarkdownAnalysisGraphData: [],\n  analysisTable: [],\n  editAnalysisData: [],\n  comparisonData: {},\n  analysisData: {},\n  analysisTableBySkus: {},\n  analysisDataBySkus: {},\n  editAnalysisTableDataBySkus: {},\n  markdownAnalysisGraphDataBySkus: {},\n  editMarkdownAnalysisGraphDataBySkus: []\n}; // const getComparsionTableData = (payload) => {\n// }\n\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'RESET_INVENTORY_INFO_DATA':\n      return _objectSpread({}, state, {\n        markdownAnalysisGraphData: [],\n        editMarkdownAnalysisGraphData: [],\n        analysisTable: [],\n        comparisonData: {},\n        analysisData: {},\n        analysisTableBySkus: {},\n        analysisDataBySkus: {},\n        markdownAnalysisGraphDataBySkus: {}\n      });\n\n    case 'RESET_EDITED_INFO_DATA':\n      return _objectSpread({}, state, {\n        editMarkdownAnalysisGraphData: [],\n        editAnalysisData: [],\n        editAnalysisTableDataBySkus: {},\n        editMarkdownAnalysisGraphDataBySkus: []\n      });\n\n    case 'GET_MARKDOWNANALYSIS_GRAPH_DATA':\n      {\n        if (action.isEdit) {\n          _.map(state.markdownAnalysisGraphData.detailed.data, function (item) {\n            item.metric = 'Previous';\n            return item;\n          });\n\n          _.map(action.payload.detailed.data, function (item) {\n            item.metric = 'Edited';\n            return item;\n          });\n\n          return _objectSpread({}, state, {\n            editMarkdownAnalysisGraphData: action.payload,\n            markdownAnalysisGraphData: state.markdownAnalysisGraphData\n          });\n        }\n\n        return _objectSpread({}, state, {\n          markdownAnalysisGraphData: action.payload\n        });\n      }\n\n    case 'GET_MARKDOWNANALYSIS_GRAPH_DATA_BY_SKUS':\n      {\n        if (action.isEdit) {\n          _.map(state.markdownAnalysisGraphDataBySkus.detailed.data, function (item) {\n            item.metric = 'Previous';\n            return item;\n          });\n\n          _.map(action.payload.detailed.data, function (item) {\n            item.metric = 'Edited';\n            return item;\n          });\n\n          return _objectSpread({}, state, {\n            editMarkdownAnalysisGraphDataBySkus: action.payload,\n            markdownAnalysisGraphDataBySkus: state.markdownAnalysisGraphDataBySkus\n          });\n        }\n\n        return _objectSpread({}, state, {\n          markdownAnalysisGraphDataBySkus: action.payload\n        });\n      }\n\n    case 'SET_ANALYSIS_TABLE_DATA_BY_SKUS':\n      {\n        var _obj = {};\n        action.payload.analysisTabledata.forEach(function (ob) {\n          _obj[ob.style_id] = ob.style_desc;\n        });\n        _obj.scenario = action.cadenceType;\n        var _data = []; // if (action.comparisonData && action.comparisonData.length === 0) {\n        //   data = [];\n        // } else {\n        //   data = state.comparisonData;\n        // }\n        // let data = action.cadenceType === 'Optimal' ? [] : state.comparisonData;\n\n        var _analysisData = state.analysisDataBySkus;\n\n        if (action.cadenceType !== 'Comparison') {\n          _data[action.cadenceType] = _obj;\n          _analysisData[action.cadenceType] = action.data;\n        } // else {\n        //   data[action.cadenceType] = obj;\n        //   analysisData[action.cadenceType] = action.data;\n        // }\n\n\n        if (action.isEdit) {\n          return _objectSpread({}, state, {\n            editAnalysisTableDataBySkus: action.payload,\n            analysisDataBySkus: _analysisData\n          });\n        }\n\n        return _objectSpread({}, state, {\n          analysisTableBySkus: action.payload,\n          // comparisonData: data,\n          analysisDataBySkus: _analysisData\n        });\n      }\n\n    case 'SET_ANALYSIS_TABLE_DATA':\n      var obj = {};\n      action.payload.analysisTabledata.forEach(function (ob) {\n        obj[ob.style_id] = ob.style_desc;\n      });\n      obj.scenario = action.cadenceType;\n      var data = state.comparisonData;\n      var analysisData = state.analysisData;\n\n      if (action.isEdit) {\n        return _objectSpread({}, state, {\n          editAnalysisData: action.payload\n        });\n      }\n\n      return _objectSpread({}, state, {\n        analysisTable: action.payload,\n        comparisonData: data,\n        analysisData: analysisData\n      });\n\n    case 'GET_MDANALYSIS_GRAPH_DATA_BY_SKUS_STYLE':\n      {\n        var graphData = _.cloneDeep(state.markdownAnalysisGraphData);\n\n        action.payload.detailed = graphData.detailed;\n        return _objectSpread({}, state, {\n          markdownAnalysisGraphDataBySkus: action.payload\n        });\n      }\n\n    case 'SET_ANALYSIS_TABLE_DATA_BY_SKUS_STYLE':\n      {\n        // let graphData = _.cloneDeep(state.markdownAnalysisGraphData);\n        // action.payload.detailed = graphData.detailed;\n        return _objectSpread({}, state, {\n          analysisTableBySkus: action.payload\n        });\n      }\n\n    default:\n      return _objectSpread({}, state);\n  }\n}","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/reducers/markdownAnalysisReducer.js"],"names":["_","initialState","markdownAnalysisGraphData","editMarkdownAnalysisGraphData","analysisTable","editAnalysisData","comparisonData","analysisData","analysisTableBySkus","analysisDataBySkus","editAnalysisTableDataBySkus","markdownAnalysisGraphDataBySkus","editMarkdownAnalysisGraphDataBySkus","state","action","type","isEdit","map","detailed","data","item","metric","payload","obj","analysisTabledata","forEach","ob","style_id","style_desc","scenario","cadenceType","graphData","cloneDeep"],"mappings":"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","sourcesContent":["import _ from 'lodash';\n\nconst initialState = {\n  markdownAnalysisGraphData: [],\n  editMarkdownAnalysisGraphData: [],\n  analysisTable: [],\n  editAnalysisData: [],\n  comparisonData: {},\n  analysisData: {},\n  analysisTableBySkus: {},\n  analysisDataBySkus: {},\n  editAnalysisTableDataBySkus: {},\n  markdownAnalysisGraphDataBySkus: {},\n  editMarkdownAnalysisGraphDataBySkus: [],\n};\n\n// const getComparsionTableData = (payload) => {\n\n// }\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case 'RESET_INVENTORY_INFO_DATA':\n      return {\n        ...state,\n        markdownAnalysisGraphData: [],\n        editMarkdownAnalysisGraphData: [],\n        analysisTable: [],\n        comparisonData: {},\n        analysisData: {},\n        analysisTableBySkus: {},\n        analysisDataBySkus: {},\n        markdownAnalysisGraphDataBySkus: {},\n      };\n    case 'RESET_EDITED_INFO_DATA':\n      return {\n        ...state,\n        editMarkdownAnalysisGraphData: [],\n        editAnalysisData: [],\n        editAnalysisTableDataBySkus: {},\n        editMarkdownAnalysisGraphDataBySkus: [],\n      };\n    case 'GET_MARKDOWNANALYSIS_GRAPH_DATA': {\n      if (action.isEdit) {\n        _.map(state.markdownAnalysisGraphData.detailed.data, (item) => {\n          item.metric = 'Previous';\n          return item;\n        });\n        _.map(action.payload.detailed.data, (item) => {\n          item.metric = 'Edited';\n          return item;\n        });\n        return {\n          ...state,\n          editMarkdownAnalysisGraphData: action.payload,\n          markdownAnalysisGraphData: state.markdownAnalysisGraphData,\n        };\n      }\n      return {\n        ...state,\n        markdownAnalysisGraphData: action.payload,\n      };\n    }\n    case 'GET_MARKDOWNANALYSIS_GRAPH_DATA_BY_SKUS': {\n      if (action.isEdit) {\n        _.map(state.markdownAnalysisGraphDataBySkus.detailed.data, (item) => {\n          item.metric = 'Previous';\n          return item;\n        });\n        _.map(action.payload.detailed.data, (item) => {\n          item.metric = 'Edited';\n          return item;\n        });\n        return {\n          ...state,\n          editMarkdownAnalysisGraphDataBySkus: action.payload,\n          markdownAnalysisGraphDataBySkus: state.markdownAnalysisGraphDataBySkus,\n        };\n      }\n      return {\n        ...state,\n        markdownAnalysisGraphDataBySkus: action.payload,\n      };\n    }\n\n    case 'SET_ANALYSIS_TABLE_DATA_BY_SKUS': {\n      let obj = {};\n      action.payload.analysisTabledata.forEach((ob) => {\n        obj[ob.style_id] = ob.style_desc;\n      });\n      obj.scenario = action.cadenceType;\n      let data = [];\n      // if (action.comparisonData && action.comparisonData.length === 0) {\n      //   data = [];\n      // } else {\n      //   data = state.comparisonData;\n      // }\n      // let data = action.cadenceType === 'Optimal' ? [] : state.comparisonData;\n      let analysisData = state.analysisDataBySkus;\n      if (action.cadenceType !== 'Comparison') {\n        data[action.cadenceType] = obj;\n        analysisData[action.cadenceType] = action.data;\n      }\n      // else {\n      //   data[action.cadenceType] = obj;\n      //   analysisData[action.cadenceType] = action.data;\n      // }\n      if (action.isEdit) {\n        return {\n          ...state,\n          editAnalysisTableDataBySkus: action.payload,\n          analysisDataBySkus: analysisData,\n        };\n      }\n      return {\n        ...state,\n        analysisTableBySkus: action.payload,\n        // comparisonData: data,\n        analysisDataBySkus: analysisData,\n      };\n    }\n    case 'SET_ANALYSIS_TABLE_DATA':\n      let obj = {};\n      action.payload.analysisTabledata.forEach((ob) => {\n        obj[ob.style_id] = ob.style_desc;\n      });\n      obj.scenario = action.cadenceType;\n      let data = state.comparisonData;\n\n      let analysisData = state.analysisData;\n\n      if (action.isEdit) {\n        return {\n          ...state,\n          editAnalysisData: action.payload,\n        };\n      }\n      return {\n        ...state,\n        analysisTable: action.payload,\n        comparisonData: data,\n        analysisData: analysisData,\n      };\n\n    case 'GET_MDANALYSIS_GRAPH_DATA_BY_SKUS_STYLE': {\n      let graphData = _.cloneDeep(state.markdownAnalysisGraphData);\n      action.payload.detailed = graphData.detailed;\n      return {\n        ...state,\n        markdownAnalysisGraphDataBySkus: action.payload,\n      };\n    }\n\n    case 'SET_ANALYSIS_TABLE_DATA_BY_SKUS_STYLE': {\n      // let graphData = _.cloneDeep(state.markdownAnalysisGraphData);\n      // action.payload.detailed = graphData.detailed;\n\n      return {\n        ...state,\n        analysisTableBySkus: action.payload,\n      };\n    }\n\n    default:\n      return {\n        ...state,\n      };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}