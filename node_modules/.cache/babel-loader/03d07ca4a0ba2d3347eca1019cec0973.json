{"ast":null,"code":"import _defineProperty from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/services/filters/index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { labels, validations } from './config';\nimport Select from '../select';\nimport './index.css';\nimport { connect } from 'react-redux';\nimport DateRangePicker from '../RetailCalendarDatePicker';\nimport FilterActions from '../../actions/filtersAction';\nimport { toast } from 'react-toastify';\nimport _ from 'lodash';\n\nvar Filters =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Filters, _Component);\n\n  function Filters(props) {\n    var _this;\n\n    _classCallCheck(this, Filters);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filters).call(this, props));\n\n    _this.onHierarchyOneSelection = function (val) {\n      var hierarchyClone = _.cloneDeep(_this.props.filtersOptions);\n\n      var valiadtion = validations[val[0].label];\n\n      var findIndex = function findIndex(index, key) {\n        return _.findIndex(hierarchyClone, {\n          type: \"\".concat(valiadtion[key][index])\n        });\n      }; //finding index num for swap case from validations\n\n\n      if (valiadtion && !_.isEmpty(valiadtion.swap)) {\n        //swaping filters\n        var a = findIndex(0, 'swap'),\n            b = findIndex(1, 'swap');\n        var temp = hierarchyClone[a];\n        hierarchyClone[a] = hierarchyClone[b];\n        hierarchyClone[b] = temp;\n      }\n\n      if (valiadtion && !_.isEmpty(valiadtion.remove)) {\n        //remove filters case\n        _.map(valiadtion.remove, function (item, i) {\n          _.remove(hierarchyClone, function (itm, index) {\n            return index === findIndex(i, 'remove');\n          });\n        });\n      }\n\n      _this.setState({\n        hierarchy: hierarchyClone\n      });\n\n      return hierarchyClone;\n    };\n\n    _this.setSelectionHandler =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(val, actionName, name) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(name === 'customStoreGroup')) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _context.next = 3;\n                return _this.props.setSelectedCustomStoreGroup(val.map(function (v) {\n                  return v.value;\n                }));\n\n              case 3:\n                return _context.abrupt(\"return\");\n\n              case 4:\n                if (!(name === 'customStyleGroup')) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _this.props.setSelectedCustomGroup(val.map(function (v) {\n                  return v.value;\n                }), 'name');\n\n                _context.next = 8;\n                return _this.props.setSelectedCustomGroup(val.map(function (v) {\n                  return v.id;\n                }), 'id');\n\n              case 8:\n                return _context.abrupt(\"return\");\n\n              case 9:\n                _context.next = 11;\n                return _this.props[actionName](val.map(function (e) {\n                  return e.label;\n                }));\n\n              case 11:\n                return _context.abrupt(\"return\");\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.getHierarchyOptions =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(val, filterIndex, currFilterName, isHierarchyPrev, nextFilterName, isHierarchyNext) {\n        var hierarchy, nameCapitalized, resetHierachies;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                !Array.isArray(val) && (val = [val]);\n                hierarchy = _.cloneDeep(_this.state.hierarchy);\n\n                if (!(currFilterName === 'hierarchy1')) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                _context3.next = 5;\n                return _this.onHierarchyOneSelection(val);\n\n              case 5:\n                hierarchy = _context3.sent;\n\n              case 6:\n                if (_.findIndex(hierarchy, {\n                  type: 'hierarchy1'\n                }) > filterIndex) {\n                  _this.setState({\n                    hierarchy: _this.props.filtersOptions\n                  }); //reset filters that are removed or swapped when filters that comes before H1 are set\n\n                }\n\n                nameCapitalized = currFilterName && currFilterName.charAt(0).toUpperCase() + currFilterName.slice(1); //capitalizing the name to match action/reducer name\n\n                resetHierachies = {};\n\n                _.map(hierarchy, function (item, index) {\n                  if (index > filterIndex) {\n                    resetHierachies[item.type] = null; //all fiters value, which comes after selected filter becomes null(reset)\n                  }\n                });\n\n                _this.setState(_objectSpread(_defineProperty({}, currFilterName, val), resetHierachies),\n                /*#__PURE__*/\n                _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee2() {\n                  var actionName, req;\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          actionName = isHierarchyPrev ? \"setSelected\".concat(nameCapitalized) : \"setSelectedExtraFil\".concat(nameCapitalized);\n                          _context2.next = 3;\n                          return _this.setSelectionHandler(val, actionName, currFilterName);\n\n                        case 3:\n                          //handles setSelected action calls\n                          if (nextFilterName === 'channel') {\n                            _this.props.getExtraFilterChannel();\n                          }\n\n                          req = {};\n\n                          _.map(hierarchy, function (item, index) {\n                            if (index <= filterIndex) {\n                              var _nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n                              // if (_.isEmpty(this.props[`selected${nameCapitalized}`])) return; //uncomment if u want empty filters removed\n\n\n                              req[item.type] = _this.props[\"selected\".concat(_nameCapitalized)]; //this goes as filters req obj in api calls\n                            }\n                          });\n\n                          _this.setState({\n                            filters: _objectSpread({}, req)\n                          });\n\n                        case 7:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                })));\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4, _x5, _x6, _x7, _x8, _x9) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.setDrop = function (val) {\n      var req = {};\n      var selItems = val.map(function (item) {\n        return item.label;\n      });\n      req['drop'] = selItems;\n\n      _this.setState({\n        filters: _objectSpread({}, req),\n        drops: val\n      }, function () {\n        _this.props.setSelectedDrops(val.map(function (v) {\n          return v.value;\n        }));\n      });\n    };\n\n    _this.actionCallHandler = function (func, isHierarchyNext, nextFilterName, req) {\n      var typeName = isHierarchyNext ? nextFilterName.toUpperCase() : labels[nextFilterName].toUpperCase();\n      if (nextFilterName === 'store') typeName = 'STORE_CODE';\n      var reqObj = {\n        filters: req,\n        allowInactiveProducts: _this.props.allowInactiveProducts || false\n      };\n      if (isHierarchyNext) reqObj.hierarchyType = typeName;\n      if (!isHierarchyNext) reqObj.filterType = typeName.replaceAll(' ', '_');\n\n      if (nextFilterName === 'customStyleGroup') {\n        var _req = {\n          filters: reqObj.filters,\n          disable_empty_flag: _this.props.disable_empty_flag && !_this.props.isEdit ? _this.props.disable_empty_flag : false\n        };\n        reqObj = _req;\n        func = \"fetchStyleGroups\";\n      }\n\n      if (nextFilterName === 'customStoreGroup') {\n        reqObj = {};\n        func = \"getCustomStores\";\n      }\n\n      _this.props[func](reqObj);\n    };\n\n    _this.filterOnFocusHandler = function (filterIndex, filterName, isHierarchy) {\n      if (filterName && !_.isEmpty(_this.props[filterName]) || !_this.validateFilters(filterIndex) || filterName === 'channel') //if filter options already exists or if all of the mandatory filters that comes before this filter is not selected or filter name is channel, return\n        return;\n      var func = isHierarchy ? \"getHierarchyOptions\" : \"getExtraFiltersOptions\";\n      var req = {};\n\n      _.map(_this.state.hierarchy, function (item, index) {\n        if (index < filterIndex) {\n          var nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n\n          var selected = _this.props[\"selected\".concat(nameCapitalized)];\n\n          if (_.isEmpty(selected)) return; //uncomment if u want empty filters removed\n\n          req[item.type] = selected; //this goes as filters req obj in api calls\n          // if (item.type === 'channel' && selected[0] === 'Web') req['ecom_flag'] = 1;\n          // if (item.type === 'channel' && selected[0] === 'Outlet') req['retail_flag'] = 1;\n        }\n      });\n\n      if (filterName && _this.props[func] && Object.keys(req).length) {\n        _this.actionCallHandler(func, isHierarchy, filterName, req); //calles next filters action, to get it's options\n\n      }\n    };\n\n    _this.setCustomStyleGroup = function (val) {\n      // let val = [item];\n      var selItems = val.map(function (item) {\n        return item.label;\n      }); // req['stores'] = selItems;\n\n      var newFilters = _objectSpread({}, _this.state.filters, {\n        customStyleGroup: selItems\n      });\n\n      _this.setState({\n        filters: newFilters,\n        customStyleGroup: val\n      }, function () {\n        // this.props.setSelectedCustomGroup(val.map((v) => v.id));\n        _this.props.setSelectedCustomGroup(val.map(function (v) {\n          return v.value;\n        }), 'name');\n\n        _this.props.setSelectedCustomGroup(val.map(function (v) {\n          return v.id;\n        }), 'id');\n      });\n    };\n\n    _this.setCustomStores = function (val) {\n      var selItems = val.map(function (item) {\n        return item.label;\n      });\n\n      var newFilters = _objectSpread({}, _this.state.filters, {\n        customStoreGroup: selItems\n      });\n\n      _this.setState({\n        filters: newFilters,\n        customStoreGroup: val\n      }, function () {\n        _this.props.setSelectedCustomStoreGroup(val.map(function (v) {\n          return v.value;\n        }));\n      });\n    };\n\n    _this.reset = function () {\n      _this.setState({\n        drops: null,\n        startDate: null,\n        endDate: null,\n        hierarchy1: null,\n        hierarchy2: null,\n        hierarchy3: null,\n        hierarchy4: null,\n        hierarchy5: null,\n        hierarchy6: null,\n        hierarchy7: null,\n        hierarchy8: null,\n        customStyleGroup: null,\n        stores: null,\n        customStoreGroup: null\n      }, function () {\n        if (_this.props.from !== 'draft/status') _this.props.resetFilters(); ////////// handling reset issues rising bcs of tabs, only reset this component state, not reducer\n\n        _this.props.onReset && _this.props.onReset();\n      });\n    };\n\n    _this.onDatesChange = function (_ref4) {\n      var startDate = _ref4.startDate,\n          endDate = _ref4.endDate;\n\n      _this.setState({\n        startDate: startDate,\n        endDate: endDate\n      }, function () {\n        var weeks = [];\n\n        if (endDate) {\n          for (var i = startDate.clone(); i <= endDate; i = i.add(7, 'd')) {\n            weeks.push(i.week());\n          }\n        }\n\n        _this.props.setDateRange({\n          startDate: startDate && startDate.format('YYYY-MM-DD'),\n          endDate: endDate && endDate.format('YYYY-MM-DD'),\n          weeks: weeks\n        });\n      });\n    };\n\n    _this.validateFilters = function (filterIndex, dateRange) {\n      var hierarchy = _this.state.hierarchy;\n\n      for (var i = 0; i < filterIndex; i++) {\n        var type = hierarchy[i] && hierarchy[i].type;\n        var nameCapitalized = type && type.charAt(0).toUpperCase() + type.slice(1); //capitalizing the name to match action/reducer name\n\n        if (hierarchy[i] && hierarchy[i].isMandatory && _.isEmpty(_this.props[\"selected\".concat(nameCapitalized)])) {\n          return false;\n        }\n      }\n\n      if (dateRange && (_.isEmpty(_this.state.startDate) || _.isEmpty(_this.state.endDate))) {\n        return false;\n      }\n\n      return true;\n    };\n\n    _this.onFilterHandler = function () {\n      if (!_this.validateFilters(_this.state.hierarchy.length, _this.props.dateRange)) {\n        toast.error(\"Please select mandatory filters\", {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        return;\n      }\n\n      _this.props.onFilter({\n        filters: _this.state.filters,\n        startDate: _this.state.startDate,\n        endDate: _this.state.endDate,\n        customStyleGroup: _this.state.customStyleGroup\n      });\n    };\n\n    _this.state = {\n      filters: {},\n      startDate: null,\n      endDate: null,\n      hierarchy: [],\n      hierarchy1: props.retainFilters && props.selectedHierarchy1 ? props.selectedHierarchy1.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy2: props.retainFilters && props.selectedHierarchy2 ? props.selectedHierarchy2.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy3: props.retainFilters && props.selectedHierarchy3 ? props.selectedHierarchy3.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy4: props.retainFilters && props.selectedHierarchy4 ? props.selectedHierarchy4.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy5: props.retainFilters && props.selectedHierarchy5 ? props.selectedHierarchy5.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy6: props.retainFilters && props.selectedHierarchy6 ? props.selectedHierarchy6.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy7: props.retainFilters && props.selectedHierarchy7 ? props.selectedHierarchy7.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy8: props.retainFilters && props.selectedHierarchy8 && props.location.state ? props.location.state.styles.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : props.retainFilters && props.selectedHierarchy8 && _this.props.disableDivision ? props.selectedHierarchy8.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      customStyleGroup: props.retainFilters && props.selectedCustomStyleGroup ? props.selectedCustomStyleGroup.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      stores: props.retainFilters && props.selectedStores ? props.selectedStores.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      season: props.retainFilters && props.selectedSeason ? props.selectedSeason.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      clearance: props.retainFilters && props.selectedClearance ? props.selectedClearance.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      matrix: props.retainFilters && props.selectedMatrix ? props.selectedMatrix.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      exclusionList: props.retainFilters && props.selectedExclusionList ? props.selectedExclusionList.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      styleColor: props.retainFilters && props.selectedStyleColor ? props.selectedStyleColor.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      country: props.retainFilters && props.selectedCountry ? props.selectedCountry.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      storeCluster: props.retainFilters && props.selectedStoreCluster ? props.selectedStoreCluster.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      store: props.retainFilters && props.selectedStore ? props.selectedStore.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      channel: props.retainFilters && props.selectedChannel ? props.selectedChannel.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      customStoreGroup: props.retainFilters && props.selectedCustomStoreGroup ? props.selectedCustomStoreGroup.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null\n    }; // +  !props.retainFilters && props.resetFilters();\n    // !props.isEdit &&\n    //   props.getHierarchyOptions({\n    //     filters: {},\n    //     hierarchyType: 'HIERARCHY1',\n    //     allowInactiveProducts: this.props.allowInactiveProducts || false,\n    //   });\n\n    props.getExtraFiltersOptions({\n      filters: {},\n      filterType: 'COUNTRY',\n      allowInactiveProducts: _this.props.allowInactiveProducts || false\n    });\n\n    if (props.retainFilters && props.location.state) {\n      props.setSelectedHierarchy7(props.location.state.styles, true);\n      props.setSelectedStores(_this.state.stores.map(function (e) {\n        return e.label;\n      }));\n    }\n\n    props.getCustomStores().then(function (res) {\n      if (_this.props.isEdit && _this.props.editPlanDetails[0] && !_.isEmpty(_this.props.editPlanDetails[0] && _this.props.editPlanDetails[0].request_obj)) {\n        var customStoreGroup = _this.props.editPlanDetails[0] && _this.props.editPlanDetails[0].request_obj && _this.props.editPlanDetails[0].request_obj.filters && _this.props.editPlanDetails[0].request_obj.filters.customStoreGroup;\n        var selectedCustomStore = [];\n\n        _.map(res, function (item) {\n          if (customStoreGroup && customStoreGroup.includes(item.value)) {\n            selectedCustomStore.push(item);\n          }\n        });\n\n        _this.setCustomStores(selectedCustomStore);\n      }\n    }); // if (props.retainFilters && props.location.state) {\n    // props.setSelectedHierarchy7(props.location.state.styles, 'reporting');\n    // props.setSelectedStores(this.state.stores.map((e) => e.label));\n    // }\n\n    props.setRetainFilters(false);\n    return _this;\n  }\n\n  _createClass(Filters, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        hierarchy: this.props.filtersOptions\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.filterReset) {\n        this.props.filterResetHandler(false);\n        this.reset(); // reset filters from configFilters\n      }\n\n      if (this.props.isEdit && _.isEmpty(this.state.hierarchy1) && this.props.editPlanDetails[0] && !_.isEmpty(this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj)) {\n        var _this$props$editPlanD = this.props.editPlanDetails[0].request_obj.filters,\n            hierarchy1 = _this$props$editPlanD.hierarchy1,\n            hierarchy2 = _this$props$editPlanD.hierarchy2,\n            hierarchy3 = _this$props$editPlanD.hierarchy3,\n            hierarchy4 = _this$props$editPlanD.hierarchy4,\n            hierarchy5 = _this$props$editPlanD.hierarchy5,\n            hierarchy6 = _this$props$editPlanD.hierarchy6,\n            hierarchy7 = _this$props$editPlanD.hierarchy7,\n            hierarchy8 = _this$props$editPlanD.hierarchy8,\n            customStyleGroup = _this$props$editPlanD.customStyleGroup,\n            tiers = _this$props$editPlanD.tiers,\n            customStoreGroup = _this$props$editPlanD.customStoreGroup;\n        var customStyleName = this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj && this.props.editPlanDetails[0].request_obj.customStyleName;\n        this.props.presetFilters([hierarchy1, hierarchy2, hierarchy3, hierarchy4, hierarchy5, hierarchy6, hierarchy7, hierarchy8, customStyleName, tiers, customStoreGroup]);\n        this.setState({\n          hierarchy1: _.map(hierarchy1, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy2: _.map(hierarchy2, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy3: _.map(hierarchy3, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy4: _.map(hierarchy4, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy5: _.map(hierarchy5, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy6: _.map(hierarchy6, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy7: _.map(hierarchy7, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy8: _.map(hierarchy8, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          customStyleGroup: _.map(customStyleName, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          stores: _.map(tiers, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          customStoreGroup: _.map(customStoreGroup, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          })\n        });\n      }\n\n      if (this.props.from !== 'styleConfig' && this.props.from !== 'styleGroupConfig' && !_.isEmpty(this.props.selectedHierarchy8) && !_.isEqual(prevProps.selectedHierarchy8, this.props.selectedHierarchy8)) {\n        var req = {\n          filters: {\n            hierarchy1: this.props.selectedHierarchy1,\n            hierarchy2: this.props.selectedHierarchy2,\n            hierarchy3: this.props.selectedHierarchy3,\n            hierarchy4: this.props.selectedHierarchy4,\n            hierarchy5: this.props.selectedHierarchy5 // hierarchy6: this.props.selectedHierarchy6,\n            // hierarchy7: this.props.selectedHierarchy7,\n            // hierarchy8: this.props.selectedHierarchy8,\n\n          },\n          disable_empty_flag: this.props.disable_empty_flag && !this.props.isEdit ? this.props.disable_empty_flag : false\n        };\n        this.props.fetchStyleGroups(req);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: this.props.isEdit ? 'row d-flex ml-4 mr-4 edit-markdown-filters' : ' d-flex row ml-4 mr-4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, this.state.hierarchy && this.state.hierarchy.map(function (filter, i) {\n        return labels[filter.type] && React.createElement(\"div\", {\n          className: \"col-md-2 \",\n          key: filter.type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 549\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"mb-1 mt-3\",\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 550\n          },\n          __self: this\n        }, labels[filter.type], filter.isMandatory ? React.createElement(\"span\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 552\n          },\n          __self: this\n        }, \" * \") : null), React.createElement(Select, {\n          name: filter.type,\n          options: _this2.props[filter.type],\n          onFocus: function onFocus(e) {\n            return _this2.filterOnFocusHandler(i, filter.type, filter.isHierarchy);\n          },\n          onChange: function onChange(option) {\n            return _this2.getHierarchyOptions(option, i, filter.type, filter.isHierarchy, _this2.state.hierarchy[i + 1] && _this2.state.hierarchy[i + 1].type, _this2.state.hierarchy[i + 1] && _this2.state.hierarchy[i + 1].isHierarchy);\n          },\n          value: _this2.state[filter.type],\n          isMulti: filter.isMultiple,\n          isDisabled: i === 0 && _this2.props.disableDivision ? true : false // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 554\n          },\n          __self: this\n        }));\n      }), this.props.dateRange && React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"mb-1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613\n        },\n        __self: this\n      }, \"Date range \", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }, \" * \")), React.createElement(DateRangePicker, {\n        startDate: this.state.startDate,\n        startDateId: \"startDate_11\",\n        endDate: this.state.endDate,\n        endDateId: \"endDate_11\",\n        onDatesChange: this.onDatesChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616\n        },\n        __self: this\n      })), !this.props.hidefilterButton && React.createElement(\"div\", {\n        className: !this.props.dateRange && !this.props.hideCustomStores ? 'col-md-2 mt-5 px-0' //'col-md-3 mt-4  ml-auto text-right'\n        : 'col-md-3 mt-5',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        disabled: this.props.isEdit,\n        onClick: this.onFilterHandler,\n        className: !this.props.dateRange && !this.props.hideCustomStores ? 'col-md-5 btn btn-primary btn-filter ml-2' : 'col-md-4 btn btn-primary btn-filter',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641\n        },\n        __self: this\n      }), \"\\xA0 Filter\")), React.createElement(\"button\", {\n        disabled: this.props.isEdit,\n        className: !this.props.dateRange && !this.props.hideCustomStores ? ' col-md-5 btn btn-primary btn-filter btn-filter-reset ml-3' : 'col-md-4 offset-1 btn btn-primary btn-filter btn-filter-reset',\n        onClick: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-repeat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653\n        },\n        __self: this\n      }), \"\\xA0 Reset\")))));\n    }\n  }]);\n\n  return Filters;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    drops: store.filtersReducer.drops,\n    selectedDrops: store.filtersReducer.selectedDrops,\n    hierarchy1: store.filtersReducer.hierarchy1,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    hierarchy2: store.filtersReducer.hierarchy2,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    hierarchy3: store.filtersReducer.hierarchy3,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    hierarchy4: store.filtersReducer.hierarchy4,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    hierarchy5: store.filtersReducer.hierarchy5,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    hierarchy6: store.filtersReducer.hierarchy6,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    hierarchy7: store.filtersReducer.hierarchy7,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    hierarchy8: store.filtersReducer.hierarchy8,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    stores: store.filtersReducer.stores,\n    customStoreGroup: store.filtersReducer.customStoreGroup,\n    customStyleGroup: store.filtersReducer.customStyleGroup,\n    selectedStores: store.filtersReducer.selectedStores,\n    selectedCustomStyleGroup: store.filtersReducer.selectedCustomStyleGroup,\n    selectedCustomStoreGroup: store.filtersReducer.selectedCustomStoreGroup,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks,\n    retainFilters: store.filtersReducer.retainFilters,\n    editPlanDetails: store.manuallyCreateMdData.editPlanDetails,\n    season: store.filtersReducer.season,\n    selectedSeason: store.filtersReducer.selectedSeason,\n    clearance: store.filtersReducer.clearance,\n    selectedClearance: store.filtersReducer.selectedClearance,\n    matrix: store.filtersReducer.matrix,\n    selectedMatrix: store.filtersReducer.selectedMatrix,\n    exclusionList: store.filtersReducer.exclusionList,\n    selectedExclusionList: store.filtersReducer.selectedExclusionList,\n    styleColor: store.filtersReducer.styleColor,\n    selectedStyleColor: store.filtersReducer.selectedStyleColor,\n    country: store.filtersReducer.country,\n    selectedCountry: store.filtersReducer.selectedCountry,\n    storeCluster: store.filtersReducer.storeCluster,\n    selectedStoreCluster: store.filtersReducer.selectedStoreCluster,\n    store: store.filtersReducer.store,\n    selectedStore: store.filtersReducer.selectedStore,\n    channel: store.filtersReducer.channel,\n    selectedChannel: store.filtersReducer.selectedChannel\n  };\n};\n\nvar mapDispatchToProps = {\n  getHierarchyOptions: FilterActions.getHierarchyOptions,\n  getExtraFiltersOptions: FilterActions.getExtraFiltersOptions,\n  getStores: FilterActions.getStores,\n  getCustomStores: FilterActions.getCustomStores,\n  setSelectedDrops: FilterActions.setSelectedDrops,\n  setSelectedHierarchy1: FilterActions.setSelectedHierarchy1,\n  setSelectedHierarchy2: FilterActions.setSelectedHierarchy2,\n  setSelectedHierarchy3: FilterActions.setSelectedHierarchy3,\n  setSelectedHierarchy4: FilterActions.setSelectedHierarchy4,\n  setSelectedHierarchy5: FilterActions.setSelectedHierarchy5,\n  setSelectedHierarchy6: FilterActions.setSelectedHierarchy6,\n  setSelectedHierarchy7: FilterActions.setSelectedHierarchy7,\n  setSelectedHierarchy8: FilterActions.setSelectedHierarchy8,\n  setSelectedStores: FilterActions.setSelectedStores,\n  setSelectedCustomGroup: FilterActions.setSelectedCustomGroup,\n  setSelectedCustomStoreGroup: FilterActions.setSelectedCustomStoreGroup,\n  setDateRange: FilterActions.setDateRange,\n  resetFilters: FilterActions.resetFilters,\n  setRetainFilters: FilterActions.setRetainFilters,\n  presetFilters: FilterActions.presetFilters,\n  getExtraFilterChannel: FilterActions.getExtraFilterChannel,\n  setSelectedExtraFilSeason: FilterActions.setSelectedExtraFilSeason,\n  setSelectedExtraFilMatrix: FilterActions.setSelectedExtraFilMatrix,\n  setSelectedExtraFilExclusionList: FilterActions.setSelectedExtraFilExclusionList,\n  setSelectedExtraFilClearance: FilterActions.setSelectedExtraFilClearance,\n  setSelectedExtraFilStyleColor: FilterActions.setSelectedExtraFilStyleColor,\n  setSelectedExtraFilCountry: FilterActions.setSelectedExtraFilCountry,\n  setSelectedExtraFilStoreCluster: FilterActions.setSelectedExtraFilStoreCluster,\n  setSelectedExtraFilChannel: FilterActions.setSelectedExtraFilChannel,\n  setSelectedExtraFilStore: FilterActions.setSelectedExtraFilStore,\n  fetchStyleGroups: FilterActions.fetchStyleGroups\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Filters));","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/services/filters/index.js"],"names":["React","Component","withRouter","labels","validations","Select","connect","DateRangePicker","FilterActions","toast","_","Filters","props","onHierarchyOneSelection","val","hierarchyClone","cloneDeep","filtersOptions","valiadtion","label","findIndex","index","key","type","isEmpty","swap","a","b","temp","remove","map","item","i","itm","setState","hierarchy","setSelectionHandler","actionName","name","setSelectedCustomStoreGroup","v","value","setSelectedCustomGroup","id","e","getHierarchyOptions","filterIndex","currFilterName","isHierarchyPrev","nextFilterName","isHierarchyNext","Array","isArray","state","nameCapitalized","charAt","toUpperCase","slice","resetHierachies","getExtraFilterChannel","req","filters","setDrop","selItems","drops","setSelectedDrops","actionCallHandler","func","typeName","reqObj","allowInactiveProducts","hierarchyType","filterType","replaceAll","disable_empty_flag","isEdit","filterOnFocusHandler","filterName","isHierarchy","validateFilters","selected","Object","keys","length","setCustomStyleGroup","newFilters","customStyleGroup","setCustomStores","customStoreGroup","reset","startDate","endDate","hierarchy1","hierarchy2","hierarchy3","hierarchy4","hierarchy5","hierarchy6","hierarchy7","hierarchy8","stores","from","resetFilters","onReset","onDatesChange","weeks","clone","add","push","week","setDateRange","format","dateRange","isMandatory","onFilterHandler","error","autoClose","hideProgressBar","onFilter","retainFilters","selectedHierarchy1","selectedHierarchy2","selectedHierarchy3","selectedHierarchy4","selectedHierarchy5","selectedHierarchy6","selectedHierarchy7","selectedHierarchy8","location","styles","disableDivision","selectedCustomStyleGroup","selectedStores","season","selectedSeason","clearance","selectedClearance","matrix","selectedMatrix","exclusionList","selectedExclusionList","styleColor","selectedStyleColor","country","selectedCountry","storeCluster","selectedStoreCluster","store","selectedStore","channel","selectedChannel","selectedCustomStoreGroup","getExtraFiltersOptions","setSelectedHierarchy7","setSelectedStores","getCustomStores","then","res","editPlanDetails","request_obj","selectedCustomStore","includes","setRetainFilters","prevProps","prevState","filterReset","filterResetHandler","tiers","customStyleName","presetFilters","isEqual","fetchStyleGroups","filter","whiteSpace","color","option","isMultiple","hidefilterButton","hideCustomStores","mapStateToProps","filtersReducer","selectedDrops","manuallyCreateMdData","mapDispatchToProps","getStores","setSelectedHierarchy1","setSelectedHierarchy2","setSelectedHierarchy3","setSelectedHierarchy4","setSelectedHierarchy5","setSelectedHierarchy6","setSelectedHierarchy8","setSelectedExtraFilSeason","setSelectedExtraFilMatrix","setSelectedExtraFilExclusionList","setSelectedExtraFilClearance","setSelectedExtraFilStyleColor","setSelectedExtraFilCountry","setSelectedExtraFilStoreCluster","setSelectedExtraFilChannel","setSelectedExtraFilStore"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { labels, validations } from './config';\nimport Select from '../select';\nimport './index.css';\nimport { connect } from 'react-redux';\nimport DateRangePicker from '../RetailCalendarDatePicker';\nimport FilterActions from '../../actions/filtersAction';\nimport { toast } from 'react-toastify';\nimport _ from 'lodash';\n\nclass Filters extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filters: {},\n      startDate: null,\n      endDate: null,\n      hierarchy: [],\n      hierarchy1:\n        props.retainFilters && props.selectedHierarchy1\n          ? props.selectedHierarchy1.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy2:\n        props.retainFilters && props.selectedHierarchy2\n          ? props.selectedHierarchy2.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy3:\n        props.retainFilters && props.selectedHierarchy3\n          ? props.selectedHierarchy3.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy4:\n        props.retainFilters && props.selectedHierarchy4\n          ? props.selectedHierarchy4.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy5:\n        props.retainFilters && props.selectedHierarchy5\n          ? props.selectedHierarchy5.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy6:\n        props.retainFilters && props.selectedHierarchy6\n          ? props.selectedHierarchy6.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy7:\n        props.retainFilters && props.selectedHierarchy7\n          ? props.selectedHierarchy7.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy8:\n        props.retainFilters && props.selectedHierarchy8 && props.location.state\n          ? props.location.state.styles.map((e) => {\n              return { value: e, label: e };\n            })\n          : props.retainFilters && props.selectedHierarchy8 && this.props.disableDivision\n          ? props.selectedHierarchy8.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      customStyleGroup:\n        props.retainFilters && props.selectedCustomStyleGroup\n          ? props.selectedCustomStyleGroup.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      stores:\n        props.retainFilters && props.selectedStores\n          ? props.selectedStores.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      season:\n        props.retainFilters && props.selectedSeason\n          ? props.selectedSeason.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      clearance:\n        props.retainFilters && props.selectedClearance\n          ? props.selectedClearance.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      matrix:\n        props.retainFilters && props.selectedMatrix\n          ? props.selectedMatrix.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      exclusionList:\n        props.retainFilters && props.selectedExclusionList\n          ? props.selectedExclusionList.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      styleColor:\n        props.retainFilters && props.selectedStyleColor\n          ? props.selectedStyleColor.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      country:\n        props.retainFilters && props.selectedCountry\n          ? props.selectedCountry.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      storeCluster:\n        props.retainFilters && props.selectedStoreCluster\n          ? props.selectedStoreCluster.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      store:\n        props.retainFilters && props.selectedStore\n          ? props.selectedStore.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      channel:\n        props.retainFilters && props.selectedChannel\n          ? props.selectedChannel.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      customStoreGroup:\n        props.retainFilters && props.selectedCustomStoreGroup\n          ? props.selectedCustomStoreGroup.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n    };\n    // +  !props.retainFilters && props.resetFilters();\n    // !props.isEdit &&\n    //   props.getHierarchyOptions({\n    //     filters: {},\n    //     hierarchyType: 'HIERARCHY1',\n    //     allowInactiveProducts: this.props.allowInactiveProducts || false,\n    //   });\n    props.getExtraFiltersOptions({\n      filters: {},\n      filterType: 'COUNTRY',\n      allowInactiveProducts: this.props.allowInactiveProducts || false,\n    });\n    if (props.retainFilters && props.location.state) {\n      props.setSelectedHierarchy7(props.location.state.styles, true);\n      props.setSelectedStores(this.state.stores.map((e) => e.label));\n    }\n    props.getCustomStores().then((res) => {\n      if (\n        this.props.isEdit &&\n        this.props.editPlanDetails[0] &&\n        !_.isEmpty(this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj)\n      ) {\n        let customStoreGroup =\n          this.props.editPlanDetails[0] &&\n          this.props.editPlanDetails[0].request_obj &&\n          this.props.editPlanDetails[0].request_obj.filters &&\n          this.props.editPlanDetails[0].request_obj.filters.customStoreGroup;\n        let selectedCustomStore = [];\n        _.map(res, (item) => {\n          if (customStoreGroup && customStoreGroup.includes(item.value)) {\n            selectedCustomStore.push(item);\n          }\n        });\n        this.setCustomStores(selectedCustomStore);\n      }\n    });\n    // if (props.retainFilters && props.location.state) {\n    // props.setSelectedHierarchy7(props.location.state.styles, 'reporting');\n    // props.setSelectedStores(this.state.stores.map((e) => e.label));\n    // }\n    props.setRetainFilters(false);\n  }\n  componentDidMount() {\n    this.setState({ hierarchy: this.props.filtersOptions });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.filterReset) {\n      this.props.filterResetHandler(false);\n      this.reset(); // reset filters from configFilters\n    }\n    if (\n      this.props.isEdit &&\n      _.isEmpty(this.state.hierarchy1) &&\n      this.props.editPlanDetails[0] &&\n      !_.isEmpty(this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj)\n    ) {\n      let {\n        hierarchy1,\n        hierarchy2,\n        hierarchy3,\n        hierarchy4,\n        hierarchy5,\n        hierarchy6,\n        hierarchy7,\n        hierarchy8,\n        customStyleGroup,\n        tiers,\n        customStoreGroup,\n      } = this.props.editPlanDetails[0].request_obj.filters;\n\n      let customStyleName =\n        this.props.editPlanDetails[0] &&\n        this.props.editPlanDetails[0].request_obj &&\n        this.props.editPlanDetails[0].request_obj.customStyleName;\n\n      this.props.presetFilters([\n        hierarchy1,\n        hierarchy2,\n        hierarchy3,\n        hierarchy4,\n        hierarchy5,\n        hierarchy6,\n        hierarchy7,\n        hierarchy8,\n        customStyleName,\n        tiers,\n        customStoreGroup,\n      ]);\n      this.setState({\n        hierarchy1: _.map(hierarchy1, (item) => ({ value: item, label: item })),\n        hierarchy2: _.map(hierarchy2, (item) => ({ value: item, label: item })),\n        hierarchy3: _.map(hierarchy3, (item) => ({ value: item, label: item })),\n        hierarchy4: _.map(hierarchy4, (item) => ({ value: item, label: item })),\n        hierarchy5: _.map(hierarchy5, (item) => ({ value: item, label: item })),\n        hierarchy6: _.map(hierarchy6, (item) => ({ value: item, label: item })),\n        hierarchy7: _.map(hierarchy7, (item) => ({ value: item, label: item })),\n        hierarchy8: _.map(hierarchy8, (item) => ({ value: item, label: item })),\n        customStyleGroup: _.map(customStyleName, (item) => ({ value: item, label: item })),\n        stores: _.map(tiers, (item) => ({ value: item, label: item })),\n        customStoreGroup: _.map(customStoreGroup, (item) => ({ value: item, label: item })),\n      });\n    }\n\n    if (\n      this.props.from !== 'styleConfig' &&\n      this.props.from !== 'styleGroupConfig' &&\n      !_.isEmpty(this.props.selectedHierarchy8) &&\n      !_.isEqual(prevProps.selectedHierarchy8, this.props.selectedHierarchy8)\n    ) {\n      let req = {\n        filters: {\n          hierarchy1: this.props.selectedHierarchy1,\n          hierarchy2: this.props.selectedHierarchy2,\n          hierarchy3: this.props.selectedHierarchy3,\n          hierarchy4: this.props.selectedHierarchy4,\n          hierarchy5: this.props.selectedHierarchy5,\n          // hierarchy6: this.props.selectedHierarchy6,\n          // hierarchy7: this.props.selectedHierarchy7,\n          // hierarchy8: this.props.selectedHierarchy8,\n        },\n        disable_empty_flag:\n          this.props.disable_empty_flag && !this.props.isEdit\n            ? this.props.disable_empty_flag\n            : false,\n      };\n      this.props.fetchStyleGroups(req);\n    }\n  }\n  onHierarchyOneSelection = (val) => {\n    let hierarchyClone = _.cloneDeep(this.props.filtersOptions);\n    let valiadtion = validations[val[0].label];\n    let findIndex = (index, key) =>\n      _.findIndex(hierarchyClone, {\n        type: `${valiadtion[key][index]}`,\n      }); //finding index num for swap case from validations\n    if (valiadtion && !_.isEmpty(valiadtion.swap)) {\n      //swaping filters\n      let a = findIndex(0, 'swap'),\n        b = findIndex(1, 'swap');\n      let temp = hierarchyClone[a];\n\n      hierarchyClone[a] = hierarchyClone[b];\n      hierarchyClone[b] = temp;\n    }\n    if (valiadtion && !_.isEmpty(valiadtion.remove)) {\n      //remove filters case\n      _.map(valiadtion.remove, (item, i) => {\n        _.remove(hierarchyClone, (itm, index) => index === findIndex(i, 'remove'));\n      });\n    }\n    this.setState({ hierarchy: hierarchyClone });\n    return hierarchyClone;\n  };\n\n  setSelectionHandler = async (val, actionName, name) => {\n    if (name === 'customStoreGroup') {\n      await this.props.setSelectedCustomStoreGroup(val.map((v) => v.value));\n      return;\n    }\n    if (name === 'customStyleGroup') {\n      this.props.setSelectedCustomGroup(\n        val.map((v) => v.value),\n        'name'\n      );\n      await this.props.setSelectedCustomGroup(\n        val.map((v) => v.id),\n        'id'\n      );\n      return;\n    }\n    await this.props[actionName](val.map((e) => e.label));\n    return;\n  };\n  getHierarchyOptions = async (\n    val,\n    filterIndex,\n    currFilterName,\n    isHierarchyPrev,\n    nextFilterName,\n    isHierarchyNext\n  ) => {\n    !Array.isArray(val) && (val = [val]);\n    let hierarchy = _.cloneDeep(this.state.hierarchy);\n\n    if (currFilterName === 'hierarchy1') {\n      //Division selected case\n      hierarchy = await this.onHierarchyOneSelection(val); //returns updated hierarchy data;\n    }\n    if (_.findIndex(hierarchy, { type: 'hierarchy1' }) > filterIndex) {\n      this.setState({ hierarchy: this.props.filtersOptions }); //reset filters that are removed or swapped when filters that comes before H1 are set\n    }\n\n    let nameCapitalized =\n      currFilterName && currFilterName.charAt(0).toUpperCase() + currFilterName.slice(1); //capitalizing the name to match action/reducer name\n    let resetHierachies = {};\n    _.map(hierarchy, (item, index) => {\n      if (index > filterIndex) {\n        resetHierachies[item.type] = null; //all fiters value, which comes after selected filter becomes null(reset)\n      }\n    });\n    this.setState({ [currFilterName]: val, ...resetHierachies }, async () => {\n      let actionName = isHierarchyPrev\n        ? `setSelected${nameCapitalized}`\n        : `setSelectedExtraFil${nameCapitalized}`;\n\n      await this.setSelectionHandler(val, actionName, currFilterName); //handles setSelected action calls\n\n      if (nextFilterName === 'channel') {\n        this.props.getExtraFilterChannel();\n      }\n      let req = {};\n      _.map(hierarchy, (item, index) => {\n        if (index <= filterIndex) {\n          let nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n          // if (_.isEmpty(this.props[`selected${nameCapitalized}`])) return; //uncomment if u want empty filters removed\n          req[item.type] = this.props[`selected${nameCapitalized}`]; //this goes as filters req obj in api calls\n        }\n      });\n\n      this.setState({ filters: { ...req } });\n    });\n  };\n  setDrop = (val) => {\n    let req = {};\n    let selItems = val.map((item) => item.label);\n    req['drop'] = selItems;\n    this.setState({ filters: { ...req }, drops: val }, () => {\n      this.props.setSelectedDrops(val.map((v) => v.value));\n    });\n  };\n  actionCallHandler = (func, isHierarchyNext, nextFilterName, req) => {\n    let typeName = isHierarchyNext\n      ? nextFilterName.toUpperCase()\n      : labels[nextFilterName].toUpperCase();\n    if (nextFilterName === 'store') typeName = 'STORE_CODE';\n    let reqObj = {\n      filters: req,\n      allowInactiveProducts: this.props.allowInactiveProducts || false,\n    };\n    if (isHierarchyNext) reqObj.hierarchyType = typeName;\n    if (!isHierarchyNext) reqObj.filterType = typeName.replaceAll(' ', '_');\n    if (nextFilterName === 'customStyleGroup') {\n      let req = {\n        filters: reqObj.filters,\n        disable_empty_flag:\n          this.props.disable_empty_flag && !this.props.isEdit\n            ? this.props.disable_empty_flag\n            : false,\n      };\n      reqObj = req;\n      func = `fetchStyleGroups`;\n    }\n    if (nextFilterName === 'customStoreGroup') {\n      reqObj = {};\n      func = `getCustomStores`;\n    }\n\n    this.props[func](reqObj);\n  };\n  filterOnFocusHandler = (filterIndex, filterName, isHierarchy) => {\n    if (\n      (filterName && !_.isEmpty(this.props[filterName])) ||\n      !this.validateFilters(filterIndex) ||\n      filterName === 'channel'\n    )\n      //if filter options already exists or if all of the mandatory filters that comes before this filter is not selected or filter name is channel, return\n      return;\n\n    let func = isHierarchy ? `getHierarchyOptions` : `getExtraFiltersOptions`;\n    let req = {};\n    _.map(this.state.hierarchy, (item, index) => {\n      if (index < filterIndex) {\n        let nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n        let selected = this.props[`selected${nameCapitalized}`];\n        if (_.isEmpty(selected)) return; //uncomment if u want empty filters removed\n        req[item.type] = selected; //this goes as filters req obj in api calls\n        // if (item.type === 'channel' && selected[0] === 'Web') req['ecom_flag'] = 1;\n        // if (item.type === 'channel' && selected[0] === 'Outlet') req['retail_flag'] = 1;\n      }\n    });\n    if (filterName && this.props[func] && Object.keys(req).length) {\n      this.actionCallHandler(func, isHierarchy, filterName, req); //calles next filters action, to get it's options\n    }\n  };\n  setCustomStyleGroup = (val) => {\n    // let val = [item];\n    let selItems = val.map((item) => item.label);\n    // req['stores'] = selItems;\n    let newFilters = { ...this.state.filters, customStyleGroup: selItems };\n    this.setState({ filters: newFilters, customStyleGroup: val }, () => {\n      // this.props.setSelectedCustomGroup(val.map((v) => v.id));\n      this.props.setSelectedCustomGroup(\n        val.map((v) => v.value),\n        'name'\n      );\n      this.props.setSelectedCustomGroup(\n        val.map((v) => v.id),\n        'id'\n      );\n    });\n  };\n  setCustomStores = (val) => {\n    let selItems = val.map((item) => item.label);\n    let newFilters = { ...this.state.filters, customStoreGroup: selItems };\n    this.setState({ filters: newFilters, customStoreGroup: val }, () => {\n      this.props.setSelectedCustomStoreGroup(val.map((v) => v.value));\n    });\n  };\n  reset = () => {\n    this.setState(\n      {\n        drops: null,\n        startDate: null,\n        endDate: null,\n        hierarchy1: null,\n        hierarchy2: null,\n        hierarchy3: null,\n        hierarchy4: null,\n        hierarchy5: null,\n        hierarchy6: null,\n        hierarchy7: null,\n        hierarchy8: null,\n        customStyleGroup: null,\n        stores: null,\n        customStoreGroup: null,\n      },\n      () => {\n        if (this.props.from !== 'draft/status') this.props.resetFilters(); ////////// handling reset issues rising bcs of tabs, only reset this component state, not reducer\n        this.props.onReset && this.props.onReset();\n      }\n    );\n  };\n  onDatesChange = ({ startDate, endDate }) => {\n    this.setState(\n      {\n        startDate,\n        endDate,\n      },\n      () => {\n        let weeks = [];\n        if (endDate) {\n          for (let i = startDate.clone(); i <= endDate; i = i.add(7, 'd')) {\n            weeks.push(i.week());\n          }\n        }\n\n        this.props.setDateRange({\n          startDate: startDate && startDate.format('YYYY-MM-DD'),\n          endDate: endDate && endDate.format('YYYY-MM-DD'),\n          weeks,\n        });\n      }\n    );\n  };\n\n  validateFilters = (filterIndex, dateRange) => {\n    let { hierarchy } = this.state;\n    for (let i = 0; i < filterIndex; i++) {\n      let type = hierarchy[i] && hierarchy[i].type;\n\n      let nameCapitalized = type && type.charAt(0).toUpperCase() + type.slice(1); //capitalizing the name to match action/reducer name\n\n      if (\n        hierarchy[i] &&\n        hierarchy[i].isMandatory &&\n        _.isEmpty(this.props[`selected${nameCapitalized}`])\n      ) {\n        return false;\n      }\n    }\n    if (dateRange && (_.isEmpty(this.state.startDate) || _.isEmpty(this.state.endDate))) {\n      return false;\n    }\n\n    return true;\n  };\n  onFilterHandler = () => {\n    if (!this.validateFilters(this.state.hierarchy.length, this.props.dateRange)) {\n      toast.error(`Please select mandatory filters`, {\n        autoClose: 15000,\n        hideProgressBar: true,\n      });\n      return;\n    }\n    this.props.onFilter({\n      filters: this.state.filters,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      customStyleGroup: this.state.customStyleGroup,\n    });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div\n          className={\n            this.props.isEdit\n              ? 'row d-flex ml-4 mr-4 edit-markdown-filters'\n              : ' d-flex row ml-4 mr-4'\n          }>\n          {this.state.hierarchy &&\n            this.state.hierarchy.map(\n              (filter, i) =>\n                labels[filter.type] && (\n                  <div className=\"col-md-2 \" key={filter.type}>\n                    <label className=\"mb-1 mt-3\" style={{ whiteSpace: 'nowrap' }}>\n                      {labels[filter.type]}\n                      {filter.isMandatory ? <span style={{ color: 'red' }}> * </span> : null}\n                    </label>\n                    <Select\n                      name={filter.type}\n                      options={this.props[filter.type]}\n                      onFocus={(e) => this.filterOnFocusHandler(i, filter.type, filter.isHierarchy)}\n                      onChange={(option) =>\n                        this.getHierarchyOptions(\n                          option,\n                          i,\n                          filter.type,\n                          filter.isHierarchy,\n                          this.state.hierarchy[i + 1] && this.state.hierarchy[i + 1].type,\n                          this.state.hierarchy[i + 1] && this.state.hierarchy[i + 1].isHierarchy\n                        )\n                      }\n                      value={this.state[filter.type]}\n                      isMulti={filter.isMultiple}\n                      isDisabled={i === 0 && this.props.disableDivision ? true : false}\n                      // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n                    />\n                  </div>\n                )\n            )}\n\n          {/* {this.props.customStyleGroups &&\n            labels.customStyleGroup &&\n            !this.props.hideCustomStyleGroup && (\n              <div className=\"col-md-2 \">\n                <label className=\"mb-1 mt-3\">\n                  Custom Style Group\n                  {this.props.customStyleGrpMandatory ? (\n                    <span style={{ color: 'red' }}> * </span>\n                  ) : null}\n                </label>\n                <Select\n                  options={this.props.customStyleGroup}\n                  onChange={(option) => this.setCustomStyleGroup(option)}\n                  value={this.state.customStyleGroup}\n                  isMulti\n                  // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n                />\n              </div>\n            )}\n          {this.props.customStoreGroup && labels.customStoreGroup && !this.props.hideCustomStores && (\n            <div className=\"col-md-2 \">\n              <label className=\"mb-1 mt-3\">\n                {labels.customStoreGroup}\n                \n              </label>\n              <Select\n                options={this.props.customStoreGroup}\n                onChange={(option) => this.setCustomStores(option)}\n                value={this.state.customStoreGroup}\n                isMulti\n                // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n              />\n            </div>\n          )} */}\n          {this.props.dateRange && (\n            <div className=\"col-md-3\">\n              <label className=\"mb-1 mt-3\">\n                Date range <span style={{ color: 'red' }}> * </span>\n              </label>\n              <DateRangePicker\n                startDate={this.state.startDate}\n                startDateId=\"startDate_11\"\n                endDate={this.state.endDate}\n                endDateId=\"endDate_11\"\n                onDatesChange={this.onDatesChange}\n              />\n            </div>\n          )}\n          {!this.props.hidefilterButton && (\n            <div\n              className={\n                !this.props.dateRange && !this.props.hideCustomStores\n                  ? 'col-md-2 mt-5 px-0' //'col-md-3 mt-4  ml-auto text-right'\n                  : 'col-md-3 mt-5'\n              }>\n              <button\n                disabled={this.props.isEdit}\n                onClick={this.onFilterHandler}\n                className={\n                  !this.props.dateRange && !this.props.hideCustomStores\n                    ? 'col-md-5 btn btn-primary btn-filter ml-2'\n                    : 'col-md-4 btn btn-primary btn-filter'\n                }>\n                <span>\n                  <i className=\"fa fa-filter\"></i>&nbsp; Filter\n                </span>\n              </button>\n              <button\n                disabled={this.props.isEdit}\n                className={\n                  !this.props.dateRange && !this.props.hideCustomStores\n                    ? ' col-md-5 btn btn-primary btn-filter btn-filter-reset ml-3'\n                    : 'col-md-4 offset-1 btn btn-primary btn-filter btn-filter-reset'\n                }\n                onClick={this.reset}>\n                <span>\n                  <i className=\"fa fa-repeat\"></i>&nbsp; Reset\n                </span>\n              </button>\n            </div>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    drops: store.filtersReducer.drops,\n    selectedDrops: store.filtersReducer.selectedDrops,\n    hierarchy1: store.filtersReducer.hierarchy1,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    hierarchy2: store.filtersReducer.hierarchy2,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    hierarchy3: store.filtersReducer.hierarchy3,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    hierarchy4: store.filtersReducer.hierarchy4,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    hierarchy5: store.filtersReducer.hierarchy5,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    hierarchy6: store.filtersReducer.hierarchy6,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    hierarchy7: store.filtersReducer.hierarchy7,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    hierarchy8: store.filtersReducer.hierarchy8,\n    selectedHierarchy8: store.filtersReducer.selectedHierarchy8,\n    stores: store.filtersReducer.stores,\n    customStoreGroup: store.filtersReducer.customStoreGroup,\n    customStyleGroup: store.filtersReducer.customStyleGroup,\n    selectedStores: store.filtersReducer.selectedStores,\n    selectedCustomStyleGroup: store.filtersReducer.selectedCustomStyleGroup,\n    selectedCustomStoreGroup: store.filtersReducer.selectedCustomStoreGroup,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks,\n    retainFilters: store.filtersReducer.retainFilters,\n    editPlanDetails: store.manuallyCreateMdData.editPlanDetails,\n\n    season: store.filtersReducer.season,\n    selectedSeason: store.filtersReducer.selectedSeason,\n    clearance: store.filtersReducer.clearance,\n    selectedClearance: store.filtersReducer.selectedClearance,\n    matrix: store.filtersReducer.matrix,\n    selectedMatrix: store.filtersReducer.selectedMatrix,\n    exclusionList: store.filtersReducer.exclusionList,\n    selectedExclusionList: store.filtersReducer.selectedExclusionList,\n    styleColor: store.filtersReducer.styleColor,\n    selectedStyleColor: store.filtersReducer.selectedStyleColor,\n    country: store.filtersReducer.country,\n    selectedCountry: store.filtersReducer.selectedCountry,\n    storeCluster: store.filtersReducer.storeCluster,\n    selectedStoreCluster: store.filtersReducer.selectedStoreCluster,\n    store: store.filtersReducer.store,\n    selectedStore: store.filtersReducer.selectedStore,\n    channel: store.filtersReducer.channel,\n    selectedChannel: store.filtersReducer.selectedChannel,\n  };\n};\nconst mapDispatchToProps = {\n  getHierarchyOptions: FilterActions.getHierarchyOptions,\n  getExtraFiltersOptions: FilterActions.getExtraFiltersOptions,\n  getStores: FilterActions.getStores,\n  getCustomStores: FilterActions.getCustomStores,\n  setSelectedDrops: FilterActions.setSelectedDrops,\n  setSelectedHierarchy1: FilterActions.setSelectedHierarchy1,\n  setSelectedHierarchy2: FilterActions.setSelectedHierarchy2,\n  setSelectedHierarchy3: FilterActions.setSelectedHierarchy3,\n  setSelectedHierarchy4: FilterActions.setSelectedHierarchy4,\n  setSelectedHierarchy5: FilterActions.setSelectedHierarchy5,\n  setSelectedHierarchy6: FilterActions.setSelectedHierarchy6,\n  setSelectedHierarchy7: FilterActions.setSelectedHierarchy7,\n  setSelectedHierarchy8: FilterActions.setSelectedHierarchy8,\n  setSelectedStores: FilterActions.setSelectedStores,\n  setSelectedCustomGroup: FilterActions.setSelectedCustomGroup,\n  setSelectedCustomStoreGroup: FilterActions.setSelectedCustomStoreGroup,\n  setDateRange: FilterActions.setDateRange,\n  resetFilters: FilterActions.resetFilters,\n  setRetainFilters: FilterActions.setRetainFilters,\n  presetFilters: FilterActions.presetFilters,\n  getExtraFilterChannel: FilterActions.getExtraFilterChannel,\n  setSelectedExtraFilSeason: FilterActions.setSelectedExtraFilSeason,\n  setSelectedExtraFilMatrix: FilterActions.setSelectedExtraFilMatrix,\n  setSelectedExtraFilExclusionList: FilterActions.setSelectedExtraFilExclusionList,\n  setSelectedExtraFilClearance: FilterActions.setSelectedExtraFilClearance,\n  setSelectedExtraFilStyleColor: FilterActions.setSelectedExtraFilStyleColor,\n  setSelectedExtraFilCountry: FilterActions.setSelectedExtraFilCountry,\n  setSelectedExtraFilStoreCluster: FilterActions.setSelectedExtraFilStoreCluster,\n  setSelectedExtraFilChannel: FilterActions.setSelectedExtraFilChannel,\n  setSelectedExtraFilStore: FilterActions.setSelectedExtraFilStore,\n  fetchStyleGroups: FilterActions.fetchStyleGroups,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Filters));\n"]},"metadata":{},"sourceType":"module"}