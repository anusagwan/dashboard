{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/draftStatus/status/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n\\n  .flexRow {\\n    display: flex;\\n    flex-direction: row;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport DraftAction from '../../../actions/draftStausFinalizeAction';\nimport Filters from '../../../services/filters';\nimport DataTable from '../../../services/reactTable';\nimport Modal from '../../../services/modal';\nimport ColumnSelection from '../../columnSelection';\nimport StatusListCount from './statusListCount';\nimport Select from '../../../utils/reactDropDownSelect'; // import statusColDef from '../status/coldef';\n\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport '../draftStatus.css';\nimport { cloneDeep } from 'lodash';\nimport { toast } from 'react-toastify';\nimport NoData from '../../noTableData';\nimport moment from 'moment';\nimport Switch from '../../../services/toggleSwitch';\n\nvar Status =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Status, _Component);\n\n  function Status(props) {\n    var _this;\n\n    _classCallCheck(this, Status);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Status).call(this, props));\n\n    _this.onCellClick = function (row) {\n      if (row.value === 'rejected') {\n        _this.setState({\n          isComment: true,\n          rowDetails: row.row.original\n        });\n      }\n    };\n\n    _this.setComment = function (e) {\n      _this.setState({\n        comment: e.target.value\n      });\n    };\n\n    _this.onCloseComment = function () {\n      _this.setState({\n        isComment: false,\n        rowDetails: {}\n      });\n    };\n\n    _this.onSaveComment = function () {\n      var tableData = cloneDeep(_this.props.statusMarkdowns);\n      tableData.forEach(function (row) {\n        if (_this.state.rowDetails.md_plan === row['md_plan'] && _this.state.rowDetails.scenario === row['scenario']) {\n          row.comment = _this.state.comment;\n        }\n      });\n\n      _this.props.setStatusData(tableData);\n\n      _this.setState({\n        isComment: false,\n        rowDetails: {}\n      });\n    };\n\n    _this.findStatusColor = function (status, color) {\n      switch (status) {\n        case 'high':\n          return color.high;\n\n        case 'medium':\n          return color.medium;\n\n        case 'low':\n          return color.low;\n\n        default:\n          break;\n      }\n    };\n\n    _this.bgmCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var bgCol = {\n        high: '#F8E8E8',\n        medium: '#FCF3D1',\n        low: '#E8F8F5'\n      };\n      return _this.findStatusColor(status, bgCol);\n    };\n\n    _this.txtCol = function (cellInfo) {\n      if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n      var txtCol = {\n        high: '#D38485',\n        medium: '#F0C53A',\n        low: '#66CFBA'\n      };\n      return _this.findStatusColor(status, txtCol);\n    };\n\n    _this.isSwitchedPaln = function (val) {\n      _this.updateTableData(val);\n\n      _this.setState({\n        switchedPlans: val\n      });\n    };\n\n    _this.updateTableData = function (isEdited) {\n      var statusMarkdowns = _this.props.statusMarkdowns;\n\n      var newTableData = _.filter(statusMarkdowns, function (item) {\n        return item.is_edited === isEdited;\n      });\n\n      var tempStatusObj = {};\n\n      _.forEach(newTableData, function (row) {\n        if (tempStatusObj.hasOwnProperty(row.status)) {\n          tempStatusObj[row.status] += 1;\n        } else {\n          tempStatusObj[\"\".concat(row.status)] = 1;\n        }\n      });\n\n      if (!_.isEqual(_this.state.tableData, newTableData)) _this.setState({\n        tableData: newTableData,\n        statusCounts: tempStatusObj\n      });\n    };\n\n    _this.mandatoryFiltersVal = function (_ref) {\n      var filters = _ref.filters,\n          startDate = _ref.startDate,\n          endDate = _ref.endDate;\n      return !_.isEmpty(filters.hierarchy1) && !_.isEmpty(filters.hierarchy2) && startDate && endDate;\n    };\n\n    _this.onFilter = function (filtersData) {\n      var payload = {\n        filters: filtersData.filters,\n        startDate: filtersData.dateRange && filtersData.dateRange.startDate,\n        endDate: filtersData.dateRange && filtersData.dateRange.endDate\n      }; // if (this.props.selectedChannel[0] === 'Web') payload.filters['ecom_flag'] = [1];\n      // if (this.props.selectedChannel[0] === 'Outlet') payload.filters['retail_flag'] = [1];\n\n      _this.props.getMarkdowns(payload);\n    };\n\n    _this.state = {\n      selectStatusValues: [],\n      comment: '',\n      isComment: false,\n      rowDetails: {},\n      selectedLabels: [],\n      selectedItems: [],\n      columnOptions: [],\n      selLabels: [],\n      columns: [],\n      switchedPlans: false,\n      tableData: [],\n      statusCounts: {}\n    };\n    return _this;\n  }\n\n  _createClass(Status, [{\n    key: \"componentDidMount\",\n    //////////edited and unedited toggle code start ///////////////////////////////////\n    value: function componentDidMount() {\n      this.updateTableData(this.state.switchedPlans);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var statusMarkdowns = this.props.statusMarkdowns;\n\n      if (!_.isEmpty(statusMarkdowns) && !_.isEqual(statusMarkdowns, prevProps.statusMarkdowns)) {\n        this.updateTableData(this.state.switchedPlans);\n      }\n    }\n  }, {\n    key: \"render\",\n    ////////// handling reset issues rising bcs of tabs end //////////////////\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"createMd pl-2 pr-2 status-comp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"font-size-14  pad-10 markdown-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"MarkSmart /\", React.createElement(\"span\", {\n        className: \"font-bold color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Status\"))), React.createElement(\"hr\", {\n        className: \"mb-2\",\n        style: {\n          marginTop: '-4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"filterCol mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Filters, {\n        onReset: function onReset(e) {\n          _this2.props.textStrHandler(true);\n\n          _this2.props.onResetStatusTable(e);\n        },\n        onFilter: this.onFilter,\n        keepFilters: !_.isEmpty(this.props.statusMarkdowns) ? true : false,\n        from: \"status\",\n        currentTab: this.props.currentTab // from=\"draft/status\" ////////// handling reset issues rising bcs of tabs\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }))), this.props.statusMarkdowns && this.props.statusMarkdowns.length ? React.createElement(\"div\", {\n        className: \"card pl-3 pr-3 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(ColSelBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, this.props.statusColumnHeaders && this.props.currentTab === 'status' && Object.keys(this.props.statusColumnHeaders).length && React.createElement(ColumnSelection, {\n        onHandleCheckBox: this.props.onHandleCheckBox,\n        columnHeaders: this.props.statusColumnHeaders,\n        onHandleSelect: this.props.onHandleSelect,\n        columnOptions: this.props.columnOptions,\n        selectedItems: this.props.selectedItems,\n        selLabels: this.props.selLabels,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"switchCss\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        checked: this.state.switchedPlans,\n        onSwitchHandler: this.isSwitchedPaln,\n        leftLabel: \"Unedited Plans\",\n        rightLabel: \"Edited Plans\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          padding: '1rem',\n          textTransform: 'capitalize'\n        },\n        className: \"flexRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, this.state.statusCounts && Object.keys(this.state.statusCounts).length ? React.createElement(StatusListCount, {\n        statusCounts: this.state.statusCounts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }) : '')), React.createElement(DataTable, {\n        isExpanded: true,\n        isSort: true // isColumnFilter={true}\n        ,\n        columns: this.props.columns,\n        data: this.state.tableData //this.props.statusMarkdowns}\n        ,\n        isPagination: true,\n        getColumnProps: function getColumnProps(column) {\n          return {// onClick: () => this.onColumnClick(column),\n          };\n        },\n        getCellProps: function getCellProps(cellInfo) {\n          return {\n            onClick: function onClick() {\n              return _this2.onCellClick(cellInfo);\n            },\n            style: {\n              backgroundColor: _this2.bgmCol(cellInfo),\n              color: _this2.txtCol(cellInfo),\n              margin: '4px 4px',\n              borderRadius: '2px'\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      })) : React.createElement(NoData, {\n        description: this.props.statusTextStr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        size: \"sm\",\n        show: this.state.isComment,\n        header: \"Add Comment\",\n        onHide: this.onCloseComment,\n        onSaveComment: this.onSaveComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"commentTextArea\",\n        rows: \"2\",\n        cols: \"20\",\n        onChange: this.setComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Status;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    // markdowns: store.draftStatusReducer.markdowns,\n    // getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    statusMarkdowns: store.draftStatusReducer.statusMarkdowns,\n    statusColumnHeaders: store.draftStatusReducer.statusColumnHeaders,\n    getStatusOptions: store.draftStatusReducer.statusOptions\n  };\n};\n\nvar mapActionToProps = {\n  onResetStatusTable: DraftAction.onResetStatusTable\n};\nexport default connect(mapStateToProps, mapActionToProps)(Status);\nvar ColSelBtn = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/draftStatus/status/index.js"],"names":["React","Component","connect","DraftAction","Filters","DataTable","Modal","ColumnSelection","StatusListCount","Select","styled","_","cloneDeep","toast","NoData","moment","Switch","Status","props","onCellClick","row","value","setState","isComment","rowDetails","original","setComment","e","comment","target","onCloseComment","onSaveComment","tableData","statusMarkdowns","forEach","state","md_plan","scenario","setStatusData","findStatusColor","status","color","high","medium","low","bgmCol","cellInfo","column","id","md_status","bgCol","txtCol","isSwitchedPaln","val","updateTableData","switchedPlans","isEdited","newTableData","filter","item","is_edited","tempStatusObj","hasOwnProperty","isEqual","statusCounts","mandatoryFiltersVal","filters","startDate","endDate","isEmpty","hierarchy1","hierarchy2","onFilter","filtersData","payload","dateRange","getMarkdowns","selectStatusValues","selectedLabels","selectedItems","columnOptions","selLabels","columns","prevProps","marginTop","textStrHandler","onResetStatusTable","currentTab","length","statusColumnHeaders","Object","keys","onHandleCheckBox","onHandleSelect","padding","textTransform","onClick","style","backgroundColor","margin","borderRadius","statusTextStr","mapStateToProps","store","draftStatusReducer","getStatusOptions","statusOptions","mapActionToProps","ColSelBtn","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport DraftAction from '../../../actions/draftStausFinalizeAction';\nimport Filters from '../../../services/filters';\nimport DataTable from '../../../services/reactTable';\nimport Modal from '../../../services/modal';\nimport ColumnSelection from '../../columnSelection';\nimport StatusListCount from './statusListCount';\nimport Select from '../../../utils/reactDropDownSelect';\n// import statusColDef from '../status/coldef';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport '../draftStatus.css';\nimport { cloneDeep } from 'lodash';\nimport { toast } from 'react-toastify';\nimport NoData from '../../noTableData';\nimport moment from 'moment';\nimport Switch from '../../../services/toggleSwitch';\n\nclass Status extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectStatusValues: [],\n      comment: '',\n      isComment: false,\n      rowDetails: {},\n      selectedLabels: [],\n      selectedItems: [],\n      columnOptions: [],\n      selLabels: [],\n      columns: [],\n      switchedPlans: false,\n      tableData: [],\n      statusCounts: {},\n    };\n  }\n\n  onCellClick = (row) => {\n    if (row.value === 'rejected') {\n      this.setState({\n        isComment: true,\n        rowDetails: row.row.original,\n      });\n    }\n  };\n  setComment = (e) => {\n    this.setState({\n      comment: e.target.value,\n    });\n  };\n\n  onCloseComment = () => {\n    this.setState({\n      isComment: false,\n      rowDetails: {},\n    });\n  };\n  onSaveComment = () => {\n    let tableData = cloneDeep(this.props.statusMarkdowns);\n    tableData.forEach((row) => {\n      if (\n        this.state.rowDetails.md_plan === row['md_plan'] &&\n        this.state.rowDetails.scenario === row['scenario']\n      ) {\n        row.comment = this.state.comment;\n      }\n    });\n    this.props.setStatusData(tableData);\n    this.setState({\n      isComment: false,\n      rowDetails: {},\n    });\n  };\n\n  findStatusColor = (status, color) => {\n    switch (status) {\n      case 'high':\n        return color.high;\n      case 'medium':\n        return color.medium;\n      case 'low':\n        return color.low;\n      default:\n        break;\n    }\n  };\n\n  bgmCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let bgCol = {\n      high: '#F8E8E8',\n      medium: '#FCF3D1',\n      low: '#E8F8F5',\n    };\n    return this.findStatusColor(status, bgCol);\n  };\n  txtCol = (cellInfo) => {\n    if (cellInfo.column.id === 'md_status') var status = cellInfo.row.original.md_status;\n    let txtCol = {\n      high: '#D38485',\n      medium: '#F0C53A',\n      low: '#66CFBA',\n    };\n    return this.findStatusColor(status, txtCol);\n  };\n  //////////edited and unedited toggle code start ///////////////////////////////////\n  componentDidMount() {\n    this.updateTableData(this.state.switchedPlans);\n  }\n  componentDidUpdate(prevProps) {\n    let { statusMarkdowns } = this.props;\n    if (!_.isEmpty(statusMarkdowns) && !_.isEqual(statusMarkdowns, prevProps.statusMarkdowns)) {\n      this.updateTableData(this.state.switchedPlans);\n    }\n  }\n  isSwitchedPaln = (val) => {\n    this.updateTableData(val);\n    this.setState({\n      switchedPlans: val,\n    });\n  };\n  updateTableData = (isEdited) => {\n    let { statusMarkdowns } = this.props;\n    let newTableData = _.filter(statusMarkdowns, (item) => item.is_edited === isEdited);\n\n    let tempStatusObj = {};\n    _.forEach(newTableData, (row) => {\n      if (tempStatusObj.hasOwnProperty(row.status)) {\n        tempStatusObj[row.status] += 1;\n      } else {\n        tempStatusObj[`${row.status}`] = 1;\n      }\n    });\n\n    if (!_.isEqual(this.state.tableData, newTableData))\n      this.setState({ tableData: newTableData, statusCounts: tempStatusObj });\n  };\n  //////////edited and unedited toggle code end ///////////////////////////////////\n\n  ////////// handling reset issues rising bcs of tabs start /////////////////////////\n  mandatoryFiltersVal = ({ filters, startDate, endDate }) => {\n    return !_.isEmpty(filters.hierarchy1) && !_.isEmpty(filters.hierarchy2) && startDate && endDate;\n  };\n  onFilter = (filtersData) => {\n    let payload = {\n      filters: filtersData.filters,\n      startDate: filtersData.dateRange && filtersData.dateRange.startDate,\n      endDate: filtersData.dateRange && filtersData.dateRange.endDate,\n    };\n    // if (this.props.selectedChannel[0] === 'Web') payload.filters['ecom_flag'] = [1];\n    // if (this.props.selectedChannel[0] === 'Outlet') payload.filters['retail_flag'] = [1];\n    this.props.getMarkdowns(payload);\n  };\n  ////////// handling reset issues rising bcs of tabs end //////////////////\n  render() {\n    return (\n      <div className=\"createMd pl-2 pr-2 status-comp\">\n        <div className=\"card\">\n          <div>\n            <h4 className=\"font-size-14  pad-10 markdown-heading\">\n              MarkSmart /<span className=\"font-bold color-blue\">Status</span>\n            </h4>\n          </div>\n          <hr\n            className=\"mb-2\"\n            style={{\n              marginTop: '-4px',\n            }}\n          />\n          <div className=\"filterCol mb-4\">\n            <Filters\n              onReset={(e) => {\n                this.props.textStrHandler(true);\n                this.props.onResetStatusTable(e);\n              }}\n              onFilter={this.onFilter}\n              keepFilters={!_.isEmpty(this.props.statusMarkdowns) ? true : false}\n              from=\"status\"\n              currentTab={this.props.currentTab}\n              // from=\"draft/status\" ////////// handling reset issues rising bcs of tabs\n            />\n          </div>\n        </div>\n        {this.props.statusMarkdowns && this.props.statusMarkdowns.length ? (\n          <div className=\"card pl-3 pr-3 mt-3\">\n            <ColSelBtn>\n              {this.props.statusColumnHeaders &&\n                this.props.currentTab === 'status' &&\n                Object.keys(this.props.statusColumnHeaders).length && (\n                  <ColumnSelection\n                    onHandleCheckBox={this.props.onHandleCheckBox}\n                    columnHeaders={this.props.statusColumnHeaders}\n                    onHandleSelect={this.props.onHandleSelect}\n                    columnOptions={this.props.columnOptions}\n                    selectedItems={this.props.selectedItems}\n                    selLabels={this.props.selLabels}\n                  />\n                )}\n              <div className=\"switchCss\">\n                <Switch\n                  checked={this.state.switchedPlans}\n                  onSwitchHandler={this.isSwitchedPaln}\n                  leftLabel=\"Unedited Plans\"\n                  rightLabel=\"Edited Plans\"\n                />\n              </div>\n              <div style={{ padding: '1rem', textTransform: 'capitalize' }} className=\"flexRow\">\n                {this.state.statusCounts && Object.keys(this.state.statusCounts).length ? (\n                  <StatusListCount statusCounts={this.state.statusCounts} />\n                ) : (\n                  ''\n                )}\n              </div>\n            </ColSelBtn>\n\n            <DataTable\n              isExpanded={true}\n              isSort={true}\n              // isColumnFilter={true}\n              columns={this.props.columns}\n              data={this.state.tableData} //this.props.statusMarkdowns}\n              isPagination={true}\n              getColumnProps={(column) => ({\n                // onClick: () => this.onColumnClick(column),\n              })}\n              getCellProps={(cellInfo) => ({\n                onClick: () => this.onCellClick(cellInfo),\n                style: {\n                  backgroundColor: this.bgmCol(cellInfo),\n                  color: this.txtCol(cellInfo),\n                  margin: '4px 4px',\n                  borderRadius: '2px',\n                },\n              })}\n            />\n          </div>\n        ) : (\n          <NoData description={this.props.statusTextStr} />\n        )}\n        <Modal\n          size=\"sm\"\n          show={this.state.isComment}\n          header=\"Add Comment\"\n          onHide={this.onCloseComment}\n          onSaveComment={this.onSaveComment}>\n          <textarea id=\"commentTextArea\" rows=\"2\" cols=\"20\" onChange={this.setComment}></textarea>\n        </Modal>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (store) => {\n  return {\n    // markdowns: store.draftStatusReducer.markdowns,\n    // getColumnHeaders: store.draftStatusReducer.columnHeaders,\n    statusMarkdowns: store.draftStatusReducer.statusMarkdowns,\n    statusColumnHeaders: store.draftStatusReducer.statusColumnHeaders,\n    getStatusOptions: store.draftStatusReducer.statusOptions,\n  };\n};\nconst mapActionToProps = {\n  onResetStatusTable: DraftAction.onResetStatusTable,\n};\nexport default connect(mapStateToProps, mapActionToProps)(Status);\n\nconst ColSelBtn = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  .flexRow {\n    display: flex;\n    flex-direction: row;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}