{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/ComparisonTable.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-family: arial, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%;\\n\\n  td,\\n  th {\\n    border: 1px solid #dddddd;\\n    text-align: center;\\n    padding: 8px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport cloneDeep from 'clone-deep';\nimport InputWithPercentageTag from './InputWithPercentageTag';\n\nvar ComparisonTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ComparisonTable, _Component);\n\n  function ComparisonTable(props) {\n    var _this;\n\n    _classCallCheck(this, ComparisonTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ComparisonTable).call(this, props));\n\n    _this.onCheckboxClick = function (e, col, row, index) {\n      var selectedRows = cloneDeep(_this.state.selectedRow);\n\n      if (e.target.checked) {\n        selectedRows.push(row);\n      } else {\n        selectedRows.forEach(function (rows, index) {\n          if (rows.scenarios === row.scenarios) {\n            selectedRows.splice(index, 1);\n          }\n        });\n      }\n\n      _this.setState({\n        selectedRow: selectedRows\n      }); // let comparisonRowVal = row;\n\n\n      _this.props.comparisonCheckbox(selectedRows, index);\n    };\n\n    _this.changedRow = function (obj) {\n      var data = _this.state.data;\n      data.splice(obj.rowNumber, 1, obj.row); // this.setState({\n      //   data: data,\n      // });\n    };\n\n    _this.state = {\n      data: [],\n      selectedRow: [],\n      editedRows: {}\n    };\n    return _this;\n  } // componentWillReceiveProps(props) {\n  //   this.setState({\n  //     data: this.props.data,\n  //   });\n  // }\n  // componentDidMount() {\n  //   this.setState({\n  //     data: this.props.data,\n  //   });\n  // }\n\n\n  _createClass(ComparisonTable, [{\n    key: \"onCadenceValue\",\n    value: function onCadenceValue(event, col, row, rowNumber) {\n      var data = cloneDeep(this.props.data);\n      row[col] = event.target.value;\n      data[rowNumber] = row;\n      this.setState({\n        data: data\n      });\n      this.props.onComparisonInputChange(data, this.props.index);\n    }\n  }, {\n    key: \"getHeader\",\n    value: function getHeader() {\n      if (this.state.data && this.state.data.length) {\n        var headers = Object.keys(this.state.data[0]);\n        headers.unshift('');\n        return headers.map(function (header, index) {\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, header ? header[0].toUpperCase() + header.slice(1) : '');\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(preprops) {\n      if (this.props.data !== preprops.data) {\n        this.setState({\n          data: this.props.data\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount(preprops) {\n      // if (this.props.data !== preprops.data) {\n      this.setState({\n        data: this.props.data\n      }); // }\n    }\n  }, {\n    key: \"getTags\",\n    value: function getTags(col, row, rowNumber) {\n      var _this2 = this;\n\n      if (col.toLowerCase().startsWith('w')) {\n        // return this.getInputWithPercentageTag(col, row, rowNumber);\n        return React.createElement(InputWithPercentageTag, {\n          offerType: this.props.offerType,\n          row: row,\n          col: col,\n          value: row[col],\n          rowNumber: rowNumber,\n          data: this.state.data,\n          changedRow: function changedRow(obj) {\n            var data = cloneDeep(_this2.state.data);\n            data[obj.rowNumber][obj.col] = obj.value;\n            var editedRow = cloneDeep(_this2.state.editedRows);\n            editedRow[obj.rowNumber] = data[obj.rowNumber];\n\n            _this2.setState({\n              data: data,\n              editedRows: editedRow\n            });\n\n            _this2.props.updatedData(data, _this2.state.editedRows);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        });\n      } else if (col.toLowerCase().startsWith('scenarios')) {\n        return row[col];\n      } else if (col.toLowerCase().startsWith('skuid')) {\n        return row[col];\n      } else {\n        return React.createElement(\"input\", {\n          type: \"checkbox\",\n          onChange: function onChange(e) {\n            return _this2.onCheckboxClick(e, col, row, rowNumber);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"cadencetable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"createCadenceTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Styles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, this.getHeader()), this.state.data && this.state.data.length > 0 && this.state.data.map(function (row, rowNumber) {\n        var rows = Object.keys(row);\n        rows.unshift('');\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, rows.map(function (col, index) {\n          return React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            },\n            __self: this\n          }, _this3.getTags(col, row, rowNumber));\n        }));\n      }))))));\n    }\n  }]);\n\n  return ComparisonTable;\n}(Component);\n\nexport default ComparisonTable;\nvar Styles = styled.table(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/ComparisonTable.js"],"names":["React","Component","styled","cloneDeep","InputWithPercentageTag","ComparisonTable","props","onCheckboxClick","e","col","row","index","selectedRows","state","selectedRow","target","checked","push","forEach","rows","scenarios","splice","setState","comparisonCheckbox","changedRow","obj","data","rowNumber","editedRows","event","value","onComparisonInputChange","length","headers","Object","keys","unshift","map","header","toUpperCase","slice","preprops","toLowerCase","startsWith","offerType","editedRow","updatedData","getHeader","getTags","Styles","table"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport cloneDeep from 'clone-deep';\nimport InputWithPercentageTag from './InputWithPercentageTag';\nclass ComparisonTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      selectedRow: [],\n      editedRows: {},\n    };\n  }\n  // componentWillReceiveProps(props) {\n  //   this.setState({\n  //     data: this.props.data,\n  //   });\n  // }\n  // componentDidMount() {\n  //   this.setState({\n  //     data: this.props.data,\n  //   });\n  // }\n  onCadenceValue(event, col, row, rowNumber) {\n    let data = cloneDeep(this.props.data);\n    row[col] = event.target.value;\n    data[rowNumber] = row;\n    this.setState({\n      data: data,\n    });\n    this.props.onComparisonInputChange(data, this.props.index);\n  }\n  getHeader() {\n    if (this.state.data && this.state.data.length) {\n      let headers = Object.keys(this.state.data[0]);\n      headers.unshift('');\n      return headers.map((header, index) => {\n        return <th key={index}>{header ? header[0].toUpperCase() + header.slice(1) : ''}</th>;\n      });\n    }\n  }\n  onCheckboxClick = (e, col, row, index) => {\n    let selectedRows = cloneDeep(this.state.selectedRow);\n    if (e.target.checked) {\n      selectedRows.push(row);\n    } else {\n      selectedRows.forEach((rows, index) => {\n        if (rows.scenarios === row.scenarios) {\n          selectedRows.splice(index, 1);\n        }\n      });\n    }\n    this.setState({\n      selectedRow: selectedRows,\n    });\n    // let comparisonRowVal = row;\n    this.props.comparisonCheckbox(selectedRows, index);\n  };\n  // getInputWithPercentageTag(col, row, i, rowNumber, index) {\n  //   return (\n  //     <div className=\"col\" key={i + 1} style={{ width: '140px' }}>\n  //       <div className=\"input-group\" style={{ width: '90%' }}>\n  //         <input\n  //           type=\"text\"\n  //           onChange={(event) => this.onCadenceValue(event, col, row, rowNumber, index, i)}\n  //           // onChange={(e) => this.onComparisonInputChange(e, col, row, rowNumber, index, i)}\n  //           className=\"form-control border-style\"\n  //           value={row[col]}\n  //           disabled={row.scenarios === 'Optimal' ? true : false}\n  //         />\n  //         <div className=\"input-group-append\">\n  //           <button className=\"btn btn-side-percent\" type=\"button\" style={{ zIndex: 'unset' }}>\n  //             <i className=\"fa fa-percent\" />\n  //           </button>\n  //         </div>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n  changedRow = (obj) => {\n    let data = this.state.data;\n    data.splice(obj.rowNumber, 1, obj.row);\n    // this.setState({\n    //   data: data,\n    // });\n  };\n\n  componentDidUpdate(preprops) {\n    if (this.props.data !== preprops.data) {\n      this.setState({\n        data: this.props.data,\n      });\n    }\n  }\n\n  componentDidMount(preprops) {\n    // if (this.props.data !== preprops.data) {\n    this.setState({\n      data: this.props.data,\n    });\n    // }\n  }\n\n  getTags(col, row, rowNumber) {\n    if (col.toLowerCase().startsWith('w')) {\n      // return this.getInputWithPercentageTag(col, row, rowNumber);\n      return (\n        <InputWithPercentageTag\n          offerType={this.props.offerType}\n          row={row}\n          col={col}\n          value={row[col]}\n          rowNumber={rowNumber}\n          data={this.state.data}\n          changedRow={(obj) => {\n            let data = cloneDeep(this.state.data);\n            data[obj.rowNumber][obj.col] = obj.value;\n            let editedRow = cloneDeep(this.state.editedRows);\n            editedRow[obj.rowNumber] = data[obj.rowNumber];\n            this.setState({ data: data, editedRows: editedRow });\n            this.props.updatedData(data, this.state.editedRows);\n          }}\n        />\n      );\n    } else if (col.toLowerCase().startsWith('scenarios')) {\n      return row[col];\n    } else if (col.toLowerCase().startsWith('skuid')) {\n      return row[col];\n    } else {\n      return (\n        <input\n          type=\"checkbox\"\n          onChange={(e) => this.onCheckboxClick(e, col, row, rowNumber)}></input>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"cadencetable\">\n          <div className=\"createCadenceTable\">\n            <Styles>\n              <tbody>\n                <tr>{this.getHeader()}</tr>\n                {this.state.data &&\n                  this.state.data.length > 0 &&\n                  this.state.data.map((row, rowNumber) => {\n                    let rows = Object.keys(row);\n                    rows.unshift('');\n                    return (\n                      <tr>\n                        {rows.map((col, index) => {\n                          return <td>{this.getTags(col, row, rowNumber)}</td>;\n                        })}\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </Styles>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ComparisonTable;\n\nconst Styles = styled.table`\n  font-family: arial, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n\n  td,\n  th {\n    border: 1px solid #dddddd;\n    text-align: center;\n    padding: 8px;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}