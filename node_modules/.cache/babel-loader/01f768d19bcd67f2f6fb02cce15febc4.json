{"ast":null,"code":"import _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/MarkdownAnalysis/index.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport AnalysisTable from '../MarkdownAnalysis/AnalysisTable';\nimport moment from 'moment';\nimport LineChart from '../support/Charts/LineChart';\nimport './index.css';\nvar options2 = {\n  plugins: {\n    datalabels: {\n      display: false\n    }\n  },\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px'\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [{\n      gridLines: {\n        display: true\n      },\n      ticks: {\n        fontSize: 13\n      },\n      scaleLabel: {\n        show: true,\n        display: true,\n        fontSize: 14,\n        fontStyle: 'bold',\n        fontColor: '#000',\n        labelString: 'Margin %'\n      }\n    }],\n    xAxes: [{\n      id: 'x-axis-0',\n      gridLines: {\n        // color: '#aeaeae5e',\n        display: false\n      },\n      ticks: {\n        autoSkip: true,\n        autoSkipPadding: 40,\n        maxRotation: 0\n      },\n      scaleLabel: {\n        display: true,\n        labelString: 'Time (week)',\n        fontWeight: 900,\n        fontStyle: 'bold'\n      }\n    }]\n  }\n};\nvar options = {\n  plugins: {\n    datalabels: {\n      display: false\n    }\n  },\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px'\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [{\n      gridLines: {\n        display: true\n      },\n      ticks: {\n        fontSize: 13\n      },\n      scaleLabel: {\n        show: true,\n        display: true,\n        fontSize: 14,\n        fontStyle: 'bold',\n        fontColor: '#000',\n        labelString: 'Sell Through %'\n      }\n    }],\n    xAxes: [{\n      id: 'x-axis-0',\n      gridLines: {\n        // color: '#aeaeae5e',\n        display: false\n      },\n      ticks: {\n        autoSkip: true,\n        autoSkipPadding: 40,\n        maxRotation: 0\n      },\n      scaleLabel: {\n        display: true,\n        labelString: 'Time (week)',\n        fontWeight: 900,\n        fontStyle: 'bold'\n      }\n    }]\n  }\n};\n\nvar MarkdownAnalysis =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MarkdownAnalysis, _Component);\n\n  function MarkdownAnalysis(props) {\n    var _this;\n\n    _classCallCheck(this, MarkdownAnalysis);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MarkdownAnalysis).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(MarkdownAnalysis, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var borderColors = ['rgba(68, 103, 123, 1.2)', 'rgba(166, 206, 227, 1.2)', 'rgba(131, 190, 140, 1.2)'];\n      var backgroundColors = ['rgba(68, 103, 123, 0.3)', 'rgba(166, 206, 227, 0.3)', 'rgba(131, 190, 140, 0.3)'];\n      var unqiueWeek = [];\n      var tempValue = '';\n      this.props.markdownAnalysisGraphData.weekly_markdown.forEach(function (value) {\n        if (tempValue !== value) {\n          unqiueWeek.push(value);\n          tempValue = value;\n        }\n      }); // [...new Set(this.props.markdownAnalysisGraphData.weekly_markdown)];\n\n      var legendPercentages = unqiueWeek;\n      console.log(legendPercentages, 'per');\n      var datasets = legendPercentages.map(function () {\n        return [];\n      });\n      this.props.markdownAnalysisGraphData.weekly_markdown.forEach(function (markdownValue, index) {\n        console.log(markdownValue, 'markdownValue');\n        console.log(index, 'index');\n\n        if (datasets[legendPercentages.indexOf(markdownValue)].length == 0 && index !== 0) {\n          datasets[legendPercentages.indexOf(markdownValue)] = _toConsumableArray(datasets[legendPercentages.indexOf(markdownValue) - 1]);\n          console.log(datasets[legendPercentages.indexOf(markdownValue)] = _toConsumableArray(datasets[legendPercentages.indexOf(markdownValue) - 1]), 'abc');\n        }\n\n        datasets[legendPercentages.indexOf(markdownValue)].push(_this2.props.markdownAnalysisGraphData.sellThrough[index]);\n        console.log(datasets[legendPercentages.indexOf(markdownValue)].push(_this2.props.markdownAnalysisGraphData.sellThrough[index]), 'def');\n      });\n      var datasets1 = legendPercentages.map(function () {\n        return [];\n      });\n      this.props.markdownAnalysisGraphData.weekly_markdown.forEach(function (markdownValue, index) {\n        if (datasets1[legendPercentages.indexOf(markdownValue)].length == 0 && index !== 0) {\n          datasets1[legendPercentages.indexOf(markdownValue)] = _toConsumableArray(datasets1[legendPercentages.indexOf(markdown) - 1]);\n        }\n\n        datasets1[legendPercentages.indexOf(markmarkdownValuedown)].push(_this2.props.markdownAnalysisGraphData.margin[index]);\n      });\n      var labels = this.props.markdownAnalysisGraphData.weekNum.map(function (date) {\n        if (_this2.props.level === 'week') {\n          return date;\n        } else {\n          return moment(date).format('MMM DD');\n        }\n      } // moment(date).format('MMM DD')\n      );\n      var lineChartData = {\n        labels: labels,\n        datasets: datasets.map(function (item, index) {\n          return {\n            data: item,\n            borderColor: borderColors[index],\n            backgroundColor: backgroundColors[index]\n          };\n        })\n      };\n      var lineChartData2 = {\n        labels: labels,\n        datasets: datasets1.map(function (item, index) {\n          return {\n            data: item,\n            borderColor: borderColors[index],\n            backgroundColor: backgroundColors[index]\n          };\n        })\n      };\n      var level = this.props.level === 'week' ? 'Week' : 'Month';\n      options.scales.xAxes[0].scaleLabel.labelString = level;\n      options2.scales.xAxes[0].scaleLabel.labelString = level;\n      legendPercentages = legendPercentages.map(function (percentage) {\n        return \"\".concat(Number(percentage), \"%\");\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row skuLabelStyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"skuLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"SKU\"), React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(Select, {\n        placeholder: \"SKU\",\n        value: this.props.selectedSkuId,\n        options: this.props.optionSku,\n        onChange: this.props.selectedSkuHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8\",\n        style: {\n          marginLeft: '4rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chartContainermain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"sellThroughLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Sell Through %\"), React.createElement(\"div\", {\n        className: \"chartContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row j-c-c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, legendPercentages.map(function (percentage, index) {\n        return React.createElement(\"div\", {\n          className: \"col-md-3 d-flex\",\n          key: \"\".concat(Math.random() + index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"colorBox\",\n          style: {\n            backgroundColor: borderColors[index]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"left-space\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, percentage));\n      }))), React.createElement(LineChart, {\n        width: '681px',\n        height: '280px',\n        data: lineChartData,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"chartContainermain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"sellThroughLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Margin %\"), React.createElement(\"div\", {\n        className: \"chartContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row j-c-c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, legendPercentages.map(function (percentage, index) {\n        return React.createElement(\"div\", {\n          className: \"col-md-3 d-flex\",\n          key: \"\".concat(Math.random() + index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"colorBox\",\n          style: {\n            backgroundColor: borderColors[index]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"left-space\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, percentage));\n      }))), React.createElement(LineChart, {\n        width: '681px',\n        height: '280px',\n        data: lineChartData2,\n        options: options2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-md-2\",\n        style: {\n          paddingTop: '2rem',\n          marginLeft: '5em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(AnalysisTable, {\n        tableData: this.props.analysisTable || [],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return MarkdownAnalysis;\n}(Component);\n\nexport default MarkdownAnalysis;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/MarkdownAnalysis/index.js"],"names":["React","Component","Select","AnalysisTable","moment","LineChart","options2","plugins","datalabels","display","legend","position","labels","boxWidth","fontFamily","fontSize","maintainAspectRatio","scales","yAxes","gridLines","ticks","scaleLabel","show","fontStyle","fontColor","labelString","xAxes","id","autoSkip","autoSkipPadding","maxRotation","fontWeight","options","MarkdownAnalysis","props","state","borderColors","backgroundColors","unqiueWeek","tempValue","markdownAnalysisGraphData","weekly_markdown","forEach","value","push","legendPercentages","console","log","datasets","map","markdownValue","index","indexOf","length","sellThrough","datasets1","markdown","markmarkdownValuedown","margin","weekNum","date","level","format","lineChartData","item","data","borderColor","backgroundColor","lineChartData2","percentage","Number","selectedSkuId","optionSku","selectedSkuHandler","marginLeft","Math","random","paddingTop","analysisTable"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Select from 'react-select';\nimport AnalysisTable from '../MarkdownAnalysis/AnalysisTable';\nimport moment from 'moment';\nimport LineChart from '../support/Charts/LineChart';\nimport './index.css';\n\nconst options2 = {\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12,\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px',\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n        },\n        ticks: {\n          fontSize: 13,\n        },\n        scaleLabel: {\n          show: true,\n          display: true,\n          fontSize: 14,\n          fontStyle: 'bold',\n          fontColor: '#000',\n          labelString: 'Margin %',\n        },\n      },\n    ],\n    xAxes: [\n      {\n        id: 'x-axis-0',\n        gridLines: {\n          // color: '#aeaeae5e',\n          display: false,\n        },\n        ticks: {\n          autoSkip: true,\n          autoSkipPadding: 40,\n          maxRotation: 0,\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Time (week)',\n          fontWeight: 900,\n          fontStyle: 'bold',\n        },\n      },\n    ],\n  },\n};\nconst options = {\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12,\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px',\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n        },\n        ticks: {\n          fontSize: 13,\n        },\n        scaleLabel: {\n          show: true,\n          display: true,\n          fontSize: 14,\n          fontStyle: 'bold',\n          fontColor: '#000',\n          labelString: 'Sell Through %',\n        },\n      },\n    ],\n    xAxes: [\n      {\n        id: 'x-axis-0',\n        gridLines: {\n          // color: '#aeaeae5e',\n          display: false,\n        },\n        ticks: {\n          autoSkip: true,\n          autoSkipPadding: 40,\n          maxRotation: 0,\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Time (week)',\n          fontWeight: 900,\n          fontStyle: 'bold',\n        },\n      },\n    ],\n  },\n};\nclass MarkdownAnalysis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const borderColors = [\n      'rgba(68, 103, 123, 1.2)',\n      'rgba(166, 206, 227, 1.2)',\n      'rgba(131, 190, 140, 1.2)',\n    ];\n\n    const backgroundColors = [\n      'rgba(68, 103, 123, 0.3)',\n      'rgba(166, 206, 227, 0.3)',\n      'rgba(131, 190, 140, 0.3)',\n    ];\n    let unqiueWeek = [];\n    let tempValue = '';\n    this.props.markdownAnalysisGraphData.weekly_markdown.forEach((value) => {\n      if (tempValue !== value) {\n        unqiueWeek.push(value);\n        tempValue = value;\n      }\n    });\n    // [...new Set(this.props.markdownAnalysisGraphData.weekly_markdown)];\n\n    let legendPercentages = unqiueWeek;\n    console.log(legendPercentages, 'per');\n    const datasets = legendPercentages.map(() => []);\n    this.props.markdownAnalysisGraphData.weekly_markdown.forEach((markdownValue, index) => {\n      console.log(markdownValue, 'markdownValue');\n      console.log(index, 'index');\n      if (datasets[legendPercentages.indexOf(markdownValue)].length == 0 && index !== 0) {\n        datasets[legendPercentages.indexOf(markdownValue)] = [\n          ...datasets[legendPercentages.indexOf(markdownValue) - 1],\n        ];\n        console.log(\n          (datasets[legendPercentages.indexOf(markdownValue)] = [\n            ...datasets[legendPercentages.indexOf(markdownValue) - 1],\n          ]),\n          'abc'\n        );\n      }\n      datasets[legendPercentages.indexOf(markdownValue)].push(\n        this.props.markdownAnalysisGraphData.sellThrough[index]\n      );\n      console.log(\n        datasets[legendPercentages.indexOf(markdownValue)].push(\n          this.props.markdownAnalysisGraphData.sellThrough[index]\n        ),\n        'def'\n      );\n    });\n    const datasets1 = legendPercentages.map(() => []);\n    this.props.markdownAnalysisGraphData.weekly_markdown.forEach((markdownValue, index) => {\n      if (datasets1[legendPercentages.indexOf(markdownValue)].length == 0 && index !== 0) {\n        datasets1[legendPercentages.indexOf(markdownValue)] = [\n          ...datasets1[legendPercentages.indexOf(markdown) - 1],\n        ];\n      }\n      datasets1[legendPercentages.indexOf(markmarkdownValuedown)].push(\n        this.props.markdownAnalysisGraphData.margin[index]\n      );\n    });\n    const labels = this.props.markdownAnalysisGraphData.weekNum.map(\n      (date) => {\n        if (this.props.level === 'week') {\n          return date;\n        } else {\n          return moment(date).format('MMM DD');\n        }\n      }\n\n      // moment(date).format('MMM DD')\n    );\n    let lineChartData = {\n      labels: labels,\n      datasets: datasets.map((item, index) => ({\n        data: item,\n        borderColor: borderColors[index],\n        backgroundColor: backgroundColors[index],\n      })),\n    };\n    let lineChartData2 = {\n      labels: labels,\n      datasets: datasets1.map((item, index) => ({\n        data: item,\n        borderColor: borderColors[index],\n        backgroundColor: backgroundColors[index],\n      })),\n    };\n    let level = this.props.level === 'week' ? 'Week' : 'Month';\n    options.scales.xAxes[0].scaleLabel.labelString = level;\n    options2.scales.xAxes[0].scaleLabel.labelString = level;\n    legendPercentages = legendPercentages.map((percentage) => `${Number(percentage)}%`);\n    return (\n      <div>\n        <div className=\"mb-4\">\n          <div className=\"row skuLabelStyle\">\n            <label className=\"skuLabel\">SKU</label>\n            <div className=\"col-md-2\">\n              <Select\n                placeholder=\"SKU\"\n                value={this.props.selectedSkuId}\n                options={this.props.optionSku}\n                onChange={this.props.selectedSkuHandler}\n              />\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-8\" style={{ marginLeft: '4rem' }}>\n              <div className=\"chartContainermain\">\n                <label className=\"sellThroughLabel\">Sell Through %</label>\n                <div className=\"chartContainer\">\n                  <div className=\"row j-c-c\">\n                    {legendPercentages.map((percentage, index) => (\n                      <div className=\"col-md-3 d-flex\" key={`${Math.random() + index}`}>\n                        <p className=\"colorBox\" style={{ backgroundColor: borderColors[index] }} />\n                        <span className=\"left-space\">{percentage}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                <LineChart\n                  width={'681px'}\n                  height={'280px'}\n                  data={lineChartData}\n                  options={options}\n                />\n              </div>\n              <div className=\"chartContainermain\">\n                <label className=\"sellThroughLabel\">Margin %</label>\n                <div className=\"chartContainer\">\n                  <div className=\"row j-c-c\">\n                    {legendPercentages.map((percentage, index) => (\n                      <div className=\"col-md-3 d-flex\" key={`${Math.random() + index}`}>\n                        <p className=\"colorBox\" style={{ backgroundColor: borderColors[index] }} />\n                        <span className=\"left-space\">{percentage}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                <LineChart\n                  width={'681px'}\n                  height={'280px'}\n                  data={lineChartData2}\n                  options={options2}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-2\" style={{ paddingTop: '2rem', marginLeft: '5em' }}>\n              <AnalysisTable tableData={this.props.analysisTable || []} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MarkdownAnalysis;\n"]},"metadata":{},"sourceType":"module"}