{"ast":null,"code":"import _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/MarkdownAnalysis/index.js\";\nimport React, { Component } from 'react';\nimport Tippy from '@tippy.js/react';\nimport Select from 'react-select';\nimport AnalysisTable from '../MarkdownAnalysis/AnalysisTable';\nimport moment from 'moment';\nimport 'tippy.js/dist/tippy.css';\nimport BarChart from '../support/Charts/Barchart';\nimport './index.css';\nimport _ from 'lodash';\nimport pattern from 'patternomaly';\nimport * as chartjs from 'chart.js';\nimport Switch from '../../services/toggleSwitch';\nchartjs.pluginService.register({\n  afterDatasetDraw: function afterDatasetDraw(chart, args, options) {\n    if (args.index === 1 && chart.options.lineDash) {\n      // if (chart.options.lineDash) {\n      args.meta.data.forEach(function (element) {\n        var borderWidth = 3;\n        var ctx = chart.ctx;\n        var vm = element._view;\n        var half = vm.width / 2;\n        var left = vm.x - half;\n        var right = vm.x + half;\n        var top = vm.y;\n        var width = right - left; // var height = chart.chartArea.bottom - top + borderWidth / 2 - 1;\n\n        ctx.beginPath();\n        ctx.lineWidth = borderWidth;\n        ctx.strokeStyle = vm.borderColor;\n        ctx.setLineDash(chart.options.lineDash); // ctx.moveTo(left, top);\n        // ctx.lineTo(left, top + height);\n\n        ctx.moveTo(left, top);\n        ctx.lineTo(left + width, top);\n        ctx.moveTo(left + width, top); // ctx.lineTo(left + width, top + height);\n\n        ctx.stroke();\n        ctx.save();\n      });\n    }\n  }\n});\nvar options2 = {\n  lineDash: [5, 2],\n  tooltips: {\n    callbacks: {\n      label: function label(tooltipItem, data) {\n        var label = data.labels[tooltipItem.index];\n        var value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n        var labelTip = 'Week' + ':' + label;\n        var valueTip = 'Margin%' + ':' + parseFloat(value).toFixed(2);\n        return [labelTip, valueTip];\n      }\n    }\n  },\n  plugins: {\n    datalabels: {\n      display: false\n    }\n  },\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px'\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [{\n      gridLines: {\n        display: true\n      },\n      ticks: {\n        fontSize: 13,\n        suggestedMin: 0\n      },\n      scaleLabel: {\n        show: true,\n        display: true,\n        fontSize: 14,\n        fontStyle: 'bold',\n        fontColor: '#000',\n        labelString: 'Margin %'\n      }\n    }],\n    xAxes: [{\n      id: 'x-axis-0',\n      categoryPercentage: 1.0,\n      barPercentage: 1.0,\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        autoSkip: true,\n        autoSkipPadding: 40,\n        maxRotation: 0,\n        suggestedMin: 0\n      },\n      stacked: true,\n      scaleLabel: {\n        display: true,\n        labelString: 'Time (week)',\n        fontWeight: 900,\n        fontStyle: 'bold'\n      }\n    }]\n  }\n};\nvar options = {\n  lineDash: [5, 2],\n  tooltips: {\n    callbacks: {\n      label: function label(tooltipItem, data) {\n        var label = data.labels[tooltipItem.index];\n        var value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n        var labelTip = 'Week' + ':' + label;\n        var valueTip = 'ST%' + ':' + parseFloat(value).toFixed(2);\n        return [labelTip, valueTip];\n      }\n    }\n  },\n  plugins: {\n    datalabels: {\n      display: false\n    }\n  },\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px'\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [{\n      gridLines: {\n        display: true\n      },\n      // ticks: {\n      //   fontSize: 13,\n      //   suggestedMin: 0,\n      // },\n      scaleLabel: {\n        show: true,\n        display: true,\n        fontSize: 14,\n        fontStyle: 'bold',\n        fontColor: '#000',\n        labelString: 'Sell Through %'\n      }\n    }],\n    xAxes: [{\n      id: 'x-axis-0',\n      categoryPercentage: 1.0,\n      barPercentage: 1.0,\n      gridLines: {\n        display: false\n      },\n      stacked: true,\n      ticks: {\n        autoSkip: true,\n        autoSkipPadding: 40,\n        maxRotation: 0,\n        suggestedMin: 0\n      },\n      scaleLabel: {\n        display: true,\n        labelString: 'Time (week)',\n        fontWeight: 900,\n        fontStyle: 'bold'\n      }\n    }]\n  }\n};\n\nvar MarkdownAnalysis =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MarkdownAnalysis, _Component);\n\n  function MarkdownAnalysis(props) {\n    var _this;\n\n    _classCallCheck(this, MarkdownAnalysis);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MarkdownAnalysis).call(this, props));\n\n    _this.switchEditMode = function (val) {\n      _this.setState({\n        editedMode: val\n      });\n    };\n\n    _this.state = {\n      graphData: [],\n      editGraphData: [],\n      editedMode: false\n    };\n    return _this;\n  }\n\n  _createClass(MarkdownAnalysis, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //storing props data in state to solve data mess up on tab change issue\n      //this way each data is stored in respective compenents\n      this.setState({\n        graphData: this.props.markdownAnalysisGraphData,\n        editGraphData: this.props.editMarkdownAnalysisGraphData\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (!_.isEqual(this.props.markdownAnalysisGraphData, this.state.graphData)) {\n        this.setState({\n          graphData: this.props.markdownAnalysisGraphData\n        });\n      }\n\n      if (!_.isEqual(this.props.editMarkdownAnalysisGraphData, this.state.editGraphData)) {\n        this.setState({\n          editGraphData: this.props.editMarkdownAnalysisGraphData\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var borderColors = ['#44677B', '#6F9FC3', '#83BE8C', '#88ad5f', '#b06d58', '#86588a', '#17a69c', '#b0a819', '#d97c30', '#5d5b85'];\n      var borderColors1 = ['#44677B', '#6F9FC3', '#83BE8C', '#88ad5f', '#b06d58', '#86588a', '#17a69c', '#b0a819', '#d97c30', '#5d5b85'];\n      var gradient = ['repeating-linear-gradient(-44deg, #44677B 5%,white 9px)', 'repeating-linear-gradient(-44deg, #6F9FC3 5%,white 9px)', 'repeating-linear-gradient(-44deg, #83BE8C 5%,white 9px)', 'repeating-linear-gradient(-44deg, #88ad5f 5%,white 9px)', 'repeating-linear-gradient(-44deg, #b06d58 5%,white 9px)', 'repeating-linear-gradient(-44deg, #86588a 5%,white 9px)', 'repeating-linear-gradient(-44deg, #17a69c 5%,white 9px)', 'repeating-linear-gradient(-44deg, #b0a819 5%,white 9px)', 'repeating-linear-gradient(-44deg, #d97c30 5%,white 9px)', 'repeating-linear-gradient(-44deg, #5d5b85 5%,white 9px)'];\n      var backgroundColors = ['rgba(68, 103, 123, 0.4)', 'rgba(166, 206, 227, 0.4)', 'rgba(131, 190, 140, 0.4)', 'rgba(136, 173, 95, 0.4)', 'rgba(176, 109, 88, 0.4)', 'rgba(134, 88, 138, 0.4)', 'rgba(23, 166, 156, 0.4)', 'rgba(89, 86, 25, 0.4)', 'rgba(217, 124, 48, 0.4)', 'rgba(93, 91, 133, 0.4)'];\n      var backgroundColors1 = ['rgba(68, 103, 123, 0.3)', 'rgba(166, 206, 227, 0.3)', 'rgba(131, 190, 140, 0.3)', 'rgba(136, 173, 95, 0.3)', 'rgba(176, 109, 88, 0.3)', 'rgba(134, 88, 138, 0.3)', 'rgba(23, 166, 156, 0.3)', 'rgba(89, 86, 25, 0.3)', 'rgba(217, 124, 48, 0.3)', 'rgba(93, 91, 133, 0.3)']; // const backgroundColors1 = [\n      //   pattern.draw('diagonal-right-left', 'rgba(68, 103, 123, 0.3)'),\n      //   pattern.draw('diagonal-right-left', 'rgba(166, 206, 227, 0.3)'),\n      //   pattern.draw('diagonal-right-left', 'rgba(131, 190, 140, 0.3)'),\n      //   pattern.draw('diagonal-right-left', 'rgba(136, 173, 95, 0.3)'),\n      //   pattern.draw('diagonal-right-left', 'rgba(176, 109, 88, 0.3)'),\n      //   pattern.draw('diagonal-right-left', 'rgba(134, 88, 138, 0.3)'),\n      //   pattern.draw('diagonal-right-left', 'rgba(23, 166, 156, 0.3)'),\n      //   pattern.draw('diagonal-right-left', 'rgba(89, 86, 25, 0.3)'),\n      //   pattern.draw('diagonal-right-left', 'rgba(217, 124, 48, 0.3)'),\n      //   pattern.draw('diagonal-right-left', 'rgba(93, 91, 133, 0.3)'),\n      // ];\n\n      var uniqueWeek = {};\n\n      _.forEach(this.state.graphData.weekly_markdown, function (value, i) {\n        if (!uniqueWeek.hasOwnProperty(value)) {\n          uniqueWeek[value] = {\n            backgroundColor: backgroundColors.pop() // backgroundColor1: backgroundColors1.pop(),\n\n          };\n          uniqueWeek[value].borderColor = borderColors.pop();\n        }\n      }); // let uniqueWeek1 = {};\n      // this.props.editMarkdownAnalysisGraphData &&\n      //   this.props.editMarkdownAnalysisGraphData.weekly_markdown.forEach((value, i) => {\n      //     if (!uniqueWeek1.hasOwnProperty(value)) {\n      //       uniqueWeek1[value] = {\n      //         backgroundColor: backgroundColors1.pop(),\n      //       };\n      //       uniqueWeek1[value].borderColor = borderColors1.pop();\n      //       uniqueWeek1[value].background = gradient.pop();\n      //     }\n      //   });\n      // let editedLegendPercentages = Object.keys(uniqueWeek1);\n\n\n      var legendPercentages = Object.keys(uniqueWeek);\n\n      var labels = _.map(this.state.graphData.weekNum, function (date) {\n        if (_this2.props.level === 'week') {\n          return date;\n        } else {\n          return moment(date).format('MMM DD');\n        }\n      });\n\n      var sellThroughData = {\n        labels: labels,\n        datasets: [{\n          label: 'chart1',\n          data: this.state.graphData.sellThrough,\n          borderColor: _.map(this.state.graphData.weekly_markdown, function (m) {\n            return uniqueWeek[m].borderColor;\n          }),\n          backgroundColor: _.map(this.state.graphData.weekly_markdown, function (m) {\n            return uniqueWeek[m].backgroundColor;\n          }),\n          borderWidth: {\n            top: 3,\n            right: 0,\n            bottom: 0,\n            left: 0\n          }\n        }]\n      };\n      var marginData = {\n        labels: labels,\n        datasets: [{\n          label: 'chart1',\n          data: this.state.graphData.margin,\n          borderColor: _.map(this.state.graphData.weekly_markdown, function (m) {\n            return uniqueWeek[m].borderColor;\n          }),\n          backgroundColor: _.map(this.state.graphData.weekly_markdown, function (m) {\n            return uniqueWeek[m].backgroundColor;\n          }),\n          borderWidth: {\n            top: 3,\n            right: 0,\n            bottom: 0,\n            left: 0\n          }\n        }]\n      };\n      var uniqueWeek1 = {};\n      var editedSellthroughData = {};\n      var editedMarginData = {};\n\n      if (this.props.isEdit && !_.isEmpty(this.state.editGraphData)) {\n        // let uniqueWeek1 = {};\n        _.forEach(this.state.editGraphData.weekly_markdown, function (value, i) {\n          if (!uniqueWeek1.hasOwnProperty(value)) {\n            uniqueWeek1[value] = {\n              backgroundColor: backgroundColors1.pop()\n            };\n            uniqueWeek1[value].borderColor = borderColors1.pop();\n            uniqueWeek1[value].background = gradient.pop();\n          }\n        }); //   sellThroughData.datasets.push({\n        //     label: 'chart2',\n        //     data: this.state.editGraphData.sellThrough,\n        //     borderColor: _.map(\n        //       this.state.editGraphData.weekly_markdown,\n        //       (m) => uniqueWeek1[m].borderColor\n        //     ),\n        //     backgroundColor: _.map(\n        //       this.state.editGraphData.weekly_markdown,\n        //       (m) => uniqueWeek1[m].backgroundColor\n        //     ),\n        //     borderWidth: {\n        //       top: 0,\n        //       right: 0,\n        //       bottom: 0,\n        //       left: 0,\n        //     },\n        //   });\n        //   marginData.datasets.push({\n        //     data: this.state.editGraphData.margin,\n        //     borderColor: _.map(\n        //       this.state.editGraphData.weekly_markdown,\n        //       (m) => uniqueWeek1[m].borderColor\n        //     ),\n        //     backgroundColor: _.map(\n        //       this.state.editGraphData.weekly_markdown,\n        //       (m) => uniqueWeek1[m].backgroundColor\n        //     ),\n        //     borderWidth: {\n        //       top: 0,\n        //       right: 0,\n        //       bottom: 0,\n        //       left: 0,\n        //     },\n        //   });\n        // }\n\n\n        editedSellthroughData = {\n          labels: labels,\n          datasets: [{\n            label: 'chart2',\n            data: this.state.editGraphData.sellThrough,\n            borderColor: _.map(this.state.editGraphData.weekly_markdown, function (m) {\n              return uniqueWeek1[m].borderColor;\n            }),\n            backgroundColor: _.map(this.state.editGraphData.weekly_markdown, function (m) {\n              return uniqueWeek1[m].backgroundColor;\n            }),\n            borderWidth: {\n              top: 3,\n              right: 0,\n              bottom: 0,\n              left: 0\n            }\n          }]\n        };\n        editedMarginData = {\n          labels: labels,\n          datasets: [{\n            data: this.state.editGraphData.margin,\n            borderColor: _.map(this.state.editGraphData.weekly_markdown, function (m) {\n              return uniqueWeek1[m].borderColor;\n            }),\n            backgroundColor: _.map(this.state.editGraphData.weekly_markdown, function (m) {\n              return uniqueWeek1[m].backgroundColor;\n            }),\n            borderWidth: {\n              top: 3,\n              right: 0,\n              bottom: 0,\n              left: 0\n            }\n          }]\n        };\n      }\n\n      var editedLegendPercentages = Object.keys(uniqueWeek1);\n      var level = this.props.level === 'week' ? 'Week' : 'Month';\n      options.scales.xAxes[0].scaleLabel.labelString = level;\n      options2.scales.xAxes[0].scaleLabel.labelString = level;\n      editedLegendPercentages = Object.keys(uniqueWeek1).map(function (percentage) {\n        return \"\".concat(Number(percentage), \"%\");\n      });\n      legendPercentages = Object.keys(uniqueWeek).map(function (percentage) {\n        return \"\".concat(Number(percentage), \"%\");\n      });\n      return React.createElement(\"div\", {\n        className: this.props.isEdit && !_.isEmpty(this.props.editAnalysisData) ? 'edit-data-present' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row skuLabelStyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"skuLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }, \"Style-Color\"), React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }, React.createElement(Select, {\n        placeholder: \"Style-Color\",\n        value: this.props.selectedSku,\n        options: this.props.optionSku,\n        onChange: this.props.selectedSkuHandler,\n        isClearable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, this.props.isEdit && !_.isEmpty(this.props.editAnalysisData) ? React.createElement(Switch, {\n        isSwitchedPaln: this.switchEditMode,\n        switchedPlans: this.state.editedMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }) : null)), React.createElement(\"div\", {\n        className: \"row analysis-overview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chartContainermain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"sellThroughLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, \"Sell Through %\"), React.createElement(\"div\", {\n        className: \"chartContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row j-c-c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }, this.state.editedMode ? editedLegendPercentages.map(function (percentage, index) {\n        return React.createElement(\"div\", {\n          className: \"d-flex\",\n          key: \"\".concat(Math.random() + index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 562\n          },\n          __self: this\n        }, React.createElement(Tippy, {\n          style: {\n            cursor: 'pointer'\n          },\n          placement: 'left',\n          arrow: true,\n          distance: 10,\n          content: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 568\n            },\n            __self: this\n          }, \" MD \", percentage),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 563\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"color-box mr-2\",\n          style: {\n            cursor: 'pointer',\n            background: Object.keys(uniqueWeek1).map(function (percentage) {\n              return uniqueWeek1[percentage].borderColor;\n            })[index]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 569\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"left-space\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 579\n          },\n          __self: this\n        }, percentage));\n      }) : legendPercentages.map(function (percentage, index) {\n        return React.createElement(\"div\", {\n          className: \"d-flex\",\n          key: \"\".concat(Math.random() + index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 583\n          },\n          __self: this\n        }, React.createElement(Tippy, {\n          style: {\n            cursor: 'pointer'\n          },\n          placement: 'left',\n          arrow: true,\n          distance: 10,\n          content: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 589\n            },\n            __self: this\n          }, \" MD \", percentage),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 584\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"color-box mr-2\",\n          style: {\n            cursor: 'pointer',\n            backgroundColor: Object.keys(uniqueWeek).map(function (percentage) {\n              return uniqueWeek[percentage].borderColor;\n            })[index]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 590\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"left-space\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 600\n          },\n          __self: this\n        }, percentage));\n      }))), React.createElement(BarChart, {\n        width: '681px',\n        height: '280px',\n        data: this.state.editedMode ? editedSellthroughData : sellThroughData,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"chartContainermain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"sellThroughLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613\n        },\n        __self: this\n      }, \"Margin %\"), React.createElement(\"div\", {\n        className: \"chartContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row j-c-c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615\n        },\n        __self: this\n      }, this.state.editedMode ? editedLegendPercentages.map(function (percentage, index) {\n        return React.createElement(\"div\", {\n          className: \"d-flex\",\n          key: \"\".concat(Math.random() + index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 618\n          },\n          __self: this\n        }, React.createElement(Tippy, {\n          style: {\n            cursor: 'pointer'\n          },\n          placement: 'left',\n          arrow: true,\n          distance: 10,\n          content: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 624\n            },\n            __self: this\n          }, \" MD \", percentage),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 619\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"color-box mr-2\",\n          style: {\n            cursor: 'pointer',\n            background: Object.keys(uniqueWeek1).map(function (percentage) {\n              return uniqueWeek1[percentage].borderColor;\n            })[index]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 625\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"left-space\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 635\n          },\n          __self: this\n        }, percentage));\n      }) : legendPercentages.map(function (percentage, index) {\n        return React.createElement(\"div\", {\n          className: \"d-flex\",\n          key: \"\".concat(Math.random() + index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 639\n          },\n          __self: this\n        }, React.createElement(Tippy, {\n          style: {\n            cursor: 'pointer'\n          },\n          placement: 'left',\n          arrow: true,\n          distance: 10,\n          content: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 645\n            },\n            __self: this\n          }, \" MD \", percentage),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 640\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"color-box mr-2\",\n          style: {\n            cursor: 'pointer',\n            backgroundColor: Object.keys(uniqueWeek).map(function (percentage) {\n              return uniqueWeek[percentage].borderColor;\n            })[index]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 646\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"left-space\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 656\n          },\n          __self: this\n        }, percentage));\n      }))), React.createElement(BarChart, {\n        width: '681px',\n        height: '280px',\n        data: this.state.editedMode ? editedMarginData : marginData,\n        options: options2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669\n        },\n        __self: this\n      }, React.createElement(AnalysisTable, {\n        tableData: this.props.analysisTable || [],\n        tableData2: this.props.editAnalysisData || [],\n        isEdit: this.props.isEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return MarkdownAnalysis;\n}(Component);\n\nexport default MarkdownAnalysis;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/MarkdownAnalysis/index.js"],"names":["React","Component","Tippy","Select","AnalysisTable","moment","BarChart","_","pattern","chartjs","Switch","pluginService","register","afterDatasetDraw","chart","args","options","index","lineDash","meta","data","forEach","element","borderWidth","ctx","vm","_view","half","width","left","x","right","top","y","beginPath","lineWidth","strokeStyle","borderColor","setLineDash","moveTo","lineTo","stroke","save","options2","tooltips","callbacks","label","tooltipItem","labels","value","datasets","datasetIndex","labelTip","valueTip","parseFloat","toFixed","plugins","datalabels","display","legend","position","boxWidth","fontFamily","fontSize","maintainAspectRatio","scales","yAxes","gridLines","ticks","suggestedMin","scaleLabel","show","fontStyle","fontColor","labelString","xAxes","id","categoryPercentage","barPercentage","autoSkip","autoSkipPadding","maxRotation","stacked","fontWeight","MarkdownAnalysis","props","switchEditMode","val","setState","editedMode","state","graphData","editGraphData","markdownAnalysisGraphData","editMarkdownAnalysisGraphData","isEqual","borderColors","borderColors1","gradient","backgroundColors","backgroundColors1","uniqueWeek","weekly_markdown","i","hasOwnProperty","backgroundColor","pop","legendPercentages","Object","keys","map","weekNum","date","level","format","sellThroughData","sellThrough","m","bottom","marginData","margin","uniqueWeek1","editedSellthroughData","editedMarginData","isEdit","isEmpty","background","editedLegendPercentages","percentage","Number","editAnalysisData","selectedSku","optionSku","selectedSkuHandler","Math","random","cursor","analysisTable"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Tippy from '@tippy.js/react';\nimport Select from 'react-select';\nimport AnalysisTable from '../MarkdownAnalysis/AnalysisTable';\nimport moment from 'moment';\nimport 'tippy.js/dist/tippy.css';\nimport BarChart from '../support/Charts/Barchart';\nimport './index.css';\nimport _ from 'lodash';\nimport pattern from 'patternomaly';\nimport * as chartjs from 'chart.js';\nimport Switch from '../../services/toggleSwitch';\n\nchartjs.pluginService.register({\n  afterDatasetDraw: function (chart, args, options) {\n    if (args.index === 1 && chart.options.lineDash) {\n      // if (chart.options.lineDash) {\n      args.meta.data.forEach(function (element) {\n        var borderWidth = 3;\n        var ctx = chart.ctx;\n        var vm = element._view;\n        var half = vm.width / 2;\n        var left = vm.x - half;\n        var right = vm.x + half;\n        var top = vm.y;\n        var width = right - left;\n        // var height = chart.chartArea.bottom - top + borderWidth / 2 - 1;\n        ctx.beginPath();\n        ctx.lineWidth = borderWidth;\n        ctx.strokeStyle = vm.borderColor;\n        ctx.setLineDash(chart.options.lineDash);\n        // ctx.moveTo(left, top);\n        // ctx.lineTo(left, top + height);\n        ctx.moveTo(left, top);\n        ctx.lineTo(left + width, top);\n        ctx.moveTo(left + width, top);\n        // ctx.lineTo(left + width, top + height);\n        ctx.stroke();\n        ctx.save();\n      });\n    }\n  },\n});\n\nconst options2 = {\n  lineDash: [5, 2],\n  tooltips: {\n    callbacks: {\n      label: function (tooltipItem, data) {\n        let label = data.labels[tooltipItem.index];\n        let value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n        let labelTip = 'Week' + ':' + label;\n        let valueTip = 'Margin%' + ':' + parseFloat(value).toFixed(2);\n        return [labelTip, valueTip];\n      },\n    },\n  },\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12,\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px',\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n        },\n        ticks: {\n          fontSize: 13,\n          suggestedMin: 0,\n        },\n        scaleLabel: {\n          show: true,\n          display: true,\n          fontSize: 14,\n          fontStyle: 'bold',\n          fontColor: '#000',\n          labelString: 'Margin %',\n        },\n      },\n    ],\n    xAxes: [\n      {\n        id: 'x-axis-0',\n        categoryPercentage: 1.0,\n        barPercentage: 1.0,\n\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          autoSkip: true,\n          autoSkipPadding: 40,\n          maxRotation: 0,\n          suggestedMin: 0,\n        },\n        stacked: true,\n        scaleLabel: {\n          display: true,\n          labelString: 'Time (week)',\n          fontWeight: 900,\n          fontStyle: 'bold',\n        },\n      },\n    ],\n  },\n};\nconst options = {\n  lineDash: [5, 2],\n  tooltips: {\n    callbacks: {\n      label: function (tooltipItem, data) {\n        let label = data.labels[tooltipItem.index];\n        let value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n        let labelTip = 'Week' + ':' + label;\n        let valueTip = 'ST%' + ':' + parseFloat(value).toFixed(2);\n        return [labelTip, valueTip];\n      },\n    },\n  },\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12,\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px',\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n        },\n        // ticks: {\n        //   fontSize: 13,\n        //   suggestedMin: 0,\n        // },\n        scaleLabel: {\n          show: true,\n          display: true,\n          fontSize: 14,\n          fontStyle: 'bold',\n          fontColor: '#000',\n          labelString: 'Sell Through %',\n        },\n      },\n    ],\n    xAxes: [\n      {\n        id: 'x-axis-0',\n        categoryPercentage: 1.0,\n        barPercentage: 1.0,\n        gridLines: {\n          display: false,\n        },\n        stacked: true,\n        ticks: {\n          autoSkip: true,\n          autoSkipPadding: 40,\n          maxRotation: 0,\n          suggestedMin: 0,\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Time (week)',\n          fontWeight: 900,\n          fontStyle: 'bold',\n        },\n      },\n    ],\n  },\n};\nclass MarkdownAnalysis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graphData: [],\n      editGraphData: [],\n      editedMode: false,\n    };\n  }\n  switchEditMode = (val) => {\n    this.setState({\n      editedMode: val,\n    });\n  };\n  componentDidMount() {\n    //storing props data in state to solve data mess up on tab change issue\n    //this way each data is stored in respective compenents\n    this.setState({\n      graphData: this.props.markdownAnalysisGraphData,\n      editGraphData: this.props.editMarkdownAnalysisGraphData,\n    });\n  }\n  componentDidUpdate() {\n    if (!_.isEqual(this.props.markdownAnalysisGraphData, this.state.graphData)) {\n      this.setState({\n        graphData: this.props.markdownAnalysisGraphData,\n      });\n    }\n    if (!_.isEqual(this.props.editMarkdownAnalysisGraphData, this.state.editGraphData)) {\n      this.setState({\n        editGraphData: this.props.editMarkdownAnalysisGraphData,\n      });\n    }\n  }\n  render() {\n    const borderColors = [\n      '#44677B',\n      '#6F9FC3',\n      '#83BE8C',\n      '#88ad5f',\n      '#b06d58',\n      '#86588a',\n      '#17a69c',\n      '#b0a819',\n      '#d97c30',\n      '#5d5b85',\n    ];\n    const borderColors1 = [\n      '#44677B',\n      '#6F9FC3',\n      '#83BE8C',\n      '#88ad5f',\n      '#b06d58',\n      '#86588a',\n      '#17a69c',\n      '#b0a819',\n      '#d97c30',\n      '#5d5b85',\n    ];\n    const gradient = [\n      'repeating-linear-gradient(-44deg, #44677B 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #6F9FC3 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #83BE8C 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #88ad5f 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #b06d58 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #86588a 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #17a69c 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #b0a819 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #d97c30 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #5d5b85 5%,white 9px)',\n    ];\n    const backgroundColors = [\n      'rgba(68, 103, 123, 0.4)',\n      'rgba(166, 206, 227, 0.4)',\n      'rgba(131, 190, 140, 0.4)',\n      'rgba(136, 173, 95, 0.4)',\n      'rgba(176, 109, 88, 0.4)',\n      'rgba(134, 88, 138, 0.4)',\n      'rgba(23, 166, 156, 0.4)',\n      'rgba(89, 86, 25, 0.4)',\n      'rgba(217, 124, 48, 0.4)',\n      'rgba(93, 91, 133, 0.4)',\n    ];\n    const backgroundColors1 = [\n      'rgba(68, 103, 123, 0.3)',\n      'rgba(166, 206, 227, 0.3)',\n      'rgba(131, 190, 140, 0.3)',\n      'rgba(136, 173, 95, 0.3)',\n      'rgba(176, 109, 88, 0.3)',\n      'rgba(134, 88, 138, 0.3)',\n      'rgba(23, 166, 156, 0.3)',\n      'rgba(89, 86, 25, 0.3)',\n      'rgba(217, 124, 48, 0.3)',\n      'rgba(93, 91, 133, 0.3)',\n    ];\n    // const backgroundColors1 = [\n    //   pattern.draw('diagonal-right-left', 'rgba(68, 103, 123, 0.3)'),\n    //   pattern.draw('diagonal-right-left', 'rgba(166, 206, 227, 0.3)'),\n    //   pattern.draw('diagonal-right-left', 'rgba(131, 190, 140, 0.3)'),\n    //   pattern.draw('diagonal-right-left', 'rgba(136, 173, 95, 0.3)'),\n    //   pattern.draw('diagonal-right-left', 'rgba(176, 109, 88, 0.3)'),\n    //   pattern.draw('diagonal-right-left', 'rgba(134, 88, 138, 0.3)'),\n    //   pattern.draw('diagonal-right-left', 'rgba(23, 166, 156, 0.3)'),\n    //   pattern.draw('diagonal-right-left', 'rgba(89, 86, 25, 0.3)'),\n    //   pattern.draw('diagonal-right-left', 'rgba(217, 124, 48, 0.3)'),\n    //   pattern.draw('diagonal-right-left', 'rgba(93, 91, 133, 0.3)'),\n    // ];\n    let uniqueWeek = {};\n    _.forEach(this.state.graphData.weekly_markdown, (value, i) => {\n      if (!uniqueWeek.hasOwnProperty(value)) {\n        uniqueWeek[value] = {\n          backgroundColor: backgroundColors.pop(),\n          // backgroundColor1: backgroundColors1.pop(),\n        };\n\n        uniqueWeek[value].borderColor = borderColors.pop();\n      }\n    });\n    // let uniqueWeek1 = {};\n    // this.props.editMarkdownAnalysisGraphData &&\n    //   this.props.editMarkdownAnalysisGraphData.weekly_markdown.forEach((value, i) => {\n    //     if (!uniqueWeek1.hasOwnProperty(value)) {\n    //       uniqueWeek1[value] = {\n    //         backgroundColor: backgroundColors1.pop(),\n    //       };\n    //       uniqueWeek1[value].borderColor = borderColors1.pop();\n    //       uniqueWeek1[value].background = gradient.pop();\n    //     }\n    //   });\n    // let editedLegendPercentages = Object.keys(uniqueWeek1);\n\n    let legendPercentages = Object.keys(uniqueWeek);\n    const labels = _.map(this.state.graphData.weekNum, (date) => {\n      if (this.props.level === 'week') {\n        return date;\n      } else {\n        return moment(date).format('MMM DD');\n      }\n    });\n    let sellThroughData = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'chart1',\n          data: this.state.graphData.sellThrough,\n          borderColor: _.map(\n            this.state.graphData.weekly_markdown,\n            (m) => uniqueWeek[m].borderColor\n          ),\n          backgroundColor: _.map(\n            this.state.graphData.weekly_markdown,\n            (m) => uniqueWeek[m].backgroundColor\n          ),\n          borderWidth: {\n            top: 3,\n            right: 0,\n            bottom: 0,\n            left: 0,\n          },\n        },\n        // {\n        //   label: 'label2',\n        //   data:\n        //     this.props.editMarkdownAnalysisGraphData &&\n        //     this.props.editMarkdownAnalysisGraphData.sellThrough,\n        //   borderColor:\n        //     this.props.editMarkdownAnalysisGraphData &&\n        //     this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n        //       (m) => uniqueWeek1[m].borderColor\n        //     ),\n        //   backgroundColor:\n        //     this.props.editMarkdownAnalysisGraphData &&\n        //     this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n        //       (m) => uniqueWeek1[m].backgroundColor\n        //     ),\n        //   borderWidth: {\n        //     top: 3,\n        //     right: 0,\n        //     bottom: 0,\n        //     left: 0,\n        //   },\n        // },\n      ],\n    };\n    let marginData = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'chart1',\n          data: this.state.graphData.margin,\n          borderColor: _.map(\n            this.state.graphData.weekly_markdown,\n            (m) => uniqueWeek[m].borderColor\n          ),\n          backgroundColor: _.map(\n            this.state.graphData.weekly_markdown,\n            (m) => uniqueWeek[m].backgroundColor\n          ),\n          borderWidth: {\n            top: 3,\n            right: 0,\n            bottom: 0,\n            left: 0,\n          },\n        },\n        // {\n        //   label: 'label2',\n        //   data:\n        //     this.props.editMarkdownAnalysisGraphData &&\n        //     this.props.editMarkdownAnalysisGraphData.margin,\n        //   borderColor:\n        //     this.props.editMarkdownAnalysisGraphData &&\n        //     this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n        //       (m) => uniqueWeek1[m].borderColor\n        //     ),\n        //   backgroundColor:\n        //     this.props.editMarkdownAnalysisGraphData &&\n        //     this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n        //       (m) => uniqueWeek1[m].backgroundColor\n        //     ),\n        //   borderWidth: {\n        //     top: 3,\n        //     right: 0,\n        //     bottom: 0,\n        //     left: 0,\n        //   },\n        // },\n      ],\n    };\n    let uniqueWeek1 = {};\n    let editedSellthroughData = {};\n    let editedMarginData = {};\n    if (this.props.isEdit && !_.isEmpty(this.state.editGraphData)) {\n      // let uniqueWeek1 = {};\n      _.forEach(this.state.editGraphData.weekly_markdown, (value, i) => {\n        if (!uniqueWeek1.hasOwnProperty(value)) {\n          uniqueWeek1[value] = {\n            backgroundColor: backgroundColors1.pop(),\n          };\n          uniqueWeek1[value].borderColor = borderColors1.pop();\n          uniqueWeek1[value].background = gradient.pop();\n        }\n      });\n\n      //   sellThroughData.datasets.push({\n      //     label: 'chart2',\n      //     data: this.state.editGraphData.sellThrough,\n      //     borderColor: _.map(\n      //       this.state.editGraphData.weekly_markdown,\n      //       (m) => uniqueWeek1[m].borderColor\n      //     ),\n      //     backgroundColor: _.map(\n      //       this.state.editGraphData.weekly_markdown,\n      //       (m) => uniqueWeek1[m].backgroundColor\n      //     ),\n      //     borderWidth: {\n      //       top: 0,\n      //       right: 0,\n      //       bottom: 0,\n      //       left: 0,\n      //     },\n      //   });\n\n      //   marginData.datasets.push({\n      //     data: this.state.editGraphData.margin,\n      //     borderColor: _.map(\n      //       this.state.editGraphData.weekly_markdown,\n      //       (m) => uniqueWeek1[m].borderColor\n      //     ),\n      //     backgroundColor: _.map(\n      //       this.state.editGraphData.weekly_markdown,\n      //       (m) => uniqueWeek1[m].backgroundColor\n      //     ),\n      //     borderWidth: {\n      //       top: 0,\n      //       right: 0,\n      //       bottom: 0,\n      //       left: 0,\n      //     },\n      //   });\n      // }\n      editedSellthroughData = {\n        labels: labels,\n        datasets: [\n          {\n            label: 'chart2',\n            data: this.state.editGraphData.sellThrough,\n            borderColor: _.map(\n              this.state.editGraphData.weekly_markdown,\n              (m) => uniqueWeek1[m].borderColor\n            ),\n            backgroundColor: _.map(\n              this.state.editGraphData.weekly_markdown,\n              (m) => uniqueWeek1[m].backgroundColor\n            ),\n            borderWidth: {\n              top: 3,\n              right: 0,\n              bottom: 0,\n              left: 0,\n            },\n          },\n        ],\n      };\n      editedMarginData = {\n        labels: labels,\n        datasets: [\n          {\n            data: this.state.editGraphData.margin,\n            borderColor: _.map(\n              this.state.editGraphData.weekly_markdown,\n              (m) => uniqueWeek1[m].borderColor\n            ),\n            backgroundColor: _.map(\n              this.state.editGraphData.weekly_markdown,\n              (m) => uniqueWeek1[m].backgroundColor\n            ),\n            borderWidth: {\n              top: 3,\n              right: 0,\n              bottom: 0,\n              left: 0,\n            },\n          },\n        ],\n      };\n    }\n    let editedLegendPercentages = Object.keys(uniqueWeek1);\n    let level = this.props.level === 'week' ? 'Week' : 'Month';\n    options.scales.xAxes[0].scaleLabel.labelString = level;\n    options2.scales.xAxes[0].scaleLabel.labelString = level;\n    editedLegendPercentages = Object.keys(uniqueWeek1).map(\n      (percentage) => `${Number(percentage)}%`\n    );\n    legendPercentages = Object.keys(uniqueWeek).map((percentage) => `${Number(percentage)}%`);\n\n    return (\n      <div\n        className={\n          this.props.isEdit && !_.isEmpty(this.props.editAnalysisData) ? 'edit-data-present' : ''\n        }>\n        <div className=\"mb-4\">\n          <div className=\"row skuLabelStyle\">\n            <label className=\"skuLabel\">Style-Color</label>\n            <div className=\"col-md-2\">\n              <Select\n                placeholder=\"Style-Color\"\n                value={this.props.selectedSku}\n                options={this.props.optionSku}\n                onChange={this.props.selectedSkuHandler}\n                isClearable\n              />\n            </div>\n            <div className=\"col-md-6\">\n              {this.props.isEdit && !_.isEmpty(this.props.editAnalysisData) ? (\n                <Switch\n                  isSwitchedPaln={this.switchEditMode}\n                  switchedPlans={this.state.editedMode}\n                />\n              ) : null}\n            </div>\n          </div>\n          <div className=\"row analysis-overview\">\n            <div className=\"col\">\n              <div className=\"chartContainermain\">\n                <label className=\"sellThroughLabel\">Sell Through %</label>\n                <div className=\"chartContainer\">\n                  <div className=\"row j-c-c\">\n                    {this.state.editedMode\n                      ? editedLegendPercentages.map((percentage, index) => (\n                          <div className=\"d-flex\" key={`${Math.random() + index}`}>\n                            <Tippy\n                              style={{ cursor: 'pointer' }}\n                              placement={'left'}\n                              arrow={true}\n                              distance={10}\n                              content={<div> MD {percentage}</div>}>\n                              <div\n                                className=\"color-box mr-2\"\n                                style={{\n                                  cursor: 'pointer',\n                                  background: Object.keys(uniqueWeek1).map(\n                                    (percentage) => uniqueWeek1[percentage].borderColor\n                                  )[index],\n                                }}\n                              />\n                            </Tippy>\n                            <span className=\"left-space\">{percentage}</span>\n                          </div>\n                        ))\n                      : legendPercentages.map((percentage, index) => (\n                          <div className=\"d-flex\" key={`${Math.random() + index}`}>\n                            <Tippy\n                              style={{ cursor: 'pointer' }}\n                              placement={'left'}\n                              arrow={true}\n                              distance={10}\n                              content={<div> MD {percentage}</div>}>\n                              <div\n                                className=\"color-box mr-2\"\n                                style={{\n                                  cursor: 'pointer',\n                                  backgroundColor: Object.keys(uniqueWeek).map(\n                                    (percentage) => uniqueWeek[percentage].borderColor\n                                  )[index],\n                                }}\n                              />\n                            </Tippy>\n                            <span className=\"left-space\">{percentage}</span>\n                          </div>\n                        ))}\n                  </div>\n                </div>\n                <BarChart\n                  width={'681px'}\n                  height={'280px'}\n                  data={this.state.editedMode ? editedSellthroughData : sellThroughData}\n                  options={options}\n                />\n              </div>\n              <div className=\"chartContainermain\">\n                <label className=\"sellThroughLabel\">Margin %</label>\n                <div className=\"chartContainer\">\n                  <div className=\"row j-c-c\">\n                    {this.state.editedMode\n                      ? editedLegendPercentages.map((percentage, index) => (\n                          <div className=\"d-flex\" key={`${Math.random() + index}`}>\n                            <Tippy\n                              style={{ cursor: 'pointer' }}\n                              placement={'left'}\n                              arrow={true}\n                              distance={10}\n                              content={<div> MD {percentage}</div>}>\n                              <div\n                                className=\"color-box mr-2\"\n                                style={{\n                                  cursor: 'pointer',\n                                  background: Object.keys(uniqueWeek1).map(\n                                    (percentage) => uniqueWeek1[percentage].borderColor\n                                  )[index],\n                                }}\n                              />\n                            </Tippy>\n                            <span className=\"left-space\">{percentage}</span>\n                          </div>\n                        ))\n                      : legendPercentages.map((percentage, index) => (\n                          <div className=\"d-flex\" key={`${Math.random() + index}`}>\n                            <Tippy\n                              style={{ cursor: 'pointer' }}\n                              placement={'left'}\n                              arrow={true}\n                              distance={10}\n                              content={<div> MD {percentage}</div>}>\n                              <div\n                                className=\"color-box mr-2\"\n                                style={{\n                                  cursor: 'pointer',\n                                  backgroundColor: Object.keys(uniqueWeek).map(\n                                    (percentage) => uniqueWeek[percentage].borderColor\n                                  )[index],\n                                }}\n                              />\n                            </Tippy>\n                            <span className=\"left-space\">{percentage}</span>\n                          </div>\n                        ))}\n                  </div>\n                </div>\n                <BarChart\n                  width={'681px'}\n                  height={'280px'}\n                  data={this.state.editedMode ? editedMarginData : marginData}\n                  options={options2}\n                />\n              </div>\n            </div>\n            <div className=\"col mt-4\">\n              <AnalysisTable\n                tableData={this.props.analysisTable || []}\n                tableData2={this.props.editAnalysisData || []}\n                isEdit={this.props.isEdit}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MarkdownAnalysis;\n"]},"metadata":{},"sourceType":"module"}