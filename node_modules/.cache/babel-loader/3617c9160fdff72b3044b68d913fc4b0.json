{"ast":null,"code":"import axios from \"axios\";\nimport { config } from \"../utils/config\";\nimport { AUTO_PROMO_DATA, AUTO_GET_NEW_OPTIMIZED_DATA, ERROR_MSG } from \"./types\"; // Get chartData from the Api\n\naxios.defaults.withCredentials = false;\nexport var getAutoPromoData = function getAutoPromoData(reqObject, adGroup) {\n  return function (dispatch) {\n    if (adGroup) {\n      reqObject.adgroups = [adGroup];\n    }\n\n    axios.post(\"\".concat(config.autoCreateUrl), reqObject).then(function (res) {\n      console.log(\"chart data fetched\", res.data);\n      var obj1 = null;\n\n      if (res.data && res.data.length) {\n        obj1 = res.data.map(function (obj) {\n          obj.promo_data = obj.promo_data.map(function (data) {\n            data.optimizedValue = {\n              promo_type: data.promo_type,\n              promo_value: data.promo_value\n            };\n            data.showDefault = {\n              promo_type: data.promo_type,\n              promo_value: data.promo_value\n            };\n            return data;\n          });\n          return obj;\n        });\n      } else {\n        obj1 = res.data;\n\n        if (res.data.promo_data && res.data.promo_data.length) {\n          obj1.promo_data = res.data.promo_data.map(function (data) {\n            data.optimizedValue = {\n              promo_type: data.promo_type,\n              promo_value: data.promo_value\n            };\n            data.showDefault = {\n              promo_type: data.promo_type,\n              promo_value: data.promo_value\n            };\n            return data;\n          });\n        } else {\n          if (reqObject.noAlert != undefined && reqObject.noAlert != 0) alert(\"Data not sufficient\");else {\n            var data = {\n              msg: 'Data is not available for selected choices!'\n            };\n            throw data;\n          }\n        }\n      }\n\n      console.log(\"objjjjjj:\", obj1);\n\n      if (adGroup) {\n        dispatch({\n          type: AUTO_GET_NEW_OPTIMIZED_DATA,\n          payload: obj1\n        });\n      } else if (res.data) {\n        dispatch({\n          type: AUTO_PROMO_DATA,\n          payload: obj1\n        });\n      }\n    }).catch(function (err) {\n      dispatch({\n        type: ERROR_MSG,\n        payload: {\n          msg: 'Data is not available for selected choices!'\n        }\n      });\n    });\n  };\n};\nexport var updateAutoPromoData = function updateAutoPromoData(reqObject) {\n  return function (dispatch) {\n    dispatch({\n      type: AUTO_PROMO_DATA,\n      payload: reqObject\n    });\n  };\n};\nexport var getNewPromoDetails = function getNewPromoDetails(reqObject) {\n  return function (dispatch) {\n    axios.post(\"\".concat(config.autoCreateUrl, \"/\"), reqObject).then(function (res) {\n      console.log(\"chart data fetched\", res);\n\n      if (res.data) {\n        dispatch({\n          type: AUTO_PROMO_DATA,\n          payload: res.data\n        });\n      }\n    }).catch(function (err) {\n      console.log(\"errrrr\", err);\n    });\n  };\n};\nexport var savePromos = function savePromos(reqObject, index) {\n  return function (dispatch) {\n    var obj = Object.assign({}, reqObject[index]);\n    obj.promos = obj.promo_data;\n    delete obj.promo_data;\n    axios.post(\"\".concat(config.autoCreateUrl, \"/get_kpi/\"), obj).then(function (res) {\n      reqObject.splice(index, 1, res.data); // reqObject[index] = res.data;\n\n      dispatch({\n        type: AUTO_PROMO_DATA,\n        payload: reqObject\n      });\n      alert(\"data updated successfully\");\n    }).catch(function (err) {\n      console.log(\"errrrr\", err);\n    });\n  };\n};\nexport var getSKUId = function getSKUId(reqObject) {\n  return function (dispatch) {\n    axios.get(\"\".concat(config.genericPromo, \"/promo/getSkuid\"), reqObject).then(function (res) {\n      dispatch({\n        type: \"SKU_IDS\",\n        payload: res.data.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: \"GET_ERRORS\",\n        payload: err\n      });\n    });\n  };\n};\nexport var getHistoricalData = function getHistoricalData(str) {\n  return function (dispatch) {\n    axios.get(\"\".concat(config.genericPromo, \"/promo/getSkuHistory?\").concat(str)).then(function (res) {\n      dispatch({\n        type: \"GET_HISTORICAL_DATA\",\n        payload: res.data.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: \"GET_ERRORS\",\n        payload: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/autoPromoCreation.js"],"names":["axios","config","AUTO_PROMO_DATA","AUTO_GET_NEW_OPTIMIZED_DATA","ERROR_MSG","defaults","withCredentials","getAutoPromoData","reqObject","adGroup","dispatch","adgroups","post","autoCreateUrl","then","res","console","log","data","obj1","length","map","obj","promo_data","optimizedValue","promo_type","promo_value","showDefault","noAlert","undefined","alert","msg","type","payload","catch","err","updateAutoPromoData","getNewPromoDetails","savePromos","index","Object","assign","promos","splice","getSKUId","get","genericPromo","getHistoricalData","str"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { config } from \"../utils/config\";\nimport { AUTO_PROMO_DATA, AUTO_GET_NEW_OPTIMIZED_DATA,ERROR_MSG } from \"./types\";\n\n// Get chartData from the Api\naxios.defaults.withCredentials = false;\nexport const getAutoPromoData = (reqObject, adGroup) => dispatch => {\n  if (adGroup) {\n    reqObject.adgroups = [adGroup];\n  }\n  axios\n    .post(`${config.autoCreateUrl}`, reqObject)\n    .then(res => {\n      console.log(\"chart data fetched\", res.data);\n      let obj1 = null;\n      if (res.data && res.data.length) {\n        obj1 = res.data.map(obj => {\n          obj.promo_data = obj.promo_data.map(data => {\n            data.optimizedValue = {\n              promo_type: data.promo_type,\n              promo_value: data.promo_value\n            };\n            data.showDefault = {\n              promo_type: data.promo_type,\n              promo_value: data.promo_value\n            };\n            return data;\n          });\n          return obj;\n        });\n      } else {\n        obj1 = res.data;\n        if (res.data.promo_data && res.data.promo_data.length) {\n          obj1.promo_data = res.data.promo_data.map(data => {\n            data.optimizedValue = {\n              promo_type: data.promo_type,\n              promo_value: data.promo_value\n            };\n            data.showDefault = {\n              promo_type: data.promo_type,\n              promo_value: data.promo_value\n            };\n            return data;\n          });\n        } else {\n          if(reqObject.noAlert != undefined && reqObject.noAlert != 0)\n            alert(\"Data not sufficient\")\n          else\n          {\n            var data = {msg:'Data is not available for selected choices!'}\n            throw(data)\n          }\n        }\n      }\n\n      console.log(\"objjjjjj:\", obj1);\n      if (adGroup) {\n        dispatch({\n          type: AUTO_GET_NEW_OPTIMIZED_DATA,\n          payload: obj1\n        });\n      } else if (res.data) {\n        dispatch({\n          type: AUTO_PROMO_DATA,\n          payload: obj1\n        });\n      }\n    })\n    .catch(err => {\n      dispatch({\n        type: ERROR_MSG,\n        payload: {msg:'Data is not available for selected choices!'}\n      });\n    });\n};\n\nexport const updateAutoPromoData = reqObject => dispatch => {\n  dispatch({\n    type: AUTO_PROMO_DATA,\n    payload: reqObject\n  });\n};\n\nexport const getNewPromoDetails = reqObject => dispatch => {\n  axios\n    .post(`${config.autoCreateUrl}/`, reqObject)\n    .then(res => {\n      console.log(\"chart data fetched\", res);\n      if (res.data) {\n        dispatch({\n          type: AUTO_PROMO_DATA,\n          payload: res.data\n        });\n      }\n    })\n    .catch(err => {\n      console.log(\"errrrr\", err);\n    });\n};\n\nexport const savePromos = (reqObject, index) => dispatch => {\n  let obj = Object.assign({}, reqObject[index]);\n  obj.promos = obj.promo_data;\n  delete obj.promo_data;\n  axios\n    .post(`${config.autoCreateUrl}/get_kpi/`, obj)\n    .then(res => {\n      reqObject.splice(index, 1, res.data);\n      // reqObject[index] = res.data;\n      dispatch({\n        type: AUTO_PROMO_DATA,\n        payload: reqObject\n      });\n      alert(\"data updated successfully\");\n    })\n    .catch(err => {\n      console.log(\"errrrr\", err);\n    });\n};\n\nexport const getSKUId = reqObject => dispatch => {\n  axios\n    .get(`${config.genericPromo}/promo/getSkuid`, reqObject)\n    .then(res => {\n      dispatch({\n        type: \"SKU_IDS\",\n        payload: res.data.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: \"GET_ERRORS\",\n        payload: err\n      });\n    });\n};\n\nexport const getHistoricalData = str => dispatch => {\n  axios\n    .get(`${config.genericPromo}/promo/getSkuHistory?${str}`)\n    .then(res => {\n      dispatch({\n        type: \"GET_HISTORICAL_DATA\",\n        payload: res.data.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: \"GET_ERRORS\",\n        payload: err\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}