{"ast":null,"code":"import _objectSpread from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { toast } from 'react-toastify';\nvar mainReducerDefaultState = {\n  overlayLoaderState: false,\n  loaderText: 'Loading...',\n  errorText: ''\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : mainReducerDefaultState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action, 'aaaaa');\n\n  switch (action.type) {\n    case 'LOADER_STATE':\n      return _objectSpread({}, state, {\n        overlayLoaderState: action.payload.status,\n        loaderText: action.payload.text,\n        errorText: errorText && toast.error(\"\".concat(action.payload.errorText))\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/reducers/loaderReducer.js"],"names":["toast","mainReducerDefaultState","overlayLoaderState","loaderText","errorText","state","action","console","log","type","payload","status","text","error"],"mappings":";AAAA,SAASA,KAAT,QAAsB,gBAAtB;AAEA,IAAMC,uBAAuB,GAAG;AAC9BC,EAAAA,kBAAkB,EAAE,KADU;AAE9BC,EAAAA,UAAU,EAAE,YAFkB;AAG9BC,EAAAA,SAAS,EAAE;AAHmB,CAAhC;AAMA,gBAAe,YAA6C;AAAA,MAA5CC,KAA4C,uEAApCJ,uBAAoC;AAAA,MAAXK,MAAW;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoB,OAApB;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,cAAL;AACE,+BACKJ,KADL;AAEEH,QAAAA,kBAAkB,EAAEI,MAAM,CAACI,OAAP,CAAeC,MAFrC;AAGER,QAAAA,UAAU,EAAEG,MAAM,CAACI,OAAP,CAAeE,IAH7B;AAIER,QAAAA,SAAS,EAAEA,SAAS,IAAIJ,KAAK,CAACa,KAAN,WAAeP,MAAM,CAACI,OAAP,CAAeN,SAA9B;AAJ1B;;AAOF;AACE,aAAOC,KAAP;AAVJ;AAYD,CAdD","sourcesContent":["import { toast } from 'react-toastify';\n\nconst mainReducerDefaultState = {\n  overlayLoaderState: false,\n  loaderText: 'Loading...',\n  errorText: '',\n};\n\nexport default (state = mainReducerDefaultState, action) => {\n  console.log(action, 'aaaaa');\n  switch (action.type) {\n    case 'LOADER_STATE':\n      return {\n        ...state,\n        overlayLoaderState: action.payload.status,\n        loaderText: action.payload.text,\n        errorText: errorText && toast.error(`${action.payload.errorText}`),\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}