{"ast":null,"code":"import _defineProperty from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/services/filters/index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { labels, validations, filterType } from './config';\nimport Select from '../select';\nimport './index.css';\nimport { connect } from 'react-redux';\nimport DateRangePicker from '../RetailCalendarDatePicker';\nimport FilterActions from '../../actions/filtersAction';\nimport { toast } from 'react-toastify';\nimport _ from 'lodash';\n\nvar Filters =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Filters, _Component);\n\n  function Filters(props) {\n    var _this;\n\n    _classCallCheck(this, Filters);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filters).call(this, props));\n\n    _this.onHierarchyOneSelection = function (val) {\n      var hierarchyClone = _.cloneDeep(_this.props.filtersOptions);\n\n      var valiadtion = validations[val[0].label];\n\n      var findIndex = function findIndex(index, key) {\n        return _.findIndex(hierarchyClone, {\n          type: \"\".concat(valiadtion[key][index])\n        });\n      }; //finding index num for swap case from validations\n\n\n      if (valiadtion && !_.isEmpty(valiadtion.swap)) {\n        //swaping filters\n        var a = findIndex(0, 'swap'),\n            b = findIndex(1, 'swap');\n        var temp = hierarchyClone[a];\n        hierarchyClone[a] = hierarchyClone[b];\n        hierarchyClone[b] = temp;\n      }\n\n      if (valiadtion && !_.isEmpty(valiadtion.remove)) {\n        //remove filters case\n        _.map(valiadtion.remove, function (item, i) {\n          _.remove(hierarchyClone, function (itm, index) {\n            return index === findIndex(i, 'remove');\n          });\n        });\n      }\n\n      _this.setState({\n        hierarchy: hierarchyClone\n      });\n\n      return hierarchyClone;\n    };\n\n    _this.setSelectionHandler =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(val, actionName, name) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(name === 'customStoreGroup')) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _context.next = 3;\n                return _this.props.setSelectedCustomStoreGroup(val.map(function (v) {\n                  return v.value;\n                }));\n\n              case 3:\n                return _context.abrupt(\"return\");\n\n              case 4:\n                if (!(name === 'customStyleGroup')) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _this.props.setSelectedCustomGroup(val.map(function (v) {\n                  return v.value;\n                }), 'name');\n\n                _context.next = 8;\n                return _this.props.setSelectedCustomGroup(val.map(function (v) {\n                  return v.id;\n                }), 'id');\n\n              case 8:\n                return _context.abrupt(\"return\");\n\n              case 9:\n                _context.next = 11;\n                return _this.props[actionName](val.map(function (e) {\n                  return e.label;\n                }));\n\n              case 11:\n                return _context.abrupt(\"return\");\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.getHierarchyOptions =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(val, filterIndex, currFilterName) {\n        var hierarchy, nameCapitalized, resetHierachies;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                !Array.isArray(val) && (val = [val]);\n                hierarchy = _.cloneDeep(_this.props.filtersOptions);\n                nameCapitalized = currFilterName && currFilterName.charAt(0).toUpperCase() + currFilterName.slice(1); //capitalizing the name to match action/reducer name\n\n                resetHierachies = {};\n\n                _.map(hierarchy, function (item, index) {\n                  if (index > filterIndex) {\n                    //&& index < 5) {\n                    resetHierachies[item.type] = null; //all fiters value, which comes after selected filter becomes null(reset)\n                  }\n                });\n\n                _this.setState(_objectSpread(_defineProperty({}, currFilterName, val), resetHierachies),\n                /*#__PURE__*/\n                _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee2() {\n                  var actionName, req;\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          actionName = \"setSelected\".concat(nameCapitalized);\n                          _context2.next = 3;\n                          return _this.props[actionName](val.map(function (e) {\n                            return e.label;\n                          }));\n\n                        case 3:\n                          //handles setSelected action calls\n                          req = {};\n\n                          _.map(hierarchy, function (item, index) {\n                            if (index <= filterIndex) {\n                              var _nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n                              // if (_.isEmpty(this.props[`selected${nameCapitalized}`])) return; //uncomment if u want empty filters removed\n\n\n                              req[item.type] = _this.props[\"selected\".concat(_nameCapitalized)]; //this goes as filters req obj in api calls\n                            }\n                          });\n\n                          _this.setState({\n                            filters: _objectSpread({}, req)\n                          });\n\n                        case 6:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                })));\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4, _x5, _x6) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.setDrop = function (val) {\n      var req = {};\n      var selItems = val.map(function (item) {\n        return item.label;\n      });\n      req['drop'] = selItems;\n\n      _this.setState({\n        filters: _objectSpread({}, req),\n        drops: val\n      }, function () {\n        _this.props.setSelectedDrops(val.map(function (v) {\n          return v.value;\n        }));\n      });\n    };\n\n    _this.actionCallHandler = function (func, isHierarchyNext, nextFilterName, req) {\n      console.log('filterName console actionCallHandler', nextFilterName); // let typeName = isHierarchyNext\n      //   ? nextFilterName.toUpperCase()\n      //   : labels[nextFilterName].toUpperCase();\n      // if (nextFilterName === 'store') typeName = 'STORE_CODE';\n\n      var typeName = filterType[nextFilterName];\n      var reqObj = {\n        filters: req,\n        allowInactiveProducts: _this.props.allowInactiveProducts || false\n      };\n      if (isHierarchyNext) reqObj.hierarchyType = typeName;\n      if (!isHierarchyNext) reqObj.filterType = typeName;\n\n      if (nextFilterName === 'customStyleGroup') {\n        var _req = {\n          filters: reqObj.filters,\n          disable_empty_flag: _this.props.disable_empty_flag && !_this.props.isEdit ? _this.props.disable_empty_flag : false\n        };\n        reqObj = _req;\n        func = \"fetchStyleGroups\";\n      }\n\n      if (nextFilterName === 'customStoreGroup') {\n        reqObj = {};\n        func = \"getCustomStores\";\n      }\n\n      _this.props[func](reqObj);\n    };\n\n    _this.filterOnFocusHandler = function (filterIndex, filterName, isHierarchy) {\n      var options = _this.props[filterName];\n      if (filterName && options && !options.callApi && !_.isEmpty(_this.props[filterName]) || !_this.validateFilters(filterIndex)) //if filter options already exists or if all of the mandatory filters that comes before this filter is not selected , return\n        return;\n      console.log(filterName, 'filterName'); // if (filterName === 'stores') {\n      //   this.props.getExtraFilterStore({\n      //     // filters: {},\n      //     filterType: 'TIER',\n      //     allowInactiveProducts: this.props.allowInactiveProducts || false,\n      //   });\n      //   return;\n      // }\n\n      var func = isHierarchy ? \"getHierarchyOptions\" : \"getExtraFiltersOptions\";\n      var req = {};\n\n      _.map(_this.props.filtersOptions, function (item, index) {\n        console.log(item, 'itemmmmmmmmmmmmmm');\n\n        if (index < filterIndex) {\n          var nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n\n          var selected = _this.props[\"selected\".concat(nameCapitalized)]; // if (_.isEmpty(selected)) return; //uncomment if u want empty filters removed\n\n\n          req[item.type] = selected; //this goes as filters req obj in api calls\n        }\n      });\n\n      if (filterName && _this.props[func]) {\n        _this.actionCallHandler(func, isHierarchy, filterName, req); //calles next filters action, to get it's options\n\n      }\n    };\n\n    _this.setCustomStyleGroup = function (val) {\n      // let val = [item];\n      var selItems = val.map(function (item) {\n        return item.label;\n      }); // req['stores'] = selItems;\n\n      var newFilters = _objectSpread({}, _this.state.filters, {\n        customStyleGroup: selItems\n      });\n\n      _this.setState({\n        filters: newFilters,\n        customStyleGroup: val\n      }, function () {\n        // this.props.setSelectedCustomGroup(val.map((v) => v.id));\n        _this.props.setSelectedCustomGroup(val.map(function (v) {\n          return v.value;\n        }), 'name');\n\n        _this.props.setSelectedCustomGroup(val.map(function (v) {\n          return v.id;\n        }), 'id');\n      });\n    };\n\n    _this.setCustomStores = function (val) {\n      var selItems = val.map(function (item) {\n        return item.label;\n      });\n\n      var newFilters = _objectSpread({}, _this.state.filters, {\n        customStoreGroup: selItems\n      });\n\n      _this.setState({\n        filters: newFilters,\n        customStoreGroup: val\n      }, function () {\n        _this.props.setSelectedCustomStoreGroup(val.map(function (v) {\n          return v.value;\n        }));\n      });\n    };\n\n    _this.reset = function () {\n      _this.props.onReset && _this.props.onReset();\n\n      _this.setState({\n        drops: null,\n        startDate: null,\n        endDate: null,\n        hierarchy1: null,\n        hierarchy2: null,\n        hierarchy3: null,\n        hierarchy4: null,\n        hierarchy5: null,\n        // stores: null,\n        hierarchy7: null,\n        hierarchy9: null,\n        hierarchy10: null,\n        hierarchy11: null,\n        hierarchy12: null,\n        stores: null // customStoreGroup: null,\n        // customStyleGroup: null,\n\n      }, function () {\n        if (_this.props.from !== 'draft/status') _this.props.resetFilters(); ////////// handling reset issues rising bcs of tabs, only reset this component state, not reducer\n      });\n    };\n\n    _this.onDatesChange = function (_ref4) {\n      var startDate = _ref4.startDate,\n          endDate = _ref4.endDate;\n\n      _this.setState({\n        startDate: startDate,\n        endDate: endDate\n      }, function () {\n        var weeks = [];\n\n        if (endDate) {\n          for (var i = startDate.clone(); i <= endDate; i = i.add(7, 'd')) {\n            weeks.push(i.week());\n          }\n        }\n\n        _this.props.setDateRange({\n          startDate: startDate && startDate.format('YYYY-MM-DD'),\n          endDate: endDate && endDate.format('YYYY-MM-DD'),\n          weeks: weeks\n        });\n      });\n    };\n\n    _this.validateFilters = function (filterIndex, dateRange) {\n      var hierarchy = _this.state.hierarchy;\n\n      for (var i = 0; i < filterIndex; i++) {\n        var type = hierarchy[i] && hierarchy[i].type;\n        var nameCapitalized = type && type.charAt(0).toUpperCase() + type.slice(1); //capitalizing the name to match action/reducer name\n\n        if (hierarchy[i] && hierarchy[i].isMandatory && _.isEmpty(_this.props[\"selected\".concat(nameCapitalized)])) {\n          return false;\n        }\n      }\n\n      if (dateRange && (_.isEmpty(_this.state.startDate) || _.isEmpty(_this.state.endDate))) return false;\n      return true;\n    };\n\n    _this.onFilterHandler = function () {\n      if (!_this.validateFilters(_this.state.hierarchy.length, _this.props.dateRange)) {\n        toast.error(\"Please select mandatory filters\", {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        return;\n      }\n\n      _this.props.onFilter({\n        filters: _this.state.filters,\n        startDate: _this.state.startDate,\n        endDate: _this.state.endDate,\n        customStyleGroup: _this.state.customStyleGroup\n      });\n    };\n\n    _this.state = {\n      filters: {},\n      startDate: null,\n      endDate: null,\n      hierarchy: [],\n      hierarchy1: props.retainFilters && props.selectedHierarchy1 ? props.selectedHierarchy1.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy2: props.retainFilters && props.selectedHierarchy2 ? props.selectedHierarchy2.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy3: props.retainFilters && props.selectedHierarchy3 ? props.selectedHierarchy3.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy4: props.retainFilters && props.selectedHierarchy4 ? props.selectedHierarchy4.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy5: props.retainFilters && props.selectedHierarchy5 ? props.selectedHierarchy5.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      // hierarchy6:\n      //   props.retainFilters && props.selectedHierarchy6\n      //     ? props.selectedHierarchy6.map((e) => {\n      //         return { value: e, label: e };\n      //       })\n      //     : null,\n      // hierarchy7:\n      //   props.retainFilters && props.selectedHierarchy7\n      //     ? props.selectedHierarchy7.map((e) => {\n      //         return { value: e, label: e };\n      //       })\n      //     : null,\n      // hierarchy8:\n      //   props.retainFilters && props.selectedHierarchy8 && props.location.state\n      //     ? props.location.state.styles.map((e) => {\n      //         return { value: e, label: e };\n      //       })\n      //     : props.retainFilters && props.selectedHierarchy8 && this.props.styleGroupEdit\n      //     ? props.selectedHierarchy8.map((e) => {\n      //         return { value: e, label: e };\n      //       })\n      //     : null,\n      customStyleGroup: props.retainFilters && props.selectedCustomStyleGroup ? props.selectedCustomStyleGroup.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      stores: props.retainFilters && props.selectedStores ? props.selectedStores.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy7: props.retainFilters && props.selectedHierarchy7 ? props.selectedHierarchy7.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy9: props.retainFilters && props.selectedHierarchy10 ? props.selectedHierarchy10.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy10: props.retainFilters && props.selectedHierarchy9 ? props.selectedHierarchy9.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy11: props.retainFilters && props.selectedHierarchy11 && props.location.state ? props.location.state.styles.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      hierarchy12: props.retainFilters && props.selectedHierarchy12 ? props.selectedHierarchy12.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null,\n      customStoreGroup: props.retainFilters && props.selectedCustomStoreGroup ? props.selectedCustomStoreGroup.map(function (e) {\n        return {\n          value: e,\n          label: e\n        };\n      }) : null\n    }; // +  !props.retainFilters && props.resetFilters();\n\n    props.getExtraFiltersOptions({\n      filters: {},\n      filterType: 'TIER',\n      allowInactiveProducts: _this.props.allowInactiveProducts || false\n    });\n    !props.isEdit && props.getHierarchyOptions({\n      filters: {},\n      hierarchyType: 'HIERARCHY1',\n      allowInactiveProducts: _this.props.allowInactiveProducts || false\n    });\n\n    if (props.retainFilters && props.location.state) {\n      props.setSelectedHierarchy11(props.location.state.styles, true);\n      props.setSelectedStores(_this.state.stores.map(function (e) {\n        return e.label;\n      }));\n    }\n\n    props.getCustomStores().then(function (res) {\n      if (_this.props.isEdit && _this.props.editPlanDetails[0] && !_.isEmpty(_this.props.editPlanDetails[0] && _this.props.editPlanDetails[0].request_obj)) {\n        var customStoreGroup = _this.props.editPlanDetails[0] && _this.props.editPlanDetails[0].request_obj && _this.props.editPlanDetails[0].request_obj.filters && _this.props.editPlanDetails[0].request_obj.filters.customStoreGroup;\n        var selectedCustomStore = [];\n\n        _.map(res, function (item) {\n          if (customStoreGroup && customStoreGroup.includes(item.value)) {\n            selectedCustomStore.push(item);\n          }\n        });\n\n        _this.setCustomStores(selectedCustomStore);\n      }\n    }); // props.fetchStyleGroups({\n    //   disable_empty_flag: false,\n    //   filters: {},\n    // });\n    // if (props.retainFilters && props.location.state) {\n    // props.setSelectedHierarchy7(props.location.state.styles, 'reporting');\n    // props.setSelectedStores(this.state.stores.map((e) => e.label));\n    // }\n\n    props.setRetainFilters(false);\n    return _this;\n  }\n\n  _createClass(Filters, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.retainFilters && !_.isEmpty(this.props.selectedHierarchy1)) {\n        var val = [{\n          label: this.props.selectedHierarchy1[0],\n          value: this.props.selectedHierarchy1[0]\n        }];\n        this.onHierarchyOneSelection(val);\n        return;\n      }\n\n      this.setState({\n        hierarchy: this.props.filtersOptions\n      }); // this.props.getExtraFilterStore();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.filterReset) {\n        this.props.filterResetHandler(false);\n        this.reset(); // reset filters from configFilters\n      }\n\n      if (this.props.fromNotification && _.isEmpty(this.state.hierarchy1) && !_.isEmpty(this.props.cadenceInput) && !_.isEmpty(this.props.cadenceInput.filters)) {\n        var filters = this.props.cadenceInput.filters;\n        this.props.presetFilters(filters, true); //2nd argument to set a flag to call options api\n\n        this.onHierarchyOneSelection([{\n          label: filters.hierarchy1[0],\n          value: filters.hierarchy1[0]\n        }]);\n        this.setState({\n          // customStoreGroup: _.map(filters.customStoreGroup, (item) => ({ value: item, label: item })),\n          stores: _.map(filters.stores, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy1: _.map(filters.hierarchy1, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy2: _.map(filters.hierarchy2, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy3: _.map(filters.hierarchy3, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy4: _.map(filters.hierarchy4, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy5: _.map(filters.hierarchy5, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy7: _.map(filters.hierarchy7, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy9: _.map(filters.hierarchy9, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy10: _.map(filters.hierarchy10, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy11: _.map(filters.hierarchy11, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy12: _.map(filters.hierarchy12, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }) // customStyleGroup: _.map(filters.customStyleGroup, (item) => ({ value: item, label: item })),\n\n        });\n\n        if (!_.isEmpty(this.props.customStoreGroup)) {\n          var selectedCustomStore = [];\n\n          _.map(this.props.customStoreGroup, function (item) {\n            if (filters.customStoreGroup && filters.customStoreGroup.includes(item.value)) {\n              selectedCustomStore.push(item);\n            }\n          });\n\n          this.setState({\n            customStoreGroup: selectedCustomStore\n          });\n          this.setCustomStores(selectedCustomStore);\n        }\n\n        if (!_.isEmpty(this.props.customStyleGroup)) {\n          var selectedCustomStyle = [];\n\n          _.map(this.props.customStyleGroup, function (item) {\n            if (filters.customStyleGroup && typeof filters.customStyleGroup[0] === 'string' && filters.customStyleGroup.includes(item.value)) {\n              selectedCustomStyle.push(item);\n              return;\n            }\n\n            if (filters.customStyleGroup && filters.customStyleGroup.includes(item.id)) {\n              selectedCustomStyle.push(item);\n            }\n          });\n\n          this.setState({\n            customStyleGroup: selectedCustomStyle\n          });\n          this.setCustomStyleGroup(selectedCustomStyle);\n        }\n      }\n\n      if (this.props.isEdit && _.isEmpty(this.state.hierarchy1) && this.props.editPlanDetails[0] && !_.isEmpty(this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj)) {\n        var _this$props$editPlanD = this.props.editPlanDetails[0].request_obj.filters,\n            hierarchy1 = _this$props$editPlanD.hierarchy1,\n            hierarchy2 = _this$props$editPlanD.hierarchy2,\n            hierarchy3 = _this$props$editPlanD.hierarchy3,\n            hierarchy4 = _this$props$editPlanD.hierarchy4,\n            hierarchy5 = _this$props$editPlanD.hierarchy5,\n            stores = _this$props$editPlanD.stores,\n            hierarchy7 = _this$props$editPlanD.hierarchy7,\n            hierarchy9 = _this$props$editPlanD.hierarchy9,\n            hierarchy10 = _this$props$editPlanD.hierarchy10,\n            hierarchy11 = _this$props$editPlanD.hierarchy11,\n            hierarchy12 = _this$props$editPlanD.hierarchy12;\n        var customStyleName = this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj && this.props.editPlanDetails[0].request_obj.customStyleName; // this.props.presetFilters([\n        //   country,\n        //   channel,\n        //   storeCluster,\n        //   customStoreGroup,\n        //   store,\n        //   hierarchy1,\n        //   hierarchy2,\n        //   hierarchy3,\n        //   hierarchy4,\n        //   hierarchy5,\n        //   season,\n        //   matrix,\n        //   exclusionList,\n        //   clearance,\n        //   customStyleGroup,\n        //   styleColor,\n        // ]);\n\n        this.props.presetFilters(this.props.editPlanDetails[0].request_obj.filters);\n        this.setState({\n          hierarchy1: _.map(hierarchy1, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy2: _.map(hierarchy2, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy3: _.map(hierarchy3, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy4: _.map(hierarchy4, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy5: _.map(hierarchy5, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          stores: _.map(stores, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy7: _.map(hierarchy7, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy9: _.map(hierarchy9, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy10: _.map(hierarchy10, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy11: _.map(hierarchy11, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }),\n          hierarchy12: _.map(hierarchy12, function (item) {\n            return {\n              value: item,\n              label: item\n            };\n          }) // customStoreGroup: _.map(customStoreGroup, (item) => ({ value: item, label: item })),\n          // customStyleGroup: _.map(customStyleGroup, (item) => ({ value: item, label: item })),\n\n        });\n      } // if (\n      //   this.props.from !== 'styleConfig' &&\n      //   this.props.from !== 'styleGroupConfig' &&\n      //   !_.isEmpty(this.props.selectedHierarchy8) &&\n      //   !_.isEqual(prevProps.selectedHierarchy8, this.props.selectedHierarchy8)\n      // ) {\n      //   let req = {\n      //     filters: {\n      //       hierarchy1: this.props.selectedHierarchy1,\n      //       hierarchy2: this.props.selectedHierarchy2,\n      //       hierarchy3: this.props.selectedHierarchy3,\n      //       hierarchy4: this.props.selectedHierarchy4,\n      //       hierarchy5: this.props.selectedHierarchy5,\n      //       // hierarchy6: this.props.selectedHierarchy6,\n      //       // hierarchy7: this.props.selectedHierarchy7,\n      //       // hierarchy8: this.props.selectedHierarchy8,\n      //     },\n      //     disable_empty_flag:\n      //       this.props.disable_empty_flag && !this.props.isEdit\n      //         ? this.props.disable_empty_flag\n      //         : false,\n      //   };\n      //   this.props.fetchStyleGroups(req);\n      // }\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.stores, 'stores');\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: this.props.isEdit ? 'row d-flex ml-4 mr-4 edit-markdown-filters' : ' d-flex row ml-4 mr-4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, this.state.hierarchy && this.state.hierarchy.map(function (filter, i) {\n        return labels[filter.type] && React.createElement(\"div\", {\n          className: \"col-md-2 \",\n          key: filter.type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 607\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"mb-1 mt-3\",\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 608\n          },\n          __self: this\n        }, labels[filter.type], filter.isMandatory ? React.createElement(\"span\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 610\n          },\n          __self: this\n        }, \" * \") : null), React.createElement(Select, {\n          name: filter.type,\n          options: _this2.props[filter.type],\n          onFocus: function onFocus(e) {\n            return _this2.filterOnFocusHandler(i, filter.type, filter.isHierarchy);\n          },\n          onChange: function onChange(option) {\n            return _this2.getHierarchyOptions(option, i, filter.type, filter.isHierarchy, _this2.state.hierarchy[i + 1] && _this2.state.hierarchy[i + 1].type, _this2.state.hierarchy[i + 1] && _this2.state.hierarchy[i + 1].isHierarchy);\n          },\n          value: _this2.state[filter.type],\n          isMulti: filter.isMultiple,\n          isDisabled: i === 0 && _this2.props.styleGroupEdit || i === 2 && _this2.props.storeClusterDisable || i === 3 && _this2.props.storeClusterDisable || i === 4 && _this2.props.storeClusterDisable ? true : false // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 612\n          },\n          __self: this\n        }));\n      }), this.props.dateRange && React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"mb-1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678\n        },\n        __self: this\n      }, \"Date range \", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679\n        },\n        __self: this\n      }, \" * \")), React.createElement(DateRangePicker, {\n        startDate: this.state.startDate,\n        startDateId: \"startDate_11\",\n        endDate: this.state.endDate,\n        endDateId: \"endDate_11\",\n        onDatesChange: this.onDatesChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681\n        },\n        __self: this\n      })), !this.props.hidefilterButton && React.createElement(\"div\", {\n        className: !this.props.dateRange && !this.props.hideCustomStores ? 'col-md-2 mt-5 px-0' //'col-md-3 mt-4  ml-auto text-right'\n        : 'col-md-3 mt-5',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        disabled: this.props.isEdit,\n        onClick: this.onFilterHandler,\n        className: !this.props.dateRange && !this.props.hideCustomStores ? 'col-md-5 btn btn-primary btn-filter ml-2' : 'col-md-4 btn btn-primary btn-filter',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706\n        },\n        __self: this\n      }), \"\\xA0 Filter\")), React.createElement(\"button\", {\n        disabled: this.props.isEdit || this.props.styleGroupEdit,\n        className: !this.props.dateRange && !this.props.hideCustomStores ? ' col-md-5 btn btn-primary btn-filter btn-filter-reset ml-3' : 'col-md-4 offset-1 btn btn-primary btn-filter btn-filter-reset',\n        onClick: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-repeat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }), \"\\xA0 Reset\")))));\n    }\n  }]);\n\n  return Filters;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    drops: store.filtersReducer.drops,\n    selectedDrops: store.filtersReducer.selectedDrops,\n    hierarchy1: store.filtersReducer.hierarchy1,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    hierarchy2: store.filtersReducer.hierarchy2,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    hierarchy3: store.filtersReducer.hierarchy3,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    hierarchy4: store.filtersReducer.hierarchy4,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    hierarchy5: store.filtersReducer.hierarchy5,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    stores: store.filtersReducer.stores,\n    selectedStores: store.filtersReducer.selectedStores,\n    // customStoreGroup: store.filtersReducer.customStoreGroup,\n    // customStyleGroup: store.filtersReducer.customStyleGroup,\n    // selectedCustomStyleGroup: store.filtersReducer.selectedCustomStyleGroup,\n    // selectedCustomStoreGroup: store.filtersReducer.selectedCustomStoreGroup,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks,\n    retainFilters: store.filtersReducer.retainFilters,\n    editPlanDetails: store.manuallyCreateMdData.editPlanDetails,\n    hierarchy9: store.filtersReducer.hierarchy9,\n    selectedHierarchy9: store.filtersReducer.selectedHierarchy9,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    hierarchy7: store.filtersReducer.hierarchy7,\n    hierarchy10: store.filtersReducer.hierarchy10,\n    selectedHierarchy10: store.filtersReducer.selectedHierarchy10,\n    selectedHierarchy11: store.filtersReducer.selectedHierarchy11,\n    hierarchy11: store.filtersReducer.hierarchy11,\n    selectedHierarchy12: store.filtersReducer.selectedHierarchy12,\n    hierarchy12: store.filtersReducer.hierarchy12,\n    cadenceInput: store.manuallyCreateMdData.cadenceInput\n  };\n};\n\nvar mapDispatchToProps = {\n  getHierarchyOptions: FilterActions.getHierarchyOptions,\n  getExtraFiltersOptions: FilterActions.getExtraFiltersOptions,\n  getStores: FilterActions.getStores,\n  getVendorStyles: FilterActions.getVendorStyles,\n  getRollup1: FilterActions.getRollup1,\n  getRollup2: FilterActions.getRollup1,\n  getCustomStores: FilterActions.getCustomStores,\n  setSelectedDrops: FilterActions.setSelectedDrops,\n  setSelectedHierarchy1: FilterActions.setSelectedHierarchy1,\n  setSelectedHierarchy2: FilterActions.setSelectedHierarchy2,\n  setSelectedHierarchy3: FilterActions.setSelectedHierarchy3,\n  setSelectedHierarchy4: FilterActions.setSelectedHierarchy4,\n  setSelectedHierarchy5: FilterActions.setSelectedHierarchy5,\n  setSelectedHierarchy7: FilterActions.setSelectedHierarchy7,\n  setSelectedStores: FilterActions.setSelectedStores,\n  setSelectedHierarchy9: FilterActions.setSelectedHierarchy9,\n  setSelectedHierarchy10: FilterActions.setSelectedHierarchy10,\n  setSelectedHierarchy11: FilterActions.setSelectedHierarchy11,\n  setSelectedHierarchy12: FilterActions.setSelectedHierarchy12,\n  // setSelectedCustomGroup: FilterActions.setSelectedCustomGroup,\n  // setSelectedCustomStoreGroup: FilterActions.setSelectedCustomStoreGroup,\n  setDateRange: FilterActions.setDateRange,\n  resetFilters: FilterActions.resetFilters,\n  setRetainFilters: FilterActions.setRetainFilters,\n  presetFilters: FilterActions.presetFilters,\n  getExtraFilterStore: FilterActions.getExtraFilterStore,\n  fetchStyleGroups: FilterActions.fetchStyleGroups\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Filters));","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/services/filters/index.js"],"names":["React","Component","withRouter","labels","validations","filterType","Select","connect","DateRangePicker","FilterActions","toast","_","Filters","props","onHierarchyOneSelection","val","hierarchyClone","cloneDeep","filtersOptions","valiadtion","label","findIndex","index","key","type","isEmpty","swap","a","b","temp","remove","map","item","i","itm","setState","hierarchy","setSelectionHandler","actionName","name","setSelectedCustomStoreGroup","v","value","setSelectedCustomGroup","id","e","getHierarchyOptions","filterIndex","currFilterName","Array","isArray","nameCapitalized","charAt","toUpperCase","slice","resetHierachies","req","filters","setDrop","selItems","drops","setSelectedDrops","actionCallHandler","func","isHierarchyNext","nextFilterName","console","log","typeName","reqObj","allowInactiveProducts","hierarchyType","disable_empty_flag","isEdit","filterOnFocusHandler","filterName","isHierarchy","options","callApi","validateFilters","selected","setCustomStyleGroup","newFilters","state","customStyleGroup","setCustomStores","customStoreGroup","reset","onReset","startDate","endDate","hierarchy1","hierarchy2","hierarchy3","hierarchy4","hierarchy5","hierarchy7","hierarchy9","hierarchy10","hierarchy11","hierarchy12","stores","from","resetFilters","onDatesChange","weeks","clone","add","push","week","setDateRange","format","dateRange","isMandatory","onFilterHandler","length","error","autoClose","hideProgressBar","onFilter","retainFilters","selectedHierarchy1","selectedHierarchy2","selectedHierarchy3","selectedHierarchy4","selectedHierarchy5","selectedCustomStyleGroup","selectedStores","selectedHierarchy7","selectedHierarchy10","selectedHierarchy9","selectedHierarchy11","location","styles","selectedHierarchy12","selectedCustomStoreGroup","getExtraFiltersOptions","setSelectedHierarchy11","setSelectedStores","getCustomStores","then","res","editPlanDetails","request_obj","selectedCustomStore","includes","setRetainFilters","prevProps","prevState","filterReset","filterResetHandler","fromNotification","cadenceInput","presetFilters","selectedCustomStyle","customStyleName","filter","whiteSpace","color","option","isMultiple","styleGroupEdit","storeClusterDisable","hidefilterButton","hideCustomStores","mapStateToProps","store","filtersReducer","selectedDrops","manuallyCreateMdData","mapDispatchToProps","getStores","getVendorStyles","getRollup1","getRollup2","setSelectedHierarchy1","setSelectedHierarchy2","setSelectedHierarchy3","setSelectedHierarchy4","setSelectedHierarchy5","setSelectedHierarchy7","setSelectedHierarchy9","setSelectedHierarchy10","setSelectedHierarchy12","getExtraFilterStore","fetchStyleGroups"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,UAA9B,QAAgD,UAAhD;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,aAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;;AADiB,UAoUnBC,uBApUmB,GAoUO,UAACC,GAAD,EAAS;AACjC,UAAIC,cAAc,GAAGL,CAAC,CAACM,SAAF,CAAY,MAAKJ,KAAL,CAAWK,cAAvB,CAArB;;AACA,UAAIC,UAAU,GAAGf,WAAW,CAACW,GAAG,CAAC,CAAD,CAAH,CAAOK,KAAR,CAA5B;;AACA,UAAIC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,GAAR;AAAA,eACdZ,CAAC,CAACU,SAAF,CAAYL,cAAZ,EAA4B;AAC1BQ,UAAAA,IAAI,YAAKL,UAAU,CAACI,GAAD,CAAV,CAAgBD,KAAhB,CAAL;AADsB,SAA5B,CADc;AAAA,OAAhB,CAHiC,CAM3B;;;AACN,UAAIH,UAAU,IAAI,CAACR,CAAC,CAACc,OAAF,CAAUN,UAAU,CAACO,IAArB,CAAnB,EAA+C;AAC7C;AACA,YAAIC,CAAC,GAAGN,SAAS,CAAC,CAAD,EAAI,MAAJ,CAAjB;AAAA,YACEO,CAAC,GAAGP,SAAS,CAAC,CAAD,EAAI,MAAJ,CADf;AAEA,YAAIQ,IAAI,GAAGb,cAAc,CAACW,CAAD,CAAzB;AAEAX,QAAAA,cAAc,CAACW,CAAD,CAAd,GAAoBX,cAAc,CAACY,CAAD,CAAlC;AACAZ,QAAAA,cAAc,CAACY,CAAD,CAAd,GAAoBC,IAApB;AACD;;AACD,UAAIV,UAAU,IAAI,CAACR,CAAC,CAACc,OAAF,CAAUN,UAAU,CAACW,MAArB,CAAnB,EAAiD;AAC/C;AACAnB,QAAAA,CAAC,CAACoB,GAAF,CAAMZ,UAAU,CAACW,MAAjB,EAAyB,UAACE,IAAD,EAAOC,CAAP,EAAa;AACpCtB,UAAAA,CAAC,CAACmB,MAAF,CAASd,cAAT,EAAyB,UAACkB,GAAD,EAAMZ,KAAN;AAAA,mBAAgBA,KAAK,KAAKD,SAAS,CAACY,CAAD,EAAI,QAAJ,CAAnC;AAAA,WAAzB;AACD,SAFD;AAGD;;AACD,YAAKE,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEpB;AAAb,OAAd;;AACA,aAAOA,cAAP;AACD,KA5VkB;;AAAA,UA8VnBqB,mBA9VmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BA8VG,iBAAOtB,GAAP,EAAYuB,UAAZ,EAAwBC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAChBA,IAAI,KAAK,kBADO;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEZ,MAAK1B,KAAL,CAAW2B,2BAAX,CAAuCzB,GAAG,CAACgB,GAAJ,CAAQ,UAACU,CAAD;AAAA,yBAAOA,CAAC,CAACC,KAAT;AAAA,iBAAR,CAAvC,CAFY;;AAAA;AAAA;;AAAA;AAAA,sBAKhBH,IAAI,KAAK,kBALO;AAAA;AAAA;AAAA;;AAMlB,sBAAK1B,KAAL,CAAW8B,sBAAX,CACE5B,GAAG,CAACgB,GAAJ,CAAQ,UAACU,CAAD;AAAA,yBAAOA,CAAC,CAACC,KAAT;AAAA,iBAAR,CADF,EAEE,MAFF;;AANkB;AAAA,uBAUZ,MAAK7B,KAAL,CAAW8B,sBAAX,CACJ5B,GAAG,CAACgB,GAAJ,CAAQ,UAACU,CAAD;AAAA,yBAAOA,CAAC,CAACG,EAAT;AAAA,iBAAR,CADI,EAEJ,IAFI,CAVY;;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAgBd,MAAK/B,KAAL,CAAWyB,UAAX,EAAuBvB,GAAG,CAACgB,GAAJ,CAAQ,UAACc,CAAD;AAAA,yBAAOA,CAAC,CAACzB,KAAT;AAAA,iBAAR,CAAvB,CAhBc;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA9VH;;AAAA;AAAA;AAAA;AAAA;;AAAA,UAiXnB0B,mBAjXmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAiXG,kBAAO/B,GAAP,EAAYgC,WAAZ,EAAyBC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpB,iBAACC,KAAK,CAACC,OAAN,CAAcnC,GAAd,CAAD,KAAwBA,GAAG,GAAG,CAACA,GAAD,CAA9B;AACIqB,gBAAAA,SAFgB,GAEJzB,CAAC,CAACM,SAAF,CAAY,MAAKJ,KAAL,CAAWK,cAAvB,CAFI;AAIhBiC,gBAAAA,eAJgB,GAKlBH,cAAc,IAAIA,cAAc,CAACI,MAAf,CAAsB,CAAtB,EAAyBC,WAAzB,KAAyCL,cAAc,CAACM,KAAf,CAAqB,CAArB,CALzC,EAKkE;;AAClFC,gBAAAA,eANgB,GAME,EANF;;AAOpB5C,gBAAAA,CAAC,CAACoB,GAAF,CAAMK,SAAN,EAAiB,UAACJ,IAAD,EAAOV,KAAP,EAAiB;AAChC,sBAAIA,KAAK,GAAGyB,WAAZ,EAAyB;AACvB;AACAQ,oBAAAA,eAAe,CAACvB,IAAI,CAACR,IAAN,CAAf,GAA6B,IAA7B,CAFuB,CAEY;AACpC;AACF,iBALD;;AAMA,sBAAKW,QAAL,mCAAiBa,cAAjB,EAAkCjC,GAAlC,GAA0CwC,eAA1C;AAAA;AAAA;AAAA;AAAA,yCAA6D;AAAA;AAAA;AAAA;AAAA;AAAA;AACvDjB,0BAAAA,UADuD,wBAC5Ba,eAD4B;AAAA;AAAA,iCAErD,MAAKtC,KAAL,CAAWyB,UAAX,EAAuBvB,GAAG,CAACgB,GAAJ,CAAQ,UAACc,CAAD;AAAA,mCAAOA,CAAC,CAACzB,KAAT;AAAA,2BAAR,CAAvB,CAFqD;;AAAA;AAEJ;AAEnDoC,0BAAAA,GAJuD,GAIjD,EAJiD;;AAK3D7C,0BAAAA,CAAC,CAACoB,GAAF,CAAMK,SAAN,EAAiB,UAACJ,IAAD,EAAOV,KAAP,EAAiB;AAChC,gCAAIA,KAAK,IAAIyB,WAAb,EAA0B;AACxB,kCAAII,gBAAe,GAAGnB,IAAI,CAACR,IAAL,IAAaQ,IAAI,CAACR,IAAL,CAAU4B,MAAV,CAAiB,CAAjB,EAAoBC,WAApB,KAAoCrB,IAAI,CAACR,IAAL,CAAU8B,KAAV,CAAgB,CAAhB,CAAvE,CADwB,CACmE;AAC3F;;;AAEAE,8BAAAA,GAAG,CAACxB,IAAI,CAACR,IAAN,CAAH,GAAiB,MAAKX,KAAL,mBAAsBsC,gBAAtB,EAAjB,CAJwB,CAImC;AAC5D;AACF,2BAPD;;AAQA,gCAAKhB,QAAL,CAAc;AAAEsB,4BAAAA,OAAO,oBAAOD,GAAP;AAAT,2BAAd;;AAb2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA7D;;AAboB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAjXH;;AAAA;AAAA;AAAA;AAAA;;AAAA,UA8YnBE,OA9YmB,GA8YT,UAAC3C,GAAD,EAAS;AACjB,UAAIyC,GAAG,GAAG,EAAV;AACA,UAAIG,QAAQ,GAAG5C,GAAG,CAACgB,GAAJ,CAAQ,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACZ,KAAf;AAAA,OAAR,CAAf;AACAoC,MAAAA,GAAG,CAAC,MAAD,CAAH,GAAcG,QAAd;;AACA,YAAKxB,QAAL,CAAc;AAAEsB,QAAAA,OAAO,oBAAOD,GAAP,CAAT;AAAuBI,QAAAA,KAAK,EAAE7C;AAA9B,OAAd,EAAmD,YAAM;AACvD,cAAKF,KAAL,CAAWgD,gBAAX,CAA4B9C,GAAG,CAACgB,GAAJ,CAAQ,UAACU,CAAD;AAAA,iBAAOA,CAAC,CAACC,KAAT;AAAA,SAAR,CAA5B;AACD,OAFD;AAGD,KArZkB;;AAAA,UAsZnBoB,iBAtZmB,GAsZC,UAACC,IAAD,EAAOC,eAAP,EAAwBC,cAAxB,EAAwCT,GAAxC,EAAgD;AAClEU,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDF,cAApD,EADkE,CAElE;AACA;AACA;AACA;;AACA,UAAIG,QAAQ,GAAG/D,UAAU,CAAC4D,cAAD,CAAzB;AACA,UAAII,MAAM,GAAG;AACXZ,QAAAA,OAAO,EAAED,GADE;AAEXc,QAAAA,qBAAqB,EAAE,MAAKzD,KAAL,CAAWyD,qBAAX,IAAoC;AAFhD,OAAb;AAIA,UAAIN,eAAJ,EAAqBK,MAAM,CAACE,aAAP,GAAuBH,QAAvB;AACrB,UAAI,CAACJ,eAAL,EAAsBK,MAAM,CAAChE,UAAP,GAAoB+D,QAApB;;AACtB,UAAIH,cAAc,KAAK,kBAAvB,EAA2C;AACzC,YAAIT,IAAG,GAAG;AACRC,UAAAA,OAAO,EAAEY,MAAM,CAACZ,OADR;AAERe,UAAAA,kBAAkB,EAChB,MAAK3D,KAAL,CAAW2D,kBAAX,IAAiC,CAAC,MAAK3D,KAAL,CAAW4D,MAA7C,GACI,MAAK5D,KAAL,CAAW2D,kBADf,GAEI;AALE,SAAV;AAOAH,QAAAA,MAAM,GAAGb,IAAT;AACAO,QAAAA,IAAI,qBAAJ;AACD;;AACD,UAAIE,cAAc,KAAK,kBAAvB,EAA2C;AACzCI,QAAAA,MAAM,GAAG,EAAT;AACAN,QAAAA,IAAI,oBAAJ;AACD;;AAED,YAAKlD,KAAL,CAAWkD,IAAX,EAAiBM,MAAjB;AACD,KApbkB;;AAAA,UAqbnBK,oBArbmB,GAqbI,UAAC3B,WAAD,EAAc4B,UAAd,EAA0BC,WAA1B,EAA0C;AAC/D,UAAIC,OAAO,GAAG,MAAKhE,KAAL,CAAW8D,UAAX,CAAd;AACA,UACGA,UAAU,IAAIE,OAAd,IAAyB,CAACA,OAAO,CAACC,OAAlC,IAA6C,CAACnE,CAAC,CAACc,OAAF,CAAU,MAAKZ,KAAL,CAAW8D,UAAX,CAAV,CAA/C,IACA,CAAC,MAAKI,eAAL,CAAqBhC,WAArB,CAFH,EAIE;AACA;AACFmB,MAAAA,OAAO,CAACC,GAAR,CAAYQ,UAAZ,EAAwB,YAAxB,EAR+D,CAS/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAIZ,IAAI,GAAGa,WAAW,mDAAtB;AACA,UAAIpB,GAAG,GAAG,EAAV;;AACA7C,MAAAA,CAAC,CAACoB,GAAF,CAAM,MAAKlB,KAAL,CAAWK,cAAjB,EAAiC,UAACc,IAAD,EAAOV,KAAP,EAAiB;AAChD4C,QAAAA,OAAO,CAACC,GAAR,CAAYnC,IAAZ,EAAkB,mBAAlB;;AACA,YAAIV,KAAK,GAAGyB,WAAZ,EAAyB;AACvB,cAAII,eAAe,GAAGnB,IAAI,CAACR,IAAL,IAAaQ,IAAI,CAACR,IAAL,CAAU4B,MAAV,CAAiB,CAAjB,EAAoBC,WAApB,KAAoCrB,IAAI,CAACR,IAAL,CAAU8B,KAAV,CAAgB,CAAhB,CAAvE,CADuB,CACoE;;AAC3F,cAAI0B,QAAQ,GAAG,MAAKnE,KAAL,mBAAsBsC,eAAtB,EAAf,CAFuB,CAGvB;;;AAEAK,UAAAA,GAAG,CAACxB,IAAI,CAACR,IAAN,CAAH,GAAiBwD,QAAjB,CALuB,CAKI;AAC5B;AACF,OATD;;AAUA,UAAIL,UAAU,IAAI,MAAK9D,KAAL,CAAWkD,IAAX,CAAlB,EAAoC;AAClC,cAAKD,iBAAL,CAAuBC,IAAvB,EAA6Ba,WAA7B,EAA0CD,UAA1C,EAAsDnB,GAAtD,EADkC,CAC0B;;AAC7D;AACF,KArdkB;;AAAA,UAudnByB,mBAvdmB,GAudG,UAAClE,GAAD,EAAS;AAC7B;AACA,UAAI4C,QAAQ,GAAG5C,GAAG,CAACgB,GAAJ,CAAQ,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACZ,KAAf;AAAA,OAAR,CAAf,CAF6B,CAG7B;;AACA,UAAI8D,UAAU,qBAAQ,MAAKC,KAAL,CAAW1B,OAAnB;AAA4B2B,QAAAA,gBAAgB,EAAEzB;AAA9C,QAAd;;AACA,YAAKxB,QAAL,CAAc;AAAEsB,QAAAA,OAAO,EAAEyB,UAAX;AAAuBE,QAAAA,gBAAgB,EAAErE;AAAzC,OAAd,EAA8D,YAAM;AAClE;AACA,cAAKF,KAAL,CAAW8B,sBAAX,CACE5B,GAAG,CAACgB,GAAJ,CAAQ,UAACU,CAAD;AAAA,iBAAOA,CAAC,CAACC,KAAT;AAAA,SAAR,CADF,EAEE,MAFF;;AAIA,cAAK7B,KAAL,CAAW8B,sBAAX,CACE5B,GAAG,CAACgB,GAAJ,CAAQ,UAACU,CAAD;AAAA,iBAAOA,CAAC,CAACG,EAAT;AAAA,SAAR,CADF,EAEE,IAFF;AAID,OAVD;AAWD,KAvekB;;AAAA,UAwenByC,eAxemB,GAweD,UAACtE,GAAD,EAAS;AACzB,UAAI4C,QAAQ,GAAG5C,GAAG,CAACgB,GAAJ,CAAQ,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACZ,KAAf;AAAA,OAAR,CAAf;;AACA,UAAI8D,UAAU,qBAAQ,MAAKC,KAAL,CAAW1B,OAAnB;AAA4B6B,QAAAA,gBAAgB,EAAE3B;AAA9C,QAAd;;AACA,YAAKxB,QAAL,CAAc;AAAEsB,QAAAA,OAAO,EAAEyB,UAAX;AAAuBI,QAAAA,gBAAgB,EAAEvE;AAAzC,OAAd,EAA8D,YAAM;AAClE,cAAKF,KAAL,CAAW2B,2BAAX,CAAuCzB,GAAG,CAACgB,GAAJ,CAAQ,UAACU,CAAD;AAAA,iBAAOA,CAAC,CAACC,KAAT;AAAA,SAAR,CAAvC;AACD,OAFD;AAGD,KA9ekB;;AAAA,UA+enB6C,KA/emB,GA+eX,YAAM;AACZ,YAAK1E,KAAL,CAAW2E,OAAX,IAAsB,MAAK3E,KAAL,CAAW2E,OAAX,EAAtB;;AACA,YAAKrD,QAAL,CACE;AACEyB,QAAAA,KAAK,EAAE,IADT;AAEE6B,QAAAA,SAAS,EAAE,IAFb;AAGEC,QAAAA,OAAO,EAAE,IAHX;AAIEC,QAAAA,UAAU,EAAE,IAJd;AAKEC,QAAAA,UAAU,EAAE,IALd;AAMEC,QAAAA,UAAU,EAAE,IANd;AAOEC,QAAAA,UAAU,EAAE,IAPd;AAQEC,QAAAA,UAAU,EAAE,IARd;AASE;AACAC,QAAAA,UAAU,EAAE,IAVd;AAWEC,QAAAA,UAAU,EAAE,IAXd;AAYEC,QAAAA,WAAW,EAAE,IAZf;AAaEC,QAAAA,WAAW,EAAE,IAbf;AAcEC,QAAAA,WAAW,EAAE,IAdf;AAeEC,QAAAA,MAAM,EAAE,IAfV,CAgBE;AACA;;AAjBF,OADF,EAoBE,YAAM;AACJ,YAAI,MAAKxF,KAAL,CAAWyF,IAAX,KAAoB,cAAxB,EAAwC,MAAKzF,KAAL,CAAW0F,YAAX,GADpC,CAC+D;AACpE,OAtBH;AAwBD,KAzgBkB;;AAAA,UA0gBnBC,aA1gBmB,GA0gBH,iBAA4B;AAAA,UAAzBf,SAAyB,SAAzBA,SAAyB;AAAA,UAAdC,OAAc,SAAdA,OAAc;;AAC1C,YAAKvD,QAAL,CACE;AACEsD,QAAAA,SAAS,EAATA,SADF;AAEEC,QAAAA,OAAO,EAAPA;AAFF,OADF,EAKE,YAAM;AACJ,YAAIe,KAAK,GAAG,EAAZ;;AACA,YAAIf,OAAJ,EAAa;AACX,eAAK,IAAIzD,CAAC,GAAGwD,SAAS,CAACiB,KAAV,EAAb,EAAgCzE,CAAC,IAAIyD,OAArC,EAA8CzD,CAAC,GAAGA,CAAC,CAAC0E,GAAF,CAAM,CAAN,EAAS,GAAT,CAAlD,EAAiE;AAC/DF,YAAAA,KAAK,CAACG,IAAN,CAAW3E,CAAC,CAAC4E,IAAF,EAAX;AACD;AACF;;AAED,cAAKhG,KAAL,CAAWiG,YAAX,CAAwB;AACtBrB,UAAAA,SAAS,EAAEA,SAAS,IAAIA,SAAS,CAACsB,MAAV,CAAiB,YAAjB,CADF;AAEtBrB,UAAAA,OAAO,EAAEA,OAAO,IAAIA,OAAO,CAACqB,MAAR,CAAe,YAAf,CAFE;AAGtBN,UAAAA,KAAK,EAALA;AAHsB,SAAxB;AAKD,OAlBH;AAoBD,KA/hBkB;;AAAA,UAiiBnB1B,eAjiBmB,GAiiBD,UAAChC,WAAD,EAAciE,SAAd,EAA4B;AAAA,UACtC5E,SADsC,GACxB,MAAK+C,KADmB,CACtC/C,SADsC;;AAE5C,WAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGc,WAApB,EAAiCd,CAAC,EAAlC,EAAsC;AACpC,YAAIT,IAAI,GAAGY,SAAS,CAACH,CAAD,CAAT,IAAgBG,SAAS,CAACH,CAAD,CAAT,CAAaT,IAAxC;AAEA,YAAI2B,eAAe,GAAG3B,IAAI,IAAIA,IAAI,CAAC4B,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+B7B,IAAI,CAAC8B,KAAL,CAAW,CAAX,CAA7D,CAHoC,CAGwC;;AAE5E,YACElB,SAAS,CAACH,CAAD,CAAT,IACAG,SAAS,CAACH,CAAD,CAAT,CAAagF,WADb,IAEAtG,CAAC,CAACc,OAAF,CAAU,MAAKZ,KAAL,mBAAsBsC,eAAtB,EAAV,CAHF,EAIE;AACA,iBAAO,KAAP;AACD;AACF;;AACD,UAAI6D,SAAS,KAAKrG,CAAC,CAACc,OAAF,CAAU,MAAK0D,KAAL,CAAWM,SAArB,KAAmC9E,CAAC,CAACc,OAAF,CAAU,MAAK0D,KAAL,CAAWO,OAArB,CAAxC,CAAb,EACE,OAAO,KAAP;AAEF,aAAO,IAAP;AACD,KApjBkB;;AAAA,UAqjBnBwB,eArjBmB,GAqjBD,YAAM;AACtB,UAAI,CAAC,MAAKnC,eAAL,CAAqB,MAAKI,KAAL,CAAW/C,SAAX,CAAqB+E,MAA1C,EAAkD,MAAKtG,KAAL,CAAWmG,SAA7D,CAAL,EAA8E;AAC5EtG,QAAAA,KAAK,CAAC0G,KAAN,oCAA+C;AAC7CC,UAAAA,SAAS,EAAE,KADkC;AAE7CC,UAAAA,eAAe,EAAE;AAF4B,SAA/C;AAIA;AACD;;AACD,YAAKzG,KAAL,CAAW0G,QAAX,CAAoB;AAClB9D,QAAAA,OAAO,EAAE,MAAK0B,KAAL,CAAW1B,OADF;AAElBgC,QAAAA,SAAS,EAAE,MAAKN,KAAL,CAAWM,SAFJ;AAGlBC,QAAAA,OAAO,EAAE,MAAKP,KAAL,CAAWO,OAHF;AAIlBN,QAAAA,gBAAgB,EAAE,MAAKD,KAAL,CAAWC;AAJX,OAApB;AAMD,KAnkBkB;;AAEjB,UAAKD,KAAL,GAAa;AACX1B,MAAAA,OAAO,EAAE,EADE;AAEXgC,MAAAA,SAAS,EAAE,IAFA;AAGXC,MAAAA,OAAO,EAAE,IAHE;AAIXtD,MAAAA,SAAS,EAAE,EAJA;AAKXuD,MAAAA,UAAU,EACR9E,KAAK,CAAC2G,aAAN,IAAuB3G,KAAK,CAAC4G,kBAA7B,GACI5G,KAAK,CAAC4G,kBAAN,CAAyB1F,GAAzB,CAA6B,UAACc,CAAD,EAAO;AAClC,eAAO;AAAEH,UAAAA,KAAK,EAAEG,CAAT;AAAYzB,UAAAA,KAAK,EAAEyB;AAAnB,SAAP;AACD,OAFD,CADJ,GAII,IAVK;AAWX+C,MAAAA,UAAU,EACR/E,KAAK,CAAC2G,aAAN,IAAuB3G,KAAK,CAAC6G,kBAA7B,GACI7G,KAAK,CAAC6G,kBAAN,CAAyB3F,GAAzB,CAA6B,UAACc,CAAD,EAAO;AAClC,eAAO;AAAEH,UAAAA,KAAK,EAAEG,CAAT;AAAYzB,UAAAA,KAAK,EAAEyB;AAAnB,SAAP;AACD,OAFD,CADJ,GAII,IAhBK;AAiBXgD,MAAAA,UAAU,EACRhF,KAAK,CAAC2G,aAAN,IAAuB3G,KAAK,CAAC8G,kBAA7B,GACI9G,KAAK,CAAC8G,kBAAN,CAAyB5F,GAAzB,CAA6B,UAACc,CAAD,EAAO;AAClC,eAAO;AAAEH,UAAAA,KAAK,EAAEG,CAAT;AAAYzB,UAAAA,KAAK,EAAEyB;AAAnB,SAAP;AACD,OAFD,CADJ,GAII,IAtBK;AAuBXiD,MAAAA,UAAU,EACRjF,KAAK,CAAC2G,aAAN,IAAuB3G,KAAK,CAAC+G,kBAA7B,GACI/G,KAAK,CAAC+G,kBAAN,CAAyB7F,GAAzB,CAA6B,UAACc,CAAD,EAAO;AAClC,eAAO;AAAEH,UAAAA,KAAK,EAAEG,CAAT;AAAYzB,UAAAA,KAAK,EAAEyB;AAAnB,SAAP;AACD,OAFD,CADJ,GAII,IA5BK;AA6BXkD,MAAAA,UAAU,EACRlF,KAAK,CAAC2G,aAAN,IAAuB3G,KAAK,CAACgH,kBAA7B,GACIhH,KAAK,CAACgH,kBAAN,CAAyB9F,GAAzB,CAA6B,UAACc,CAAD,EAAO;AAClC,eAAO;AAAEH,UAAAA,KAAK,EAAEG,CAAT;AAAYzB,UAAAA,KAAK,EAAEyB;AAAnB,SAAP;AACD,OAFD,CADJ,GAII,IAlCK;AAmCX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAuC,MAAAA,gBAAgB,EACdvE,KAAK,CAAC2G,aAAN,IAAuB3G,KAAK,CAACiH,wBAA7B,GACIjH,KAAK,CAACiH,wBAAN,CAA+B/F,GAA/B,CAAmC,UAACc,CAAD,EAAO;AACxC,eAAO;AAAEH,UAAAA,KAAK,EAAEG,CAAT;AAAYzB,UAAAA,KAAK,EAAEyB;AAAnB,SAAP;AACD,OAFD,CADJ,GAII,IA9DK;AA+DXwD,MAAAA,MAAM,EACJxF,KAAK,CAAC2G,aAAN,IAAuB3G,KAAK,CAACkH,cAA7B,GACIlH,KAAK,CAACkH,cAAN,CAAqBhG,GAArB,CAAyB,UAACc,CAAD,EAAO;AAC9B,eAAO;AAAEH,UAAAA,KAAK,EAAEG,CAAT;AAAYzB,UAAAA,KAAK,EAAEyB;AAAnB,SAAP;AACD,OAFD,CADJ,GAII,IApEK;AAqEXmD,MAAAA,UAAU,EACRnF,KAAK,CAAC2G,aAAN,IAAuB3G,KAAK,CAACmH,kBAA7B,GACInH,KAAK,CAACmH,kBAAN,CAAyBjG,GAAzB,CAA6B,UAACc,CAAD,EAAO;AAClC,eAAO;AAAEH,UAAAA,KAAK,EAAEG,CAAT;AAAYzB,UAAAA,KAAK,EAAEyB;AAAnB,SAAP;AACD,OAFD,CADJ,GAII,IA1EK;AA2EXoD,MAAAA,UAAU,EACRpF,KAAK,CAAC2G,aAAN,IAAuB3G,KAAK,CAACoH,mBAA7B,GACIpH,KAAK,CAACoH,mBAAN,CAA0BlG,GAA1B,CAA8B,UAACc,CAAD,EAAO;AACnC,eAAO;AAAEH,UAAAA,KAAK,EAAEG,CAAT;AAAYzB,UAAAA,KAAK,EAAEyB;AAAnB,SAAP;AACD,OAFD,CADJ,GAII,IAhFK;AAiFXqD,MAAAA,WAAW,EACTrF,KAAK,CAAC2G,aAAN,IAAuB3G,KAAK,CAACqH,kBAA7B,GACIrH,KAAK,CAACqH,kBAAN,CAAyBnG,GAAzB,CAA6B,UAACc,CAAD,EAAO;AAClC,eAAO;AAAEH,UAAAA,KAAK,EAAEG,CAAT;AAAYzB,UAAAA,KAAK,EAAEyB;AAAnB,SAAP;AACD,OAFD,CADJ,GAII,IAtFK;AAuFXsD,MAAAA,WAAW,EACTtF,KAAK,CAAC2G,aAAN,IAAuB3G,KAAK,CAACsH,mBAA7B,IAAoDtH,KAAK,CAACuH,QAAN,CAAejD,KAAnE,GACItE,KAAK,CAACuH,QAAN,CAAejD,KAAf,CAAqBkD,MAArB,CAA4BtG,GAA5B,CAAgC,UAACc,CAAD,EAAO;AACrC,eAAO;AAAEH,UAAAA,KAAK,EAAEG,CAAT;AAAYzB,UAAAA,KAAK,EAAEyB;AAAnB,SAAP;AACD,OAFD,CADJ,GAII,IA5FK;AA6FXuD,MAAAA,WAAW,EACTvF,KAAK,CAAC2G,aAAN,IAAuB3G,KAAK,CAACyH,mBAA7B,GACIzH,KAAK,CAACyH,mBAAN,CAA0BvG,GAA1B,CAA8B,UAACc,CAAD,EAAO;AACnC,eAAO;AAAEH,UAAAA,KAAK,EAAEG,CAAT;AAAYzB,UAAAA,KAAK,EAAEyB;AAAnB,SAAP;AACD,OAFD,CADJ,GAII,IAlGK;AAmGXyC,MAAAA,gBAAgB,EACdzE,KAAK,CAAC2G,aAAN,IAAuB3G,KAAK,CAAC0H,wBAA7B,GACI1H,KAAK,CAAC0H,wBAAN,CAA+BxG,GAA/B,CAAmC,UAACc,CAAD,EAAO;AACxC,eAAO;AAAEH,UAAAA,KAAK,EAAEG,CAAT;AAAYzB,UAAAA,KAAK,EAAEyB;AAAnB,SAAP;AACD,OAFD,CADJ,GAII;AAxGK,KAAb,CAFiB,CA4GjB;;AACAhC,IAAAA,KAAK,CAAC2H,sBAAN,CAA6B;AAC3B/E,MAAAA,OAAO,EAAE,EADkB;AAE3BpD,MAAAA,UAAU,EAAE,MAFe;AAG3BiE,MAAAA,qBAAqB,EAAE,MAAKzD,KAAL,CAAWyD,qBAAX,IAAoC;AAHhC,KAA7B;AAKA,KAACzD,KAAK,CAAC4D,MAAP,IACE5D,KAAK,CAACiC,mBAAN,CAA0B;AACxBW,MAAAA,OAAO,EAAE,EADe;AAExBc,MAAAA,aAAa,EAAE,YAFS;AAGxBD,MAAAA,qBAAqB,EAAE,MAAKzD,KAAL,CAAWyD,qBAAX,IAAoC;AAHnC,KAA1B,CADF;;AAOA,QAAIzD,KAAK,CAAC2G,aAAN,IAAuB3G,KAAK,CAACuH,QAAN,CAAejD,KAA1C,EAAiD;AAC/CtE,MAAAA,KAAK,CAAC4H,sBAAN,CAA6B5H,KAAK,CAACuH,QAAN,CAAejD,KAAf,CAAqBkD,MAAlD,EAA0D,IAA1D;AACAxH,MAAAA,KAAK,CAAC6H,iBAAN,CAAwB,MAAKvD,KAAL,CAAWkB,MAAX,CAAkBtE,GAAlB,CAAsB,UAACc,CAAD;AAAA,eAAOA,CAAC,CAACzB,KAAT;AAAA,OAAtB,CAAxB;AACD;;AACDP,IAAAA,KAAK,CAAC8H,eAAN,GAAwBC,IAAxB,CAA6B,UAACC,GAAD,EAAS;AACpC,UACE,MAAKhI,KAAL,CAAW4D,MAAX,IACA,MAAK5D,KAAL,CAAWiI,eAAX,CAA2B,CAA3B,CADA,IAEA,CAACnI,CAAC,CAACc,OAAF,CAAU,MAAKZ,KAAL,CAAWiI,eAAX,CAA2B,CAA3B,KAAiC,MAAKjI,KAAL,CAAWiI,eAAX,CAA2B,CAA3B,EAA8BC,WAAzE,CAHH,EAIE;AACA,YAAIzD,gBAAgB,GAClB,MAAKzE,KAAL,CAAWiI,eAAX,CAA2B,CAA3B,KACA,MAAKjI,KAAL,CAAWiI,eAAX,CAA2B,CAA3B,EAA8BC,WAD9B,IAEA,MAAKlI,KAAL,CAAWiI,eAAX,CAA2B,CAA3B,EAA8BC,WAA9B,CAA0CtF,OAF1C,IAGA,MAAK5C,KAAL,CAAWiI,eAAX,CAA2B,CAA3B,EAA8BC,WAA9B,CAA0CtF,OAA1C,CAAkD6B,gBAJpD;AAKA,YAAI0D,mBAAmB,GAAG,EAA1B;;AACArI,QAAAA,CAAC,CAACoB,GAAF,CAAM8G,GAAN,EAAW,UAAC7G,IAAD,EAAU;AACnB,cAAIsD,gBAAgB,IAAIA,gBAAgB,CAAC2D,QAAjB,CAA0BjH,IAAI,CAACU,KAA/B,CAAxB,EAA+D;AAC7DsG,YAAAA,mBAAmB,CAACpC,IAApB,CAAyB5E,IAAzB;AACD;AACF,SAJD;;AAKA,cAAKqD,eAAL,CAAqB2D,mBAArB;AACD;AACF,KAnBD,EA7HiB,CAkJjB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACAnI,IAAAA,KAAK,CAACqI,gBAAN,CAAuB,KAAvB;AA3JiB;AA4JlB;;;;wCACmB;AAClB,UAAI,KAAKrI,KAAL,CAAW2G,aAAX,IAA4B,CAAC7G,CAAC,CAACc,OAAF,CAAU,KAAKZ,KAAL,CAAW4G,kBAArB,CAAjC,EAA2E;AACzE,YAAI1G,GAAG,GAAG,CACR;AACEK,UAAAA,KAAK,EAAE,KAAKP,KAAL,CAAW4G,kBAAX,CAA8B,CAA9B,CADT;AAEE/E,UAAAA,KAAK,EAAE,KAAK7B,KAAL,CAAW4G,kBAAX,CAA8B,CAA9B;AAFT,SADQ,CAAV;AAMA,aAAK3G,uBAAL,CAA6BC,GAA7B;AACA;AACD;;AACD,WAAKoB,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE,KAAKvB,KAAL,CAAWK;AAAxB,OAAd,EAXkB,CAYlB;AACD;;;uCACkBiI,S,EAAWC,S,EAAW;AACvC,UAAI,KAAKvI,KAAL,CAAWwI,WAAf,EAA4B;AAC1B,aAAKxI,KAAL,CAAWyI,kBAAX,CAA8B,KAA9B;AACA,aAAK/D,KAAL,GAF0B,CAEZ;AACf;;AACD,UACE,KAAK1E,KAAL,CAAW0I,gBAAX,IACA5I,CAAC,CAACc,OAAF,CAAU,KAAK0D,KAAL,CAAWQ,UAArB,CADA,IAEA,CAAChF,CAAC,CAACc,OAAF,CAAU,KAAKZ,KAAL,CAAW2I,YAArB,CAFD,IAGA,CAAC7I,CAAC,CAACc,OAAF,CAAU,KAAKZ,KAAL,CAAW2I,YAAX,CAAwB/F,OAAlC,CAJH,EAKE;AACA,YAAIA,OAAO,GAAG,KAAK5C,KAAL,CAAW2I,YAAX,CAAwB/F,OAAtC;AAEA,aAAK5C,KAAL,CAAW4I,aAAX,CAAyBhG,OAAzB,EAAkC,IAAlC,EAHA,CAGyC;;AAEzC,aAAK3C,uBAAL,CAA6B,CAC3B;AAAEM,UAAAA,KAAK,EAAEqC,OAAO,CAACkC,UAAR,CAAmB,CAAnB,CAAT;AAAgCjD,UAAAA,KAAK,EAAEe,OAAO,CAACkC,UAAR,CAAmB,CAAnB;AAAvC,SAD2B,CAA7B;AAGA,aAAKxD,QAAL,CAAc;AACZ;AACAkE,UAAAA,MAAM,EAAE1F,CAAC,CAACoB,GAAF,CAAM0B,OAAO,CAAC4C,MAAd,EAAsB,UAACrE,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAAtB,CAFI;AAGZ2D,UAAAA,UAAU,EAAEhF,CAAC,CAACoB,GAAF,CAAM0B,OAAO,CAACkC,UAAd,EAA0B,UAAC3D,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAA1B,CAHA;AAIZ4D,UAAAA,UAAU,EAAEjF,CAAC,CAACoB,GAAF,CAAM0B,OAAO,CAACmC,UAAd,EAA0B,UAAC5D,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAA1B,CAJA;AAKZ6D,UAAAA,UAAU,EAAElF,CAAC,CAACoB,GAAF,CAAM0B,OAAO,CAACoC,UAAd,EAA0B,UAAC7D,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAA1B,CALA;AAMZ8D,UAAAA,UAAU,EAAEnF,CAAC,CAACoB,GAAF,CAAM0B,OAAO,CAACqC,UAAd,EAA0B,UAAC9D,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAA1B,CANA;AAOZ+D,UAAAA,UAAU,EAAEpF,CAAC,CAACoB,GAAF,CAAM0B,OAAO,CAACsC,UAAd,EAA0B,UAAC/D,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAA1B,CAPA;AAQZgE,UAAAA,UAAU,EAAErF,CAAC,CAACoB,GAAF,CAAM0B,OAAO,CAACuC,UAAd,EAA0B,UAAChE,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAA1B,CARA;AASZiE,UAAAA,UAAU,EAAEtF,CAAC,CAACoB,GAAF,CAAM0B,OAAO,CAACwC,UAAd,EAA0B,UAACjE,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAA1B,CATA;AAUZkE,UAAAA,WAAW,EAAEvF,CAAC,CAACoB,GAAF,CAAM0B,OAAO,CAACyC,WAAd,EAA2B,UAAClE,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAA3B,CAVD;AAWZmE,UAAAA,WAAW,EAAExF,CAAC,CAACoB,GAAF,CAAM0B,OAAO,CAAC0C,WAAd,EAA2B,UAACnE,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAA3B,CAXD;AAYZoE,UAAAA,WAAW,EAAEzF,CAAC,CAACoB,GAAF,CAAM0B,OAAO,CAAC2C,WAAd,EAA2B,UAACpE,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAA3B,CAZD,CAaZ;;AAbY,SAAd;;AAeA,YAAI,CAACrB,CAAC,CAACc,OAAF,CAAU,KAAKZ,KAAL,CAAWyE,gBAArB,CAAL,EAA6C;AAC3C,cAAI0D,mBAAmB,GAAG,EAA1B;;AACArI,UAAAA,CAAC,CAACoB,GAAF,CAAM,KAAKlB,KAAL,CAAWyE,gBAAjB,EAAmC,UAACtD,IAAD,EAAU;AAC3C,gBAAIyB,OAAO,CAAC6B,gBAAR,IAA4B7B,OAAO,CAAC6B,gBAAR,CAAyB2D,QAAzB,CAAkCjH,IAAI,CAACU,KAAvC,CAAhC,EAA+E;AAC7EsG,cAAAA,mBAAmB,CAACpC,IAApB,CAAyB5E,IAAzB;AACD;AACF,WAJD;;AAKA,eAAKG,QAAL,CAAc;AACZmD,YAAAA,gBAAgB,EAAE0D;AADN,WAAd;AAGA,eAAK3D,eAAL,CAAqB2D,mBAArB;AACD;;AACD,YAAI,CAACrI,CAAC,CAACc,OAAF,CAAU,KAAKZ,KAAL,CAAWuE,gBAArB,CAAL,EAA6C;AAC3C,cAAIsE,mBAAmB,GAAG,EAA1B;;AACA/I,UAAAA,CAAC,CAACoB,GAAF,CAAM,KAAKlB,KAAL,CAAWuE,gBAAjB,EAAmC,UAACpD,IAAD,EAAU;AAC3C,gBACEyB,OAAO,CAAC2B,gBAAR,IACA,OAAO3B,OAAO,CAAC2B,gBAAR,CAAyB,CAAzB,CAAP,KAAuC,QADvC,IAEA3B,OAAO,CAAC2B,gBAAR,CAAyB6D,QAAzB,CAAkCjH,IAAI,CAACU,KAAvC,CAHF,EAIE;AACAgH,cAAAA,mBAAmB,CAAC9C,IAApB,CAAyB5E,IAAzB;AACA;AACD;;AACD,gBAAIyB,OAAO,CAAC2B,gBAAR,IAA4B3B,OAAO,CAAC2B,gBAAR,CAAyB6D,QAAzB,CAAkCjH,IAAI,CAACY,EAAvC,CAAhC,EAA4E;AAC1E8G,cAAAA,mBAAmB,CAAC9C,IAApB,CAAyB5E,IAAzB;AACD;AACF,WAZD;;AAaA,eAAKG,QAAL,CAAc;AACZiD,YAAAA,gBAAgB,EAAEsE;AADN,WAAd;AAGA,eAAKzE,mBAAL,CAAyByE,mBAAzB;AACD;AACF;;AACD,UACE,KAAK7I,KAAL,CAAW4D,MAAX,IACA9D,CAAC,CAACc,OAAF,CAAU,KAAK0D,KAAL,CAAWQ,UAArB,CADA,IAEA,KAAK9E,KAAL,CAAWiI,eAAX,CAA2B,CAA3B,CAFA,IAGA,CAACnI,CAAC,CAACc,OAAF,CAAU,KAAKZ,KAAL,CAAWiI,eAAX,CAA2B,CAA3B,KAAiC,KAAKjI,KAAL,CAAWiI,eAAX,CAA2B,CAA3B,EAA8BC,WAAzE,CAJH,EAKE;AAAA,oCAeI,KAAKlI,KAAL,CAAWiI,eAAX,CAA2B,CAA3B,EAA8BC,WAA9B,CAA0CtF,OAf9C;AAAA,YAEEkC,UAFF,yBAEEA,UAFF;AAAA,YAGEC,UAHF,yBAGEA,UAHF;AAAA,YAIEC,UAJF,yBAIEA,UAJF;AAAA,YAKEC,UALF,yBAKEA,UALF;AAAA,YAMEC,UANF,yBAMEA,UANF;AAAA,YAOEM,MAPF,yBAOEA,MAPF;AAAA,YAQEL,UARF,yBAQEA,UARF;AAAA,YASEC,UATF,yBASEA,UATF;AAAA,YAUEC,WAVF,yBAUEA,WAVF;AAAA,YAWEC,WAXF,yBAWEA,WAXF;AAAA,YAYEC,WAZF,yBAYEA,WAZF;AAiBA,YAAIuD,eAAe,GACjB,KAAK9I,KAAL,CAAWiI,eAAX,CAA2B,CAA3B,KACA,KAAKjI,KAAL,CAAWiI,eAAX,CAA2B,CAA3B,EAA8BC,WAD9B,IAEA,KAAKlI,KAAL,CAAWiI,eAAX,CAA2B,CAA3B,EAA8BC,WAA9B,CAA0CY,eAH5C,CAjBA,CAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,aAAK9I,KAAL,CAAW4I,aAAX,CAAyB,KAAK5I,KAAL,CAAWiI,eAAX,CAA2B,CAA3B,EAA8BC,WAA9B,CAA0CtF,OAAnE;AACA,aAAKtB,QAAL,CAAc;AACZwD,UAAAA,UAAU,EAAEhF,CAAC,CAACoB,GAAF,CAAM4D,UAAN,EAAkB,UAAC3D,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAAlB,CADA;AAEZ4D,UAAAA,UAAU,EAAEjF,CAAC,CAACoB,GAAF,CAAM6D,UAAN,EAAkB,UAAC5D,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAAlB,CAFA;AAGZ6D,UAAAA,UAAU,EAAElF,CAAC,CAACoB,GAAF,CAAM8D,UAAN,EAAkB,UAAC7D,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAAlB,CAHA;AAIZ8D,UAAAA,UAAU,EAAEnF,CAAC,CAACoB,GAAF,CAAM+D,UAAN,EAAkB,UAAC9D,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAAlB,CAJA;AAKZ+D,UAAAA,UAAU,EAAEpF,CAAC,CAACoB,GAAF,CAAMgE,UAAN,EAAkB,UAAC/D,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAAlB,CALA;AAMZqE,UAAAA,MAAM,EAAE1F,CAAC,CAACoB,GAAF,CAAMsE,MAAN,EAAc,UAACrE,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAAd,CANI;AAOZgE,UAAAA,UAAU,EAAErF,CAAC,CAACoB,GAAF,CAAMiE,UAAN,EAAkB,UAAChE,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAAlB,CAPA;AAQZiE,UAAAA,UAAU,EAAEtF,CAAC,CAACoB,GAAF,CAAMkE,UAAN,EAAkB,UAACjE,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAAlB,CARA;AASZkE,UAAAA,WAAW,EAAEvF,CAAC,CAACoB,GAAF,CAAMmE,WAAN,EAAmB,UAAClE,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAAnB,CATD;AAUZmE,UAAAA,WAAW,EAAExF,CAAC,CAACoB,GAAF,CAAMoE,WAAN,EAAmB,UAACnE,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAAnB,CAVD;AAWZoE,UAAAA,WAAW,EAAEzF,CAAC,CAACoB,GAAF,CAAMqE,WAAN,EAAmB,UAACpE,IAAD;AAAA,mBAAW;AAAEU,cAAAA,KAAK,EAAEV,IAAT;AAAeZ,cAAAA,KAAK,EAAEY;AAAtB,aAAX;AAAA,WAAnB,CAXD,CAYZ;AACA;;AAbY,SAAd;AAeD,OA/HsC,CAgIvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;;;6BAiQQ;AAAA;;AACPkC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtD,KAAL,CAAWwF,MAAvB,EAA+B,QAA/B;AACA,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EACP,KAAKxF,KAAL,CAAW4D,MAAX,GACI,4CADJ,GAEI,uBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMG,KAAKU,KAAL,CAAW/C,SAAX,IACC,KAAK+C,KAAL,CAAW/C,SAAX,CAAqBL,GAArB,CACE,UAAC6H,MAAD,EAAS3H,CAAT;AAAA,eACE9B,MAAM,CAACyJ,MAAM,CAACpI,IAAR,CAAN,IACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,GAAG,EAAEoI,MAAM,CAACpI,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,UAAA,SAAS,EAAC,WAAjB;AAA6B,UAAA,KAAK,EAAE;AAAEqI,YAAAA,UAAU,EAAE;AAAd,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG1J,MAAM,CAACyJ,MAAM,CAACpI,IAAR,CADT,EAEGoI,MAAM,CAAC3C,WAAP,GAAqB;AAAM,UAAA,KAAK,EAAE;AAAE6C,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAArB,GAAiE,IAFpE,CADF,EAKE,oBAAC,MAAD;AACE,UAAA,IAAI,EAAEF,MAAM,CAACpI,IADf;AAEE,UAAA,OAAO,EAAE,MAAI,CAACX,KAAL,CAAW+I,MAAM,CAACpI,IAAlB,CAFX;AAGE,UAAA,OAAO,EAAE,iBAACqB,CAAD;AAAA,mBAAO,MAAI,CAAC6B,oBAAL,CAA0BzC,CAA1B,EAA6B2H,MAAM,CAACpI,IAApC,EAA0CoI,MAAM,CAAChF,WAAjD,CAAP;AAAA,WAHX;AAIE,UAAA,QAAQ,EAAE,kBAACmF,MAAD;AAAA,mBACR,MAAI,CAACjH,mBAAL,CACEiH,MADF,EAEE9H,CAFF,EAGE2H,MAAM,CAACpI,IAHT,EAIEoI,MAAM,CAAChF,WAJT,EAKE,MAAI,CAACO,KAAL,CAAW/C,SAAX,CAAqBH,CAAC,GAAG,CAAzB,KAA+B,MAAI,CAACkD,KAAL,CAAW/C,SAAX,CAAqBH,CAAC,GAAG,CAAzB,EAA4BT,IAL7D,EAME,MAAI,CAAC2D,KAAL,CAAW/C,SAAX,CAAqBH,CAAC,GAAG,CAAzB,KAA+B,MAAI,CAACkD,KAAL,CAAW/C,SAAX,CAAqBH,CAAC,GAAG,CAAzB,EAA4B2C,WAN7D,CADQ;AAAA,WAJZ;AAcE,UAAA,KAAK,EAAE,MAAI,CAACO,KAAL,CAAWyE,MAAM,CAACpI,IAAlB,CAdT;AAeE,UAAA,OAAO,EAAEoI,MAAM,CAACI,UAflB;AAgBE,UAAA,UAAU,EACP/H,CAAC,KAAK,CAAN,IAAW,MAAI,CAACpB,KAAL,CAAWoJ,cAAvB,IACChI,CAAC,KAAK,CAAN,IAAW,MAAI,CAACpB,KAAL,CAAWqJ,mBADvB,IAECjI,CAAC,KAAK,CAAN,IAAW,MAAI,CAACpB,KAAL,CAAWqJ,mBAFvB,IAGCjI,CAAC,KAAK,CAAN,IAAW,MAAI,CAACpB,KAAL,CAAWqJ,mBAHvB,GAII,IAJJ,GAKI,KAtBR,CAwBE;AAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,CAFJ;AAAA,OADF,CAPJ,EA+EG,KAAKrJ,KAAL,CAAWmG,SAAX,IACC;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACa;AAAM,QAAA,KAAK,EAAE;AAAE8C,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADb,CADF,EAIE,oBAAC,eAAD;AACE,QAAA,SAAS,EAAE,KAAK3E,KAAL,CAAWM,SADxB;AAEE,QAAA,WAAW,EAAC,cAFd;AAGE,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO,OAHtB;AAIE,QAAA,SAAS,EAAC,YAJZ;AAKE,QAAA,aAAa,EAAE,KAAKc,aALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CAhFJ,EA6FG,CAAC,KAAK3F,KAAL,CAAWsJ,gBAAZ,IACC;AACE,QAAA,SAAS,EACP,CAAC,KAAKtJ,KAAL,CAAWmG,SAAZ,IAAyB,CAAC,KAAKnG,KAAL,CAAWuJ,gBAArC,GACI,oBADJ,CACyB;AADzB,UAEI,eAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME;AACE,QAAA,QAAQ,EAAE,KAAKvJ,KAAL,CAAW4D,MADvB;AAEE,QAAA,OAAO,EAAE,KAAKyC,eAFhB;AAGE,QAAA,SAAS,EACP,CAAC,KAAKrG,KAAL,CAAWmG,SAAZ,IAAyB,CAAC,KAAKnG,KAAL,CAAWuJ,gBAArC,GACI,0CADJ,GAEI,qCANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,gBARF,CANF,EAkBE;AACE,QAAA,QAAQ,EAAE,KAAKvJ,KAAL,CAAW4D,MAAX,IAAqB,KAAK5D,KAAL,CAAWoJ,cAD5C;AAEE,QAAA,SAAS,EACP,CAAC,KAAKpJ,KAAL,CAAWmG,SAAZ,IAAyB,CAAC,KAAKnG,KAAL,CAAWuJ,gBAArC,GACI,4DADJ,GAEI,+DALR;AAOE,QAAA,OAAO,EAAE,KAAK7E,KAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eARF,CAlBF,CA9FJ,CADF,CADF;AAmID;;;;EA1sBmBtF,S;;AA6sBtB,IAAMoK,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACL1G,IAAAA,KAAK,EAAE0G,KAAK,CAACC,cAAN,CAAqB3G,KADvB;AAEL4G,IAAAA,aAAa,EAAEF,KAAK,CAACC,cAAN,CAAqBC,aAF/B;AAGL7E,IAAAA,UAAU,EAAE2E,KAAK,CAACC,cAAN,CAAqB5E,UAH5B;AAIL8B,IAAAA,kBAAkB,EAAE6C,KAAK,CAACC,cAAN,CAAqB9C,kBAJpC;AAKL7B,IAAAA,UAAU,EAAE0E,KAAK,CAACC,cAAN,CAAqB3E,UAL5B;AAML8B,IAAAA,kBAAkB,EAAE4C,KAAK,CAACC,cAAN,CAAqB7C,kBANpC;AAOL7B,IAAAA,UAAU,EAAEyE,KAAK,CAACC,cAAN,CAAqB1E,UAP5B;AAQL8B,IAAAA,kBAAkB,EAAE2C,KAAK,CAACC,cAAN,CAAqB5C,kBARpC;AASL7B,IAAAA,UAAU,EAAEwE,KAAK,CAACC,cAAN,CAAqBzE,UAT5B;AAUL8B,IAAAA,kBAAkB,EAAE0C,KAAK,CAACC,cAAN,CAAqB3C,kBAVpC;AAWL7B,IAAAA,UAAU,EAAEuE,KAAK,CAACC,cAAN,CAAqBxE,UAX5B;AAYL8B,IAAAA,kBAAkB,EAAEyC,KAAK,CAACC,cAAN,CAAqB1C,kBAZpC;AAcLxB,IAAAA,MAAM,EAAEiE,KAAK,CAACC,cAAN,CAAqBlE,MAdxB;AAeL0B,IAAAA,cAAc,EAAEuC,KAAK,CAACC,cAAN,CAAqBxC,cAfhC;AAgBL;AACA;AACA;AACA;AACAtC,IAAAA,SAAS,EAAE6E,KAAK,CAACC,cAAN,CAAqB9E,SApB3B;AAqBLC,IAAAA,OAAO,EAAE4E,KAAK,CAACC,cAAN,CAAqB7E,OArBzB;AAsBLe,IAAAA,KAAK,EAAE6D,KAAK,CAACC,cAAN,CAAqB9D,KAtBvB;AAuBLe,IAAAA,aAAa,EAAE8C,KAAK,CAACC,cAAN,CAAqB/C,aAvB/B;AAwBLsB,IAAAA,eAAe,EAAEwB,KAAK,CAACG,oBAAN,CAA2B3B,eAxBvC;AAyBL7C,IAAAA,UAAU,EAAEqE,KAAK,CAACC,cAAN,CAAqBtE,UAzB5B;AA0BLiC,IAAAA,kBAAkB,EAAEoC,KAAK,CAACC,cAAN,CAAqBrC,kBA1BpC;AA2BLF,IAAAA,kBAAkB,EAAEsC,KAAK,CAACC,cAAN,CAAqBvC,kBA3BpC;AA4BLhC,IAAAA,UAAU,EAAEsE,KAAK,CAACC,cAAN,CAAqBvE,UA5B5B;AA6BLE,IAAAA,WAAW,EAAEoE,KAAK,CAACC,cAAN,CAAqBrE,WA7B7B;AA8BL+B,IAAAA,mBAAmB,EAAEqC,KAAK,CAACC,cAAN,CAAqBtC,mBA9BrC;AA+BLE,IAAAA,mBAAmB,EAAEmC,KAAK,CAACC,cAAN,CAAqBpC,mBA/BrC;AAgCLhC,IAAAA,WAAW,EAAEmE,KAAK,CAACC,cAAN,CAAqBpE,WAhC7B;AAiCLmC,IAAAA,mBAAmB,EAAEgC,KAAK,CAACC,cAAN,CAAqBjC,mBAjCrC;AAkCLlC,IAAAA,WAAW,EAAEkE,KAAK,CAACC,cAAN,CAAqBnE,WAlC7B;AAoCLoD,IAAAA,YAAY,EAAEc,KAAK,CAACG,oBAAN,CAA2BjB;AApCpC,GAAP;AAsCD,CAvCD;;AAwCA,IAAMkB,kBAAkB,GAAG;AACzB5H,EAAAA,mBAAmB,EAAErC,aAAa,CAACqC,mBADV;AAEzB0F,EAAAA,sBAAsB,EAAE/H,aAAa,CAAC+H,sBAFb;AAGzBmC,EAAAA,SAAS,EAAElK,aAAa,CAACkK,SAHA;AAIzBC,EAAAA,eAAe,EAAEnK,aAAa,CAACmK,eAJN;AAKzBC,EAAAA,UAAU,EAAEpK,aAAa,CAACoK,UALD;AAMzBC,EAAAA,UAAU,EAAErK,aAAa,CAACoK,UAND;AAOzBlC,EAAAA,eAAe,EAAElI,aAAa,CAACkI,eAPN;AAQzB9E,EAAAA,gBAAgB,EAAEpD,aAAa,CAACoD,gBARP;AASzBkH,EAAAA,qBAAqB,EAAEtK,aAAa,CAACsK,qBATZ;AAUzBC,EAAAA,qBAAqB,EAAEvK,aAAa,CAACuK,qBAVZ;AAWzBC,EAAAA,qBAAqB,EAAExK,aAAa,CAACwK,qBAXZ;AAYzBC,EAAAA,qBAAqB,EAAEzK,aAAa,CAACyK,qBAZZ;AAazBC,EAAAA,qBAAqB,EAAE1K,aAAa,CAAC0K,qBAbZ;AAczBC,EAAAA,qBAAqB,EAAE3K,aAAa,CAAC2K,qBAdZ;AAezB1C,EAAAA,iBAAiB,EAAEjI,aAAa,CAACiI,iBAfR;AAgBzB2C,EAAAA,qBAAqB,EAAE5K,aAAa,CAAC4K,qBAhBZ;AAiBzBC,EAAAA,sBAAsB,EAAE7K,aAAa,CAAC6K,sBAjBb;AAkBzB7C,EAAAA,sBAAsB,EAAEhI,aAAa,CAACgI,sBAlBb;AAmBzB8C,EAAAA,sBAAsB,EAAE9K,aAAa,CAAC8K,sBAnBb;AAoBzB;AACA;AACAzE,EAAAA,YAAY,EAAErG,aAAa,CAACqG,YAtBH;AAuBzBP,EAAAA,YAAY,EAAE9F,aAAa,CAAC8F,YAvBH;AAwBzB2C,EAAAA,gBAAgB,EAAEzI,aAAa,CAACyI,gBAxBP;AAyBzBO,EAAAA,aAAa,EAAEhJ,aAAa,CAACgJ,aAzBJ;AA0BzB+B,EAAAA,mBAAmB,EAAE/K,aAAa,CAAC+K,mBA1BV;AA2BzBC,EAAAA,gBAAgB,EAAEhL,aAAa,CAACgL;AA3BP,CAA3B;AA6BA,eAAelL,OAAO,CAAC8J,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CxK,UAAU,CAACU,OAAD,CAAvD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { labels, validations, filterType } from './config';\nimport Select from '../select';\nimport './index.css';\nimport { connect } from 'react-redux';\nimport DateRangePicker from '../RetailCalendarDatePicker';\nimport FilterActions from '../../actions/filtersAction';\nimport { toast } from 'react-toastify';\nimport _ from 'lodash';\n\nclass Filters extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filters: {},\n      startDate: null,\n      endDate: null,\n      hierarchy: [],\n      hierarchy1:\n        props.retainFilters && props.selectedHierarchy1\n          ? props.selectedHierarchy1.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy2:\n        props.retainFilters && props.selectedHierarchy2\n          ? props.selectedHierarchy2.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy3:\n        props.retainFilters && props.selectedHierarchy3\n          ? props.selectedHierarchy3.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy4:\n        props.retainFilters && props.selectedHierarchy4\n          ? props.selectedHierarchy4.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy5:\n        props.retainFilters && props.selectedHierarchy5\n          ? props.selectedHierarchy5.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      // hierarchy6:\n      //   props.retainFilters && props.selectedHierarchy6\n      //     ? props.selectedHierarchy6.map((e) => {\n      //         return { value: e, label: e };\n      //       })\n      //     : null,\n      // hierarchy7:\n      //   props.retainFilters && props.selectedHierarchy7\n      //     ? props.selectedHierarchy7.map((e) => {\n      //         return { value: e, label: e };\n      //       })\n      //     : null,\n      // hierarchy8:\n      //   props.retainFilters && props.selectedHierarchy8 && props.location.state\n      //     ? props.location.state.styles.map((e) => {\n      //         return { value: e, label: e };\n      //       })\n      //     : props.retainFilters && props.selectedHierarchy8 && this.props.styleGroupEdit\n      //     ? props.selectedHierarchy8.map((e) => {\n      //         return { value: e, label: e };\n      //       })\n      //     : null,\n      customStyleGroup:\n        props.retainFilters && props.selectedCustomStyleGroup\n          ? props.selectedCustomStyleGroup.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      stores:\n        props.retainFilters && props.selectedStores\n          ? props.selectedStores.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy7:\n        props.retainFilters && props.selectedHierarchy7\n          ? props.selectedHierarchy7.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy9:\n        props.retainFilters && props.selectedHierarchy10\n          ? props.selectedHierarchy10.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy10:\n        props.retainFilters && props.selectedHierarchy9\n          ? props.selectedHierarchy9.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy11:\n        props.retainFilters && props.selectedHierarchy11 && props.location.state\n          ? props.location.state.styles.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      hierarchy12:\n        props.retainFilters && props.selectedHierarchy12\n          ? props.selectedHierarchy12.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n      customStoreGroup:\n        props.retainFilters && props.selectedCustomStoreGroup\n          ? props.selectedCustomStoreGroup.map((e) => {\n              return { value: e, label: e };\n            })\n          : null,\n    };\n    // +  !props.retainFilters && props.resetFilters();\n    props.getExtraFiltersOptions({\n      filters: {},\n      filterType: 'TIER',\n      allowInactiveProducts: this.props.allowInactiveProducts || false,\n    });\n    !props.isEdit &&\n      props.getHierarchyOptions({\n        filters: {},\n        hierarchyType: 'HIERARCHY1',\n        allowInactiveProducts: this.props.allowInactiveProducts || false,\n      });\n\n    if (props.retainFilters && props.location.state) {\n      props.setSelectedHierarchy11(props.location.state.styles, true);\n      props.setSelectedStores(this.state.stores.map((e) => e.label));\n    }\n    props.getCustomStores().then((res) => {\n      if (\n        this.props.isEdit &&\n        this.props.editPlanDetails[0] &&\n        !_.isEmpty(this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj)\n      ) {\n        let customStoreGroup =\n          this.props.editPlanDetails[0] &&\n          this.props.editPlanDetails[0].request_obj &&\n          this.props.editPlanDetails[0].request_obj.filters &&\n          this.props.editPlanDetails[0].request_obj.filters.customStoreGroup;\n        let selectedCustomStore = [];\n        _.map(res, (item) => {\n          if (customStoreGroup && customStoreGroup.includes(item.value)) {\n            selectedCustomStore.push(item);\n          }\n        });\n        this.setCustomStores(selectedCustomStore);\n      }\n    });\n\n    // props.fetchStyleGroups({\n    //   disable_empty_flag: false,\n    //   filters: {},\n    // });\n\n    // if (props.retainFilters && props.location.state) {\n    // props.setSelectedHierarchy7(props.location.state.styles, 'reporting');\n    // props.setSelectedStores(this.state.stores.map((e) => e.label));\n    // }\n    props.setRetainFilters(false);\n  }\n  componentDidMount() {\n    if (this.props.retainFilters && !_.isEmpty(this.props.selectedHierarchy1)) {\n      let val = [\n        {\n          label: this.props.selectedHierarchy1[0],\n          value: this.props.selectedHierarchy1[0],\n        },\n      ];\n      this.onHierarchyOneSelection(val);\n      return;\n    }\n    this.setState({ hierarchy: this.props.filtersOptions });\n    // this.props.getExtraFilterStore();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.filterReset) {\n      this.props.filterResetHandler(false);\n      this.reset(); // reset filters from configFilters\n    }\n    if (\n      this.props.fromNotification &&\n      _.isEmpty(this.state.hierarchy1) &&\n      !_.isEmpty(this.props.cadenceInput) &&\n      !_.isEmpty(this.props.cadenceInput.filters)\n    ) {\n      let filters = this.props.cadenceInput.filters;\n\n      this.props.presetFilters(filters, true); //2nd argument to set a flag to call options api\n\n      this.onHierarchyOneSelection([\n        { label: filters.hierarchy1[0], value: filters.hierarchy1[0] },\n      ]);\n      this.setState({\n        // customStoreGroup: _.map(filters.customStoreGroup, (item) => ({ value: item, label: item })),\n        stores: _.map(filters.stores, (item) => ({ value: item, label: item })),\n        hierarchy1: _.map(filters.hierarchy1, (item) => ({ value: item, label: item })),\n        hierarchy2: _.map(filters.hierarchy2, (item) => ({ value: item, label: item })),\n        hierarchy3: _.map(filters.hierarchy3, (item) => ({ value: item, label: item })),\n        hierarchy4: _.map(filters.hierarchy4, (item) => ({ value: item, label: item })),\n        hierarchy5: _.map(filters.hierarchy5, (item) => ({ value: item, label: item })),\n        hierarchy7: _.map(filters.hierarchy7, (item) => ({ value: item, label: item })),\n        hierarchy9: _.map(filters.hierarchy9, (item) => ({ value: item, label: item })),\n        hierarchy10: _.map(filters.hierarchy10, (item) => ({ value: item, label: item })),\n        hierarchy11: _.map(filters.hierarchy11, (item) => ({ value: item, label: item })),\n        hierarchy12: _.map(filters.hierarchy12, (item) => ({ value: item, label: item })),\n        // customStyleGroup: _.map(filters.customStyleGroup, (item) => ({ value: item, label: item })),\n      });\n      if (!_.isEmpty(this.props.customStoreGroup)) {\n        let selectedCustomStore = [];\n        _.map(this.props.customStoreGroup, (item) => {\n          if (filters.customStoreGroup && filters.customStoreGroup.includes(item.value)) {\n            selectedCustomStore.push(item);\n          }\n        });\n        this.setState({\n          customStoreGroup: selectedCustomStore,\n        });\n        this.setCustomStores(selectedCustomStore);\n      }\n      if (!_.isEmpty(this.props.customStyleGroup)) {\n        let selectedCustomStyle = [];\n        _.map(this.props.customStyleGroup, (item) => {\n          if (\n            filters.customStyleGroup &&\n            typeof filters.customStyleGroup[0] === 'string' &&\n            filters.customStyleGroup.includes(item.value)\n          ) {\n            selectedCustomStyle.push(item);\n            return;\n          }\n          if (filters.customStyleGroup && filters.customStyleGroup.includes(item.id)) {\n            selectedCustomStyle.push(item);\n          }\n        });\n        this.setState({\n          customStyleGroup: selectedCustomStyle,\n        });\n        this.setCustomStyleGroup(selectedCustomStyle);\n      }\n    }\n    if (\n      this.props.isEdit &&\n      _.isEmpty(this.state.hierarchy1) &&\n      this.props.editPlanDetails[0] &&\n      !_.isEmpty(this.props.editPlanDetails[0] && this.props.editPlanDetails[0].request_obj)\n    ) {\n      let {\n        hierarchy1,\n        hierarchy2,\n        hierarchy3,\n        hierarchy4,\n        hierarchy5,\n        stores,\n        hierarchy7,\n        hierarchy9,\n        hierarchy10,\n        hierarchy11,\n        hierarchy12,\n        // customStyleGroup,\n        // customStoreGroup,\n      } = this.props.editPlanDetails[0].request_obj.filters;\n\n      let customStyleName =\n        this.props.editPlanDetails[0] &&\n        this.props.editPlanDetails[0].request_obj &&\n        this.props.editPlanDetails[0].request_obj.customStyleName;\n\n      // this.props.presetFilters([\n      //   country,\n      //   channel,\n      //   storeCluster,\n      //   customStoreGroup,\n      //   store,\n      //   hierarchy1,\n      //   hierarchy2,\n      //   hierarchy3,\n      //   hierarchy4,\n      //   hierarchy5,\n      //   season,\n      //   matrix,\n      //   exclusionList,\n      //   clearance,\n      //   customStyleGroup,\n      //   styleColor,\n      // ]);\n      this.props.presetFilters(this.props.editPlanDetails[0].request_obj.filters);\n      this.setState({\n        hierarchy1: _.map(hierarchy1, (item) => ({ value: item, label: item })),\n        hierarchy2: _.map(hierarchy2, (item) => ({ value: item, label: item })),\n        hierarchy3: _.map(hierarchy3, (item) => ({ value: item, label: item })),\n        hierarchy4: _.map(hierarchy4, (item) => ({ value: item, label: item })),\n        hierarchy5: _.map(hierarchy5, (item) => ({ value: item, label: item })),\n        stores: _.map(stores, (item) => ({ value: item, label: item })),\n        hierarchy7: _.map(hierarchy7, (item) => ({ value: item, label: item })),\n        hierarchy9: _.map(hierarchy9, (item) => ({ value: item, label: item })),\n        hierarchy10: _.map(hierarchy10, (item) => ({ value: item, label: item })),\n        hierarchy11: _.map(hierarchy11, (item) => ({ value: item, label: item })),\n        hierarchy12: _.map(hierarchy12, (item) => ({ value: item, label: item })),\n        // customStoreGroup: _.map(customStoreGroup, (item) => ({ value: item, label: item })),\n        // customStyleGroup: _.map(customStyleGroup, (item) => ({ value: item, label: item })),\n      });\n    }\n    // if (\n    //   this.props.from !== 'styleConfig' &&\n    //   this.props.from !== 'styleGroupConfig' &&\n    //   !_.isEmpty(this.props.selectedHierarchy8) &&\n    //   !_.isEqual(prevProps.selectedHierarchy8, this.props.selectedHierarchy8)\n    // ) {\n    //   let req = {\n    //     filters: {\n    //       hierarchy1: this.props.selectedHierarchy1,\n    //       hierarchy2: this.props.selectedHierarchy2,\n    //       hierarchy3: this.props.selectedHierarchy3,\n    //       hierarchy4: this.props.selectedHierarchy4,\n    //       hierarchy5: this.props.selectedHierarchy5,\n    //       // hierarchy6: this.props.selectedHierarchy6,\n    //       // hierarchy7: this.props.selectedHierarchy7,\n    //       // hierarchy8: this.props.selectedHierarchy8,\n    //     },\n    //     disable_empty_flag:\n    //       this.props.disable_empty_flag && !this.props.isEdit\n    //         ? this.props.disable_empty_flag\n    //         : false,\n    //   };\n    //   this.props.fetchStyleGroups(req);\n    // }\n  }\n  onHierarchyOneSelection = (val) => {\n    let hierarchyClone = _.cloneDeep(this.props.filtersOptions);\n    let valiadtion = validations[val[0].label];\n    let findIndex = (index, key) =>\n      _.findIndex(hierarchyClone, {\n        type: `${valiadtion[key][index]}`,\n      }); //finding index num for swap case from validations\n    if (valiadtion && !_.isEmpty(valiadtion.swap)) {\n      //swaping filters\n      let a = findIndex(0, 'swap'),\n        b = findIndex(1, 'swap');\n      let temp = hierarchyClone[a];\n\n      hierarchyClone[a] = hierarchyClone[b];\n      hierarchyClone[b] = temp;\n    }\n    if (valiadtion && !_.isEmpty(valiadtion.remove)) {\n      //remove filters case\n      _.map(valiadtion.remove, (item, i) => {\n        _.remove(hierarchyClone, (itm, index) => index === findIndex(i, 'remove'));\n      });\n    }\n    this.setState({ hierarchy: hierarchyClone });\n    return hierarchyClone;\n  };\n\n  setSelectionHandler = async (val, actionName, name) => {\n    if (name === 'customStoreGroup') {\n      await this.props.setSelectedCustomStoreGroup(val.map((v) => v.value));\n      return;\n    }\n    if (name === 'customStyleGroup') {\n      this.props.setSelectedCustomGroup(\n        val.map((v) => v.value),\n        'name'\n      );\n      await this.props.setSelectedCustomGroup(\n        val.map((v) => v.id),\n        'id'\n      );\n      return;\n    }\n    await this.props[actionName](val.map((e) => e.label));\n    return;\n  };\n  getHierarchyOptions = async (val, filterIndex, currFilterName) => {\n    !Array.isArray(val) && (val = [val]);\n    let hierarchy = _.cloneDeep(this.props.filtersOptions);\n\n    let nameCapitalized =\n      currFilterName && currFilterName.charAt(0).toUpperCase() + currFilterName.slice(1); //capitalizing the name to match action/reducer name\n    let resetHierachies = {};\n    _.map(hierarchy, (item, index) => {\n      if (index > filterIndex) {\n        //&& index < 5) {\n        resetHierachies[item.type] = null; //all fiters value, which comes after selected filter becomes null(reset)\n      }\n    });\n    this.setState({ [currFilterName]: val, ...resetHierachies }, async () => {\n      let actionName = `setSelected${nameCapitalized}`;\n      await this.props[actionName](val.map((e) => e.label)); //handles setSelected action calls\n\n      let req = {};\n      _.map(hierarchy, (item, index) => {\n        if (index <= filterIndex) {\n          let nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n          // if (_.isEmpty(this.props[`selected${nameCapitalized}`])) return; //uncomment if u want empty filters removed\n\n          req[item.type] = this.props[`selected${nameCapitalized}`]; //this goes as filters req obj in api calls\n        }\n      });\n      this.setState({ filters: { ...req } });\n    });\n  };\n  setDrop = (val) => {\n    let req = {};\n    let selItems = val.map((item) => item.label);\n    req['drop'] = selItems;\n    this.setState({ filters: { ...req }, drops: val }, () => {\n      this.props.setSelectedDrops(val.map((v) => v.value));\n    });\n  };\n  actionCallHandler = (func, isHierarchyNext, nextFilterName, req) => {\n    console.log('filterName console actionCallHandler', nextFilterName);\n    // let typeName = isHierarchyNext\n    //   ? nextFilterName.toUpperCase()\n    //   : labels[nextFilterName].toUpperCase();\n    // if (nextFilterName === 'store') typeName = 'STORE_CODE';\n    let typeName = filterType[nextFilterName];\n    let reqObj = {\n      filters: req,\n      allowInactiveProducts: this.props.allowInactiveProducts || false,\n    };\n    if (isHierarchyNext) reqObj.hierarchyType = typeName;\n    if (!isHierarchyNext) reqObj.filterType = typeName;\n    if (nextFilterName === 'customStyleGroup') {\n      let req = {\n        filters: reqObj.filters,\n        disable_empty_flag:\n          this.props.disable_empty_flag && !this.props.isEdit\n            ? this.props.disable_empty_flag\n            : false,\n      };\n      reqObj = req;\n      func = `fetchStyleGroups`;\n    }\n    if (nextFilterName === 'customStoreGroup') {\n      reqObj = {};\n      func = `getCustomStores`;\n    }\n\n    this.props[func](reqObj);\n  };\n  filterOnFocusHandler = (filterIndex, filterName, isHierarchy) => {\n    let options = this.props[filterName];\n    if (\n      (filterName && options && !options.callApi && !_.isEmpty(this.props[filterName])) ||\n      !this.validateFilters(filterIndex)\n    )\n      //if filter options already exists or if all of the mandatory filters that comes before this filter is not selected , return\n      return;\n    console.log(filterName, 'filterName');\n    // if (filterName === 'stores') {\n    //   this.props.getExtraFilterStore({\n    //     // filters: {},\n    //     filterType: 'TIER',\n    //     allowInactiveProducts: this.props.allowInactiveProducts || false,\n    //   });\n    //   return;\n    // }\n    let func = isHierarchy ? `getHierarchyOptions` : `getExtraFiltersOptions`;\n    let req = {};\n    _.map(this.props.filtersOptions, (item, index) => {\n      console.log(item, 'itemmmmmmmmmmmmmm');\n      if (index < filterIndex) {\n        let nameCapitalized = item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1); //capitalizing the name to match action/reducer name\n        let selected = this.props[`selected${nameCapitalized}`];\n        // if (_.isEmpty(selected)) return; //uncomment if u want empty filters removed\n\n        req[item.type] = selected; //this goes as filters req obj in api calls\n      }\n    });\n    if (filterName && this.props[func]) {\n      this.actionCallHandler(func, isHierarchy, filterName, req); //calles next filters action, to get it's options\n    }\n  };\n\n  setCustomStyleGroup = (val) => {\n    // let val = [item];\n    let selItems = val.map((item) => item.label);\n    // req['stores'] = selItems;\n    let newFilters = { ...this.state.filters, customStyleGroup: selItems };\n    this.setState({ filters: newFilters, customStyleGroup: val }, () => {\n      // this.props.setSelectedCustomGroup(val.map((v) => v.id));\n      this.props.setSelectedCustomGroup(\n        val.map((v) => v.value),\n        'name'\n      );\n      this.props.setSelectedCustomGroup(\n        val.map((v) => v.id),\n        'id'\n      );\n    });\n  };\n  setCustomStores = (val) => {\n    let selItems = val.map((item) => item.label);\n    let newFilters = { ...this.state.filters, customStoreGroup: selItems };\n    this.setState({ filters: newFilters, customStoreGroup: val }, () => {\n      this.props.setSelectedCustomStoreGroup(val.map((v) => v.value));\n    });\n  };\n  reset = () => {\n    this.props.onReset && this.props.onReset();\n    this.setState(\n      {\n        drops: null,\n        startDate: null,\n        endDate: null,\n        hierarchy1: null,\n        hierarchy2: null,\n        hierarchy3: null,\n        hierarchy4: null,\n        hierarchy5: null,\n        // stores: null,\n        hierarchy7: null,\n        hierarchy9: null,\n        hierarchy10: null,\n        hierarchy11: null,\n        hierarchy12: null,\n        stores: null,\n        // customStoreGroup: null,\n        // customStyleGroup: null,\n      },\n      () => {\n        if (this.props.from !== 'draft/status') this.props.resetFilters(); ////////// handling reset issues rising bcs of tabs, only reset this component state, not reducer\n      }\n    );\n  };\n  onDatesChange = ({ startDate, endDate }) => {\n    this.setState(\n      {\n        startDate,\n        endDate,\n      },\n      () => {\n        let weeks = [];\n        if (endDate) {\n          for (let i = startDate.clone(); i <= endDate; i = i.add(7, 'd')) {\n            weeks.push(i.week());\n          }\n        }\n\n        this.props.setDateRange({\n          startDate: startDate && startDate.format('YYYY-MM-DD'),\n          endDate: endDate && endDate.format('YYYY-MM-DD'),\n          weeks,\n        });\n      }\n    );\n  };\n\n  validateFilters = (filterIndex, dateRange) => {\n    let { hierarchy } = this.state;\n    for (let i = 0; i < filterIndex; i++) {\n      let type = hierarchy[i] && hierarchy[i].type;\n\n      let nameCapitalized = type && type.charAt(0).toUpperCase() + type.slice(1); //capitalizing the name to match action/reducer name\n\n      if (\n        hierarchy[i] &&\n        hierarchy[i].isMandatory &&\n        _.isEmpty(this.props[`selected${nameCapitalized}`])\n      ) {\n        return false;\n      }\n    }\n    if (dateRange && (_.isEmpty(this.state.startDate) || _.isEmpty(this.state.endDate)))\n      return false;\n\n    return true;\n  };\n  onFilterHandler = () => {\n    if (!this.validateFilters(this.state.hierarchy.length, this.props.dateRange)) {\n      toast.error(`Please select mandatory filters`, {\n        autoClose: 15000,\n        hideProgressBar: true,\n      });\n      return;\n    }\n    this.props.onFilter({\n      filters: this.state.filters,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      customStyleGroup: this.state.customStyleGroup,\n    });\n  };\n  render() {\n    console.log(this.props.stores, 'stores');\n    return (\n      <React.Fragment>\n        <div\n          className={\n            this.props.isEdit\n              ? 'row d-flex ml-4 mr-4 edit-markdown-filters'\n              : ' d-flex row ml-4 mr-4'\n          }>\n          {this.state.hierarchy &&\n            this.state.hierarchy.map(\n              (filter, i) =>\n                labels[filter.type] && (\n                  <div className=\"col-md-2 \" key={filter.type}>\n                    <label className=\"mb-1 mt-3\" style={{ whiteSpace: 'nowrap' }}>\n                      {labels[filter.type]}\n                      {filter.isMandatory ? <span style={{ color: 'red' }}> * </span> : null}\n                    </label>\n                    <Select\n                      name={filter.type}\n                      options={this.props[filter.type]}\n                      onFocus={(e) => this.filterOnFocusHandler(i, filter.type, filter.isHierarchy)}\n                      onChange={(option) =>\n                        this.getHierarchyOptions(\n                          option,\n                          i,\n                          filter.type,\n                          filter.isHierarchy,\n                          this.state.hierarchy[i + 1] && this.state.hierarchy[i + 1].type,\n                          this.state.hierarchy[i + 1] && this.state.hierarchy[i + 1].isHierarchy\n                        )\n                      }\n                      value={this.state[filter.type]}\n                      isMulti={filter.isMultiple}\n                      isDisabled={\n                        (i === 0 && this.props.styleGroupEdit) ||\n                        (i === 2 && this.props.storeClusterDisable) ||\n                        (i === 3 && this.props.storeClusterDisable) ||\n                        (i === 4 && this.props.storeClusterDisable)\n                          ? true\n                          : false\n                      }\n                      // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n                    />\n                  </div>\n                )\n            )}\n\n          {/* {this.props.customStyleGroups &&\n            labels.customStyleGroup &&\n            !this.props.hideCustomStyleGroup && (\n              <div className=\"col-md-2 \">\n                <label className=\"mb-1 mt-3\">\n                  Custom Style Group\n                  {this.props.customStyleGrpMandatory ? (\n                    <span style={{ color: 'red' }}> * </span>\n                  ) : null}\n                </label>\n                <Select\n                  options={this.props.customStyleGroup}\n                  onChange={(option) => this.setCustomStyleGroup(option)}\n                  value={this.state.customStyleGroup}\n                  isMulti\n                  // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n                />\n              </div>\n            )}\n          {this.props.customStoreGroup && labels.customStoreGroup && !this.props.hideCustomStores && (\n            <div className=\"col-md-2 \">\n              <label className=\"mb-1 mt-3\">\n                {labels.customStoreGroup}\n                \n              </label>\n              <Select\n                options={this.props.customStoreGroup}\n                onChange={(option) => this.setCustomStores(option)}\n                value={this.state.customStoreGroup}\n                isMulti\n                // isDisabled={!(this.state[`hierarchy${i}`] && this.state[`hierarchy${i}`].length)}\n              />\n            </div>\n          )} */}\n          {this.props.dateRange && (\n            <div className=\"col-md-3\">\n              <label className=\"mb-1 mt-3\">\n                Date range <span style={{ color: 'red' }}> * </span>\n              </label>\n              <DateRangePicker\n                startDate={this.state.startDate}\n                startDateId=\"startDate_11\"\n                endDate={this.state.endDate}\n                endDateId=\"endDate_11\"\n                onDatesChange={this.onDatesChange}\n              />\n            </div>\n          )}\n          {!this.props.hidefilterButton && (\n            <div\n              className={\n                !this.props.dateRange && !this.props.hideCustomStores\n                  ? 'col-md-2 mt-5 px-0' //'col-md-3 mt-4  ml-auto text-right'\n                  : 'col-md-3 mt-5'\n              }>\n              <button\n                disabled={this.props.isEdit}\n                onClick={this.onFilterHandler}\n                className={\n                  !this.props.dateRange && !this.props.hideCustomStores\n                    ? 'col-md-5 btn btn-primary btn-filter ml-2'\n                    : 'col-md-4 btn btn-primary btn-filter'\n                }>\n                <span>\n                  <i className=\"fa fa-filter\"></i>&nbsp; Filter\n                </span>\n              </button>\n              <button\n                disabled={this.props.isEdit || this.props.styleGroupEdit}\n                className={\n                  !this.props.dateRange && !this.props.hideCustomStores\n                    ? ' col-md-5 btn btn-primary btn-filter btn-filter-reset ml-3'\n                    : 'col-md-4 offset-1 btn btn-primary btn-filter btn-filter-reset'\n                }\n                onClick={this.reset}>\n                <span>\n                  <i className=\"fa fa-repeat\"></i>&nbsp; Reset\n                </span>\n              </button>\n            </div>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    drops: store.filtersReducer.drops,\n    selectedDrops: store.filtersReducer.selectedDrops,\n    hierarchy1: store.filtersReducer.hierarchy1,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    hierarchy2: store.filtersReducer.hierarchy2,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    hierarchy3: store.filtersReducer.hierarchy3,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    hierarchy4: store.filtersReducer.hierarchy4,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    hierarchy5: store.filtersReducer.hierarchy5,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n\n    stores: store.filtersReducer.stores,\n    selectedStores: store.filtersReducer.selectedStores,\n    // customStoreGroup: store.filtersReducer.customStoreGroup,\n    // customStyleGroup: store.filtersReducer.customStyleGroup,\n    // selectedCustomStyleGroup: store.filtersReducer.selectedCustomStyleGroup,\n    // selectedCustomStoreGroup: store.filtersReducer.selectedCustomStoreGroup,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks,\n    retainFilters: store.filtersReducer.retainFilters,\n    editPlanDetails: store.manuallyCreateMdData.editPlanDetails,\n    hierarchy9: store.filtersReducer.hierarchy9,\n    selectedHierarchy9: store.filtersReducer.selectedHierarchy9,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    hierarchy7: store.filtersReducer.hierarchy7,\n    hierarchy10: store.filtersReducer.hierarchy10,\n    selectedHierarchy10: store.filtersReducer.selectedHierarchy10,\n    selectedHierarchy11: store.filtersReducer.selectedHierarchy11,\n    hierarchy11: store.filtersReducer.hierarchy11,\n    selectedHierarchy12: store.filtersReducer.selectedHierarchy12,\n    hierarchy12: store.filtersReducer.hierarchy12,\n\n    cadenceInput: store.manuallyCreateMdData.cadenceInput,\n  };\n};\nconst mapDispatchToProps = {\n  getHierarchyOptions: FilterActions.getHierarchyOptions,\n  getExtraFiltersOptions: FilterActions.getExtraFiltersOptions,\n  getStores: FilterActions.getStores,\n  getVendorStyles: FilterActions.getVendorStyles,\n  getRollup1: FilterActions.getRollup1,\n  getRollup2: FilterActions.getRollup1,\n  getCustomStores: FilterActions.getCustomStores,\n  setSelectedDrops: FilterActions.setSelectedDrops,\n  setSelectedHierarchy1: FilterActions.setSelectedHierarchy1,\n  setSelectedHierarchy2: FilterActions.setSelectedHierarchy2,\n  setSelectedHierarchy3: FilterActions.setSelectedHierarchy3,\n  setSelectedHierarchy4: FilterActions.setSelectedHierarchy4,\n  setSelectedHierarchy5: FilterActions.setSelectedHierarchy5,\n  setSelectedHierarchy7: FilterActions.setSelectedHierarchy7,\n  setSelectedStores: FilterActions.setSelectedStores,\n  setSelectedHierarchy9: FilterActions.setSelectedHierarchy9,\n  setSelectedHierarchy10: FilterActions.setSelectedHierarchy10,\n  setSelectedHierarchy11: FilterActions.setSelectedHierarchy11,\n  setSelectedHierarchy12: FilterActions.setSelectedHierarchy12,\n  // setSelectedCustomGroup: FilterActions.setSelectedCustomGroup,\n  // setSelectedCustomStoreGroup: FilterActions.setSelectedCustomStoreGroup,\n  setDateRange: FilterActions.setDateRange,\n  resetFilters: FilterActions.resetFilters,\n  setRetainFilters: FilterActions.setRetainFilters,\n  presetFilters: FilterActions.presetFilters,\n  getExtraFilterStore: FilterActions.getExtraFilterStore,\n  fetchStyleGroups: FilterActions.fetchStyleGroups,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Filters));\n"]},"metadata":{},"sourceType":"module"}