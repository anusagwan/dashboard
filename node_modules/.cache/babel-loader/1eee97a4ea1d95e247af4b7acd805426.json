{"ast":null,"code":"import _regeneratorRuntime from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { GET_MARKDOWN_GLOBAL_PROMO_DATA, GET_ERRORS, SAVE_GLOBAL_PROMO, GET_MARKDOWN_GLOBAL_PROMO_DATA_PER_MARKDOWN, LOADER } from './types';\nimport { config } from '../utils/config';\nexport var getGlobalPromo = function getGlobalPromo(params) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var url, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                dispatch({\n                  type: LOADER,\n                  payload: true\n                }); // const res = await axios.get(`https://markdown-generic-dev.iaproducts.ai/markdown/globalPromos?markdownID=${params}`);\n\n                url = \"\".concat(config.markDownUrl, \"/markdown/globalPromos\");\n\n                if (params) {\n                  url += params;\n                }\n\n                _context.next = 6;\n                return axios.get(url);\n\n              case 6:\n                res = _context.sent;\n\n                if (res.data.status) {\n                  dispatch({\n                    type: GET_MARKDOWN_GLOBAL_PROMO_DATA,\n                    payload: res.data.data\n                  });\n                  dispatch({\n                    type: LOADER,\n                    payload: false\n                  });\n                } else {\n                  dispatch({\n                    type: GET_MARKDOWN_GLOBAL_PROMO_DATA,\n                    payload: []\n                  });\n                  dispatch({\n                    type: LOADER,\n                    payload: false\n                  });\n                }\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch({\n                  type: GET_ERRORS,\n                  payload: _context.t0\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 10]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getGlobalPromoPerMarkdown = function getGlobalPromoPerMarkdown(params) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                dispatch({\n                  type: LOADER,\n                  payload: true\n                });\n                _context2.next = 4;\n                return axios.get(\"\".concat(config.markDownUrl, \"/markdown/globalPromoById?markdownID=\").concat(params));\n\n              case 4:\n                res = _context2.sent;\n\n                if (res.data.status) {\n                  dispatch({\n                    type: GET_MARKDOWN_GLOBAL_PROMO_DATA_PER_MARKDOWN,\n                    payload: res.data.data\n                  });\n                  dispatch({\n                    type: LOADER,\n                    payload: false\n                  });\n                } else {\n                  dispatch({\n                    type: GET_MARKDOWN_GLOBAL_PROMO_DATA_PER_MARKDOWN,\n                    payload: []\n                  });\n                  dispatch({\n                    type: LOADER,\n                    payload: false\n                  });\n                }\n\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatch({\n                  type: GET_ERRORS,\n                  payload: _context2.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 8]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var saveGlobalPromo = function saveGlobalPromo(params) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return axios.post(\"\".concat(config.markDownUrl, \"/markdown/mapGlobalPromo\"), params);\n\n              case 3:\n                res = _context3.sent;\n                dispatch({\n                  type: SAVE_GLOBAL_PROMO,\n                  payload: res.data.status\n                });\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                dispatch({\n                  type: GET_ERRORS,\n                  payload: _context3.t0\n                });\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/markdown_global_promo.js"],"names":["axios","GET_MARKDOWN_GLOBAL_PROMO_DATA","GET_ERRORS","SAVE_GLOBAL_PROMO","GET_MARKDOWN_GLOBAL_PROMO_DATA_PER_MARKDOWN","LOADER","config","getGlobalPromo","params","dispatch","type","payload","url","markDownUrl","get","res","data","status","getGlobalPromoPerMarkdown","saveGlobalPromo","post"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport {\n  GET_MARKDOWN_GLOBAL_PROMO_DATA,\n  GET_ERRORS,\n  SAVE_GLOBAL_PROMO,\n  GET_MARKDOWN_GLOBAL_PROMO_DATA_PER_MARKDOWN,\n  LOADER,\n} from './types';\nimport { config } from '../utils/config';\n\nexport const getGlobalPromo = (params) => async (dispatch) => {\n  // TODO: add url\n  try {\n    dispatch({\n      type: LOADER,\n      payload: true,\n    });\n\n    // const res = await axios.get(`https://markdown-generic-dev.iaproducts.ai/markdown/globalPromos?markdownID=${params}`);\n    var url = `${config.markDownUrl}/markdown/globalPromos`;\n    if (params) {\n      url += params;\n    }\n    const res = await axios.get(url);\n    if (res.data.status) {\n      dispatch({\n        type: GET_MARKDOWN_GLOBAL_PROMO_DATA,\n        payload: res.data.data,\n      });\n      dispatch({\n        type: LOADER,\n        payload: false,\n      });\n    } else {\n      dispatch({\n        type: GET_MARKDOWN_GLOBAL_PROMO_DATA,\n        payload: [],\n      });\n      dispatch({\n        type: LOADER,\n        payload: false,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err,\n    });\n  }\n};\n\nexport const getGlobalPromoPerMarkdown = (params) => async (dispatch) => {\n  // TODO: add url\n  try {\n    dispatch({\n      type: LOADER,\n      payload: true,\n    });\n    const res = await axios.get(\n      `${config.markDownUrl}/markdown/globalPromoById?markdownID=${params}`\n    );\n    if (res.data.status) {\n      dispatch({\n        type: GET_MARKDOWN_GLOBAL_PROMO_DATA_PER_MARKDOWN,\n        payload: res.data.data,\n      });\n      dispatch({\n        type: LOADER,\n        payload: false,\n      });\n    } else {\n      dispatch({\n        type: GET_MARKDOWN_GLOBAL_PROMO_DATA_PER_MARKDOWN,\n        payload: [],\n      });\n      dispatch({\n        type: LOADER,\n        payload: false,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err,\n    });\n  }\n};\n\nexport const saveGlobalPromo = (params) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${config.markDownUrl}/markdown/mapGlobalPromo`, params);\n    dispatch({\n      type: SAVE_GLOBAL_PROMO,\n      payload: res.data.status,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}