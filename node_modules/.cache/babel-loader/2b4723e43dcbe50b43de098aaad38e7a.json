{"ast":null,"code":"import _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/MarkdownAnalysis/index.js\";\nimport React, { Component } from 'react';\nimport Tippy from '@tippy.js/react';\nimport Select from 'react-select';\nimport AnalysisTable from '../MarkdownAnalysis/AnalysisTable';\nimport moment from 'moment';\nimport 'tippy.js/dist/tippy.css';\nimport LineChart from '../support/Charts/LineChart';\nimport './index.css';\nimport _ from 'lodash';\nimport * as chartjs from 'chart.js';\nchartjs.pluginService.register({\n  beforeDraw: function beforeDraw(chart) {\n    if (chart.config.options && chart.config.options.backgroundColor) {\n      var ctx = chart.chart.ctx;\n      var chartArea = chart.chartArea;\n      ctx.save();\n      ctx.fillStyle = chart.config.options.backgroundColor;\n      ctx.fillRect(chartArea.left, chartArea.top, chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      ctx.restore();\n    }\n  }\n});\nvar options2 = {\n  plugins: {\n    datalabels: {\n      display: false\n    }\n  },\n  // backgroundColor: '#fff',\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px'\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [{\n      gridLines: {\n        display: true\n      },\n      ticks: {\n        fontSize: 13\n      },\n      scaleLabel: {\n        show: true,\n        display: true,\n        fontSize: 14,\n        fontStyle: 'bold',\n        fontColor: '#000',\n        labelString: 'Margin %'\n      }\n    }],\n    xAxes: [{\n      id: 'x-axis-0',\n      gridLines: {\n        // color: '#aeaeae5e',\n        display: false\n      },\n      ticks: {\n        autoSkip: true,\n        autoSkipPadding: 40,\n        maxRotation: 0\n      },\n      scaleLabel: {\n        display: true,\n        // labelString: \"Time (week)\",\n        fontWeight: 900,\n        fontStyle: 'bold'\n      }\n    }]\n  }\n};\nvar options = {\n  plugins: {\n    datalabels: {\n      display: false\n    }\n  },\n  // backgroundColor: '#fff',\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px'\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [{\n      gridLines: {\n        display: true\n      },\n      ticks: {\n        fontSize: 13\n      },\n      scaleLabel: {\n        show: true,\n        display: true,\n        fontSize: 14,\n        fontStyle: 'bold',\n        fontColor: '#000',\n        labelString: 'Sell Through %'\n      }\n    }],\n    xAxes: [{\n      id: 'x-axis-0',\n      gridLines: {\n        // color: '#aeaeae5e',\n        display: false\n      },\n      ticks: {\n        autoSkip: true,\n        autoSkipPadding: 40,\n        maxRotation: 0\n      },\n      scaleLabel: {\n        display: true,\n        // labelString: \"Time (week)\",\n        fontWeight: 900,\n        fontStyle: 'bold'\n      }\n    }]\n  }\n};\n\nvar MarkdownAnalysis =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MarkdownAnalysis, _Component);\n\n  function MarkdownAnalysis(props) {\n    var _this;\n\n    _classCallCheck(this, MarkdownAnalysis);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MarkdownAnalysis).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(MarkdownAnalysis, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var borderColors = ['#44677B', '#6F9FC3', '#83BE8C', '#88ad5f', '#b06d58', '#86588a', '#17a69c', '#b0a819', '#d97c30', '#5d5b85'];\n      var borderColors1 = ['#44677B', '#6F9FC3', '#83BE8C', '#88ad5f', '#b06d58', '#86588a', '#17a69c', '#b0a819', '#d97c30', '#5d5b85'];\n      var gradient = ['repeating-linear-gradient(-44deg, #44677B 5%,white 9px)', 'repeating-linear-gradient(-44deg, #6F9FC3 5%,white 9px)', 'repeating-linear-gradient(-44deg, #83BE8C 5%,white 9px)', 'repeating-linear-gradient(-44deg, #88ad5f 5%,white 9px)', 'repeating-linear-gradient(-44deg, #b06d58 5%,white 9px)', 'repeating-linear-gradient(-44deg, #86588a 5%,white 9px)', 'repeating-linear-gradient(-44deg, #17a69c 5%,white 9px)', 'repeating-linear-gradient(-44deg, #b0a819 5%,white 9px)', 'repeating-linear-gradient(-44deg, #d97c30 5%,white 9px)', 'repeating-linear-gradient(-44deg, #5d5b85 5%,white 9px)'];\n      var backgroundColors = ['rgba(68, 103, 123, 0.4)', 'rgba(166, 206, 227, 0.4)', 'rgba(131, 190, 140, 0.4)', 'rgba(136, 173, 95, 0.4)', 'rgba(176, 109, 88, 0.4)', 'rgba(134, 88, 138, 0.4)', 'rgba(23, 166, 156, 0.4)', 'rgba(89, 86, 25, 0.4)', 'rgba(217, 124, 48, 0.4)', 'rgba(93, 91, 133, 0.4)'];\n      var backgroundColors1 = ['rgba(68, 103, 123, 0.3)', 'rgba(166, 206, 227, 0.3)', 'rgba(131, 190, 140, 0.3)', 'rgba(136, 173, 95, 0.3)', 'rgba(176, 109, 88, 0.3)', 'rgba(134, 88, 138, 0.3)', 'rgba(23, 166, 156, 0.3)', 'rgba(89, 86, 25, 0.3)', 'rgba(217, 124, 48, 0.3)', 'rgba(93, 91, 133, 0.3)'];\n      var uniqueWeek = {};\n      this.props.markdownAnalysisGraphData.weekly_markdown.forEach(function (value, i) {\n        if (!uniqueWeek.hasOwnProperty(value)) {\n          uniqueWeek[value] = {\n            backgroundColor: backgroundColors.pop() // backgroundColor1: backgroundColors1.pop(),\n\n          };\n          uniqueWeek[value].borderColor = borderColors.pop();\n        }\n      });\n      var uniqueWeek1 = {};\n      this.props.editMarkdownAnalysisGraphData && this.props.editMarkdownAnalysisGraphData.weekly_markdown.forEach(function (value, i) {\n        if (!uniqueWeek1.hasOwnProperty(value)) {\n          uniqueWeek1[value] = {\n            backgroundColor: backgroundColors1.pop()\n          };\n          uniqueWeek1[value].borderColor = borderColors1.pop();\n          uniqueWeek1[value].background = gradient.pop();\n        }\n      });\n      var editedLegendPercentages = Object.keys(uniqueWeek1);\n      var legendPercentages = Object.keys(uniqueWeek);\n      var labels = this.props.markdownAnalysisGraphData.weekNum.map(function (date) {\n        if (_this2.props.level === 'week') {\n          return date;\n        } else {\n          return moment(date).format('MMM DD');\n        }\n      });\n      var sellThroughData = {\n        labels: labels,\n        datasets: [{\n          label: 'chart1',\n          data: this.props.markdownAnalysisGraphData.sellThrough,\n          borderColor: this.props.markdownAnalysisGraphData.weekly_markdown.map(function (m) {\n            return uniqueWeek[m].borderColor;\n          }),\n          backgroundColor: this.props.markdownAnalysisGraphData.weekly_markdown.map(function (m) {\n            return uniqueWeek[m].backgroundColor;\n          }),\n          steppedLine: true // borderWidth: {\n          //   top: 3,\n          //   right: 0,\n          //   bottom: 0,\n          //   left: 0,\n          // },\n\n        }, {\n          label: 'label2',\n          data: this.props.editMarkdownAnalysisGraphData && this.props.editMarkdownAnalysisGraphData.sellThrough,\n          borderColor: this.props.editMarkdownAnalysisGraphData && this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(function (m) {\n            return uniqueWeek1[m].borderColor;\n          }),\n          backgroundColor: this.props.editMarkdownAnalysisGraphData && this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(function (m) {\n            return uniqueWeek1[m].backgroundColor;\n          }),\n          steppedLine: true // borderWidth: {\n          //   top: 3,\n          //   right: 0,\n          //   bottom: 0,\n          //   left: 0,\n          // },\n\n        }]\n      };\n      var marginData = {\n        labels: labels,\n        datasets: [{\n          label: 'chart1',\n          data: this.props.markdownAnalysisGraphData.margin,\n          borderColor: this.props.markdownAnalysisGraphData.weekly_markdown.map(function (m) {\n            return uniqueWeek[m].borderColor;\n          }),\n          backgroundColor: this.props.markdownAnalysisGraphData.weekly_markdown.map(function (m) {\n            return uniqueWeek[m].backgroundColor;\n          }),\n          steppedLine: true // borderWidth: {\n          //   top: 3,\n          //   right: 0,\n          //   bottom: 0,\n          //   left: 0,\n          // },\n\n        }, {\n          label: 'label2',\n          data: this.props.editMarkdownAnalysisGraphData && this.props.editMarkdownAnalysisGraphData.margin,\n          borderColor: this.props.editMarkdownAnalysisGraphData && this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(function (m) {\n            return uniqueWeek1[m].borderColor;\n          }),\n          backgroundColor: this.props.editMarkdownAnalysisGraphData && this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(function (m) {\n            return uniqueWeek1[m].backgroundColor;\n          }),\n          // borderWidth: {\n          //   top: 3,\n          //   right: 0,\n          //   bottom: 0,\n          //   left: 0,\n          // },\n          steppedLine: true\n        }]\n      }; // if (this.props.isEdit && !_.isEmpty(this.props.editMarkdownAnalysisGraphData)) {\n      //   let uniqueWeek1 = {};\n      //   this.props.editMarkdownAnalysisGraphData.weekly_markdown.forEach((value, i) => {\n      //     if (!uniqueWeek1.hasOwnProperty(value)) {\n      //       uniqueWeek1[value] = {\n      //         backgroundColor1: backgroundColors1.pop(),\n      //       };\n      //       uniqueWeek1[value].borderColor = borderColors.pop();\n      //     }\n      //   });\n      //   sellThroughData.datasets.push({\n      //     label: 'chart2',\n      //     data: this.props.editMarkdownAnalysisGraphData.sellThrough,\n      //     borderColor: this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n      //       (m) => uniqueWeek1[m].borderColor\n      //     ),\n      //     backgroundColor: this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n      //       (m) => uniqueWeek1[m].backgroundColor1\n      //     ),\n      //     borderWidth: {\n      //       top: 3,\n      //       right: 0,\n      //       bottom: 0,\n      //       left: 0,\n      //     },\n      //   });\n      //   marginData.datasets.push({\n      //     data: this.props.editMarkdownAnalysisGraphData.margin,\n      //     borderColor: this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n      //       (m) => uniqueWeek1[m].borderColor\n      //     ),\n      //     backgroundColor: this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n      //       (m) => uniqueWeek1[m].backgroundColor1\n      //     ),\n      //     borderWidth: {\n      //       top: 3,\n      //       right: 0,\n      //       bottom: 0,\n      //       left: 0,\n      //     },\n      //   });\n      // }\n\n      var level = this.props.level === 'week' ? 'Week' : 'Month';\n      options.scales.xAxes[0].scaleLabel.labelString = level;\n      options2.scales.xAxes[0].scaleLabel.labelString = level;\n      editedLegendPercentages = Object.keys(uniqueWeek1).map(function (percentage) {\n        return \"\".concat(Number(percentage), \"%\");\n      });\n      legendPercentages = Object.keys(uniqueWeek).map(function (percentage) {\n        return \"\".concat(Number(percentage), \"%\");\n      });\n      return React.createElement(\"div\", {\n        className: this.props.isEdit && !_.isEmpty(this.props.editAnalysisData) ? 'edit-data-present' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row skuLabelStyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"skuLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, \"Style-Color\"), React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(Select, {\n        placeholder: \"Style-Color\",\n        value: this.props.selectedSku,\n        options: this.props.optionSku,\n        onChange: this.props.selectedSkuHandler,\n        isClearable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row analysis-overview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chartContainermain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"sellThroughLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, \"Sell Through %\"), React.createElement(\"div\", {\n        className: \"chartContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row j-c-c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, legendPercentages.map(function (percentage, index) {\n        return React.createElement(\"div\", {\n          className: \"d-flex\",\n          key: \"\".concat(Math.random() + index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415\n          },\n          __self: this\n        }, React.createElement(Tippy, {\n          style: {\n            cursor: 'pointer'\n          },\n          placement: 'left',\n          arrow: true,\n          distance: 10,\n          content: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 421\n            },\n            __self: this\n          }, \" MD \", percentage),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"color-box mr-2\",\n          style: {\n            cursor: 'pointer',\n            backgroundColor: Object.keys(uniqueWeek).map(function (percentage) {\n              return uniqueWeek[percentage].borderColor;\n            })[index]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"left-space\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432\n          },\n          __self: this\n        }, percentage));\n      }), editedLegendPercentages.map(function (percentage, index) {\n        return React.createElement(\"div\", {\n          className: \"d-flex\",\n          key: \"\".concat(Math.random() + index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436\n          },\n          __self: this\n        }, React.createElement(Tippy, {\n          style: {\n            cursor: 'pointer'\n          },\n          placement: 'left',\n          arrow: true,\n          distance: 10,\n          content: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 442\n            },\n            __self: this\n          }, \" MD \", percentage),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"color-box mr-2\",\n          style: {\n            cursor: 'pointer',\n            background: Object.keys(uniqueWeek1).map(function (percentage) {\n              return uniqueWeek1[percentage].background;\n            })[index]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"left-space\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 453\n          },\n          __self: this\n        }, percentage));\n      }), ' ')), React.createElement(LineChart, {\n        width: '681px',\n        height: '280px',\n        data: sellThroughData,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"chartContainermain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"sellThroughLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, \"Margin %\"), React.createElement(\"div\", {\n        className: \"chartContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row j-c-c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, legendPercentages.map(function (percentage, index) {\n        return React.createElement(\"div\", {\n          className: \"d-flex\",\n          key: \"\".concat(Math.random() + index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 470\n          },\n          __self: this\n        }, React.createElement(Tippy, {\n          style: {\n            cursor: 'pointer'\n          },\n          placement: 'left',\n          arrow: true,\n          distance: 10,\n          content: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 476\n            },\n            __self: this\n          }, \" MD \", percentage),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 471\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"color-box mr-2\",\n          style: {\n            cursor: 'pointer',\n            backgroundColor: Object.keys(uniqueWeek).map(function (percentage) {\n              return uniqueWeek[percentage].borderColor;\n            })[index]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 477\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"left-space\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 487\n          },\n          __self: this\n        }, percentage));\n      }), editedLegendPercentages.map(function (percentage, index) {\n        return React.createElement(\"div\", {\n          className: \"d-flex\",\n          key: \"\".concat(Math.random() + index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 491\n          },\n          __self: this\n        }, React.createElement(Tippy, {\n          style: {\n            cursor: 'pointer'\n          },\n          placement: 'left',\n          arrow: true,\n          distance: 10,\n          content: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 497\n            },\n            __self: this\n          }, \" MD \", percentage),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 492\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"color-box mr-2\",\n          style: {\n            cursor: 'pointer',\n            background: Object.keys(uniqueWeek1).map(function (percentage) {\n              return uniqueWeek1[percentage].background;\n            })[index]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 498\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"left-space\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 508\n          },\n          __self: this\n        }, percentage));\n      }))), React.createElement(LineChart, {\n        width: '681px',\n        height: '280px',\n        data: marginData,\n        options: options2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, React.createElement(AnalysisTable, {\n        tableData: this.props.analysisTable || [],\n        tableData2: this.props.editAnalysisData || [],\n        isEdit: this.props.isEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return MarkdownAnalysis;\n}(Component);\n\nexport default MarkdownAnalysis;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/MarkdownAnalysis/index.js"],"names":["React","Component","Tippy","Select","AnalysisTable","moment","LineChart","_","chartjs","pluginService","register","beforeDraw","chart","config","options","backgroundColor","ctx","chartArea","save","fillStyle","fillRect","left","top","right","bottom","restore","options2","plugins","datalabels","display","legend","position","labels","boxWidth","fontFamily","fontSize","maintainAspectRatio","scales","yAxes","gridLines","ticks","scaleLabel","show","fontStyle","fontColor","labelString","xAxes","id","autoSkip","autoSkipPadding","maxRotation","fontWeight","MarkdownAnalysis","props","state","borderColors","borderColors1","gradient","backgroundColors","backgroundColors1","uniqueWeek","markdownAnalysisGraphData","weekly_markdown","forEach","value","i","hasOwnProperty","pop","borderColor","uniqueWeek1","editMarkdownAnalysisGraphData","background","editedLegendPercentages","Object","keys","legendPercentages","weekNum","map","date","level","format","sellThroughData","datasets","label","data","sellThrough","m","steppedLine","marginData","margin","percentage","Number","isEdit","isEmpty","editAnalysisData","selectedSku","optionSku","selectedSkuHandler","index","Math","random","cursor","analysisTable"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,yBAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,aAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,KAAKC,OAAZ,MAAyB,UAAzB;AACAA,OAAO,CAACC,aAAR,CAAsBC,QAAtB,CAA+B;AAC7BC,EAAAA,UAAU,EAAE,oBAAUC,KAAV,EAAiB;AAC3B,QAAIA,KAAK,CAACC,MAAN,CAAaC,OAAb,IAAwBF,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqBC,eAAjD,EAAkE;AAChE,UAAIC,GAAG,GAAGJ,KAAK,CAACA,KAAN,CAAYI,GAAtB;AACA,UAAIC,SAAS,GAAGL,KAAK,CAACK,SAAtB;AACAD,MAAAA,GAAG,CAACE,IAAJ;AACAF,MAAAA,GAAG,CAACG,SAAJ,GAAgBP,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqBC,eAArC;AACAC,MAAAA,GAAG,CAACI,QAAJ,CACEH,SAAS,CAACI,IADZ,EAEEJ,SAAS,CAACK,GAFZ,EAGEL,SAAS,CAACM,KAAV,GAAkBN,SAAS,CAACI,IAH9B,EAIEJ,SAAS,CAACO,MAAV,GAAmBP,SAAS,CAACK,GAJ/B;AAMAN,MAAAA,GAAG,CAACS,OAAJ;AACD;AACF;AAf4B,CAA/B;AAkBA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE;AADC;AADL,GADM;AAMf;AAEAC,EAAAA,MAAM,EAAE;AACND,IAAAA,OAAO,EAAE,KADH;AAENE,IAAAA,QAAQ,EAAE,QAFJ;AAGNC,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAHF;AAMNC,IAAAA,UAAU,EAAE,WANN;AAONC,IAAAA,QAAQ,EAAE;AAPJ,GARO;AAiBfC,EAAAA,mBAAmB,EAAE,KAjBN;AAkBfC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,SAAS,EAAE;AACTV,QAAAA,OAAO,EAAE;AADA,OADb;AAIEW,MAAAA,KAAK,EAAE;AACLL,QAAAA,QAAQ,EAAE;AADL,OAJT;AAOEM,MAAAA,UAAU,EAAE;AACVC,QAAAA,IAAI,EAAE,IADI;AAEVb,QAAAA,OAAO,EAAE,IAFC;AAGVM,QAAAA,QAAQ,EAAE,EAHA;AAIVQ,QAAAA,SAAS,EAAE,MAJD;AAKVC,QAAAA,SAAS,EAAE,MALD;AAMVC,QAAAA,WAAW,EAAE;AANH;AAPd,KADK,CADD;AAmBNC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,EAAE,EAAE,UADN;AAEER,MAAAA,SAAS,EAAE;AACT;AACAV,QAAAA,OAAO,EAAE;AAFA,OAFb;AAMEW,MAAAA,KAAK,EAAE;AACLQ,QAAAA,QAAQ,EAAE,IADL;AAELC,QAAAA,eAAe,EAAE,EAFZ;AAGLC,QAAAA,WAAW,EAAE;AAHR,OANT;AAWET,MAAAA,UAAU,EAAE;AACVZ,QAAAA,OAAO,EAAE,IADC;AAEV;AACAsB,QAAAA,UAAU,EAAE,GAHF;AAIVR,QAAAA,SAAS,EAAE;AAJD;AAXd,KADK;AAnBD;AAlBO,CAAjB;AA2DA,IAAM7B,OAAO,GAAG;AACda,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE;AADC;AADL,GADK;AAMd;AAEAC,EAAAA,MAAM,EAAE;AACND,IAAAA,OAAO,EAAE,KADH;AAENE,IAAAA,QAAQ,EAAE,QAFJ;AAGNC,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAHF;AAMNC,IAAAA,UAAU,EAAE,WANN;AAONC,IAAAA,QAAQ,EAAE;AAPJ,GARM;AAiBdC,EAAAA,mBAAmB,EAAE,KAjBP;AAkBdC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,SAAS,EAAE;AACTV,QAAAA,OAAO,EAAE;AADA,OADb;AAIEW,MAAAA,KAAK,EAAE;AACLL,QAAAA,QAAQ,EAAE;AADL,OAJT;AAOEM,MAAAA,UAAU,EAAE;AACVC,QAAAA,IAAI,EAAE,IADI;AAEVb,QAAAA,OAAO,EAAE,IAFC;AAGVM,QAAAA,QAAQ,EAAE,EAHA;AAIVQ,QAAAA,SAAS,EAAE,MAJD;AAKVC,QAAAA,SAAS,EAAE,MALD;AAMVC,QAAAA,WAAW,EAAE;AANH;AAPd,KADK,CADD;AAmBNC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,EAAE,EAAE,UADN;AAEER,MAAAA,SAAS,EAAE;AACT;AACAV,QAAAA,OAAO,EAAE;AAFA,OAFb;AAMEW,MAAAA,KAAK,EAAE;AACLQ,QAAAA,QAAQ,EAAE,IADL;AAELC,QAAAA,eAAe,EAAE,EAFZ;AAGLC,QAAAA,WAAW,EAAE;AAHR,OANT;AAWET,MAAAA,UAAU,EAAE;AACVZ,QAAAA,OAAO,EAAE,IADC;AAEV;AACAsB,QAAAA,UAAU,EAAE,GAHF;AAIVR,QAAAA,SAAS,EAAE;AAJD;AAXd,KADK;AAnBD;AAlBM,CAAhB;;IA2DMS,gB;;;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFiB;AAGlB;;;;6BACQ;AAAA;;AACP,UAAMC,YAAY,GAAG,CACnB,SADmB,EAEnB,SAFmB,EAGnB,SAHmB,EAInB,SAJmB,EAKnB,SALmB,EAMnB,SANmB,EAOnB,SAPmB,EAQnB,SARmB,EASnB,SATmB,EAUnB,SAVmB,CAArB;AAYA,UAAMC,aAAa,GAAG,CACpB,SADoB,EAEpB,SAFoB,EAGpB,SAHoB,EAIpB,SAJoB,EAKpB,SALoB,EAMpB,SANoB,EAOpB,SAPoB,EAQpB,SARoB,EASpB,SAToB,EAUpB,SAVoB,CAAtB;AAYA,UAAMC,QAAQ,GAAG,CACf,yDADe,EAEf,yDAFe,EAGf,yDAHe,EAIf,yDAJe,EAKf,yDALe,EAMf,yDANe,EAOf,yDAPe,EAQf,yDARe,EASf,yDATe,EAUf,yDAVe,CAAjB;AAYA,UAAMC,gBAAgB,GAAG,CACvB,yBADuB,EAEvB,0BAFuB,EAGvB,0BAHuB,EAIvB,yBAJuB,EAKvB,yBALuB,EAMvB,yBANuB,EAOvB,yBAPuB,EAQvB,uBARuB,EASvB,yBATuB,EAUvB,wBAVuB,CAAzB;AAYA,UAAMC,iBAAiB,GAAG,CACxB,yBADwB,EAExB,0BAFwB,EAGxB,0BAHwB,EAIxB,yBAJwB,EAKxB,yBALwB,EAMxB,yBANwB,EAOxB,yBAPwB,EAQxB,uBARwB,EASxB,yBATwB,EAUxB,wBAVwB,CAA1B;AAYA,UAAIC,UAAU,GAAG,EAAjB;AACA,WAAKP,KAAL,CAAWQ,yBAAX,CAAqCC,eAArC,CAAqDC,OAArD,CAA6D,UAACC,KAAD,EAAQC,CAAR,EAAc;AACzE,YAAI,CAACL,UAAU,CAACM,cAAX,CAA0BF,KAA1B,CAAL,EAAuC;AACrCJ,UAAAA,UAAU,CAACI,KAAD,CAAV,GAAoB;AAClBjD,YAAAA,eAAe,EAAE2C,gBAAgB,CAACS,GAAjB,EADC,CAElB;;AAFkB,WAApB;AAKAP,UAAAA,UAAU,CAACI,KAAD,CAAV,CAAkBI,WAAlB,GAAgCb,YAAY,CAACY,GAAb,EAAhC;AACD;AACF,OATD;AAUA,UAAIE,WAAW,GAAG,EAAlB;AACA,WAAKhB,KAAL,CAAWiB,6BAAX,IACE,KAAKjB,KAAL,CAAWiB,6BAAX,CAAyCR,eAAzC,CAAyDC,OAAzD,CAAiE,UAACC,KAAD,EAAQC,CAAR,EAAc;AAC7E,YAAI,CAACI,WAAW,CAACH,cAAZ,CAA2BF,KAA3B,CAAL,EAAwC;AACtCK,UAAAA,WAAW,CAACL,KAAD,CAAX,GAAqB;AACnBjD,YAAAA,eAAe,EAAE4C,iBAAiB,CAACQ,GAAlB;AADE,WAArB;AAGAE,UAAAA,WAAW,CAACL,KAAD,CAAX,CAAmBI,WAAnB,GAAiCZ,aAAa,CAACW,GAAd,EAAjC;AACAE,UAAAA,WAAW,CAACL,KAAD,CAAX,CAAmBO,UAAnB,GAAgCd,QAAQ,CAACU,GAAT,EAAhC;AACD;AACF,OARD,CADF;AAUA,UAAIK,uBAAuB,GAAGC,MAAM,CAACC,IAAP,CAAYL,WAAZ,CAA9B;AAEA,UAAIM,iBAAiB,GAAGF,MAAM,CAACC,IAAP,CAAYd,UAAZ,CAAxB;AACA,UAAM5B,MAAM,GAAG,KAAKqB,KAAL,CAAWQ,yBAAX,CAAqCe,OAArC,CAA6CC,GAA7C,CAAiD,UAACC,IAAD,EAAU;AACxE,YAAI,MAAI,CAACzB,KAAL,CAAW0B,KAAX,KAAqB,MAAzB,EAAiC;AAC/B,iBAAOD,IAAP;AACD,SAFD,MAEO;AACL,iBAAOzE,MAAM,CAACyE,IAAD,CAAN,CAAaE,MAAb,CAAoB,QAApB,CAAP;AACD;AACF,OANc,CAAf;AAOA,UAAIC,eAAe,GAAG;AACpBjD,QAAAA,MAAM,EAAEA,MADY;AAEpBkD,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,QADT;AAEEC,UAAAA,IAAI,EAAE,KAAK/B,KAAL,CAAWQ,yBAAX,CAAqCwB,WAF7C;AAGEjB,UAAAA,WAAW,EAAE,KAAKf,KAAL,CAAWQ,yBAAX,CAAqCC,eAArC,CAAqDe,GAArD,CACX,UAACS,CAAD;AAAA,mBAAO1B,UAAU,CAAC0B,CAAD,CAAV,CAAclB,WAArB;AAAA,WADW,CAHf;AAMErD,UAAAA,eAAe,EAAE,KAAKsC,KAAL,CAAWQ,yBAAX,CAAqCC,eAArC,CAAqDe,GAArD,CACf,UAACS,CAAD;AAAA,mBAAO1B,UAAU,CAAC0B,CAAD,CAAV,CAAcvE,eAArB;AAAA,WADe,CANnB;AASEwE,UAAAA,WAAW,EAAE,IATf,CAUE;AACA;AACA;AACA;AACA;AACA;;AAfF,SADQ,EAkBR;AACEJ,UAAAA,KAAK,EAAE,QADT;AAEEC,UAAAA,IAAI,EACF,KAAK/B,KAAL,CAAWiB,6BAAX,IACA,KAAKjB,KAAL,CAAWiB,6BAAX,CAAyCe,WAJ7C;AAKEjB,UAAAA,WAAW,EACT,KAAKf,KAAL,CAAWiB,6BAAX,IACA,KAAKjB,KAAL,CAAWiB,6BAAX,CAAyCR,eAAzC,CAAyDe,GAAzD,CACE,UAACS,CAAD;AAAA,mBAAOjB,WAAW,CAACiB,CAAD,CAAX,CAAelB,WAAtB;AAAA,WADF,CAPJ;AAUErD,UAAAA,eAAe,EACb,KAAKsC,KAAL,CAAWiB,6BAAX,IACA,KAAKjB,KAAL,CAAWiB,6BAAX,CAAyCR,eAAzC,CAAyDe,GAAzD,CACE,UAACS,CAAD;AAAA,mBAAOjB,WAAW,CAACiB,CAAD,CAAX,CAAevE,eAAtB;AAAA,WADF,CAZJ;AAeEwE,UAAAA,WAAW,EAAE,IAff,CAiBE;AACA;AACA;AACA;AACA;AACA;;AAtBF,SAlBQ;AAFU,OAAtB;AA8CA,UAAIC,UAAU,GAAG;AACfxD,QAAAA,MAAM,EAAEA,MADO;AAEfkD,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,QADT;AAEEC,UAAAA,IAAI,EAAE,KAAK/B,KAAL,CAAWQ,yBAAX,CAAqC4B,MAF7C;AAGErB,UAAAA,WAAW,EAAE,KAAKf,KAAL,CAAWQ,yBAAX,CAAqCC,eAArC,CAAqDe,GAArD,CACX,UAACS,CAAD;AAAA,mBAAO1B,UAAU,CAAC0B,CAAD,CAAV,CAAclB,WAArB;AAAA,WADW,CAHf;AAMErD,UAAAA,eAAe,EAAE,KAAKsC,KAAL,CAAWQ,yBAAX,CAAqCC,eAArC,CAAqDe,GAArD,CACf,UAACS,CAAD;AAAA,mBAAO1B,UAAU,CAAC0B,CAAD,CAAV,CAAcvE,eAArB;AAAA,WADe,CANnB;AASEwE,UAAAA,WAAW,EAAE,IATf,CAWE;AACA;AACA;AACA;AACA;AACA;;AAhBF,SADQ,EAmBR;AACEJ,UAAAA,KAAK,EAAE,QADT;AAEEC,UAAAA,IAAI,EACF,KAAK/B,KAAL,CAAWiB,6BAAX,IACA,KAAKjB,KAAL,CAAWiB,6BAAX,CAAyCmB,MAJ7C;AAKErB,UAAAA,WAAW,EACT,KAAKf,KAAL,CAAWiB,6BAAX,IACA,KAAKjB,KAAL,CAAWiB,6BAAX,CAAyCR,eAAzC,CAAyDe,GAAzD,CACE,UAACS,CAAD;AAAA,mBAAOjB,WAAW,CAACiB,CAAD,CAAX,CAAelB,WAAtB;AAAA,WADF,CAPJ;AAUErD,UAAAA,eAAe,EACb,KAAKsC,KAAL,CAAWiB,6BAAX,IACA,KAAKjB,KAAL,CAAWiB,6BAAX,CAAyCR,eAAzC,CAAyDe,GAAzD,CACE,UAACS,CAAD;AAAA,mBAAOjB,WAAW,CAACiB,CAAD,CAAX,CAAevE,eAAtB;AAAA,WADF,CAZJ;AAeE;AACA;AACA;AACA;AACA;AACA;AACAwE,UAAAA,WAAW,EAAE;AArBf,SAnBQ;AAFK,OAAjB,CA3IO,CAyLP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAIR,KAAK,GAAG,KAAK1B,KAAL,CAAW0B,KAAX,KAAqB,MAArB,GAA8B,MAA9B,GAAuC,OAAnD;AACAjE,MAAAA,OAAO,CAACuB,MAAR,CAAeS,KAAf,CAAqB,CAArB,EAAwBL,UAAxB,CAAmCI,WAAnC,GAAiDkC,KAAjD;AACArD,MAAAA,QAAQ,CAACW,MAAT,CAAgBS,KAAhB,CAAsB,CAAtB,EAAyBL,UAAzB,CAAoCI,WAApC,GAAkDkC,KAAlD;AACAP,MAAAA,uBAAuB,GAAGC,MAAM,CAACC,IAAP,CAAYL,WAAZ,EAAyBQ,GAAzB,CACxB,UAACa,UAAD;AAAA,yBAAmBC,MAAM,CAACD,UAAD,CAAzB;AAAA,OADwB,CAA1B;AAGAf,MAAAA,iBAAiB,GAAGF,MAAM,CAACC,IAAP,CAAYd,UAAZ,EAAwBiB,GAAxB,CAA4B,UAACa,UAAD;AAAA,yBAAmBC,MAAM,CAACD,UAAD,CAAzB;AAAA,OAA5B,CAApB;AAEA,aACE;AACE,QAAA,SAAS,EACP,KAAKrC,KAAL,CAAWuC,MAAX,IAAqB,CAACrF,CAAC,CAACsF,OAAF,CAAU,KAAKxC,KAAL,CAAWyC,gBAArB,CAAtB,GAA+D,mBAA/D,GAAqF,EAFzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,WAAW,EAAC,aADd;AAEE,QAAA,KAAK,EAAE,KAAKzC,KAAL,CAAW0C,WAFpB;AAGE,QAAA,OAAO,EAAE,KAAK1C,KAAL,CAAW2C,SAHtB;AAIE,QAAA,QAAQ,EAAE,KAAK3C,KAAL,CAAW4C,kBAJvB;AAKE,QAAA,WAAW,MALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CADF,EAcE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGtB,iBAAiB,CAACE,GAAlB,CAAsB,UAACa,UAAD,EAAaQ,KAAb;AAAA,eACrB;AAAK,UAAA,SAAS,EAAC,QAAf;AAAwB,UAAA,GAAG,YAAKC,IAAI,CAACC,MAAL,KAAgBF,KAArB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AACE,UAAA,KAAK,EAAE;AAAEG,YAAAA,MAAM,EAAE;AAAV,WADT;AAEE,UAAA,SAAS,EAAE,MAFb;AAGE,UAAA,KAAK,EAAE,IAHT;AAIE,UAAA,QAAQ,EAAE,EAJZ;AAKE,UAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAUX,UAAV,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME;AACE,UAAA,SAAS,EAAC,gBADZ;AAEE,UAAA,KAAK,EAAE;AACLW,YAAAA,MAAM,EAAE,SADH;AAELtF,YAAAA,eAAe,EAAE0D,MAAM,CAACC,IAAP,CAAYd,UAAZ,EAAwBiB,GAAxB,CACf,UAACa,UAAD;AAAA,qBAAgB9B,UAAU,CAAC8B,UAAD,CAAV,CAAuBtB,WAAvC;AAAA,aADe,EAEf8B,KAFe;AAFZ,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,CADF,EAiBE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BR,UAA9B,CAjBF,CADqB;AAAA,OAAtB,CADH,EAsBGlB,uBAAuB,CAACK,GAAxB,CAA4B,UAACa,UAAD,EAAaQ,KAAb;AAAA,eAC3B;AAAK,UAAA,SAAS,EAAC,QAAf;AAAwB,UAAA,GAAG,YAAKC,IAAI,CAACC,MAAL,KAAgBF,KAArB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AACE,UAAA,KAAK,EAAE;AAAEG,YAAAA,MAAM,EAAE;AAAV,WADT;AAEE,UAAA,SAAS,EAAE,MAFb;AAGE,UAAA,KAAK,EAAE,IAHT;AAIE,UAAA,QAAQ,EAAE,EAJZ;AAKE,UAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAUX,UAAV,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME;AACE,UAAA,SAAS,EAAC,gBADZ;AAEE,UAAA,KAAK,EAAE;AACLW,YAAAA,MAAM,EAAE,SADH;AAEL9B,YAAAA,UAAU,EAAEE,MAAM,CAACC,IAAP,CAAYL,WAAZ,EAAyBQ,GAAzB,CACV,UAACa,UAAD;AAAA,qBAAgBrB,WAAW,CAACqB,UAAD,CAAX,CAAwBnB,UAAxC;AAAA,aADU,EAEV2B,KAFU;AAFP,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,CADF,EAiBE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BR,UAA9B,CAjBF,CAD2B;AAAA,OAA5B,CAtBH,EA0CM,GA1CN,CADF,CAFF,EAgDE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAE,OADT;AAEE,QAAA,MAAM,EAAE,OAFV;AAGE,QAAA,IAAI,EAAET,eAHR;AAIE,QAAA,OAAO,EAAEnE,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhDF,CADF,EAwDE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG6D,iBAAiB,CAACE,GAAlB,CAAsB,UAACa,UAAD,EAAaQ,KAAb;AAAA,eACrB;AAAK,UAAA,SAAS,EAAC,QAAf;AAAwB,UAAA,GAAG,YAAKC,IAAI,CAACC,MAAL,KAAgBF,KAArB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AACE,UAAA,KAAK,EAAE;AAAEG,YAAAA,MAAM,EAAE;AAAV,WADT;AAEE,UAAA,SAAS,EAAE,MAFb;AAGE,UAAA,KAAK,EAAE,IAHT;AAIE,UAAA,QAAQ,EAAE,EAJZ;AAKE,UAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAUX,UAAV,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME;AACE,UAAA,SAAS,EAAC,gBADZ;AAEE,UAAA,KAAK,EAAE;AACLW,YAAAA,MAAM,EAAE,SADH;AAELtF,YAAAA,eAAe,EAAE0D,MAAM,CAACC,IAAP,CAAYd,UAAZ,EAAwBiB,GAAxB,CACf,UAACa,UAAD;AAAA,qBAAgB9B,UAAU,CAAC8B,UAAD,CAAV,CAAuBtB,WAAvC;AAAA,aADe,EAEf8B,KAFe;AAFZ,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,CADF,EAiBE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BR,UAA9B,CAjBF,CADqB;AAAA,OAAtB,CADH,EAsBGlB,uBAAuB,CAACK,GAAxB,CAA4B,UAACa,UAAD,EAAaQ,KAAb;AAAA,eAC3B;AAAK,UAAA,SAAS,EAAC,QAAf;AAAwB,UAAA,GAAG,YAAKC,IAAI,CAACC,MAAL,KAAgBF,KAArB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AACE,UAAA,KAAK,EAAE;AAAEG,YAAAA,MAAM,EAAE;AAAV,WADT;AAEE,UAAA,SAAS,EAAE,MAFb;AAGE,UAAA,KAAK,EAAE,IAHT;AAIE,UAAA,QAAQ,EAAE,EAJZ;AAKE,UAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAUX,UAAV,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME;AACE,UAAA,SAAS,EAAC,gBADZ;AAEE,UAAA,KAAK,EAAE;AACLW,YAAAA,MAAM,EAAE,SADH;AAEL9B,YAAAA,UAAU,EAAEE,MAAM,CAACC,IAAP,CAAYL,WAAZ,EAAyBQ,GAAzB,CACV,UAACa,UAAD;AAAA,qBAAgBrB,WAAW,CAACqB,UAAD,CAAX,CAAwBnB,UAAxC;AAAA,aADU,EAEV2B,KAFU;AAFP,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,CADF,EAiBE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BR,UAA9B,CAjBF,CAD2B;AAAA,OAA5B,CAtBH,CADF,CAFF,EAgDE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,OAAlB;AAA2B,QAAA,MAAM,EAAE,OAAnC;AAA4C,QAAA,IAAI,EAAEF,UAAlD;AAA8D,QAAA,OAAO,EAAE9D,QAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhDF,CAxDF,CADF,EA4GE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACE,QAAA,SAAS,EAAE,KAAK2B,KAAL,CAAWiD,aAAX,IAA4B,EADzC;AAEE,QAAA,UAAU,EAAE,KAAKjD,KAAL,CAAWyC,gBAAX,IAA+B,EAF7C;AAGE,QAAA,MAAM,EAAE,KAAKzC,KAAL,CAAWuC,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA5GF,CAdF,CAJF,CADF;AA0ID;;;;EA5X4B3F,S;;AA+X/B,eAAemD,gBAAf","sourcesContent":["import React, { Component } from 'react';\nimport Tippy from '@tippy.js/react';\nimport Select from 'react-select';\nimport AnalysisTable from '../MarkdownAnalysis/AnalysisTable';\nimport moment from 'moment';\nimport 'tippy.js/dist/tippy.css';\nimport LineChart from '../support/Charts/LineChart';\nimport './index.css';\nimport _ from 'lodash';\nimport * as chartjs from 'chart.js';\nchartjs.pluginService.register({\n  beforeDraw: function (chart) {\n    if (chart.config.options && chart.config.options.backgroundColor) {\n      var ctx = chart.chart.ctx;\n      var chartArea = chart.chartArea;\n      ctx.save();\n      ctx.fillStyle = chart.config.options.backgroundColor;\n      ctx.fillRect(\n        chartArea.left,\n        chartArea.top,\n        chartArea.right - chartArea.left,\n        chartArea.bottom - chartArea.top\n      );\n      ctx.restore();\n    }\n  },\n});\n\nconst options2 = {\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  // backgroundColor: '#fff',\n\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12,\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px',\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n        },\n        ticks: {\n          fontSize: 13,\n        },\n        scaleLabel: {\n          show: true,\n          display: true,\n          fontSize: 14,\n          fontStyle: 'bold',\n          fontColor: '#000',\n          labelString: 'Margin %',\n        },\n      },\n    ],\n    xAxes: [\n      {\n        id: 'x-axis-0',\n        gridLines: {\n          // color: '#aeaeae5e',\n          display: false,\n        },\n        ticks: {\n          autoSkip: true,\n          autoSkipPadding: 40,\n          maxRotation: 0,\n        },\n        scaleLabel: {\n          display: true,\n          // labelString: \"Time (week)\",\n          fontWeight: 900,\n          fontStyle: 'bold',\n        },\n      },\n    ],\n  },\n};\nconst options = {\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  // backgroundColor: '#fff',\n\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12,\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px',\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n        },\n        ticks: {\n          fontSize: 13,\n        },\n        scaleLabel: {\n          show: true,\n          display: true,\n          fontSize: 14,\n          fontStyle: 'bold',\n          fontColor: '#000',\n          labelString: 'Sell Through %',\n        },\n      },\n    ],\n    xAxes: [\n      {\n        id: 'x-axis-0',\n        gridLines: {\n          // color: '#aeaeae5e',\n          display: false,\n        },\n        ticks: {\n          autoSkip: true,\n          autoSkipPadding: 40,\n          maxRotation: 0,\n        },\n        scaleLabel: {\n          display: true,\n          // labelString: \"Time (week)\",\n          fontWeight: 900,\n          fontStyle: 'bold',\n        },\n      },\n    ],\n  },\n};\nclass MarkdownAnalysis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const borderColors = [\n      '#44677B',\n      '#6F9FC3',\n      '#83BE8C',\n      '#88ad5f',\n      '#b06d58',\n      '#86588a',\n      '#17a69c',\n      '#b0a819',\n      '#d97c30',\n      '#5d5b85',\n    ];\n    const borderColors1 = [\n      '#44677B',\n      '#6F9FC3',\n      '#83BE8C',\n      '#88ad5f',\n      '#b06d58',\n      '#86588a',\n      '#17a69c',\n      '#b0a819',\n      '#d97c30',\n      '#5d5b85',\n    ];\n    const gradient = [\n      'repeating-linear-gradient(-44deg, #44677B 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #6F9FC3 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #83BE8C 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #88ad5f 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #b06d58 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #86588a 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #17a69c 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #b0a819 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #d97c30 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #5d5b85 5%,white 9px)',\n    ];\n    const backgroundColors = [\n      'rgba(68, 103, 123, 0.4)',\n      'rgba(166, 206, 227, 0.4)',\n      'rgba(131, 190, 140, 0.4)',\n      'rgba(136, 173, 95, 0.4)',\n      'rgba(176, 109, 88, 0.4)',\n      'rgba(134, 88, 138, 0.4)',\n      'rgba(23, 166, 156, 0.4)',\n      'rgba(89, 86, 25, 0.4)',\n      'rgba(217, 124, 48, 0.4)',\n      'rgba(93, 91, 133, 0.4)',\n    ];\n    const backgroundColors1 = [\n      'rgba(68, 103, 123, 0.3)',\n      'rgba(166, 206, 227, 0.3)',\n      'rgba(131, 190, 140, 0.3)',\n      'rgba(136, 173, 95, 0.3)',\n      'rgba(176, 109, 88, 0.3)',\n      'rgba(134, 88, 138, 0.3)',\n      'rgba(23, 166, 156, 0.3)',\n      'rgba(89, 86, 25, 0.3)',\n      'rgba(217, 124, 48, 0.3)',\n      'rgba(93, 91, 133, 0.3)',\n    ];\n    let uniqueWeek = {};\n    this.props.markdownAnalysisGraphData.weekly_markdown.forEach((value, i) => {\n      if (!uniqueWeek.hasOwnProperty(value)) {\n        uniqueWeek[value] = {\n          backgroundColor: backgroundColors.pop(),\n          // backgroundColor1: backgroundColors1.pop(),\n        };\n\n        uniqueWeek[value].borderColor = borderColors.pop();\n      }\n    });\n    let uniqueWeek1 = {};\n    this.props.editMarkdownAnalysisGraphData &&\n      this.props.editMarkdownAnalysisGraphData.weekly_markdown.forEach((value, i) => {\n        if (!uniqueWeek1.hasOwnProperty(value)) {\n          uniqueWeek1[value] = {\n            backgroundColor: backgroundColors1.pop(),\n          };\n          uniqueWeek1[value].borderColor = borderColors1.pop();\n          uniqueWeek1[value].background = gradient.pop();\n        }\n      });\n    let editedLegendPercentages = Object.keys(uniqueWeek1);\n\n    let legendPercentages = Object.keys(uniqueWeek);\n    const labels = this.props.markdownAnalysisGraphData.weekNum.map((date) => {\n      if (this.props.level === 'week') {\n        return date;\n      } else {\n        return moment(date).format('MMM DD');\n      }\n    });\n    let sellThroughData = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'chart1',\n          data: this.props.markdownAnalysisGraphData.sellThrough,\n          borderColor: this.props.markdownAnalysisGraphData.weekly_markdown.map(\n            (m) => uniqueWeek[m].borderColor\n          ),\n          backgroundColor: this.props.markdownAnalysisGraphData.weekly_markdown.map(\n            (m) => uniqueWeek[m].backgroundColor\n          ),\n          steppedLine: true,\n          // borderWidth: {\n          //   top: 3,\n          //   right: 0,\n          //   bottom: 0,\n          //   left: 0,\n          // },\n        },\n        {\n          label: 'label2',\n          data:\n            this.props.editMarkdownAnalysisGraphData &&\n            this.props.editMarkdownAnalysisGraphData.sellThrough,\n          borderColor:\n            this.props.editMarkdownAnalysisGraphData &&\n            this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n              (m) => uniqueWeek1[m].borderColor\n            ),\n          backgroundColor:\n            this.props.editMarkdownAnalysisGraphData &&\n            this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n              (m) => uniqueWeek1[m].backgroundColor\n            ),\n          steppedLine: true,\n\n          // borderWidth: {\n          //   top: 3,\n          //   right: 0,\n          //   bottom: 0,\n          //   left: 0,\n          // },\n        },\n      ],\n    };\n    let marginData = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'chart1',\n          data: this.props.markdownAnalysisGraphData.margin,\n          borderColor: this.props.markdownAnalysisGraphData.weekly_markdown.map(\n            (m) => uniqueWeek[m].borderColor\n          ),\n          backgroundColor: this.props.markdownAnalysisGraphData.weekly_markdown.map(\n            (m) => uniqueWeek[m].backgroundColor\n          ),\n          steppedLine: true,\n\n          // borderWidth: {\n          //   top: 3,\n          //   right: 0,\n          //   bottom: 0,\n          //   left: 0,\n          // },\n        },\n        {\n          label: 'label2',\n          data:\n            this.props.editMarkdownAnalysisGraphData &&\n            this.props.editMarkdownAnalysisGraphData.margin,\n          borderColor:\n            this.props.editMarkdownAnalysisGraphData &&\n            this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n              (m) => uniqueWeek1[m].borderColor\n            ),\n          backgroundColor:\n            this.props.editMarkdownAnalysisGraphData &&\n            this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n              (m) => uniqueWeek1[m].backgroundColor\n            ),\n          // borderWidth: {\n          //   top: 3,\n          //   right: 0,\n          //   bottom: 0,\n          //   left: 0,\n          // },\n          steppedLine: true,\n        },\n      ],\n    };\n    // if (this.props.isEdit && !_.isEmpty(this.props.editMarkdownAnalysisGraphData)) {\n    //   let uniqueWeek1 = {};\n    //   this.props.editMarkdownAnalysisGraphData.weekly_markdown.forEach((value, i) => {\n    //     if (!uniqueWeek1.hasOwnProperty(value)) {\n    //       uniqueWeek1[value] = {\n    //         backgroundColor1: backgroundColors1.pop(),\n    //       };\n    //       uniqueWeek1[value].borderColor = borderColors.pop();\n    //     }\n    //   });\n\n    //   sellThroughData.datasets.push({\n    //     label: 'chart2',\n    //     data: this.props.editMarkdownAnalysisGraphData.sellThrough,\n    //     borderColor: this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n    //       (m) => uniqueWeek1[m].borderColor\n    //     ),\n    //     backgroundColor: this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n    //       (m) => uniqueWeek1[m].backgroundColor1\n    //     ),\n    //     borderWidth: {\n    //       top: 3,\n    //       right: 0,\n    //       bottom: 0,\n    //       left: 0,\n    //     },\n    //   });\n\n    //   marginData.datasets.push({\n    //     data: this.props.editMarkdownAnalysisGraphData.margin,\n    //     borderColor: this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n    //       (m) => uniqueWeek1[m].borderColor\n    //     ),\n    //     backgroundColor: this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n    //       (m) => uniqueWeek1[m].backgroundColor1\n    //     ),\n    //     borderWidth: {\n    //       top: 3,\n    //       right: 0,\n    //       bottom: 0,\n    //       left: 0,\n    //     },\n    //   });\n    // }\n    let level = this.props.level === 'week' ? 'Week' : 'Month';\n    options.scales.xAxes[0].scaleLabel.labelString = level;\n    options2.scales.xAxes[0].scaleLabel.labelString = level;\n    editedLegendPercentages = Object.keys(uniqueWeek1).map(\n      (percentage) => `${Number(percentage)}%`\n    );\n    legendPercentages = Object.keys(uniqueWeek).map((percentage) => `${Number(percentage)}%`);\n\n    return (\n      <div\n        className={\n          this.props.isEdit && !_.isEmpty(this.props.editAnalysisData) ? 'edit-data-present' : ''\n        }>\n        <div className=\"mb-4\">\n          <div className=\"row skuLabelStyle\">\n            <label className=\"skuLabel\">Style-Color</label>\n            <div className=\"col-md-2\">\n              <Select\n                placeholder=\"Style-Color\"\n                value={this.props.selectedSku}\n                options={this.props.optionSku}\n                onChange={this.props.selectedSkuHandler}\n                isClearable\n              />\n            </div>\n          </div>\n\n          <div className=\"row analysis-overview\">\n            <div className=\"col\">\n              <div className=\"chartContainermain\">\n                <label className=\"sellThroughLabel\">Sell Through %</label>\n                <div className=\"chartContainer\">\n                  <div className=\"row j-c-c\">\n                    {legendPercentages.map((percentage, index) => (\n                      <div className=\"d-flex\" key={`${Math.random() + index}`}>\n                        <Tippy\n                          style={{ cursor: 'pointer' }}\n                          placement={'left'}\n                          arrow={true}\n                          distance={10}\n                          content={<div> MD {percentage}</div>}>\n                          <div\n                            className=\"color-box mr-2\"\n                            style={{\n                              cursor: 'pointer',\n                              backgroundColor: Object.keys(uniqueWeek).map(\n                                (percentage) => uniqueWeek[percentage].borderColor\n                              )[index],\n                            }}\n                          />\n                        </Tippy>\n                        <span className=\"left-space\">{percentage}</span>\n                      </div>\n                    ))}\n                    {editedLegendPercentages.map((percentage, index) => (\n                      <div className=\"d-flex\" key={`${Math.random() + index}`}>\n                        <Tippy\n                          style={{ cursor: 'pointer' }}\n                          placement={'left'}\n                          arrow={true}\n                          distance={10}\n                          content={<div> MD {percentage}</div>}>\n                          <div\n                            className=\"color-box mr-2\"\n                            style={{\n                              cursor: 'pointer',\n                              background: Object.keys(uniqueWeek1).map(\n                                (percentage) => uniqueWeek1[percentage].background\n                              )[index],\n                            }}\n                          />\n                        </Tippy>\n                        <span className=\"left-space\">{percentage}</span>\n                      </div>\n                    ))}{' '}\n                  </div>\n                </div>\n                <LineChart\n                  width={'681px'}\n                  height={'280px'}\n                  data={sellThroughData}\n                  options={options}\n                />\n              </div>\n              <div className=\"chartContainermain\">\n                <label className=\"sellThroughLabel\">Margin %</label>\n                <div className=\"chartContainer\">\n                  <div className=\"row j-c-c\">\n                    {legendPercentages.map((percentage, index) => (\n                      <div className=\"d-flex\" key={`${Math.random() + index}`}>\n                        <Tippy\n                          style={{ cursor: 'pointer' }}\n                          placement={'left'}\n                          arrow={true}\n                          distance={10}\n                          content={<div> MD {percentage}</div>}>\n                          <div\n                            className=\"color-box mr-2\"\n                            style={{\n                              cursor: 'pointer',\n                              backgroundColor: Object.keys(uniqueWeek).map(\n                                (percentage) => uniqueWeek[percentage].borderColor\n                              )[index],\n                            }}\n                          />\n                        </Tippy>\n                        <span className=\"left-space\">{percentage}</span>\n                      </div>\n                    ))}\n                    {editedLegendPercentages.map((percentage, index) => (\n                      <div className=\"d-flex\" key={`${Math.random() + index}`}>\n                        <Tippy\n                          style={{ cursor: 'pointer' }}\n                          placement={'left'}\n                          arrow={true}\n                          distance={10}\n                          content={<div> MD {percentage}</div>}>\n                          <div\n                            className=\"color-box mr-2\"\n                            style={{\n                              cursor: 'pointer',\n                              background: Object.keys(uniqueWeek1).map(\n                                (percentage) => uniqueWeek1[percentage].background\n                              )[index],\n                            }}\n                          />\n                        </Tippy>\n                        <span className=\"left-space\">{percentage}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                <LineChart width={'681px'} height={'280px'} data={marginData} options={options2} />\n              </div>\n            </div>\n            <div className=\"col mt-4\">\n              <AnalysisTable\n                tableData={this.props.analysisTable || []}\n                tableData2={this.props.editAnalysisData || []}\n                isEdit={this.props.isEdit}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MarkdownAnalysis;\n"]},"metadata":{},"sourceType":"module"}