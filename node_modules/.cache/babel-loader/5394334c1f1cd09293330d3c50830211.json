{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Planned Reports/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Filters from '../../services/filters';\nimport CardComponent from '../../services/cardComponent/cardComponent';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport styled from 'styled-components';\nimport plannedReportsAction from '../../actions/plannedReportsAction';\nimport _ from 'lodash';\nimport LoadingOverlay from '../../utils/Loader';\nimport card1Image from '../../images/card1Image.png';\nimport card2Image from '../../images/card2Image.png';\nimport card3Image from '../../images/card3Image.png';\nimport card4Image from '../../images/card4Image.png';\nimport { toUnit } from '../../helper/formatter';\nimport { toast } from 'react-toastify';\nvar options = [{\n  label: 'Sell Through',\n  value: '1'\n}, {\n  label: 'Margin %',\n  value: '2'\n}, {\n  label: 'Mark Down %',\n  value: '3'\n}];\nvar attributes = ['Margin', 'Sales', 'Inventory'];\n\nvar planedReport =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(planedReport, _Component);\n\n  function planedReport(_props) {\n    var _this;\n\n    _classCallCheck(this, planedReport);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(planedReport).call(this, _props));\n\n    _this.onHandleSelect = function (selectValues) {\n      return _this.setState({\n        selectValues: selectValues\n      });\n    };\n\n    _this.validateFilters = function () {\n      return _this.props.selectedHierarchy1 && _this.props.selectedHierarchy2.length && _this.props.selectedHierarchy3.length && _this.props.selectedHierarchy4.length && _this.props.selectedHierarchy5.length && _this.props.selectedStores.length;\n    };\n\n    _this.onFilter = function (filters) {\n      // if (!this.validateFilters()) {\n      //   toast.error(`Please select mandatory filters`, {\n      //     autoClose: 15000,\n      //     hideProgressBar: true,\n      //   });\n      //   return;\n      // }\n      var req = {\n        filters: {\n          hierarchy1: _this.props.selectedHierarchy1,\n          hierarchy2: _this.props.selectedHierarchy2,\n          hierarchy3: _this.props.selectedHierarchy3,\n          hierarchy4: _this.props.selectedHierarchy4,\n          hierarchy5: _this.props.selectedHierarchy5,\n          hierarchy6: _this.props.selectedHierarchy6\n        },\n        startDate: _this.props.startDate,\n        endDate: _this.props.endDate,\n        week: _this.props.weeks\n      }; // req = {\n      //   filters: {\n      //     hierarchy1: ['MENS'],\n      //     hierarchy2: ['SPORTSWEAR MENS TEES'],\n      //     hierarchy3: ['SPW MENS TEES'],\n      //     hierarchy4: ['LS TEE'],\n      //     hierarchy5: ['seasonal key items'],\n      //     hierarchy6: ['Prior to Jan20'],\n      //   },\n      //   startDate: '06-01-2020',\n      //   endDate: '08-02-2020',\n      //   week: [23, 24, 25, 26, 27, 28, 29, 30, 31],\n      // };\n      // req = {\n      //   filters: {\n      //     hierarchy1: ['MENS'],\n      //     hierarchy2: ['SPORTSWEAR MENS TEES'],\n      //     hierarchy3: ['SPW MENS TEES'],\n      //     hierarchy4: ['LS TEE'],\n      //   },\n      //   hierarchyType: 'HIERARCHY5',\n      // };\n\n      _this.props.fetchPlannedReports(req);\n    };\n\n    _this.coldef = function () {\n      if (_this.props.getPlannedTableData.length) {\n        var columns = [{\n          Header: 'Plan ID',\n          accessor: 'promo_code',\n          disableGroupBy: true,\n          //   width: 50,\n          align: 'left',\n          enableRowSpan: true\n        }, {\n          Header: 'Plan',\n          accessor: 'plan',\n          disableGroupBy: true,\n          //   width: 50,\n          align: 'center',\n          enableRowSpan: true\n        }, {\n          Header: 'Scenario',\n          accessor: 'scenario',\n          disableGroupBy: true,\n          enableRowSpan: true,\n          //   width: 50,\n          align: 'left'\n        }, {\n          Header: 'Start Date',\n          accessor: 'startDate',\n          disableGroupBy: true,\n          // enableRowSpan: true,\n          //   width: 50,\n          align: 'left'\n        }, {\n          Header: 'End Date',\n          accessor: 'endDate',\n          disableGroupBy: true,\n          // enableRowSpan: true,\n          //   width: 50,\n          align: 'left'\n        }, {\n          Header: 'Metrics',\n          accessor: 'metrices',\n          disableGroupBy: true,\n          //   width: 50,\n          align: 'left'\n        }]; // Object.keys(this.props.getPlannedTableData[0]).forEach((i) => {\n        //   if (!columns.map((c) => c.accessor).includes(i)) {\n        //     columns.push({\n        //       Header: i,\n        //       accessor: i,\n        //       disableGroupBy: true,\n        //       Cell: (props) => <div> {toUnit(props)} </div>,\n        //     });\n        //   }\n        // });\n\n        _this.props.weeks.forEach(function (week) {\n          columns.push({\n            Header: 'w' + week,\n            accessor: 'w' + week,\n            disableGroupBy: true,\n            Cell: function Cell(props) {\n              return React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 202\n                },\n                __self: this\n              }, \" \", props.value ? toUnit(props) : '-', \" \");\n            }\n          });\n        });\n\n        return columns;\n      } else return [];\n    };\n\n    _this.state = {\n      filters: [{\n        type: 'hierarchy1',\n        isMandatory: true,\n        isMultiple: false\n      }, {\n        type: 'hierarchy2',\n        isMandatory: true,\n        isMultiple: true\n      }, {\n        type: 'hierarchy3',\n        isMandatory: true,\n        isMultiple: true\n      }, {\n        type: 'hierarchy4',\n        isMandatory: true,\n        isMultiple: true\n      }, {\n        type: 'hierarchy5',\n        isMandatory: true,\n        isMultiple: true\n      }, {\n        type: 'hierarchy6',\n        isMandatory: false,\n        isMultiple: true\n      }],\n      selectedItems: [],\n      firstCardText: 'Avg Markdown',\n      secondCardText: 'Sell through %',\n      thirdCardText: 'Margin %',\n      fourthCardText: 'Quantity Sold',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month'\n    };\n    return _this;\n  }\n\n  _createClass(planedReport, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          getPlannedMetricOptions = _this$props.getPlannedMetricOptions,\n          getPlannedTableData = _this$props.getPlannedTableData;\n      return React.createElement(\"div\", {\n        className: \"planned-report pl-2 pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"font-size-14  pad-10 markdown-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Markdown Optimization /\", React.createElement(\"span\", {\n        className: \"font-bold color-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Actual Vs Planned Reports\"))), React.createElement(\"hr\", {\n        className: \"mb-2\",\n        style: {\n          marginTop: '-4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(Filters, {\n        onFilter: this.onFilter,\n        drop: true,\n        stores: true,\n        dateRange: true,\n        hierarchy: this.state.filters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        className: \"dotted-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      })), React.createElement(LoadingOverlay, {\n        loader: this.props.overlayLoaderState,\n        spinner: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card CalendarMain promoCalendarDiv1 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(ColSelBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          padding: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"Download\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"fa fa-download btn-padding\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"pad-15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        columns: this.coldef(),\n        data: getPlannedTableData,\n        isPagination: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return planedReport;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    overlayLoaderState: store.loaderReducer.overlayLoaderState,\n    getPlannedTableData: store.plannedReportReducer.plannedReportsTableData,\n    getPlannedMetricOptions: store.plannedReportReducer.metricOptions.draft,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks\n  };\n};\n\nvar mapActionsToProps = {\n  fetchPlannedReports: plannedReportsAction.fetchPlannedReports\n};\nexport default connect(mapStateToProps, mapActionsToProps)(planedReport); // export default planedReport;\n\nvar ColSelBtn = styled.div(_templateObject());","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Planned Reports/index.js"],"names":["React","Component","connect","Filters","CardComponent","DataTable","ColumnSelection","styled","plannedReportsAction","_","LoadingOverlay","card1Image","card2Image","card3Image","card4Image","toUnit","toast","options","label","value","attributes","planedReport","props","onHandleSelect","selectValues","setState","validateFilters","selectedHierarchy1","selectedHierarchy2","length","selectedHierarchy3","selectedHierarchy4","selectedHierarchy5","selectedStores","onFilter","filters","req","hierarchy1","hierarchy2","hierarchy3","hierarchy4","hierarchy5","hierarchy6","selectedHierarchy6","startDate","endDate","week","weeks","fetchPlannedReports","coldef","getPlannedTableData","columns","Header","accessor","disableGroupBy","align","enableRowSpan","forEach","push","Cell","state","type","isMandatory","isMultiple","selectedItems","firstCardText","secondCardText","thirdCardText","fourthCardText","firstCardFirstValue","firstCardSecondValue","secondCardFirstValue","secondCardSecondValue","thirdCardFirstValue","thirdCardSecondValue","fourthCardFirstValue","fourthCardSecondValue","cardWeekText","cardMonthText","getPlannedMetricOptions","marginTop","overlayLoaderState","padding","mapStateToProps","store","loaderReducer","plannedReportReducer","plannedReportsTableData","metricOptions","draft","filtersReducer","mapActionsToProps","ColSelBtn","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Filters from '../../services/filters';\nimport CardComponent from '../../services/cardComponent/cardComponent';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport styled from 'styled-components';\nimport plannedReportsAction from '../../actions/plannedReportsAction';\nimport _ from 'lodash';\nimport LoadingOverlay from '../../utils/Loader';\n\nimport card1Image from '../../images/card1Image.png';\nimport card2Image from '../../images/card2Image.png';\nimport card3Image from '../../images/card3Image.png';\nimport card4Image from '../../images/card4Image.png';\nimport { toUnit } from '../../helper/formatter';\nimport { toast } from 'react-toastify';\n\nconst options = [\n  { label: 'Sell Through', value: '1' },\n  { label: 'Margin %', value: '2' },\n  { label: 'Mark Down %', value: '3' },\n];\nconst attributes = ['Margin', 'Sales', 'Inventory'];\n\nclass planedReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filters: [\n        {\n          type: 'hierarchy1',\n          isMandatory: true,\n          isMultiple: false,\n        },\n        {\n          type: 'hierarchy2',\n          isMandatory: true,\n          isMultiple: true,\n        },\n        {\n          type: 'hierarchy3',\n          isMandatory: true,\n          isMultiple: true,\n        },\n        {\n          type: 'hierarchy4',\n          isMandatory: true,\n          isMultiple: true,\n        },\n        {\n          type: 'hierarchy5',\n          isMandatory: true,\n          isMultiple: true,\n        },\n        {\n          type: 'hierarchy6',\n          isMandatory: false,\n          isMultiple: true,\n        },\n      ],\n\n      selectedItems: [],\n      firstCardText: 'Avg Markdown',\n      secondCardText: 'Sell through %',\n      thirdCardText: 'Margin %',\n      fourthCardText: 'Quantity Sold',\n      firstCardFirstValue: '12%',\n      firstCardSecondValue: '24%',\n      secondCardFirstValue: '16%',\n      secondCardSecondValue: '20%',\n      thirdCardFirstValue: '6%',\n      thirdCardSecondValue: '10%',\n      fourthCardFirstValue: '345',\n      fourthCardSecondValue: '3,457',\n      cardWeekText: 'this Week',\n      cardMonthText: 'this Month',\n    };\n  }\n  onHandleSelect = (selectValues) => this.setState({ selectValues });\n  validateFilters = () => {\n    return (\n      this.props.selectedHierarchy1 &&\n      this.props.selectedHierarchy2.length &&\n      this.props.selectedHierarchy3.length &&\n      this.props.selectedHierarchy4.length &&\n      this.props.selectedHierarchy5.length &&\n      this.props.selectedStores.length\n    );\n  };\n  onFilter = (filters) => {\n    // if (!this.validateFilters()) {\n    //   toast.error(`Please select mandatory filters`, {\n    //     autoClose: 15000,\n    //     hideProgressBar: true,\n    //   });\n    //   return;\n    // }\n    let req = {\n      filters: {\n        hierarchy1: this.props.selectedHierarchy1,\n        hierarchy2: this.props.selectedHierarchy2,\n        hierarchy3: this.props.selectedHierarchy3,\n        hierarchy4: this.props.selectedHierarchy4,\n        hierarchy5: this.props.selectedHierarchy5,\n        hierarchy6: this.props.selectedHierarchy6,\n      },\n      startDate: this.props.startDate,\n      endDate: this.props.endDate,\n      week: this.props.weeks,\n    };\n    // req = {\n    //   filters: {\n    //     hierarchy1: ['MENS'],\n    //     hierarchy2: ['SPORTSWEAR MENS TEES'],\n    //     hierarchy3: ['SPW MENS TEES'],\n    //     hierarchy4: ['LS TEE'],\n    //     hierarchy5: ['seasonal key items'],\n    //     hierarchy6: ['Prior to Jan20'],\n    //   },\n    //   startDate: '06-01-2020',\n    //   endDate: '08-02-2020',\n    //   week: [23, 24, 25, 26, 27, 28, 29, 30, 31],\n    // };\n    // req = {\n    //   filters: {\n    //     hierarchy1: ['MENS'],\n    //     hierarchy2: ['SPORTSWEAR MENS TEES'],\n    //     hierarchy3: ['SPW MENS TEES'],\n    //     hierarchy4: ['LS TEE'],\n    //   },\n    //   hierarchyType: 'HIERARCHY5',\n    // };\n    this.props.fetchPlannedReports(req);\n  };\n  coldef = () => {\n    if (this.props.getPlannedTableData.length) {\n      let columns = [\n        {\n          Header: 'Plan ID',\n          accessor: 'promo_code',\n          disableGroupBy: true,\n          //   width: 50,\n          align: 'left',\n          enableRowSpan: true,\n        },\n        {\n          Header: 'Plan',\n          accessor: 'plan',\n          disableGroupBy: true,\n          //   width: 50,\n          align: 'center',\n          enableRowSpan: true,\n        },\n        {\n          Header: 'Scenario',\n          accessor: 'scenario',\n          disableGroupBy: true,\n          enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n        },\n        {\n          Header: 'Start Date',\n          accessor: 'startDate',\n          disableGroupBy: true,\n          // enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n        },\n        {\n          Header: 'End Date',\n          accessor: 'endDate',\n          disableGroupBy: true,\n          // enableRowSpan: true,\n          //   width: 50,\n          align: 'left',\n        },\n        {\n          Header: 'Metrics',\n          accessor: 'metrices',\n          disableGroupBy: true,\n          //   width: 50,\n          align: 'left',\n        },\n      ];\n      // Object.keys(this.props.getPlannedTableData[0]).forEach((i) => {\n      //   if (!columns.map((c) => c.accessor).includes(i)) {\n      //     columns.push({\n      //       Header: i,\n      //       accessor: i,\n      //       disableGroupBy: true,\n      //       Cell: (props) => <div> {toUnit(props)} </div>,\n      //     });\n      //   }\n      // });\n      this.props.weeks.forEach((week) => {\n        columns.push({\n          Header: 'w' + week,\n          accessor: 'w' + week,\n          disableGroupBy: true,\n          Cell: (props) => <div> {props.value ? toUnit(props) : '-'} </div>,\n        });\n      });\n      return columns;\n    } else return [];\n  };\n  render() {\n    let { getPlannedMetricOptions, getPlannedTableData } = this.props;\n    return (\n      <div className=\"planned-report pl-2 pr-2\">\n        <div className=\"card mb-4\">\n          <div>\n            <h4 className=\"font-size-14  pad-10 markdown-heading\">\n              Markdown Optimization /\n              <span className=\"font-bold color-blue\">Actual Vs Planned Reports</span>\n            </h4>\n          </div>\n          <hr\n            className=\"mb-2\"\n            style={{\n              marginTop: '-4px',\n            }}\n          />\n          <Filters onFilter={this.onFilter} drop stores dateRange hierarchy={this.state.filters} />\n          <hr className=\"dotted-line\"></hr>\n        </div>\n        <LoadingOverlay loader={this.props.overlayLoaderState} spinner>\n          {/* <div className=\"row\" style={{ padding: '1px 18px' }}> */}\n          {/* <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n              <CardComponent\n                cardImage={card1Image}\n                cardText={this.state.firstCardText}\n                cardValue={this.state.firstCardFirstValue}\n                cardValueSecond={this.state.firstCardSecondValue}\n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border1',\n                  cardValue: 'card1-value',\n                  cardImg: 'card1-img',\n                  cardValueSecond: 'card-value-second',\n                  cardSubHeading: 'card-subHeading',\n                }}\n              />\n            </div>\n            <div className=\"col-md-3 col-sm-3 col-xs-6\">\n              <CardComponent\n                cardImage={card2Image}\n                cardText={this.state.secondCardText}\n                cardValue={this.state.secondCardFirstValue}\n                cardValueSecond={this.state.secondCardSecondValue}\n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border2',\n                  cardValue: 'card1-value',\n                  cardImg: 'card2-img',\n                  cardValueSecond: 'card-value-second',\n                  cardSubHeading: 'card-subHeading',\n                }}\n              />\n            </div>\n            <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n              <CardComponent\n                cardImage={card3Image}\n                cardText={this.state.thirdCardText}\n                cardValue={this.state.thirdCardFirstValue}\n                cardValueSecond={this.state.thirdCardSecondValue}\n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border3',\n                  cardValue: 'card1-value',\n                  cardImg: 'card3-img',\n                  cardValueSecond: 'card-value-second',\n                  cardSubHeading: 'card-subHeading',\n                }}\n              />\n            </div>\n            <div className=\"col-md-3 col-sm-3 col-xs-6 \">\n              <CardComponent\n                cardImage={card4Image}\n                cardText={this.state.fourthCardText}\n                cardValue={this.state.fourthCardFirstValue}\n                cardValueSecond={this.state.fourthCardSecondValue}\n                cardWeekText={this.state.cardWeekText}\n                cardMonthText={this.state.cardMonthText}\n                cardStyles={{\n                  cardClass: 'card-border4',\n                  cardValue: 'card1-value',\n                  cardImg: 'card4-img',\n                }}\n              />\n            </div>\n          </div> */}\n          <div className=\"card CalendarMain promoCalendarDiv1 mt-3\">\n            <ColSelBtn>\n              {/* <ColumnSelection\n                tab=\"draft\"\n                options={getPlannedMetricOptions}\n                onHandleSelect={this.onHandleSelect}\n                selectedItems={this.state.selectedItems}\n                attributes={attributes}\n                contentRenderer={true}\n              /> */}\n              <div style={{ padding: '1rem' }}>\n                <button className=\"btn btn-primary\">\n                  Download\n                  <span>\n                    <i class=\"fa fa-download btn-padding\" aria-hidden=\"true\"></i>\n                  </span>\n                </button>\n              </div>\n            </ColSelBtn>\n            <div className=\"pad-15\">\n              <DataTable columns={this.coldef()} data={getPlannedTableData} isPagination={true} />\n            </div>\n          </div>\n        </LoadingOverlay>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (store) => {\n  return {\n    overlayLoaderState: store.loaderReducer.overlayLoaderState,\n    getPlannedTableData: store.plannedReportReducer.plannedReportsTableData,\n    getPlannedMetricOptions: store.plannedReportReducer.metricOptions.draft,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks,\n  };\n};\nconst mapActionsToProps = {\n  fetchPlannedReports: plannedReportsAction.fetchPlannedReports,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(planedReport);\n// export default planedReport;\nconst ColSelBtn = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n"]},"metadata":{},"sourceType":"module"}