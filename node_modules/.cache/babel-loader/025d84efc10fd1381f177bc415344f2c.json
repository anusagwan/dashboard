{"ast":null,"code":"import _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/Reporting/index.js\";\nimport React, { Component } from 'react';\nimport Filters from '../../services/filters';\nimport Breadcrumbs from '../../services/breadcrumbs';\nimport SkuCockpit from '../../components/SKUCockpit/SKUCockpit';\nimport LineChart from '../support/Charts/LineChart';\nimport BarChart from '../support/Charts/Barchart';\nimport { connect } from 'react-redux';\nimport * as chartjs from 'chart.js';\nimport './index.css';\nimport reportingActions from '../../actions/reportingActions';\nimport LoadingOverlay from '../../utils/Loader';\nchartjs.pluginService.register({\n  beforeDraw: function beforeDraw(chart) {\n    if (chart.config.options && chart.config.options.backgroundColor) {\n      var ctx = chart.chart.ctx;\n      var chartArea = chart.chartArea;\n      ctx.save();\n      ctx.fillStyle = chart.config.options.backgroundColor;\n      ctx.fillRect(chartArea.left, chartArea.top, chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      ctx.restore();\n    }\n  }\n});\n\nvar MarkdownReporting =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MarkdownReporting, _Component);\n\n  function MarkdownReporting() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MarkdownReporting);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MarkdownReporting)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.sellThroughOptions = {\n      backgroundColor: '#fff',\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Period'\n          }\n        }],\n        yAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Sell through %'\n          }\n        }]\n      }\n    };\n    _this.inventoryOptions = {\n      backgroundColor: '#fff',\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Period'\n          }\n        }],\n        yAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Units'\n          }\n        }]\n      }\n    };\n    _this.marginOptions = {\n      backgroundColor: '#fff',\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Period'\n          }\n        }],\n        yAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Margin %'\n          }\n        }]\n      }\n    };\n    _this.salesComparisonOptions = {\n      legend: {\n        display: false\n      },\n      backgroundColor: '#fff',\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Period'\n          }\n        }],\n        yAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Units'\n          },\n          ticks: {\n            suggestedMin: 0,\n            // minimum will be 0, unless there is a lower value.\n            beginAtZero: true // minimum value will be 0.\n\n          }\n        }]\n      }\n    };\n\n    _this.onFilter = function (filters) {\n      var req = {\n        filters: {\n          hierarchy1: _this.props.selectedHierarchy1,\n          hierarchy2: _this.props.selectedHierarchy2,\n          hierarchy3: _this.props.selectedHierarchy3,\n          hierarchy4: _this.props.selectedHierarchy4,\n          hierarchy5: _this.props.selectedHierarchy5,\n          hierarchy6: _this.props.selectedHierarchy6\n        },\n        startDate: _this.props.startDate,\n        endDate: _this.props.endDate,\n        week: _this.props.weeks\n      };\n\n      _this.props.getReportingData(req);\n    };\n\n    return _this;\n  }\n\n  _createClass(MarkdownReporting, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Breadcrumbs, {\n        module: \"Markdown Optimization\",\n        subModules: ['Reporting Section'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        className: \"hr-style\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(Filters, {\n        drop: true,\n        dateRange: true,\n        hierarchy: ['hierarchy1', 'hierarchy2', 'hierarchy3', 'hierarchy4', 'hierarchy5', 'hierarchy6'],\n        onFilter: this.onFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        className: \"hr-style mt-4 mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(LoadingOverlay, {\n        loader: this.props.overlayLoaderState,\n        spinner: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.props.cockpitData && this.props.cockpitData.message ? React.createElement(\"div\", {\n        className: \"no-data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"No data found. Please try with different filters.\") : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card col-md-5 ml-4 mb-4 mr-4 reporting-chart-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Sell through\", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(LineChart, {\n        data: this.props.reportingData.sellThroughData,\n        options: this.sellThroughOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"card col-md-5 ml-4 mb-4 reporting-chart-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Inventory\", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(LineChart, {\n        data: this.props.reportingData.inventoryData,\n        options: this.inventoryOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"card col-md-5 ml-4 mb-4 mr-4 reporting-chart-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Margin\", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(LineChart, {\n        data: this.props.reportingData.marginData,\n        options: this.marginOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"card col-md-5 ml-4 mb-4 reporting-chart-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Sales comparison\", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(BarChart, {\n        data: this.props.reportingData.salesData,\n        options: this.salesComparisonOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }))))))), this.props.cockpitData.length && React.createElement(\"div\", {\n        className: \"card mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(SkuCockpit, {\n        cockpitData: this.props.cockpitData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MarkdownReporting;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    overlayLoaderState: store.loaderReducer.overlayLoaderState,\n    reportingData: store.reportingReducer.reportingData,\n    cockpitData: store.reportingReducer.cockpitData,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks\n  };\n};\n\nvar mapActionsToProps = {\n  getReportingData: reportingActions.getReportingData\n};\nexport default connect(mapStateToProps, mapActionsToProps)(MarkdownReporting);","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/Reporting/index.js"],"names":["React","Component","Filters","Breadcrumbs","SkuCockpit","LineChart","BarChart","connect","chartjs","reportingActions","LoadingOverlay","pluginService","register","beforeDraw","chart","config","options","backgroundColor","ctx","chartArea","save","fillStyle","fillRect","left","top","right","bottom","restore","MarkdownReporting","sellThroughOptions","scales","xAxes","scaleLabel","display","labelString","yAxes","inventoryOptions","marginOptions","salesComparisonOptions","legend","ticks","suggestedMin","beginAtZero","onFilter","filters","req","hierarchy1","props","selectedHierarchy1","hierarchy2","selectedHierarchy2","hierarchy3","selectedHierarchy3","hierarchy4","selectedHierarchy4","hierarchy5","selectedHierarchy5","hierarchy6","selectedHierarchy6","startDate","endDate","week","weeks","getReportingData","overlayLoaderState","cockpitData","message","reportingData","sellThroughData","inventoryData","marginData","salesData","length","mapStateToProps","store","loaderReducer","reportingReducer","filtersReducer","selectedHierarchy7","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Filters from '../../services/filters';\nimport Breadcrumbs from '../../services/breadcrumbs';\nimport SkuCockpit from '../../components/SKUCockpit/SKUCockpit';\nimport LineChart from '../support/Charts/LineChart';\nimport BarChart from '../support/Charts/Barchart';\nimport { connect } from 'react-redux';\nimport * as chartjs from 'chart.js';\nimport './index.css';\nimport reportingActions from '../../actions/reportingActions';\nimport LoadingOverlay from '../../utils/Loader';\n\nchartjs.pluginService.register({\n  beforeDraw: function (chart) {\n    if (chart.config.options && chart.config.options.backgroundColor) {\n      var ctx = chart.chart.ctx;\n      var chartArea = chart.chartArea;\n      ctx.save();\n      ctx.fillStyle = chart.config.options.backgroundColor;\n      ctx.fillRect(\n        chartArea.left,\n        chartArea.top,\n        chartArea.right - chartArea.left,\n        chartArea.bottom - chartArea.top\n      );\n      ctx.restore();\n    }\n  },\n});\nclass MarkdownReporting extends Component {\n  sellThroughOptions = {\n    backgroundColor: '#fff',\n    scales: {\n      xAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Period',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Sell through %',\n          },\n        },\n      ],\n    },\n  };\n  inventoryOptions = {\n    backgroundColor: '#fff',\n    scales: {\n      xAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Period',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Units',\n          },\n        },\n      ],\n    },\n  };\n  marginOptions = {\n    backgroundColor: '#fff',\n    scales: {\n      xAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Period',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Margin %',\n          },\n        },\n      ],\n    },\n  };\n  salesComparisonOptions = {\n    legend: { display: false },\n    backgroundColor: '#fff',\n    scales: {\n      xAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Period',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Units',\n          },\n          ticks: {\n            suggestedMin: 0, // minimum will be 0, unless there is a lower value.\n            beginAtZero: true, // minimum value will be 0.\n          },\n        },\n      ],\n    },\n  };\n  onFilter = (filters) => {\n    let req = {\n      filters: {\n        hierarchy1: this.props.selectedHierarchy1,\n        hierarchy2: this.props.selectedHierarchy2,\n        hierarchy3: this.props.selectedHierarchy3,\n        hierarchy4: this.props.selectedHierarchy4,\n        hierarchy5: this.props.selectedHierarchy5,\n        hierarchy6: this.props.selectedHierarchy6,\n      },\n      startDate: this.props.startDate,\n      endDate: this.props.endDate,\n      week: this.props.weeks,\n    };\n    this.props.getReportingData(req);\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"card\">\n          <Breadcrumbs module=\"Markdown Optimization\" subModules={['Reporting Section']} />\n          <hr className=\"hr-style\" />\n\n          <Filters\n            drop\n            dateRange\n            hierarchy={[\n              'hierarchy1',\n              'hierarchy2',\n              'hierarchy3',\n              'hierarchy4',\n              'hierarchy5',\n              'hierarchy6',\n            ]}\n            onFilter={this.onFilter}\n          />\n          <hr className=\"hr-style mt-4 mb-4\" />\n\n          <LoadingOverlay loader={this.props.overlayLoaderState} spinner>\n            {this.props.cockpitData && this.props.cockpitData.message ? (\n              <div className=\"no-data\">No data found. Please try with different filters.</div>\n            ) : (\n              <React.Fragment>\n                <div className=\"row justify-content-center\">\n                  <div className=\"card col-md-5 ml-4 mb-4 mr-4 reporting-chart-container\">\n                    Sell through\n                    <div>\n                      <LineChart\n                        data={this.props.reportingData.sellThroughData}\n                        options={this.sellThroughOptions}></LineChart>\n                    </div>\n                  </div>\n                  <div className=\"card col-md-5 ml-4 mb-4 reporting-chart-container\">\n                    Inventory\n                    <div>\n                      <LineChart\n                        data={this.props.reportingData.inventoryData}\n                        options={this.inventoryOptions}></LineChart>\n                    </div>\n                  </div>\n                  <div className=\"card col-md-5 ml-4 mb-4 mr-4 reporting-chart-container\">\n                    Margin\n                    <div>\n                      <LineChart\n                        data={this.props.reportingData.marginData}\n                        options={this.marginOptions}></LineChart>\n                    </div>\n                  </div>\n                  <div className=\"card col-md-5 ml-4 mb-4 reporting-chart-container\">\n                    Sales comparison\n                    <div>\n                      <BarChart\n                        data={this.props.reportingData.salesData}\n                        options={this.salesComparisonOptions}></BarChart>\n                    </div>\n                  </div>\n                </div>\n              </React.Fragment>\n            )}\n          </LoadingOverlay>\n        </div>\n        {this.props.cockpitData.length && (\n          <div className=\"card mt-4\">\n            <SkuCockpit cockpitData={this.props.cockpitData} />\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (store) => {\n  return {\n    overlayLoaderState: store.loaderReducer.overlayLoaderState,\n    reportingData: store.reportingReducer.reportingData,\n    cockpitData: store.reportingReducer.cockpitData,\n    selectedHierarchy1: store.filtersReducer.selectedHierarchy1,\n    selectedHierarchy2: store.filtersReducer.selectedHierarchy2,\n    selectedHierarchy3: store.filtersReducer.selectedHierarchy3,\n    selectedHierarchy4: store.filtersReducer.selectedHierarchy4,\n    selectedHierarchy5: store.filtersReducer.selectedHierarchy5,\n    selectedHierarchy6: store.filtersReducer.selectedHierarchy6,\n    selectedHierarchy7: store.filtersReducer.selectedHierarchy7,\n    startDate: store.filtersReducer.startDate,\n    endDate: store.filtersReducer.endDate,\n    weeks: store.filtersReducer.weeks,\n  };\n};\nconst mapActionsToProps = {\n  getReportingData: reportingActions.getReportingData,\n};\nexport default connect(mapStateToProps, mapActionsToProps)(MarkdownReporting);\n"]},"metadata":{},"sourceType":"module"}