{"ast":null,"code":"import axios from '../utils/axios';\nimport { config } from '../utils/config';\nimport { toast } from 'react-toastify';\nvar manuallyCreateMdActions = {\n  onResetInventoryInfo: function onResetInventoryInfo() {\n    return function (dispatch) {\n      dispatch({\n        type: 'RESET_INVENTORY_INFO_DATA'\n      });\n    };\n  },\n  onResetEditedInfo: function onResetEditedInfo() {\n    return function (dispatch) {\n      dispatch({\n        type: 'RESET_EDITED_INFO_DATA'\n      });\n    };\n  },\n  setSimulationId: function setSimulationId(id) {\n    return function (dispatch) {\n      dispatch({\n        type: 'SET_SIMULATION_ID',\n        payload: id\n      });\n    };\n  },\n  fetchInventoryInfo: function fetchInventoryInfo(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getInventoryInfo/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        if (resp.data && resp.data.data && resp.data.data.store_data.length <= 0) {\n          toast.error(\"Current filter selection doesn't have inventory please retry with different selection\", {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n        }\n\n        dispatch({\n          type: 'GET_INVENTORY_INFO',\n          payload: resp.data.data\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      }).catch(function (err) {\n        toast.error(err.message, {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  fetchCadence: function fetchCadence(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getSimulationData/\"),\n        // url: `${config.createMarkdownURL}/MarkdownOptimization/`,\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        if (resp.data && resp.data.status !== 'false') {\n          var cadenceOutput = resp && resp.data && resp.data.data[0] && resp.data.data[0].output; // let skus = [];\n          // if (resp.data.skus && resp.data.skus.length) {\n          //   skus = resp.data.skus.map((sku) => {\n          //     return {\n          //       label: sku,\n          //       value: sku,\n          //     };\n          //   });\n          // }\n\n          dispatch({\n            type: 'GET_CADENCE_DATA',\n            payload: [cadenceOutput.cadenceData],\n            csv_names: cadenceOutput.csv_names,\n            skus: cadenceOutput.skus,\n            savedData: cadenceOutput.saveData\n          });\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n            payload: cadenceOutput.simulateData,\n            isEdit: reqObj.isEdit\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA',\n            payload: cadenceOutput.simulateData,\n            data: resp.data,\n            cadenceType: 'Optimal',\n            comparisonData: [],\n            isEdit: reqObj.isEdit\n          });\n        } else {\n          toast.error(resp.data.message, {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n        }\n\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      }).catch(function (err) {\n        toast.error(err.message, {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  fetchSkuAndCsv: function fetchSkuAndCsv(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        // url: `${config.createMarkdownURL}/generateCadence/`,\n        url: \"\".concat(config.cadenceUrl, \"/MarkdownOptimization\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        var skus = [];\n\n        if (resp.data.skus && resp.data.skus.length) {\n          skus = resp.data.skus.map(function (sku) {\n            return {\n              label: sku,\n              value: sku\n            };\n          });\n        }\n\n        dispatch({\n          type: 'GET_SKUS_AND_CSV',\n          csv_names: resp.data.csv_names,\n          skus: skus\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      }).catch(function (err) {\n        toast.error(err.message, {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  updateAnalysisData: function updateAnalysisData(req, cadenceType) {\n    return function (dispatch) {\n      dispatch({\n        type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n        payload: cadenceType === 'Optimal' ? req.simulateData : req\n      }); // if (this.state.defaultActiveKey === 'Optimal') {\n      //   obj.analysisData[key] = this.props.analysisData[this.state.defaultActiveKey]\n      //     ? this.props.analysisData[this.state.defaultActiveKey].simulateData\n      //     : [];\n      // } else {\n      //   const { analysisTabledata, detailed, overview } = this.props.analysisData[\n      //     this.state.defaultActiveKey\n      //   ];\n      //   obj.analysisData[key] = { analysisTabledata, detailed, overview };\n      // }\n\n      dispatch({\n        type: 'SET_ANALYSIS_TABLE_DATA',\n        payload: cadenceType === 'Optimal' ? req.simulateData : req,\n        data: req,\n        cadenceType: cadenceType\n      });\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: false\n        }\n      });\n    };\n  },\n  editSimulate: function editSimulate(reqObj, cadenceType) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.cadenceUrl, \"/EditData\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        var returnStatus = true;\n\n        if (resp.data.status === 'false') {\n          toast.error(resp.data.message, {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false\n            }\n          });\n          returnStatus = false;\n        }\n\n        var uniqueSellThroughValue = new Set(resp.data.overview.sellThrough);\n\n        if (resp.data && resp.data.overview && uniqueSellThroughValue.size === 1 && uniqueSellThroughValue.has('0.0')) {\n          toast.error('Data not found', {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n        }\n\n        if (reqObj.styleGroup === 'all') {\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n            payload: resp.data,\n            isEdit: true\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA',\n            payload: resp.data,\n            data: resp.data,\n            cadenceType: cadenceType,\n            isEdit: true\n          });\n        } else {\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA_BY_SKUS',\n            payload: resp.data,\n            isEdit: true\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA_BY_SKUS',\n            payload: resp.data,\n            data: resp.data,\n            cadenceType: cadenceType,\n            isEdit: true\n          });\n        }\n\n        dispatch({\n          type: 'GET_COLUMNHEADERS'\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return {\n          status: returnStatus\n        };\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return {\n          status: false\n        };\n      });\n    };\n  },\n  simulate: function simulate(reqObj, cadenceType, scenarioName) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.cadenceUrl, \"/CalculationData\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        var returnStatus = true;\n\n        if (resp.data.status === 'false') {\n          toast.error(resp.data.message, {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false\n            }\n          });\n          returnStatus = false;\n        }\n\n        var uniqueSellThroughValue = new Set(resp.data.overview.sellThrough);\n\n        if (resp.data && resp.data.overview && uniqueSellThroughValue.size === 1 && uniqueSellThroughValue.has('0.0')) {\n          toast.error('Data not found', {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n        }\n\n        if (reqObj.styleGroup === 'all') {\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n            payload: resp.data,\n            isEdit: reqObj.isEdit\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA',\n            payload: resp.data,\n            data: resp.data,\n            cadenceType: cadenceType,\n            isEdit: reqObj.isEdit,\n            scenarioName: scenarioName\n          });\n        } else {\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA_BY_SKUS',\n            payload: resp.data,\n            isEdit: reqObj.isEdit\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA_BY_SKUS',\n            payload: resp.data,\n            data: resp.data,\n            cadenceType: cadenceType,\n            isEdit: reqObj.isEdit\n          });\n        }\n\n        dispatch({\n          type: 'GET_COLUMNHEADERS'\n        }); // dispatch({\n        //   type: 'SET_ANALYSIS_TABLE_DATA',\n        //   payload: resp.data,\n        //   data: resp.data,\n        //   cadenceType,\n        // });\n        // dispatch({\n        //   type: 'LOADER_STATE',\n        //   payload: {\n        //     status: false,\n        //   },\n        // });\n\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return {\n          status: returnStatus\n        };\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return {\n          status: false\n        };\n      });\n    };\n  },\n  savedStatusFalse: function savedStatusFalse(status) {\n    return function (dispatch) {\n      dispatch({\n        type: 'MARKDOWN_SAVED_STATUS',\n        status: status\n      });\n    };\n  },\n  saveData: function saveData(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        url: \"\".concat(config.createMarkdownURL, \"/saveMarkDown/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        toast.success('Data Saved Sucessfully', {\n          autoClose: 15000,\n          hideProgressBar: true\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        dispatch({\n          type: 'MARKDOWN_SAVED_STATUS',\n          status: true\n        }); // dispatch({\n        //   type: 'GET_INVENTORY_INFO',\n        //   payload: resp.data,\n        // });\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  fetchEditPlanData: function fetchEditPlanData(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/markdownDetails/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        if (resp.data && resp.data.status !== 'false') {\n          var dataObj = resp.data.data && resp.data.data[0] && resp.data.data[0].request_obj;\n          var simulateData = Object.values(dataObj.analysisData);\n          var cadenceData = Object.values(dataObj.cadenceData);\n          var skus = dataObj.skus;\n          dispatch({\n            type: 'GET_EDITPLAN_DETAILS',\n            payload: resp.data.data\n          });\n          dispatch({\n            type: 'GET_CADENCE_DATA',\n            payload: cadenceData,\n            skus: skus\n          });\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n            payload: simulateData[0]\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA',\n            payload: simulateData[0],\n            cadenceType: 'Optimal',\n            comparisonData: []\n          });\n        }\n\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return resp.data.data;\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return [];\n      });\n    };\n  },\n  fetchStyleColorData: function fetchStyleColorData(reqObj, cadenceType) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getMarkdownStyleColorData/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        var returnStatus = true;\n\n        if (resp.data.status === 'false') {\n          toast.error(resp.data.message, {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false\n            }\n          });\n          returnStatus = false;\n        }\n\n        var uniqueSellThroughValue = new Set(resp.data.data[0].overview.sellThrough);\n\n        if (resp.data && resp.data.data && resp.data.data[0] && resp.data.data[0].overview && uniqueSellThroughValue.size === 1 && uniqueSellThroughValue.has('0.0')) {\n          toast.error('Data not found', {\n            autoClose: 15000,\n            hideProgressBar: true\n          });\n        }\n\n        dispatch({\n          type: 'GET_MDANALYSIS_GRAPH_DATA_BY_SKUS_STYLE',\n          payload: resp.data.data[0]\n        });\n        dispatch({\n          type: 'SET_ANALYSIS_TABLE_DATA_BY_SKUS_STYLE',\n          payload: resp.data.data[0],\n          data: resp.data.data[0],\n          cadenceType: cadenceType\n        });\n        dispatch({\n          type: 'GET_COLUMNHEADERS'\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return {\n          status: returnStatus\n        };\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return {\n          status: false\n        };\n      });\n    };\n  },\n  fetchCustomStyleDetails: function fetchCustomStyleDetails(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getStyleDetails/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        dispatch({\n          type: 'SET_CUSTOM_STYLE_INFO',\n          payload: resp.data.data\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return resp.data.data;\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return [];\n      });\n    };\n  },\n  fetchSimulationDataBySocket: function fetchSimulationDataBySocket(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getSimulationData/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        dispatch({\n          type: 'SET_SIMULATION_DATA_BY_SOCKET',\n          payload: resp.data.data\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return resp.data.data;\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return [];\n      });\n    };\n  }\n};\nexport default manuallyCreateMdActions;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/manuallyCreateMdActions.js"],"names":["axios","config","toast","manuallyCreateMdActions","onResetInventoryInfo","dispatch","type","onResetEditedInfo","setSimulationId","id","payload","fetchInventoryInfo","reqObj","status","url","createMarkdownURL","method","data","then","resp","store_data","length","error","autoClose","hideProgressBar","catch","err","message","fetchCadence","cadenceOutput","output","cadenceData","csv_names","skus","savedData","saveData","simulateData","isEdit","cadenceType","comparisonData","fetchSkuAndCsv","cadenceUrl","map","sku","label","value","updateAnalysisData","req","editSimulate","returnStatus","uniqueSellThroughValue","Set","overview","sellThrough","size","has","styleGroup","simulate","scenarioName","savedStatusFalse","success","fetchEditPlanData","dataObj","request_obj","Object","values","analysisData","fetchStyleColorData","fetchCustomStyleDetails","fetchSimulationDataBySocket"],"mappings":"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","sourcesContent":["import axios from '../utils/axios';\nimport { config } from '../utils/config';\nimport { toast } from 'react-toastify';\n\nconst manuallyCreateMdActions = {\n  onResetInventoryInfo: () => {\n    return (dispatch) => {\n      dispatch({\n        type: 'RESET_INVENTORY_INFO_DATA',\n      });\n    };\n  },\n  onResetEditedInfo: () => {\n    return (dispatch) => {\n      dispatch({\n        type: 'RESET_EDITED_INFO_DATA',\n      });\n    };\n  },\n  setSimulationId: (id) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'SET_SIMULATION_ID',\n        payload: id,\n      });\n    };\n  },\n  fetchInventoryInfo: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        url: `${config.createMarkdownURL}/getInventoryInfo/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          if (resp.data && resp.data.data && resp.data.data.store_data.length <= 0) {\n            toast.error(\n              `Current filter selection doesn't have inventory please retry with different selection`,\n              {\n                autoClose: 15000,\n                hideProgressBar: true,\n              }\n            );\n          }\n          dispatch({\n            type: 'GET_INVENTORY_INFO',\n            payload: resp.data.data,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        })\n        .catch((err) => {\n          toast.error(err.message, {\n            autoClose: 15000,\n            hideProgressBar: true,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n  fetchCadence: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        url: `${config.createMarkdownURL}/getSimulationData/`,\n        // url: `${config.createMarkdownURL}/MarkdownOptimization/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          if (resp.data && resp.data.status !== 'false') {\n            let cadenceOutput = resp && resp.data && resp.data.data[0] && resp.data.data[0].output;\n\n            // let skus = [];\n            // if (resp.data.skus && resp.data.skus.length) {\n            //   skus = resp.data.skus.map((sku) => {\n            //     return {\n            //       label: sku,\n            //       value: sku,\n            //     };\n            //   });\n            // }\n            dispatch({\n              type: 'GET_CADENCE_DATA',\n              payload: [cadenceOutput.cadenceData],\n              csv_names: cadenceOutput.csv_names,\n              skus: cadenceOutput.skus,\n              savedData: cadenceOutput.saveData,\n            });\n            dispatch({\n              type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n              payload: cadenceOutput.simulateData,\n              isEdit: reqObj.isEdit,\n            });\n            dispatch({\n              type: 'SET_ANALYSIS_TABLE_DATA',\n              payload: cadenceOutput.simulateData,\n              data: resp.data,\n              cadenceType: 'Optimal',\n              comparisonData: [],\n              isEdit: reqObj.isEdit,\n            });\n          } else {\n            toast.error(resp.data.message, {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n          }\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        })\n        .catch((err) => {\n          toast.error(err.message, {\n            autoClose: 15000,\n            hideProgressBar: true,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n  fetchSkuAndCsv: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        // url: `${config.createMarkdownURL}/generateCadence/`,\n        url: `${config.cadenceUrl}/MarkdownOptimization`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          let skus = [];\n          if (resp.data.skus && resp.data.skus.length) {\n            skus = resp.data.skus.map((sku) => {\n              return {\n                label: sku,\n                value: sku,\n              };\n            });\n          }\n          dispatch({\n            type: 'GET_SKUS_AND_CSV',\n            csv_names: resp.data.csv_names,\n            skus: skus,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        })\n        .catch((err) => {\n          toast.error(err.message, {\n            autoClose: 15000,\n            hideProgressBar: true,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n  updateAnalysisData: (req, cadenceType) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n        payload: cadenceType === 'Optimal' ? req.simulateData : req,\n      });\n      // if (this.state.defaultActiveKey === 'Optimal') {\n      //   obj.analysisData[key] = this.props.analysisData[this.state.defaultActiveKey]\n      //     ? this.props.analysisData[this.state.defaultActiveKey].simulateData\n      //     : [];\n      // } else {\n      //   const { analysisTabledata, detailed, overview } = this.props.analysisData[\n      //     this.state.defaultActiveKey\n      //   ];\n      //   obj.analysisData[key] = { analysisTabledata, detailed, overview };\n      // }\n      dispatch({\n        type: 'SET_ANALYSIS_TABLE_DATA',\n        payload: cadenceType === 'Optimal' ? req.simulateData : req,\n        data: req,\n        cadenceType,\n      });\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: false,\n        },\n      });\n    };\n  },\n  editSimulate: (reqObj, cadenceType) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.cadenceUrl}/EditData`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          let returnStatus = true;\n          if (resp.data.status === 'false') {\n            toast.error(resp.data.message, {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n            dispatch({\n              type: 'LOADER_STATE',\n              payload: {\n                status: false,\n              },\n            });\n            returnStatus = false;\n          }\n          let uniqueSellThroughValue = new Set(resp.data.overview.sellThrough);\n          if (\n            resp.data &&\n            resp.data.overview &&\n            uniqueSellThroughValue.size === 1 &&\n            uniqueSellThroughValue.has('0.0')\n          ) {\n            toast.error('Data not found', {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n          }\n          if (reqObj.styleGroup === 'all') {\n            dispatch({\n              type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n              payload: resp.data,\n              isEdit: true,\n            });\n            dispatch({\n              type: 'SET_ANALYSIS_TABLE_DATA',\n              payload: resp.data,\n              data: resp.data,\n              cadenceType,\n              isEdit: true,\n            });\n          } else {\n            dispatch({\n              type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA_BY_SKUS',\n              payload: resp.data,\n              isEdit: true,\n            });\n            dispatch({\n              type: 'SET_ANALYSIS_TABLE_DATA_BY_SKUS',\n              payload: resp.data,\n              data: resp.data,\n              cadenceType,\n              isEdit: true,\n            });\n          }\n          dispatch({\n            type: 'GET_COLUMNHEADERS',\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return { status: returnStatus };\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n\n          return { status: false };\n        });\n    };\n  },\n  simulate: (reqObj, cadenceType, scenarioName) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.cadenceUrl}/CalculationData`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          let returnStatus = true;\n          if (resp.data.status === 'false') {\n            toast.error(resp.data.message, {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n            dispatch({\n              type: 'LOADER_STATE',\n              payload: {\n                status: false,\n              },\n            });\n            returnStatus = false;\n          }\n          let uniqueSellThroughValue = new Set(resp.data.overview.sellThrough);\n          if (\n            resp.data &&\n            resp.data.overview &&\n            uniqueSellThroughValue.size === 1 &&\n            uniqueSellThroughValue.has('0.0')\n          ) {\n            toast.error('Data not found', {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n          }\n          if (reqObj.styleGroup === 'all') {\n            dispatch({\n              type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n              payload: resp.data,\n              isEdit: reqObj.isEdit,\n            });\n            dispatch({\n              type: 'SET_ANALYSIS_TABLE_DATA',\n              payload: resp.data,\n              data: resp.data,\n              cadenceType,\n              isEdit: reqObj.isEdit,\n              scenarioName,\n            });\n          } else {\n            dispatch({\n              type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA_BY_SKUS',\n              payload: resp.data,\n              isEdit: reqObj.isEdit,\n            });\n            dispatch({\n              type: 'SET_ANALYSIS_TABLE_DATA_BY_SKUS',\n              payload: resp.data,\n              data: resp.data,\n              cadenceType,\n              isEdit: reqObj.isEdit,\n            });\n          }\n          dispatch({\n            type: 'GET_COLUMNHEADERS',\n          });\n          // dispatch({\n          //   type: 'SET_ANALYSIS_TABLE_DATA',\n          //   payload: resp.data,\n          //   data: resp.data,\n          //   cadenceType,\n          // });\n          // dispatch({\n          //   type: 'LOADER_STATE',\n          //   payload: {\n          //     status: false,\n          //   },\n          // });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return { status: returnStatus };\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n\n          return { status: false };\n        });\n    };\n  },\n  savedStatusFalse: (status) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'MARKDOWN_SAVED_STATUS',\n        status,\n      });\n    };\n  },\n  saveData: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        url: `${config.createMarkdownURL}/saveMarkDown/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          toast.success('Data Saved Sucessfully', {\n            autoClose: 15000,\n            hideProgressBar: true,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          dispatch({\n            type: 'MARKDOWN_SAVED_STATUS',\n            status: true,\n          });\n          // dispatch({\n          //   type: 'GET_INVENTORY_INFO',\n          //   payload: resp.data,\n          // });\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n  fetchEditPlanData: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/markdownDetails/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          if (resp.data && resp.data.status !== 'false') {\n            let dataObj = resp.data.data && resp.data.data[0] && resp.data.data[0].request_obj;\n\n            let simulateData = Object.values(dataObj.analysisData);\n            let cadenceData = Object.values(dataObj.cadenceData);\n            let skus = dataObj.skus;\n            dispatch({\n              type: 'GET_EDITPLAN_DETAILS',\n              payload: resp.data.data,\n            });\n\n            dispatch({\n              type: 'GET_CADENCE_DATA',\n              payload: cadenceData,\n              skus: skus,\n            });\n\n            dispatch({\n              type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n              payload: simulateData[0],\n            });\n\n            dispatch({\n              type: 'SET_ANALYSIS_TABLE_DATA',\n              payload: simulateData[0],\n              cadenceType: 'Optimal',\n              comparisonData: [],\n            });\n          }\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return resp.data.data;\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return [];\n        });\n    };\n  },\n  fetchStyleColorData: (reqObj, cadenceType) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/getMarkdownStyleColorData/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          let returnStatus = true;\n          if (resp.data.status === 'false') {\n            toast.error(resp.data.message, {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n            dispatch({\n              type: 'LOADER_STATE',\n              payload: {\n                status: false,\n              },\n            });\n            returnStatus = false;\n          }\n          let uniqueSellThroughValue = new Set(resp.data.data[0].overview.sellThrough);\n          if (\n            resp.data &&\n            resp.data.data &&\n            resp.data.data[0] &&\n            resp.data.data[0].overview &&\n            uniqueSellThroughValue.size === 1 &&\n            uniqueSellThroughValue.has('0.0')\n          ) {\n            toast.error('Data not found', {\n              autoClose: 15000,\n              hideProgressBar: true,\n            });\n          }\n          dispatch({\n            type: 'GET_MDANALYSIS_GRAPH_DATA_BY_SKUS_STYLE',\n            payload: resp.data.data[0],\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA_BY_SKUS_STYLE',\n            payload: resp.data.data[0],\n            data: resp.data.data[0],\n            cadenceType,\n          });\n          dispatch({\n            type: 'GET_COLUMNHEADERS',\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return { status: returnStatus };\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n\n          return { status: false };\n        });\n    };\n  },\n  fetchCustomStyleDetails: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/getStyleDetails/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          dispatch({\n            type: 'SET_CUSTOM_STYLE_INFO',\n            payload: resp.data.data,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return resp.data.data;\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return [];\n        });\n    };\n  },\n  fetchSimulationDataBySocket: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/getSimulationData/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          dispatch({\n            type: 'SET_SIMULATION_DATA_BY_SOCKET',\n            payload: resp.data.data,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return resp.data.data;\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return [];\n        });\n    };\n  },\n};\nexport default manuallyCreateMdActions;\n"]},"metadata":{},"sourceType":"module"}