{"ast":null,"code":"import axios from 'axios';\nimport { config } from '../utils/config';\nvar manuallyCreateMdActions = {\n  fetchInventoryInfo: function fetchInventoryInfo(reqObj) {\n    return function (dispatch) {\n      axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getInventoryInfo/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        var _resp$data$data = resp.data.data,\n            columnHeaders = _resp$data$data.columnHeaders,\n            storeData = _resp$data$data.storeData;\n        dispatch({\n          type: 'SET_MANUAL_MD',\n          value: storeData\n        });\n        dispatch({\n          type: 'SET_MD_COLUMN_HEADERS',\n          value: columnHeaders\n        });\n        dispatch({\n          type: 'GET_INVENTORY_INFO',\n          payload: resp.data.data\n        });\n        return resp.data.data;\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n  },\n  setManualDowns: function setManualDowns(payload) {\n    return function (dispatch) {\n      dispatch({\n        type: 'SET_MANUAL_MD',\n        value: payload\n      });\n    };\n  },\n  setManualColumnHeaders: function setManualColumnHeaders(payload) {\n    return function (dispatch) {\n      dispatch({\n        type: 'SET_MANUAL_COLUMN_HEADERS',\n        value: payload\n      });\n    };\n  },\n  fetchCadence: function fetchCadence(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        // url: `${config.createMarkdownURL}/generateCadence/`,\n        url: \"\".concat(config.cadenceUrl, \"/MarkdownOptimization\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        var skus = [];\n\n        if (resp.data.skus && resp.data.skus.length) {\n          skus = resp.data.skus.map(function (sku) {\n            return {\n              label: sku,\n              value: sku\n            };\n          });\n        }\n\n        dispatch({\n          type: 'GET_CADENCE_DATA',\n          payload: [resp.data.cadenceData],\n          csv_names: resp.data.csv_names,\n          skus: skus,\n          savedData: resp.data.saveData\n        });\n        dispatch({\n          type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n          payload: resp.data.simulateData\n        });\n        dispatch({\n          type: 'SET_ANALYSIS_TABLE_DATA',\n          payload: resp.data.simulateData.analysisTabledata\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      }).catch(function (err) {\n        console.log(err);\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  simulate: function simulate(reqObj) {\n    return function (dispatch) {\n      axios({\n        url: \"\".concat(config.cadenceUrl, \"/CalculationData\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        dispatch({\n          type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n          payload: resp.data\n        });\n        dispatch({\n          type: 'SET_ANALYSIS_TABLE_DATA',\n          payload: resp.data\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n  },\n  saveData: function saveData(reqObj) {\n    return function (dispatch) {\n      axios({\n        url: \"\".concat(config.createMarkdownURL, \"/saveMarkDown/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        alert('resp:', resp); // dispatch({\n        //   type: 'GET_INVENTORY_INFO',\n        //   payload: resp.data,\n        // });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n  }\n};\nexport default manuallyCreateMdActions;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/manuallyCreateMdActions.js"],"names":["axios","config","manuallyCreateMdActions","fetchInventoryInfo","reqObj","dispatch","url","createMarkdownURL","method","data","then","resp","columnHeaders","storeData","type","value","payload","catch","err","console","log","setManualDowns","setManualColumnHeaders","fetchCadence","status","cadenceUrl","skus","length","map","sku","label","cadenceData","csv_names","savedData","saveData","simulateData","analysisTabledata","simulate","alert"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { config } from '../utils/config';\n\nconst manuallyCreateMdActions = {\n  fetchInventoryInfo: (reqObj) => {\n    return (dispatch) => {\n      axios({\n        url: `${config.createMarkdownURL}/getInventoryInfo/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          const { columnHeaders, storeData } = resp.data.data;\n          dispatch({\n            type: 'SET_MANUAL_MD',\n            value: storeData,\n          });\n          dispatch({\n            type: 'SET_MD_COLUMN_HEADERS',\n            value: columnHeaders,\n          });\n          dispatch({\n            type: 'GET_INVENTORY_INFO',\n            payload: resp.data.data,\n          });\n          return resp.data.data;\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n  },\n  setManualDowns: (payload) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'SET_MANUAL_MD',\n        value: payload,\n      });\n    };\n  },\n  setManualColumnHeaders: (payload) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'SET_MANUAL_COLUMN_HEADERS',\n        value: payload,\n      });\n    };\n  },\n  fetchCadence: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        // url: `${config.createMarkdownURL}/generateCadence/`,\n        url: `${config.cadenceUrl}/MarkdownOptimization`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          let skus = [];\n          if (resp.data.skus && resp.data.skus.length) {\n            skus = resp.data.skus.map((sku) => {\n              return {\n                label: sku,\n                value: sku,\n              };\n            });\n          }\n          dispatch({\n            type: 'GET_CADENCE_DATA',\n            payload: [resp.data.cadenceData],\n            csv_names: resp.data.csv_names,\n            skus: skus,\n            savedData: resp.data.saveData,\n          });\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n            payload: resp.data.simulateData,\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA',\n            payload: resp.data.simulateData.analysisTabledata,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n\n  simulate: (reqObj) => {\n    return (dispatch) => {\n      axios({\n        url: `${config.cadenceUrl}/CalculationData`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          dispatch({\n            type: 'GET_MARKDOWNANALYSIS_GRAPH_DATA',\n            payload: resp.data,\n          });\n          dispatch({\n            type: 'SET_ANALYSIS_TABLE_DATA',\n            payload: resp.data,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n  },\n  saveData: (reqObj) => {\n    return (dispatch) => {\n      axios({\n        url: `${config.createMarkdownURL}/saveMarkDown/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          alert('resp:', resp);\n          // dispatch({\n          //   type: 'GET_INVENTORY_INFO',\n          //   payload: resp.data,\n          // });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n  },\n};\nexport default manuallyCreateMdActions;\n"]},"metadata":{},"sourceType":"module"}