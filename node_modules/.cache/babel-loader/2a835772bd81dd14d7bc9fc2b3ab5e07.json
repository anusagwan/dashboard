{"ast":null,"code":"import _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/MarkdownAnalysis/index.js\";\nimport React, { Component } from 'react';\nimport Tippy from '@tippy.js/react';\nimport Select from 'react-select';\nimport AnalysisTable from '../MarkdownAnalysis/AnalysisTable';\nimport moment from 'moment';\nimport 'tippy.js/dist/tippy.css';\nimport BarChart from '../support/Charts/Barchart';\nimport './index.css';\nimport _ from 'lodash';\nimport pattern from 'patternomaly';\nvar options2 = {\n  tooltips: {\n    callbacks: {\n      label: function label(tooltipItem, data) {\n        var label = data.labels[tooltipItem.index];\n        var value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n        var labelTip = 'Week' + ':' + label;\n        var valueTip = 'Margin%' + ':' + parseFloat(value).toFixed(2);\n        return [labelTip, valueTip];\n      }\n    }\n  },\n  plugins: {\n    datalabels: {\n      display: false\n    }\n  },\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px'\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [{\n      gridLines: {\n        display: true\n      },\n      ticks: {\n        fontSize: 13,\n        suggestedMin: 0\n      },\n      scaleLabel: {\n        show: true,\n        display: true,\n        fontSize: 14,\n        fontStyle: 'bold',\n        fontColor: '#000',\n        labelString: 'Margin %'\n      }\n    }],\n    xAxes: [{\n      id: 'x-axis-0',\n      categoryPercentage: 1.0,\n      barPercentage: 1.0,\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        autoSkip: true,\n        autoSkipPadding: 40,\n        maxRotation: 0,\n        suggestedMin: 0\n      },\n      scaleLabel: {\n        display: true,\n        labelString: 'Time (week)',\n        fontWeight: 900,\n        fontStyle: 'bold'\n      }\n    }]\n  }\n};\nvar options = {\n  tooltips: {\n    callbacks: {\n      label: function label(tooltipItem, data) {\n        var label = data.labels[tooltipItem.index];\n        var value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n        var labelTip = 'Week' + ':' + label;\n        var valueTip = 'ST%' + ':' + parseFloat(value).toFixed(2);\n        return [labelTip, valueTip];\n      }\n    }\n  },\n  plugins: {\n    datalabels: {\n      display: false\n    }\n  },\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px'\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [{\n      gridLines: {\n        display: true\n      },\n      // ticks: {\n      //   fontSize: 13,\n      //   suggestedMin: 0,\n      // },\n      scaleLabel: {\n        show: true,\n        display: true,\n        fontSize: 14,\n        fontStyle: 'bold',\n        fontColor: '#000',\n        labelString: 'Sell Through %'\n      }\n    }],\n    xAxes: [{\n      id: 'x-axis-0',\n      categoryPercentage: 1.0,\n      barPercentage: 1.0,\n      gridLines: {\n        display: false\n      },\n      // stacked: true,\n      ticks: {\n        autoSkip: true,\n        autoSkipPadding: 40,\n        maxRotation: 0,\n        suggestedMin: 0\n      },\n      scaleLabel: {\n        display: true,\n        labelString: 'Time (week)',\n        fontWeight: 900,\n        fontStyle: 'bold'\n      }\n    }]\n  }\n};\n\nvar MarkdownAnalysis =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MarkdownAnalysis, _Component);\n\n  function MarkdownAnalysis(props) {\n    var _this;\n\n    _classCallCheck(this, MarkdownAnalysis);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MarkdownAnalysis).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(MarkdownAnalysis, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var borderColors = ['#44677B', '#6F9FC3', '#83BE8C', '#88ad5f', '#b06d58', '#86588a', '#17a69c', '#b0a819', '#d97c30', '#5d5b85'];\n      var borderColors1 = ['#44677B', '#6F9FC3', '#83BE8C', '#88ad5f', '#b06d58', '#86588a', '#17a69c', '#b0a819', '#d97c30', '#5d5b85'];\n      var gradient = ['repeating-linear-gradient(-44deg, #44677B 5%,white 9px)', 'repeating-linear-gradient(-44deg, #6F9FC3 5%,white 9px)', 'repeating-linear-gradient(-44deg, #83BE8C 5%,white 9px)', 'repeating-linear-gradient(-44deg, #88ad5f 5%,white 9px)', 'repeating-linear-gradient(-44deg, #b06d58 5%,white 9px)', 'repeating-linear-gradient(-44deg, #86588a 5%,white 9px)', 'repeating-linear-gradient(-44deg, #17a69c 5%,white 9px)', 'repeating-linear-gradient(-44deg, #b0a819 5%,white 9px)', 'repeating-linear-gradient(-44deg, #d97c30 5%,white 9px)', 'repeating-linear-gradient(-44deg, #5d5b85 5%,white 9px)'];\n      var backgroundColors = ['rgba(68, 103, 123, 0.4)', 'rgba(166, 206, 227, 0.4)', 'rgba(131, 190, 140, 0.4)', 'rgba(136, 173, 95, 0.4)', 'rgba(176, 109, 88, 0.4)', 'rgba(134, 88, 138, 0.4)', 'rgba(23, 166, 156, 0.4)', 'rgba(89, 86, 25, 0.4)', 'rgba(217, 124, 48, 0.4)', 'rgba(93, 91, 133, 0.4)'];\n      var backgroundColors1 = [pattern.draw('diagonal-right-left', 'rgba(68, 103, 123, 0.3)'), pattern.draw('diagonal-right-left', 'rgba(166, 206, 227, 0.3)'), pattern.draw('diagonal-right-left', 'rgba(131, 190, 140, 0.3)'), pattern.draw('diagonal-right-left', 'rgba(136, 173, 95, 0.3)'), pattern.draw('diagonal-right-left', 'rgba(176, 109, 88, 0.3)'), pattern.draw('diagonal-right-left', 'rgba(134, 88, 138, 0.3)'), pattern.draw('diagonal-right-left', 'rgba(23, 166, 156, 0.3)'), pattern.draw('diagonal-right-left', 'rgba(89, 86, 25, 0.3)'), pattern.draw('diagonal-right-left', 'rgba(217, 124, 48, 0.3)'), pattern.draw('diagonal-right-left', 'rgba(93, 91, 133, 0.3)')];\n      var uniqueWeek = {};\n\n      _.map(this.props.markdownAnalysisGraphData.weekly_markdown, function (value, i) {\n        if (!uniqueWeek.hasOwnProperty(value)) {\n          uniqueWeek[value] = {\n            backgroundColor: backgroundColors.pop() // backgroundColor1: backgroundColors1.pop(),\n\n          };\n          uniqueWeek[value].borderColor = borderColors.pop();\n        }\n      }); // let uniqueWeek1 = {};\n      // this.props.editMarkdownAnalysisGraphData &&\n      //   this.props.editMarkdownAnalysisGraphData.weekly_markdown.forEach((value, i) => {\n      //     if (!uniqueWeek1.hasOwnProperty(value)) {\n      //       uniqueWeek1[value] = {\n      //         backgroundColor: backgroundColors1.pop(),\n      //       };\n      //       uniqueWeek1[value].borderColor = borderColors1.pop();\n      //       uniqueWeek1[value].background = gradient.pop();\n      //     }\n      //   });\n      // let editedLegendPercentages = Object.keys(uniqueWeek1);\n\n\n      var legendPercentages = Object.keys(uniqueWeek);\n\n      var labels = _.map(this.props.markdownAnalysisGraphData.weekNum, function (date) {\n        if (_this2.props.level === 'week') {\n          return date;\n        } else {\n          return moment(date).format('MMM DD');\n        }\n      });\n\n      var sellThroughData = {\n        labels: labels,\n        datasets: [{\n          label: 'chart1',\n          data: this.props.markdownAnalysisGraphData.sellThrough,\n          borderColor: _.map(this.props.markdownAnalysisGraphData.weekly_markdown, function (m) {\n            return uniqueWeek[m].borderColor;\n          }),\n          backgroundColor: _.map(this.props.markdownAnalysisGraphData.weekly_markdown, function (m) {\n            return uniqueWeek[m].backgroundColor;\n          }),\n          borderWidth: {\n            top: 3,\n            right: 0,\n            bottom: 0,\n            left: 0\n          }\n        }]\n      };\n      var marginData = {\n        labels: labels,\n        datasets: [{\n          label: 'chart1',\n          data: this.props.markdownAnalysisGraphData.margin,\n          borderColor: _.map(this.props.markdownAnalysisGraphData.weekly_markdown, function (m) {\n            return uniqueWeek[m].borderColor;\n          }),\n          backgroundColor: _.map(this.props.markdownAnalysisGraphData.weekly_markdown, function (m) {\n            return uniqueWeek[m].backgroundColor;\n          }),\n          borderWidth: {\n            top: 3,\n            right: 0,\n            bottom: 0,\n            left: 0\n          }\n        }]\n      };\n      var uniqueWeek1 = {};\n\n      if (this.props.isEdit && !_.isEmpty(this.props.editMarkdownAnalysisGraphData)) {\n        // let uniqueWeek1 = {};\n        this.props.editMarkdownAnalysisGraphData.weekly_markdown.forEach(function (value, i) {\n          if (!uniqueWeek1.hasOwnProperty(value)) {\n            uniqueWeek1[value] = {\n              backgroundColor: backgroundColors1.pop()\n            };\n            uniqueWeek1[value].borderColor = borderColors1.pop();\n            uniqueWeek1[value].background = gradient.pop();\n          }\n        });\n        sellThroughData.datasets.push({\n          label: 'chart2',\n          data: this.props.editMarkdownAnalysisGraphData.sellThrough,\n          borderColor: _.map(this.props.editMarkdownAnalysisGraphData.weekly_markdown, function (m) {\n            return uniqueWeek1[m].borderColor;\n          }),\n          backgroundColor: _.map(this.props.editMarkdownAnalysisGraphData.weekly_markdown, function (m) {\n            return uniqueWeek1[m].backgroundColor;\n          }),\n          borderWidth: {\n            top: 3,\n            right: 0,\n            bottom: 0,\n            left: 0\n          }\n        });\n        marginData.datasets.push({\n          data: this.props.editMarkdownAnalysisGraphData.margin,\n          borderColor: _.map(this.props.editMarkdownAnalysisGraphData.weekly_markdown, function (m) {\n            return uniqueWeek1[m].borderColor;\n          }),\n          backgroundColor: _.map(this.props.editMarkdownAnalysisGraphData.weekly_markdown, function (m) {\n            return uniqueWeek1[m].backgroundColor;\n          }),\n          borderWidth: {\n            top: 3,\n            right: 0,\n            bottom: 0,\n            left: 0\n          }\n        });\n      }\n\n      var editedLegendPercentages = Object.keys(uniqueWeek1);\n      var level = this.props.level === 'week' ? 'Week' : 'Month';\n      options.scales.xAxes[0].scaleLabel.labelString = level;\n      options2.scales.xAxes[0].scaleLabel.labelString = level;\n      editedLegendPercentages = Object.keys(uniqueWeek1).map(function (percentage) {\n        return \"\".concat(Number(percentage), \"%\");\n      });\n      legendPercentages = Object.keys(uniqueWeek).map(function (percentage) {\n        return \"\".concat(Number(percentage), \"%\");\n      });\n      return React.createElement(\"div\", {\n        className: this.props.isEdit && !_.isEmpty(this.props.editAnalysisData) ? 'edit-data-present' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row skuLabelStyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"skuLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, \"Style Group\"), React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(Select, {\n        placeholder: \"Style Group\",\n        value: this.props.selectedSku,\n        options: this.props.optionSku,\n        onChange: this.props.selectedSkuHandler,\n        isClearable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        className: \"skuLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, \"Custom Style Group\"), React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, React.createElement(Select, {\n        placeholder: \"Style Group\",\n        value: this.props.selectedSku,\n        options: this.props.optionSku,\n        onChange: this.props.selectedSkuHandler,\n        isClearable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        className: \"skuLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, \"Style Color\"), React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(Select, {\n        placeholder: \"Style Group\",\n        value: this.props.selectedSku,\n        options: this.props.optionSku,\n        onChange: this.props.selectedSkuHandler,\n        isClearable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-primary \",\n        onClick: this.addScenario,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, \"Add Scenario\")), React.createElement(\"div\", {\n        className: \"row analysis-overview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chartContainermain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"sellThroughLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, \"Sell Through %\"), React.createElement(\"div\", {\n        className: \"chartContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row j-c-c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, legendPercentages.map(function (percentage, index) {\n        return React.createElement(\"div\", {\n          className: \"d-flex\",\n          key: \"\".concat(Math.random() + index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 451\n          },\n          __self: this\n        }, React.createElement(Tippy, {\n          style: {\n            cursor: 'pointer'\n          },\n          placement: 'left',\n          arrow: true,\n          distance: 10,\n          content: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 457\n            },\n            __self: this\n          }, \" MD \", percentage),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 452\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"color-box mr-2\",\n          style: {\n            cursor: 'pointer',\n            backgroundColor: Object.keys(uniqueWeek).map(function (percentage) {\n              return uniqueWeek[percentage].borderColor;\n            })[index]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"left-space\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 468\n          },\n          __self: this\n        }, percentage));\n      }), editedLegendPercentages.map(function (percentage, index) {\n        return React.createElement(\"div\", {\n          className: \"d-flex\",\n          key: \"\".concat(Math.random() + index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472\n          },\n          __self: this\n        }, React.createElement(Tippy, {\n          style: {\n            cursor: 'pointer'\n          },\n          placement: 'left',\n          arrow: true,\n          distance: 10,\n          content: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 478\n            },\n            __self: this\n          }, \" MD \", percentage),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"color-box mr-2\",\n          style: {\n            cursor: 'pointer',\n            background: Object.keys(uniqueWeek1).map(function (percentage) {\n              return uniqueWeek1[percentage].background;\n            })[index]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"left-space\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489\n          },\n          __self: this\n        }, percentage));\n      }), ' ')), React.createElement(BarChart, {\n        width: '681px',\n        height: '280px',\n        data: sellThroughData,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"chartContainermain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"sellThroughLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }, \"Margin %\"), React.createElement(\"div\", {\n        className: \"chartContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row j-c-c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, legendPercentages.map(function (percentage, index) {\n        return React.createElement(\"div\", {\n          className: \"d-flex\",\n          key: \"\".concat(Math.random() + index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 506\n          },\n          __self: this\n        }, React.createElement(Tippy, {\n          style: {\n            cursor: 'pointer'\n          },\n          placement: 'left',\n          arrow: true,\n          distance: 10,\n          content: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 512\n            },\n            __self: this\n          }, \" MD \", percentage),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 507\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"color-box mr-2\",\n          style: {\n            cursor: 'pointer',\n            backgroundColor: Object.keys(uniqueWeek).map(function (percentage) {\n              return uniqueWeek[percentage].borderColor;\n            })[index]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 513\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"left-space\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 523\n          },\n          __self: this\n        }, percentage));\n      }), editedLegendPercentages.map(function (percentage, index) {\n        return React.createElement(\"div\", {\n          className: \"d-flex\",\n          key: \"\".concat(Math.random() + index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 527\n          },\n          __self: this\n        }, React.createElement(Tippy, {\n          style: {\n            cursor: 'pointer'\n          },\n          placement: 'left',\n          arrow: true,\n          distance: 10,\n          content: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 533\n            },\n            __self: this\n          }, \" MD \", percentage),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 528\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"color-box mr-2\",\n          style: {\n            cursor: 'pointer',\n            background: Object.keys(uniqueWeek1).map(function (percentage) {\n              return uniqueWeek1[percentage].background;\n            })[index]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 534\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"left-space\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 544\n          },\n          __self: this\n        }, percentage));\n      }))), React.createElement(BarChart, {\n        width: '681px',\n        height: '280px',\n        data: marginData,\n        options: options2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }, React.createElement(AnalysisTable, {\n        tableData: this.props.analysisTable || [],\n        tableData2: this.props.editAnalysisData || [],\n        isEdit: this.props.isEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return MarkdownAnalysis;\n}(Component);\n\nexport default MarkdownAnalysis;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/MarkdownAnalysis/index.js"],"names":["React","Component","Tippy","Select","AnalysisTable","moment","BarChart","_","pattern","options2","tooltips","callbacks","label","tooltipItem","data","labels","index","value","datasets","datasetIndex","labelTip","valueTip","parseFloat","toFixed","plugins","datalabels","display","legend","position","boxWidth","fontFamily","fontSize","maintainAspectRatio","scales","yAxes","gridLines","ticks","suggestedMin","scaleLabel","show","fontStyle","fontColor","labelString","xAxes","id","categoryPercentage","barPercentage","autoSkip","autoSkipPadding","maxRotation","fontWeight","options","MarkdownAnalysis","props","state","borderColors","borderColors1","gradient","backgroundColors","backgroundColors1","draw","uniqueWeek","map","markdownAnalysisGraphData","weekly_markdown","i","hasOwnProperty","backgroundColor","pop","borderColor","legendPercentages","Object","keys","weekNum","date","level","format","sellThroughData","sellThrough","m","borderWidth","top","right","bottom","left","marginData","margin","uniqueWeek1","isEdit","isEmpty","editMarkdownAnalysisGraphData","forEach","background","push","editedLegendPercentages","percentage","Number","editAnalysisData","selectedSku","optionSku","selectedSkuHandler","addScenario","Math","random","cursor","analysisTable"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Tippy from '@tippy.js/react';\nimport Select from 'react-select';\nimport AnalysisTable from '../MarkdownAnalysis/AnalysisTable';\nimport moment from 'moment';\nimport 'tippy.js/dist/tippy.css';\nimport BarChart from '../support/Charts/Barchart';\nimport './index.css';\nimport _ from 'lodash';\nimport pattern from 'patternomaly';\nconst options2 = {\n  tooltips: {\n    callbacks: {\n      label: function (tooltipItem, data) {\n        let label = data.labels[tooltipItem.index];\n        let value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n        let labelTip = 'Week' + ':' + label;\n        let valueTip = 'Margin%' + ':' + parseFloat(value).toFixed(2);\n        return [labelTip, valueTip];\n      },\n    },\n  },\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12,\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px',\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n        },\n        ticks: {\n          fontSize: 13,\n          suggestedMin: 0,\n        },\n        scaleLabel: {\n          show: true,\n          display: true,\n          fontSize: 14,\n          fontStyle: 'bold',\n          fontColor: '#000',\n          labelString: 'Margin %',\n        },\n      },\n    ],\n    xAxes: [\n      {\n        id: 'x-axis-0',\n        categoryPercentage: 1.0,\n        barPercentage: 1.0,\n\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          autoSkip: true,\n          autoSkipPadding: 40,\n          maxRotation: 0,\n          suggestedMin: 0,\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Time (week)',\n          fontWeight: 900,\n          fontStyle: 'bold',\n        },\n      },\n    ],\n  },\n};\nconst options = {\n  tooltips: {\n    callbacks: {\n      label: function (tooltipItem, data) {\n        let label = data.labels[tooltipItem.index];\n        let value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n        let labelTip = 'Week' + ':' + label;\n        let valueTip = 'ST%' + ':' + parseFloat(value).toFixed(2);\n        return [labelTip, valueTip];\n      },\n    },\n  },\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  legend: {\n    display: false,\n    position: 'bottom',\n    labels: {\n      boxWidth: 12,\n    },\n    fontFamily: 'Helvetica',\n    fontSize: '12px',\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n        },\n        // ticks: {\n        //   fontSize: 13,\n        //   suggestedMin: 0,\n        // },\n        scaleLabel: {\n          show: true,\n          display: true,\n          fontSize: 14,\n          fontStyle: 'bold',\n          fontColor: '#000',\n          labelString: 'Sell Through %',\n        },\n      },\n    ],\n    xAxes: [\n      {\n        id: 'x-axis-0',\n        categoryPercentage: 1.0,\n        barPercentage: 1.0,\n        gridLines: {\n          display: false,\n        },\n        // stacked: true,\n        ticks: {\n          autoSkip: true,\n          autoSkipPadding: 40,\n          maxRotation: 0,\n          suggestedMin: 0,\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Time (week)',\n          fontWeight: 900,\n          fontStyle: 'bold',\n        },\n      },\n    ],\n  },\n};\nclass MarkdownAnalysis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const borderColors = [\n      '#44677B',\n      '#6F9FC3',\n      '#83BE8C',\n      '#88ad5f',\n      '#b06d58',\n      '#86588a',\n      '#17a69c',\n      '#b0a819',\n      '#d97c30',\n      '#5d5b85',\n    ];\n    const borderColors1 = [\n      '#44677B',\n      '#6F9FC3',\n      '#83BE8C',\n      '#88ad5f',\n      '#b06d58',\n      '#86588a',\n      '#17a69c',\n      '#b0a819',\n      '#d97c30',\n      '#5d5b85',\n    ];\n    const gradient = [\n      'repeating-linear-gradient(-44deg, #44677B 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #6F9FC3 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #83BE8C 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #88ad5f 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #b06d58 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #86588a 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #17a69c 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #b0a819 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #d97c30 5%,white 9px)',\n      'repeating-linear-gradient(-44deg, #5d5b85 5%,white 9px)',\n    ];\n    const backgroundColors = [\n      'rgba(68, 103, 123, 0.4)',\n      'rgba(166, 206, 227, 0.4)',\n      'rgba(131, 190, 140, 0.4)',\n      'rgba(136, 173, 95, 0.4)',\n      'rgba(176, 109, 88, 0.4)',\n      'rgba(134, 88, 138, 0.4)',\n      'rgba(23, 166, 156, 0.4)',\n      'rgba(89, 86, 25, 0.4)',\n      'rgba(217, 124, 48, 0.4)',\n      'rgba(93, 91, 133, 0.4)',\n    ];\n    const backgroundColors1 = [\n      pattern.draw('diagonal-right-left', 'rgba(68, 103, 123, 0.3)'),\n      pattern.draw('diagonal-right-left', 'rgba(166, 206, 227, 0.3)'),\n      pattern.draw('diagonal-right-left', 'rgba(131, 190, 140, 0.3)'),\n      pattern.draw('diagonal-right-left', 'rgba(136, 173, 95, 0.3)'),\n      pattern.draw('diagonal-right-left', 'rgba(176, 109, 88, 0.3)'),\n      pattern.draw('diagonal-right-left', 'rgba(134, 88, 138, 0.3)'),\n      pattern.draw('diagonal-right-left', 'rgba(23, 166, 156, 0.3)'),\n      pattern.draw('diagonal-right-left', 'rgba(89, 86, 25, 0.3)'),\n      pattern.draw('diagonal-right-left', 'rgba(217, 124, 48, 0.3)'),\n      pattern.draw('diagonal-right-left', 'rgba(93, 91, 133, 0.3)'),\n    ];\n    let uniqueWeek = {};\n    _.map(this.props.markdownAnalysisGraphData.weekly_markdown, (value, i) => {\n      if (!uniqueWeek.hasOwnProperty(value)) {\n        uniqueWeek[value] = {\n          backgroundColor: backgroundColors.pop(),\n          // backgroundColor1: backgroundColors1.pop(),\n        };\n\n        uniqueWeek[value].borderColor = borderColors.pop();\n      }\n    });\n    // let uniqueWeek1 = {};\n    // this.props.editMarkdownAnalysisGraphData &&\n    //   this.props.editMarkdownAnalysisGraphData.weekly_markdown.forEach((value, i) => {\n    //     if (!uniqueWeek1.hasOwnProperty(value)) {\n    //       uniqueWeek1[value] = {\n    //         backgroundColor: backgroundColors1.pop(),\n    //       };\n    //       uniqueWeek1[value].borderColor = borderColors1.pop();\n    //       uniqueWeek1[value].background = gradient.pop();\n    //     }\n    //   });\n    // let editedLegendPercentages = Object.keys(uniqueWeek1);\n\n    let legendPercentages = Object.keys(uniqueWeek);\n    const labels = _.map(this.props.markdownAnalysisGraphData.weekNum, (date) => {\n      if (this.props.level === 'week') {\n        return date;\n      } else {\n        return moment(date).format('MMM DD');\n      }\n    });\n    let sellThroughData = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'chart1',\n          data: this.props.markdownAnalysisGraphData.sellThrough,\n          borderColor: _.map(\n            this.props.markdownAnalysisGraphData.weekly_markdown,\n            (m) => uniqueWeek[m].borderColor\n          ),\n          backgroundColor: _.map(\n            this.props.markdownAnalysisGraphData.weekly_markdown,\n            (m) => uniqueWeek[m].backgroundColor\n          ),\n          borderWidth: {\n            top: 3,\n            right: 0,\n            bottom: 0,\n            left: 0,\n          },\n        },\n        // {\n        //   label: 'label2',\n        //   data:\n        //     this.props.editMarkdownAnalysisGraphData &&\n        //     this.props.editMarkdownAnalysisGraphData.sellThrough,\n        //   borderColor:\n        //     this.props.editMarkdownAnalysisGraphData &&\n        //     this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n        //       (m) => uniqueWeek1[m].borderColor\n        //     ),\n        //   backgroundColor:\n        //     this.props.editMarkdownAnalysisGraphData &&\n        //     this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n        //       (m) => uniqueWeek1[m].backgroundColor\n        //     ),\n        //   borderWidth: {\n        //     top: 3,\n        //     right: 0,\n        //     bottom: 0,\n        //     left: 0,\n        //   },\n        // },\n      ],\n    };\n    let marginData = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'chart1',\n          data: this.props.markdownAnalysisGraphData.margin,\n          borderColor: _.map(\n            this.props.markdownAnalysisGraphData.weekly_markdown,\n            (m) => uniqueWeek[m].borderColor\n          ),\n          backgroundColor: _.map(\n            this.props.markdownAnalysisGraphData.weekly_markdown,\n            (m) => uniqueWeek[m].backgroundColor\n          ),\n          borderWidth: {\n            top: 3,\n            right: 0,\n            bottom: 0,\n            left: 0,\n          },\n        },\n        // {\n        //   label: 'label2',\n        //   data:\n        //     this.props.editMarkdownAnalysisGraphData &&\n        //     this.props.editMarkdownAnalysisGraphData.margin,\n        //   borderColor:\n        //     this.props.editMarkdownAnalysisGraphData &&\n        //     this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n        //       (m) => uniqueWeek1[m].borderColor\n        //     ),\n        //   backgroundColor:\n        //     this.props.editMarkdownAnalysisGraphData &&\n        //     this.props.editMarkdownAnalysisGraphData.weekly_markdown.map(\n        //       (m) => uniqueWeek1[m].backgroundColor\n        //     ),\n        //   borderWidth: {\n        //     top: 3,\n        //     right: 0,\n        //     bottom: 0,\n        //     left: 0,\n        //   },\n        // },\n      ],\n    };\n    let uniqueWeek1 = {};\n    if (this.props.isEdit && !_.isEmpty(this.props.editMarkdownAnalysisGraphData)) {\n      // let uniqueWeek1 = {};\n      this.props.editMarkdownAnalysisGraphData.weekly_markdown.forEach((value, i) => {\n        if (!uniqueWeek1.hasOwnProperty(value)) {\n          uniqueWeek1[value] = {\n            backgroundColor: backgroundColors1.pop(),\n          };\n          uniqueWeek1[value].borderColor = borderColors1.pop();\n          uniqueWeek1[value].background = gradient.pop();\n        }\n      });\n\n      sellThroughData.datasets.push({\n        label: 'chart2',\n        data: this.props.editMarkdownAnalysisGraphData.sellThrough,\n        borderColor: _.map(\n          this.props.editMarkdownAnalysisGraphData.weekly_markdown,\n          (m) => uniqueWeek1[m].borderColor\n        ),\n        backgroundColor: _.map(\n          this.props.editMarkdownAnalysisGraphData.weekly_markdown,\n          (m) => uniqueWeek1[m].backgroundColor\n        ),\n        borderWidth: {\n          top: 3,\n          right: 0,\n          bottom: 0,\n          left: 0,\n        },\n      });\n\n      marginData.datasets.push({\n        data: this.props.editMarkdownAnalysisGraphData.margin,\n        borderColor: _.map(\n          this.props.editMarkdownAnalysisGraphData.weekly_markdown,\n          (m) => uniqueWeek1[m].borderColor\n        ),\n        backgroundColor: _.map(\n          this.props.editMarkdownAnalysisGraphData.weekly_markdown,\n          (m) => uniqueWeek1[m].backgroundColor\n        ),\n        borderWidth: {\n          top: 3,\n          right: 0,\n          bottom: 0,\n          left: 0,\n        },\n      });\n    }\n    let editedLegendPercentages = Object.keys(uniqueWeek1);\n    let level = this.props.level === 'week' ? 'Week' : 'Month';\n    options.scales.xAxes[0].scaleLabel.labelString = level;\n    options2.scales.xAxes[0].scaleLabel.labelString = level;\n    editedLegendPercentages = Object.keys(uniqueWeek1).map(\n      (percentage) => `${Number(percentage)}%`\n    );\n    legendPercentages = Object.keys(uniqueWeek).map((percentage) => `${Number(percentage)}%`);\n\n    return (\n      <div\n        className={\n          this.props.isEdit && !_.isEmpty(this.props.editAnalysisData) ? 'edit-data-present' : ''\n        }>\n        <div className=\"mb-4\">\n          <div className=\"row skuLabelStyle\">\n            <label className=\"skuLabel\">Style Group</label>\n            <div className=\"col-md-2\">\n              <Select\n                placeholder=\"Style Group\"\n                value={this.props.selectedSku}\n                options={this.props.optionSku}\n                onChange={this.props.selectedSkuHandler}\n                isClearable\n              />\n            </div>\n            <label className=\"skuLabel\">Custom Style Group</label>\n            <div className=\"col-md-2\">\n              <Select\n                placeholder=\"Style Group\"\n                value={this.props.selectedSku}\n                options={this.props.optionSku}\n                onChange={this.props.selectedSkuHandler}\n                isClearable\n              />\n            </div>\n            <label className=\"skuLabel\">Style Color</label>\n            <div className=\"col-md-2\">\n              <Select\n                placeholder=\"Style Group\"\n                value={this.props.selectedSku}\n                options={this.props.optionSku}\n                onChange={this.props.selectedSkuHandler}\n                isClearable\n              />\n            </div>\n            <button className=\"btn btn-primary \" onClick={this.addScenario}>\n              Add Scenario\n            </button>\n          </div>\n\n          <div className=\"row analysis-overview\">\n            <div className=\"col\">\n              <div className=\"chartContainermain\">\n                <label className=\"sellThroughLabel\">Sell Through %</label>\n                <div className=\"chartContainer\">\n                  <div className=\"row j-c-c\">\n                    {legendPercentages.map((percentage, index) => (\n                      <div className=\"d-flex\" key={`${Math.random() + index}`}>\n                        <Tippy\n                          style={{ cursor: 'pointer' }}\n                          placement={'left'}\n                          arrow={true}\n                          distance={10}\n                          content={<div> MD {percentage}</div>}>\n                          <div\n                            className=\"color-box mr-2\"\n                            style={{\n                              cursor: 'pointer',\n                              backgroundColor: Object.keys(uniqueWeek).map(\n                                (percentage) => uniqueWeek[percentage].borderColor\n                              )[index],\n                            }}\n                          />\n                        </Tippy>\n                        <span className=\"left-space\">{percentage}</span>\n                      </div>\n                    ))}\n                    {editedLegendPercentages.map((percentage, index) => (\n                      <div className=\"d-flex\" key={`${Math.random() + index}`}>\n                        <Tippy\n                          style={{ cursor: 'pointer' }}\n                          placement={'left'}\n                          arrow={true}\n                          distance={10}\n                          content={<div> MD {percentage}</div>}>\n                          <div\n                            className=\"color-box mr-2\"\n                            style={{\n                              cursor: 'pointer',\n                              background: Object.keys(uniqueWeek1).map(\n                                (percentage) => uniqueWeek1[percentage].background\n                              )[index],\n                            }}\n                          />\n                        </Tippy>\n                        <span className=\"left-space\">{percentage}</span>\n                      </div>\n                    ))}{' '}\n                  </div>\n                </div>\n                <BarChart\n                  width={'681px'}\n                  height={'280px'}\n                  data={sellThroughData}\n                  options={options}\n                />\n              </div>\n              <div className=\"chartContainermain\">\n                <label className=\"sellThroughLabel\">Margin %</label>\n                <div className=\"chartContainer\">\n                  <div className=\"row j-c-c\">\n                    {legendPercentages.map((percentage, index) => (\n                      <div className=\"d-flex\" key={`${Math.random() + index}`}>\n                        <Tippy\n                          style={{ cursor: 'pointer' }}\n                          placement={'left'}\n                          arrow={true}\n                          distance={10}\n                          content={<div> MD {percentage}</div>}>\n                          <div\n                            className=\"color-box mr-2\"\n                            style={{\n                              cursor: 'pointer',\n                              backgroundColor: Object.keys(uniqueWeek).map(\n                                (percentage) => uniqueWeek[percentage].borderColor\n                              )[index],\n                            }}\n                          />\n                        </Tippy>\n                        <span className=\"left-space\">{percentage}</span>\n                      </div>\n                    ))}\n                    {editedLegendPercentages.map((percentage, index) => (\n                      <div className=\"d-flex\" key={`${Math.random() + index}`}>\n                        <Tippy\n                          style={{ cursor: 'pointer' }}\n                          placement={'left'}\n                          arrow={true}\n                          distance={10}\n                          content={<div> MD {percentage}</div>}>\n                          <div\n                            className=\"color-box mr-2\"\n                            style={{\n                              cursor: 'pointer',\n                              background: Object.keys(uniqueWeek1).map(\n                                (percentage) => uniqueWeek1[percentage].background\n                              )[index],\n                            }}\n                          />\n                        </Tippy>\n                        <span className=\"left-space\">{percentage}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                <BarChart width={'681px'} height={'280px'} data={marginData} options={options2} />\n              </div>\n            </div>\n            <div className=\"col mt-4\">\n              <AnalysisTable\n                tableData={this.props.analysisTable || []}\n                tableData2={this.props.editAnalysisData || []}\n                isEdit={this.props.isEdit}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MarkdownAnalysis;\n"]},"metadata":{},"sourceType":"module"}