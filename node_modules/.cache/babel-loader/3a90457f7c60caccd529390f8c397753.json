{"ast":null,"code":"import _defineProperty from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/Markdown/components/createMarkdown/ManualInSeason.js\";\nimport React, { Component } from \"react\";\nimport AddSku from \"../createMarkdown/addSku\";\nimport InventoryInfo from \"../createMarkdown/inventoryInfo\";\nimport \"./createMarkdown.css\";\nimport Constraints from \"../createMarkdown/constraints\";\nimport CreateCadence from \"../createMarkdown/createCadence\";\nimport moment from \"moment\";\nimport AlertModal from \"../../../utils/AlertMessage/alertSuccess\";\nimport AgGridTableWithCheckbox from \"../AgGridTableWithCheckbox\";\nimport Modal from \"react-awesome-modal\";\nimport { cloneDeep } from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { fetchStoreData as _fetchStoreData, simulateMarkdownCadenceAndSkuListMultiple, flushStoreData as _flushStoreData, simulatePreSeasonMarkDown as _simulatePreSeasonMarkDown, saveOverAllMarkdown as _saveOverAllMarkdown, resetMakrdownSave as _resetMakrdownSave, saveSkuMarkdown as _saveSkuMarkdown } from \"../../../actions/aiAssistedIn_PreSeasonActions\";\nimport AutopromoCharts from \"../../../components/AutoPromoCreation/Autopromocharts\";\nimport _ from \"lodash\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport CadenceChartComp from \"../calenderComponents/cadenceChatComponent\";\nimport Inventory from \"../calenderComponents/inventoryDetails\";\nimport LoaderComponent from \"../../../utils/Loader\";\n\nfunction getParamValue(paramName) {\n  var url = window.location.href.split(\"?\")[1] || \"\";\n  var val = null;\n  var paramsArray = url.split(\"&\");\n  paramsArray.forEach(function (item) {\n    if (item.split(\"=\")[0] === paramName) {\n      val = item.split(\"=\")[1];\n      return;\n    }\n  });\n  return val;\n}\n\nvar ManualInSeason =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ManualInSeason, _Component);\n\n  function ManualInSeason(props) {\n    var _this;\n\n    _classCallCheck(this, ManualInSeason);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ManualInSeason).call(this, props));\n\n    _this.targetClearenceValueHandler = function (e) {\n      _this.setState({\n        targetClearenceVal: e.target.value\n      });\n    };\n\n    _this.inverseValueHandler = function (val) {\n      _this.setState({\n        inverse: val\n      });\n    };\n\n    _this.marginValueHandler = function (e) {\n      _this.setState({\n        marginPercentage: e.target.value\n      });\n    };\n\n    _this.showMessageModal = function () {\n      _this.setState({\n        showModalFlag: true\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          showModalFlag: false\n        });\n\n        _this.props.resetMakrdownSave();\n      }, 2000);\n    };\n\n    _this.setActiveTab = function (tab) {\n      _this.setState({\n        activeTab: tab\n      });\n    };\n\n    _this.simulateMarkdown = function () {\n      _this.setState({\n        showSimulationResult: true\n      }); //let markdowns = this.state.selectedScenariosIndex ?\n\n\n      var markdowns = _this.state.scenariosListValues; //.map(obj => obj / 100).join(',') : \"\"\n\n      markdowns = markdowns.filter(function (mrkdn) {\n        return !!mrkdn;\n      }); //markdowns = markdowns.map((mrk) => mrk.join(\",\"))\n\n      var params = {\n        markdowns: markdowns,\n        start_date: moment(_this.state.dateRange.startDate).format(\"YYYY-MM-DD\"),\n        end_date: moment(_this.state.dateRange.endDate).format(\"YYYY-MM-DD\"),\n        inventory: _this.state.currentInventory,\n        skus: _this.state.selectedSkuId ? _this.state.selectedSkuId.value : \"\",\n        burn_rate: _this.state.targetClearenceVal / 100,\n        margin: _this.state.marginPercentage / 100 // markdown: \"0.3,0.4\",\n        // start_date: \"2018-01-01\",\n        // end_date: \"2019-03-01\",\n        // inventory: 10000000,\n        // skus: \"\",\n        // burn_rate:\".1\"\n\n      };\n\n      _this.setState({\n        params: params\n      }, function () {\n        _this.props.fetchCadenceAndSku(_this.state.params);\n      });\n    };\n\n    _this.switchSkuModal = function () {\n      _this.setState(function (prevState) {\n        return {\n          showSkuModal: !prevState.showSkuModal\n        };\n      });\n    };\n\n    _this.onExcludeStores = function () {\n      _this.setState({\n        showSKUListPopup: true\n      });\n    };\n\n    _this.onCadenceValue = function (e, index, inputIndex) {\n      var scenariosListValues = cloneDeep(_this.state.scenariosListValues);\n\n      if (scenariosListValues[index] && scenariosListValues[index]) {\n        scenariosListValues[index][inputIndex] = e.target.value;\n      } else {\n        scenariosListValues[index] = [];\n        scenariosListValues[index][inputIndex] = e.target.value;\n      }\n\n      _this.setState({\n        scenariosListValues: scenariosListValues\n      }, function () {});\n    };\n\n    _this.addCadence =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(number, index) {\n        var scenariosList, _loop, i;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                scenariosList = cloneDeep(_this.state.scenariosList);\n\n                _loop = function _loop(i) {\n                  if (scenariosList[index].cadence.length < 6) {\n                    scenariosList[index].cadence.push(React.createElement(\"div\", {\n                      className: \"col\",\n                      key: i + 1,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 273\n                      },\n                      __self: this\n                    }, React.createElement(\"div\", {\n                      className: \"input-group\",\n                      style: {\n                        width: \"90%\"\n                      },\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 274\n                      },\n                      __self: this\n                    }, React.createElement(\"input\", {\n                      type: \"text\",\n                      className: \"form-control border-style\",\n                      onChange: function onChange(e) {\n                        return _this.onCadenceValue(e, index, i);\n                      },\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 275\n                      },\n                      __self: this\n                    }), React.createElement(\"div\", {\n                      className: \"input-group-append\",\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 280\n                      },\n                      __self: this\n                    }, React.createElement(\"button\", {\n                      className: \"btn btn-side-percent\",\n                      type: \"button\",\n                      style: {\n                        zIndex: \"unset\"\n                      },\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 281\n                      },\n                      __self: this\n                    }, React.createElement(\"i\", {\n                      className: \"fa fa-percent\",\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 286\n                      },\n                      __self: this\n                    }))))));\n                  }\n                };\n\n                for (i = 0; i < number; i++) {\n                  _loop(i);\n                }\n\n                _this.setState({\n                  scenariosList: scenariosList\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.selectedScenarios = function (index) {\n      _this.setState({\n        selectedScenariosIndex: index\n      }, function () {});\n    };\n\n    _this.addScenario = function () {\n      var index = ++_this.scenarioCount;\n      var scenariosList = cloneDeep(_this.state.scenariosList);\n\n      _this.setState({\n        scenariosList: scenariosList\n      });\n\n      scenariosList[index] = {\n        list: [],\n        cadence: []\n      };\n\n      _this.setState({\n        scenariosList: scenariosList\n      },\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                scenariosList[index].list.push(React.createElement(\"div\", {\n                  className: \"cadence-row row\",\n                  key: index,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 311\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  className: \"scenario-count col-md-1\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 312\n                  },\n                  __self: this\n                }, React.createElement(\"input\", {\n                  type: \"radio\",\n                  name: \"selectedScenario\",\n                  className: \"inverse-radio mt-2 mr-2\",\n                  onClick: function onClick() {\n                    return _this.selectedScenarios(index);\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 313\n                  },\n                  __self: this\n                }), index), _this.state.scenariosList[index].cadence, React.createElement(\"button\", {\n                  className: \"btn add-cadence-button\",\n                  onClick: function onClick() {\n                    return _this.addCadence(1, index);\n                  },\n                  disabled: _this.state.scenariosList[index].cadence.length > 5,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 322\n                  },\n                  __self: this\n                }, React.createElement(\"i\", {\n                  className: \"fa fa-plus\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 327\n                  },\n                  __self: this\n                }))));\n                _context2.next = 3;\n                return _this.addCadence(3, index);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      })));\n    };\n\n    _this.prevYear = function () {\n      var y = _this.state.endDate.subtract(1, \"y\");\n\n      _this.setState({\n        endDate: y\n      });\n    };\n\n    _this.nextYear = function () {\n      var y = _this.state.endDate.add(1, \"y\");\n\n      _this.setState({\n        endDate: y\n      });\n    };\n\n    _this.hideModalFlag = function () {\n      _this.setState({\n        showModalFlag: false\n      });\n    };\n\n    _this.lineModalShow = function () {\n      _this.setState({\n        showModal: true,\n        showModalFlag: true\n      });\n    };\n\n    _this.onDatesChange = function (_ref3) {\n      var startDate = _ref3.startDate,\n          endDate = _ref3.endDate;\n\n      _this.setState({\n        dateRange: {\n          startDate: startDate,\n          endDate: endDate\n        }\n      });\n    };\n\n    _this.constraintsCadenceHandler = function (cadence) {\n      if (cadence === \"overall\") {\n        _this.setState({\n          cadenceConstraintsVal: \"overall\",\n          setDisableSelect: true\n        });\n\n        return;\n      }\n\n      _this.setState({\n        cadenceConstraintsVal: \"sku\",\n        setDisableSelect: false\n      });\n    };\n\n    _this.handleWeeklyInventoryDivisions = function (simData) {\n      var inventoryUtilizationData = {};\n      simData.overall.weekly_markdown.forEach(function (markdown, idx) {\n        if (!inventoryUtilizationData[markdown]) {\n          inventoryUtilizationData[markdown] = [];\n        }\n\n        inventoryUtilizationData[markdown].push(simData.overall.weekly_inventory[idx]);\n      });\n      var inventoryUtilization = {\n        data: [],\n        totalInventory: simData.overall.inventory[1] // weeklyInventoryData: Object.keys(inventoryUtilizationData).map(key => inventoryUtilizationData[key]),\n\n      };\n      Object.keys(inventoryUtilizationData).map(function (key) {\n        inventoryUtilization.data.push(inventoryUtilizationData[key].reduce(function (acc) {\n          var num = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          return acc + num;\n        }));\n      });\n      return inventoryUtilization;\n    };\n\n    _this.onSKUChange = function (value) {\n      _this.setState({\n        selectedSkuId: value\n      });\n    };\n\n    _this.getSelectedSkuData = function (data) {\n      _this.setState({\n        selectedSku: data\n      });\n    };\n\n    _this.setActiveTab = function (tab) {\n      _this.setState({\n        activeTab: tab\n      });\n    };\n\n    _this.limitClearenceHandler = function (selectedNodesData) {\n      if (selectedNodesData.length > 0) {\n        var invData = selectedNodesData.map(function (data) {\n          return data.inv;\n        });\n        var totalInv = invData.reduce(function (acc) {\n          var d = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          return acc + d;\n        });\n\n        _this.setState({\n          currentInventory: totalInv,\n          selectedStores: selectedNodesData.length,\n          showSKUListPopup: false\n        });\n\n        return;\n      }\n\n      _this.setState({\n        currentInventory: 0,\n        selectedStores: 0,\n        showSKUListPopup: false\n      });\n    };\n\n    _this.handlePreSeasonMarkdown = function () {\n      _this.setState({\n        preSeasonActive: true\n      });\n\n      _this.props.simulatePreSeasonMarkDown({});\n    };\n\n    _this.handleInSeasonMarkdown = function () {\n      _this.setState({\n        preSeasonActive: false\n      });\n    };\n\n    _this.onSaveCadenceHandler = function (data) {\n      var cadenceData = [];\n      cadenceData.push(data);\n\n      var payload = _objectSpread({}, _this.state.params, {\n        saveObj: {\n          data: _this.state.params && _this.state.params.skus ? _this.props.simulateDataForSKUS[_this.state.selectedScenariosIndex - 1].data.data : _this.props.simulateData\n        }\n      });\n\n      if (_this.state.params && _this.state.params.skus) {\n        _this.props.saveSkuMarkdown(payload);\n      } else {\n        _this.props.saveOverAllMarkdown(payload);\n      }\n    };\n\n    _this.state = {\n      params: {\n        markdowns: \"\",\n        start_date: \"\",\n        end_date: \"\",\n        inventory: \"\",\n        skus: \"\",\n        burn_rate: \"\"\n      },\n      selectedScenariosIndex: 0,\n      showSimulationResult: false,\n      scenariosList: [],\n      cadenceGroup: [],\n      skuStr: null,\n      selectedSkuCount: 0,\n      showSkuModal: false,\n      startDate: moment(),\n      endDate: moment(),\n      totalInventory: 0,\n      currentInventory: 0,\n      totalStores: 0,\n      selectedStores: 0,\n      showSkuSelect: false,\n      showSKUListPopup: false,\n      selectedTab: \"PreSeason\",\n      showModalFlag: false,\n      cadenceConstraintsVal: \"overall\",\n      setDisableSelect: true,\n      scenariosListValues: [],\n      category: [],\n      subCategory: [],\n      dateRange: {\n        startDate: null,\n        endDate: null\n      },\n      selectedSku: [],\n      selectedSkuId: \"\",\n      showSkuOrCadence: false,\n      inverse: null,\n      targetClearenceVal: null,\n      simulateData: null,\n      activeTab: 0,\n      preSeasonActive: false\n    };\n    _this.scenarioCount = 0;\n    _this.switchSkuModal = _this.switchSkuModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.prevYear = _this.prevYear.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.nextYear = _this.nextYear.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addScenario = _this.addScenario.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addCadence = _this.addCadence.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ManualInSeason, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.props.getInseasonData({\n      //   markdown: \".3,.4,.5\",\n      //   start_date: \"01012018\",\n      //   end_date: \"03012019\",\n      //   inventory: 1000000,\n      //   skus: \"5348\",\n      //   burn_rate: \"0.1\"\n      // });\n      var skuStr = getParamValue(\"skuid\");\n      var tempArr = [];\n\n      if (skuStr) {\n        skuStr.split(\",\").forEach(function (item, index) {\n          tempArr.push({\n            skuid: item,\n            skuname: item\n          });\n        });\n        this.setState({\n          skuStr: skuStr,\n          selectedSku: tempArr\n        });\n      }\n\n      if (getParamValue(\"subClassID\")) {\n        this.onExcludeStores();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, nextProps) {\n      if (!_.isEqual(prevProps.storeData, this.props.storeData)) {\n        var invData = [];\n        this.props.storeData.map(function (invDatas) {\n          invData.push(invDatas.inv);\n        });\n        var totalInv = 0;\n        invData.forEach(function (item) {\n          totalInv += parseInt(item);\n        });\n        var totalStores = this.props.storeData.length;\n        this.setState({\n          totalInventory: totalInv,\n          currentInventory: totalInv,\n          selectedStores: totalStores,\n          totalStores: totalStores,\n          selectedCadenceSet: this.props.simulatePreSeasonDataResult ? this.props.simulatePreSeasonDataResult[0] : null\n        });\n      }\n\n      if (!_.isEqual(prevProps.simulateData, this.props.simulateData) && this.props.simulateData.length > 0) {\n        this.setState({\n          simulateData: this.props.simulateData\n        });\n      } else if (!_.isEqual(prevProps.simulateData, this.props.simulateData) || this.props.simulateData.length === 0) {\n        this.setState({\n          simulateData: null\n        });\n      }\n\n      if (!_.isEqual(prevProps.storeData, this.props.storeData)) {\n        if (this.props.storeData.length > 0) {\n          var _invData = this.props.storeData.map(function (data) {\n            return data.inv;\n          });\n\n          var _totalInv = _invData.reduce(function (acc) {\n            var d = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            return acc + d;\n          });\n\n          var _totalStores = this.props.storeData.length;\n          this.setState({\n            totalInventory: _totalInv,\n            currentInventory: _totalInv,\n            selectedStores: _totalStores,\n            totalStores: _totalStores\n          });\n        } else {\n          this.setState({\n            totalInventory: 0,\n            currentInventory: 0,\n            selectedStores: 0,\n            totalStores: 0\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _React$createElement;\n\n      // let inseasonData = this.props.inseasonData\n      var storeData = this.props.storeData;\n\n      if (this.props.markdownSaved) {\n        setTimeout(function () {\n          _this2.props.resetMakrdownSave();\n        }, 2000);\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, React.createElement(LoaderComponent, {\n        loader: this.props.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        style: {\n          padding: \"3px 1px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"font-size-14 mt-2\",\n        style: {\n          paddingLeft: \"4px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, \"Markdown Optimization /\", React.createElement(\"span\", {\n        className: \"font-bold color-blue \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, \"Manually Create In-Season MD\")), React.createElement(\"hr\", {\n        className: \"mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }), React.createElement(AddSku, (_React$createElement = {\n        showSkuSelect: true,\n        selectedSkuCount: this.state.selectedSkuCount,\n        showSkuModal: this.state.showSkuModal,\n        switchSkuModal: this.switchSkuModal,\n        startDate: this.state.startDate,\n        endDate: this.state.endDate,\n        nextYear: this.nextYear,\n        prevYear: this.prevYear,\n        category: this.state.category,\n        subCategory: this.state.subCategory,\n        selectSku: this.state.skuStr,\n        getSelectedSkuData: this.getSelectedSkuData\n      }, _defineProperty(_React$createElement, \"category\", getParamValue(\"category\")), _defineProperty(_React$createElement, \"subCategory\", getParamValue(\"subCategory\")), _defineProperty(_React$createElement, \"class\", getParamValue(\"class\")), _defineProperty(_React$createElement, \"subClassID\", getParamValue(\"subclass\") ? getParamValue(\"subclass\").replace(\"%20\", \" \") : null), _defineProperty(_React$createElement, \"brandID\", getParamValue(\"brand\") ? getParamValue(\"brand\").replace(\"%20\", \" \") : null), _defineProperty(_React$createElement, \"sID\", getParamValue(\"subclassID\") ? getParamValue(\"subclassID\").replace(\"%20\", \" \") : null), _defineProperty(_React$createElement, \"bID\", getParamValue(\"brandID\") ? getParamValue(\"brandID\").replace(\"%20\", \" \") : null), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), React.createElement(\"hr\", {\n        className: \"mt-4 mb-2 dotted-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }), React.createElement(InventoryInfo, {\n        totalInventory: this.state.totalInventory,\n        currentInventory: this.state.currentInventory,\n        totalStores: this.state.totalStores,\n        selectedStores: this.state.selectedStores,\n        onExcludeStores: this.onExcludeStores,\n        callAPI: getParamValue(\"subclass\") ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        className: \"mt-4 mb-2 dotted-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }), React.createElement(Constraints, {\n        constraintsCadenceHandler: this.constraintsCadenceHandler,\n        onDatesChange: this.onDatesChange,\n        startDate: this.state.dateRange.startDate,\n        endDate: this.state.dateRange.endDate,\n        targetClearenceValueHandler: this.targetClearenceValueHandler,\n        inverseValueHandler: this.inverseValueHandler,\n        inverserVal: this.state.inverse,\n        cadenceConstraintsVal: this.state.cadenceConstraintsVal,\n        marginValueHandler: this.marginValueHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        className: \"mt-4 mb-2 dotted-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }), React.createElement(CreateCadence, {\n        scenariosList: this.state.scenariosList,\n        simulateMarkdown: this.simulateMarkdown,\n        addScenario: this.addScenario,\n        onSkuChange: function onSkuChange(e, value) {\n          return _this2.onSKUChange(e, value);\n        },\n        cadenceConstraintsVal: this.state.cadenceConstraintsVal,\n        setDisableSelect: this.state.setDisableSelect,\n        selectedSku: this.state.selectedSku,\n        onSaveCadenceHandler: function onSaveCadenceHandler(data) {\n          return _this2.onSaveCadenceHandler(data);\n        },\n        selectedScenariosIndex: this.state.selectedScenariosIndex // selectedCadenceSet={}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      })), this.state.showSimulationResult ? React.createElement(\"div\", {\n        className: \"chart-Ai \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        style: {\n          marginTop: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"font-size-14 markdown-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        activeKey: this.state.activeTab,\n        onSelect: function onSelect(tab) {\n          return _this2.setActiveTab(tab);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, this.state.simulateData && this.state.simulateData.map(function (simData, idx) {\n        var inventoryUtilization = _this2.handleWeeklyInventoryDivisions(simData);\n\n        var inventory = simData.overall.inventory;\n        var margin = simData.overall.margin;\n        var revenue = simData.overall.revenue;\n        return React.createElement(Tab, {\n          eventKey: idx,\n          title: \"Scenario \".concat(idx + 1),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 576\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"cadence-chart-div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 578\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-3 \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 579\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 580\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 581\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"col-md-9\",\n          style: {\n            marginLeft: \"-29px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 582\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"col-md-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 588\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"col-md-3 text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 589\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"col-md-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 590\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"btn-group height-btngrp\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 591\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-outline-primary btnModal1 \".concat(_this2.state.preSeasonActive ? \"active\" : \"\"),\n          onClick: function onClick() {\n            return _this2.handlePreSeasonMarkdown();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 592\n          },\n          __self: this\n        }, \"Pre Season\"), React.createElement(\"button\", {\n          className: \"btn btn-outline-primary btnModal1 \".concat(!_this2.state.preSeasonActive ? \"active\" : \"\"),\n          onClick: function onClick() {\n            return _this2.handleInSeasonMarkdown();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 604\n          },\n          __self: this\n        }, \"In Season\")))), idx == _this2.state.activeTab && !_this2.state.preSeasonActive && React.createElement(React.Fragment, null, React.createElement(CadenceChartComp, {\n          selectedCadenceSet: simData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 622\n          },\n          __self: this\n        }), React.createElement(Inventory, {\n          inventoryUtilization: inventoryUtilization,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 625\n          },\n          __self: this\n        })), idx == _this2.state.activeTab && _this2.state.preSeasonActive && _this2.props.preSeasonData && React.createElement(React.Fragment, null, React.createElement(CadenceChartComp, {\n          selectedCadenceSet: _this2.props.preSeasonData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 636\n          },\n          __self: this\n        }), React.createElement(Inventory, {\n          inventoryUtilization: inventoryUtilization,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 641\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"card mt-20\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 649\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row mt-20 j-c-even\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 650\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 651\n          },\n          __self: this\n        }, idx == _this2.state.activeTab && React.createElement(AutopromoCharts, {\n          title: \"Quantity\",\n          width: \"16.5rem\",\n          height: \"328px\",\n          data: [inventory[0], inventory[1]],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 653\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"col-md-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 661\n          },\n          __self: this\n        }, idx == _this2.state.activeTab && React.createElement(AutopromoCharts, {\n          title: \"Revenue\",\n          width: \"16.5rem\",\n          height: \"328px\",\n          data: [margin[0], margin[1]],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 663\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"col-md-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 671\n          },\n          __self: this\n        }, idx == _this2.state.activeTab && React.createElement(AutopromoCharts, {\n          title: \"Margin\",\n          width: \"16.5rem\",\n          height: \"328px\",\n          data: [revenue[0], revenue[1]],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 673\n          },\n          __self: this\n        })))));\n      }))))) : null, React.createElement(\"div\", {\n        className: \"alertDivs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699\n        },\n        __self: this\n      }, this.props.markdownSaved && React.createElement(AlertModal, {\n        show: this.props.markdownSaved,\n        message: \"Cadence Scenario \".concat(this.state.selectedScenariosIndex, \" Saved Successfully\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 701\n        },\n        __self: this\n      })), React.createElement(Modal, {\n        visible: this.state.showSKUListPopup,\n        effect: \"fadeInDown\",\n        onClickAway: function onClickAway() {\n          return _this2.setState({\n            showSKUListPopup: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716\n        },\n        __self: this\n      }, \"Select Stores\", React.createElement(\"span\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            showSKUListPopup: false\n          });\n        },\n        className: \"pull-right select-store-span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        \"aria-hidden\": \"true\",\n        style: {\n          fontSize: \"22px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ai-pre-grid-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732\n        },\n        __self: this\n      }, storeData && storeData.length > 0 && React.createElement(AgGridTableWithCheckbox, {\n        inventoryData: storeData,\n        rowSelection: \"multiple\",\n        initialAllRowSelected: true,\n        limitClearenceHandler: this.limitClearenceHandler,\n        flushStoreData: this.props.flushStoreData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return ManualInSeason;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, aiAssitedIn_PreSeason) {\n  return {\n    // authentication: state.userLoginDetails,\n    // loader: state.calendar.loader,\n    // inseasonData: state.inseasonData,\n    loading: state.aiAssitedIn_PreSeason.loading,\n    simulateData: state.aiAssitedIn_PreSeason.simulateData,\n    storeData: state.aiAssitedIn_PreSeason.storeData,\n    preSeasonData: state.aiAssitedIn_PreSeason.preSeasonData,\n    markdownSaved: state.aiAssitedIn_PreSeason.markdownSaved,\n    simulateDataForSKUS: state.aiAssitedIn_PreSeason.simulateDataForSKUS\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    // getInseasonData: val => dispatch(getInseasonData(val)),\n    fetchStoreData: function fetchStoreData(val) {\n      return dispatch(_fetchStoreData(val));\n    },\n    fetchCadenceAndSku: function fetchCadenceAndSku(payload) {\n      return dispatch(simulateMarkdownCadenceAndSkuListMultiple(payload));\n    },\n    flushStoreData: function flushStoreData() {\n      return dispatch(_flushStoreData());\n    },\n    simulatePreSeasonMarkDown: function simulatePreSeasonMarkDown(payload) {\n      return dispatch(_simulatePreSeasonMarkDown(payload));\n    },\n    saveOverAllMarkdown: function saveOverAllMarkdown(payload) {\n      return dispatch(_saveOverAllMarkdown(payload));\n    },\n    resetMakrdownSave: function resetMakrdownSave() {\n      return dispatch(_resetMakrdownSave());\n    },\n    saveSkuMarkdown: function saveSkuMarkdown(payload) {\n      return dispatch(_saveSkuMarkdown(payload));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps // mapActionToProps\n)(withRouter(ManualInSeason)); // export default CreateMarkdown","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/Markdown/components/createMarkdown/ManualInSeason.js"],"names":["React","Component","AddSku","InventoryInfo","Constraints","CreateCadence","moment","AlertModal","AgGridTableWithCheckbox","Modal","cloneDeep","connect","withRouter","fetchStoreData","simulateMarkdownCadenceAndSkuListMultiple","flushStoreData","simulatePreSeasonMarkDown","saveOverAllMarkdown","resetMakrdownSave","saveSkuMarkdown","AutopromoCharts","_","Tabs","Tab","CadenceChartComp","Inventory","LoaderComponent","getParamValue","paramName","url","window","location","href","split","val","paramsArray","forEach","item","ManualInSeason","props","targetClearenceValueHandler","e","setState","targetClearenceVal","target","value","inverseValueHandler","inverse","marginValueHandler","marginPercentage","showMessageModal","showModalFlag","setTimeout","setActiveTab","tab","activeTab","simulateMarkdown","showSimulationResult","markdowns","state","scenariosListValues","filter","mrkdn","params","start_date","dateRange","startDate","format","end_date","endDate","inventory","currentInventory","skus","selectedSkuId","burn_rate","margin","fetchCadenceAndSku","switchSkuModal","prevState","showSkuModal","onExcludeStores","showSKUListPopup","onCadenceValue","index","inputIndex","addCadence","number","scenariosList","i","cadence","length","push","width","zIndex","selectedScenarios","selectedScenariosIndex","addScenario","scenarioCount","list","prevYear","y","subtract","nextYear","add","hideModalFlag","lineModalShow","showModal","onDatesChange","constraintsCadenceHandler","cadenceConstraintsVal","setDisableSelect","handleWeeklyInventoryDivisions","simData","inventoryUtilizationData","overall","weekly_markdown","markdown","idx","weekly_inventory","inventoryUtilization","data","totalInventory","Object","keys","map","key","reduce","acc","num","onSKUChange","getSelectedSkuData","selectedSku","limitClearenceHandler","selectedNodesData","invData","inv","totalInv","d","selectedStores","handlePreSeasonMarkdown","preSeasonActive","handleInSeasonMarkdown","onSaveCadenceHandler","cadenceData","payload","saveObj","simulateDataForSKUS","simulateData","cadenceGroup","skuStr","selectedSkuCount","totalStores","showSkuSelect","selectedTab","category","subCategory","showSkuOrCadence","bind","tempArr","skuid","skuname","prevProps","nextProps","isEqual","storeData","invDatas","parseInt","selectedCadenceSet","simulatePreSeasonDataResult","markdownSaved","loading","padding","paddingLeft","replace","marginTop","revenue","marginLeft","preSeasonData","fontSize","mapStateToProps","aiAssitedIn_PreSeason","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport AddSku from \"../createMarkdown/addSku\";\nimport InventoryInfo from \"../createMarkdown/inventoryInfo\";\nimport \"./createMarkdown.css\";\nimport Constraints from \"../createMarkdown/constraints\";\nimport CreateCadence from \"../createMarkdown/createCadence\";\nimport moment from \"moment\";\nimport AlertModal from \"../../../utils/AlertMessage/alertSuccess\";\nimport AgGridTableWithCheckbox from \"../AgGridTableWithCheckbox\";\nimport Modal from \"react-awesome-modal\";\nimport { cloneDeep } from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  fetchStoreData,\n  simulateMarkdownCadenceAndSkuListMultiple,\n  flushStoreData,\n  simulatePreSeasonMarkDown,\n  saveOverAllMarkdown,\n  resetMakrdownSave,\n  saveSkuMarkdown\n} from \"../../../actions/aiAssistedIn_PreSeasonActions\";\nimport AutopromoCharts from \"../../../components/AutoPromoCreation/Autopromocharts\";\nimport _ from \"lodash\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport CadenceChartComp from \"../calenderComponents/cadenceChatComponent\";\nimport Inventory from \"../calenderComponents/inventoryDetails\";\nimport LoaderComponent from \"../../../utils/Loader\";\n\nfunction getParamValue(paramName) {\n  var url = window.location.href.split(\"?\")[1] || \"\";\n  var val = null;\n  var paramsArray = url.split(\"&\");\n  paramsArray.forEach(item => {\n    if (item.split(\"=\")[0] === paramName) {\n      val = item.split(\"=\")[1];\n      return;\n    }\n  });\n  return val;\n}\n\nclass ManualInSeason extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      params: {\n        markdowns: \"\",\n        start_date: \"\",\n        end_date: \"\",\n        inventory: \"\",\n        skus: \"\",\n        burn_rate: \"\"\n      },\n      selectedScenariosIndex: 0,\n      showSimulationResult: false,\n      scenariosList: [],\n      cadenceGroup: [],\n      skuStr: null,\n      selectedSkuCount: 0,\n      showSkuModal: false,\n      startDate: moment(),\n      endDate: moment(),\n      totalInventory: 0,\n      currentInventory: 0,\n      totalStores: 0,\n      selectedStores: 0,\n      showSkuSelect: false,\n      showSKUListPopup: false,\n      selectedTab: \"PreSeason\",\n      showModalFlag: false,\n      cadenceConstraintsVal: \"overall\",\n      setDisableSelect: true,\n      scenariosListValues: [],\n      category: [],\n      subCategory: [],\n      dateRange: {\n        startDate: null,\n        endDate: null\n      },\n      selectedSku: [],\n      selectedSkuId: \"\",\n      showSkuOrCadence: false,\n      inverse: null,\n      targetClearenceVal: null,\n      simulateData: null,\n      activeTab: 0,\n      preSeasonActive: false\n    };\n    this.scenarioCount = 0;\n    this.switchSkuModal = this.switchSkuModal.bind(this);\n    this.prevYear = this.prevYear.bind(this);\n    this.nextYear = this.nextYear.bind(this);\n    this.addScenario = this.addScenario.bind(this);\n    this.addCadence = this.addCadence.bind(this);\n  }\n\n  componentDidMount() {\n    // this.props.getInseasonData({\n    //   markdown: \".3,.4,.5\",\n    //   start_date: \"01012018\",\n    //   end_date: \"03012019\",\n    //   inventory: 1000000,\n    //   skus: \"5348\",\n    //   burn_rate: \"0.1\"\n    // });\n    var skuStr = getParamValue(\"skuid\");\n    var tempArr = [];\n    if (skuStr) {\n      skuStr.split(\",\").forEach((item, index) => {\n        tempArr.push({\n          skuid: item,\n          skuname: item\n        });\n      });\n      this.setState({\n        skuStr: skuStr,\n        selectedSku: tempArr\n      });\n    }\n\n    if (getParamValue(\"subClassID\")) {\n      this.onExcludeStores();\n    }\n  }\n  targetClearenceValueHandler = e => {\n    this.setState({\n      targetClearenceVal: e.target.value\n    });\n  };\n  inverseValueHandler = val => {\n    this.setState({\n      inverse: val\n    });\n  };\n  marginValueHandler = e => {\n    this.setState({\n      marginPercentage: e.target.value\n    });\n  };\n  componentDidUpdate(prevProps, nextProps) {\n    if (!_.isEqual(prevProps.storeData, this.props.storeData)) {\n      let invData = [];\n      this.props.storeData.map(invDatas => {\n        invData.push(invDatas.inv);\n      });\n      let totalInv = 0;\n      invData.forEach(item => {\n        totalInv += parseInt(item);\n      });\n      let totalStores = this.props.storeData.length;\n      this.setState({\n        totalInventory: totalInv,\n        currentInventory: totalInv,\n        selectedStores: totalStores,\n        totalStores: totalStores,\n        selectedCadenceSet: this.props.simulatePreSeasonDataResult\n          ? this.props.simulatePreSeasonDataResult[0]\n          : null\n      });\n    }\n    if (\n      !_.isEqual(prevProps.simulateData, this.props.simulateData) &&\n      this.props.simulateData.length > 0\n    ) {\n      this.setState({\n        simulateData: this.props.simulateData\n      });\n    } else if (\n      !_.isEqual(prevProps.simulateData, this.props.simulateData) ||\n      this.props.simulateData.length === 0\n    ) {\n      this.setState({\n        simulateData: null\n      });\n    }\n    if (!_.isEqual(prevProps.storeData, this.props.storeData)) {\n      if (this.props.storeData.length > 0) {\n        const invData = this.props.storeData.map(data => data.inv);\n        const totalInv = invData.reduce((acc, d = 0) => acc + d);\n        const totalStores = this.props.storeData.length;\n        this.setState({\n          totalInventory: totalInv,\n          currentInventory: totalInv,\n          selectedStores: totalStores,\n          totalStores: totalStores\n        });\n      } else {\n        this.setState({\n          totalInventory: 0,\n          currentInventory: 0,\n          selectedStores: 0,\n          totalStores: 0\n        });\n      }\n    }\n  }\n  showMessageModal = () => {\n    this.setState({\n      showModalFlag: true\n    });\n    setTimeout(() => {\n      this.setState({\n        showModalFlag: false\n      });\n      this.props.resetMakrdownSave();\n    }, 2000);\n  };\n  setActiveTab = tab => {\n    this.setState({\n      activeTab: tab\n    });\n  };\n\n  simulateMarkdown = () => {\n    this.setState({ showSimulationResult: true });\n    //let markdowns = this.state.selectedScenariosIndex ?\n    let markdowns = this.state.scenariosListValues; //.map(obj => obj / 100).join(',') : \"\"\n    markdowns = markdowns.filter(mrkdn => !!mrkdn);\n    //markdowns = markdowns.map((mrk) => mrk.join(\",\"))\n    let params = {\n      markdowns: markdowns,\n      start_date: moment(this.state.dateRange.startDate).format(\"YYYY-MM-DD\"),\n      end_date: moment(this.state.dateRange.endDate).format(\"YYYY-MM-DD\"),\n      inventory: this.state.currentInventory,\n      skus: this.state.selectedSkuId ? this.state.selectedSkuId.value : \"\",\n      burn_rate: this.state.targetClearenceVal / 100,\n      margin: this.state.marginPercentage / 100\n      // markdown: \"0.3,0.4\",\n      // start_date: \"2018-01-01\",\n      // end_date: \"2019-03-01\",\n      // inventory: 10000000,\n      // skus: \"\",\n      // burn_rate:\".1\"\n    };\n    this.setState(\n      {\n        params\n      },\n      () => {\n        this.props.fetchCadenceAndSku(this.state.params);\n      }\n    );\n  };\n  switchSkuModal = () => {\n    this.setState(prevState => ({ showSkuModal: !prevState.showSkuModal }));\n  };\n  onExcludeStores = () => {\n    this.setState({ showSKUListPopup: true });\n  };\n  onCadenceValue = (e, index, inputIndex) => {\n    let scenariosListValues = cloneDeep(this.state.scenariosListValues);\n    if (scenariosListValues[index] && scenariosListValues[index]) {\n      scenariosListValues[index][inputIndex] = e.target.value;\n    } else {\n      scenariosListValues[index] = [];\n      scenariosListValues[index][inputIndex] = e.target.value;\n    }\n\n    this.setState(\n      {\n        scenariosListValues\n      },\n      () => {}\n    );\n  };\n  addCadence = async (number, index) => {\n    let scenariosList = cloneDeep(this.state.scenariosList);\n    for (let i = 0; i < number; i++) {\n      if (scenariosList[index].cadence.length < 6) {\n        scenariosList[index].cadence.push(\n          <div className=\"col\" key={i + 1}>\n            <div className=\"input-group\" style={{ width: \"90%\" }}>\n              <input\n                type=\"text\"\n                className=\"form-control border-style\"\n                onChange={e => this.onCadenceValue(e, index, i)}\n              />\n              <div className=\"input-group-append\">\n                <button\n                  className=\"btn btn-side-percent\"\n                  type=\"button\"\n                  style={{ zIndex: \"unset\" }}\n                >\n                  <i className=\"fa fa-percent\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        );\n      }\n    }\n    this.setState({ scenariosList });\n  };\n  selectedScenarios = index => {\n    this.setState(\n      {\n        selectedScenariosIndex: index\n      },\n      () => {}\n    );\n  };\n  addScenario = () => {\n    let index = ++this.scenarioCount;\n    let scenariosList = cloneDeep(this.state.scenariosList);\n    this.setState({ scenariosList });\n    scenariosList[index] = { list: [], cadence: [] };\n    this.setState({ scenariosList }, async () => {\n      scenariosList[index].list.push(\n        <div className=\"cadence-row row\" key={index}>\n          <div className=\"scenario-count col-md-1\">\n            <input\n              type=\"radio\"\n              name=\"selectedScenario\"\n              className=\"inverse-radio mt-2 mr-2\"\n              onClick={() => this.selectedScenarios(index)}\n            />\n            {index}\n          </div>\n          {this.state.scenariosList[index].cadence}\n          <button\n            className=\"btn add-cadence-button\"\n            onClick={() => this.addCadence(1, index)}\n            disabled={this.state.scenariosList[index].cadence.length > 5}\n          >\n            <i className=\"fa fa-plus\" />\n          </button>\n        </div>\n      );\n      await this.addCadence(3, index);\n    });\n  };\n  prevYear = () => {\n    let y = this.state.endDate.subtract(1, \"y\");\n    this.setState({ endDate: y });\n  };\n  nextYear = () => {\n    let y = this.state.endDate.add(1, \"y\");\n    this.setState({ endDate: y });\n  };\n  hideModalFlag = () => {\n    this.setState({ showModalFlag: false });\n  };\n  lineModalShow = () => {\n    this.setState({\n      showModal: true,\n      showModalFlag: true\n    });\n  };\n  onDatesChange = ({ startDate, endDate }) => {\n    this.setState({\n      dateRange: {\n        startDate,\n        endDate\n      }\n    });\n  };\n  constraintsCadenceHandler = cadence => {\n    if (cadence === \"overall\") {\n      this.setState({\n        cadenceConstraintsVal: \"overall\",\n        setDisableSelect: true\n      });\n      return;\n    }\n    this.setState({\n      cadenceConstraintsVal: \"sku\",\n      setDisableSelect: false\n    });\n  };\n  handleWeeklyInventoryDivisions = simData => {\n    let inventoryUtilizationData = {};\n    simData.overall.weekly_markdown.forEach((markdown, idx) => {\n      if (!inventoryUtilizationData[markdown]) {\n        inventoryUtilizationData[markdown] = [];\n      }\n      inventoryUtilizationData[markdown].push(\n        simData.overall.weekly_inventory[idx]\n      );\n    });\n\n    let inventoryUtilization = {\n      data: [],\n      totalInventory: simData.overall.inventory[1]\n      // weeklyInventoryData: Object.keys(inventoryUtilizationData).map(key => inventoryUtilizationData[key]),\n    };\n\n    Object.keys(inventoryUtilizationData).map(key => {\n      inventoryUtilization.data.push(\n        inventoryUtilizationData[key].reduce((acc, num = 0) => acc + num)\n      );\n    });\n    return inventoryUtilization;\n  };\n  onSKUChange = value => {\n    this.setState({\n      selectedSkuId: value\n    });\n  };\n\n  getSelectedSkuData = data => {\n    this.setState({\n      selectedSku: data\n    });\n  };\n  setActiveTab = tab => {\n    this.setState({\n      activeTab: tab\n    });\n  };\n\n  limitClearenceHandler = selectedNodesData => {\n    if (selectedNodesData.length > 0) {\n      const invData = selectedNodesData.map(data => data.inv);\n      const totalInv = invData.reduce((acc, d = 0) => acc + d);\n      this.setState({\n        currentInventory: totalInv,\n        selectedStores: selectedNodesData.length,\n        showSKUListPopup: false\n      });\n      return;\n    }\n    this.setState({\n      currentInventory: 0,\n      selectedStores: 0,\n      showSKUListPopup: false\n    });\n  };\n  handlePreSeasonMarkdown = () => {\n    this.setState({\n      preSeasonActive: true\n    });\n    this.props.simulatePreSeasonMarkDown({});\n  };\n\n  handleInSeasonMarkdown = () => {\n    this.setState({\n      preSeasonActive: false\n    });\n  };\n  onSaveCadenceHandler = data => {\n    const cadenceData = [];\n    cadenceData.push(data);\n    const payload = {\n      ...this.state.params,\n      saveObj: {\n        data:\n          this.state.params && this.state.params.skus\n            ? this.props.simulateDataForSKUS[\n                this.state.selectedScenariosIndex - 1\n              ].data.data\n            : this.props.simulateData\n      }\n    };\n    if (this.state.params && this.state.params.skus) {\n      this.props.saveSkuMarkdown(payload);\n    } else {\n      this.props.saveOverAllMarkdown(payload);\n    }\n  };\n  render() {\n    // let inseasonData = this.props.inseasonData\n    const { storeData } = this.props;\n    if (this.props.markdownSaved) {\n      setTimeout(() => {\n        this.props.resetMakrdownSave();\n      }, 2000);\n    }\n\n    return (\n      <React.Fragment>\n        <LoaderComponent loader={this.props.loading}>\n          <div className=\"card\" style={{ padding: \"3px 1px\" }}>\n            <h4 className=\"font-size-14 mt-2\" style={{ paddingLeft: \"4px\" }}>\n              Markdown Optimization /\n              <span className=\"font-bold color-blue \">\n                Manually Create In-Season MD\n              </span>\n            </h4>\n            <hr className=\"mt-1\" />\n            <AddSku\n              showSkuSelect={true}\n              selectedSkuCount={this.state.selectedSkuCount}\n              showSkuModal={this.state.showSkuModal}\n              switchSkuModal={this.switchSkuModal}\n              startDate={this.state.startDate}\n              endDate={this.state.endDate}\n              nextYear={this.nextYear}\n              prevYear={this.prevYear}\n              category={this.state.category}\n              subCategory={this.state.subCategory}\n              selectSku={this.state.skuStr}\n              getSelectedSkuData={this.getSelectedSkuData}\n              category={getParamValue(\"category\")}\n              subCategory={getParamValue(\"subCategory\")}\n              class={getParamValue(\"class\")}\n              subClassID={\n                getParamValue(\"subclass\")\n                  ? getParamValue(\"subclass\").replace(\"%20\", \" \")\n                  : null\n              }\n              brandID={\n                getParamValue(\"brand\")\n                  ? getParamValue(\"brand\").replace(\"%20\", \" \")\n                  : null\n              }\n              sID={\n                getParamValue(\"subclassID\")\n                  ? getParamValue(\"subclassID\").replace(\"%20\", \" \")\n                  : null\n              }\n              bID={\n                getParamValue(\"brandID\")\n                  ? getParamValue(\"brandID\").replace(\"%20\", \" \")\n                  : null\n              }\n            />\n            <hr className=\"mt-4 mb-2 dotted-line\" />\n            <InventoryInfo\n              totalInventory={this.state.totalInventory}\n              currentInventory={this.state.currentInventory}\n              totalStores={this.state.totalStores}\n              selectedStores={this.state.selectedStores}\n              onExcludeStores={this.onExcludeStores}\n              callAPI={getParamValue(\"subclass\") ? true : false}\n            />\n            <hr className=\"mt-4 mb-2 dotted-line\" />\n            <Constraints\n              constraintsCadenceHandler={this.constraintsCadenceHandler}\n              onDatesChange={this.onDatesChange}\n              startDate={this.state.dateRange.startDate}\n              endDate={this.state.dateRange.endDate}\n              targetClearenceValueHandler={this.targetClearenceValueHandler}\n              inverseValueHandler={this.inverseValueHandler}\n              inverserVal={this.state.inverse}\n              cadenceConstraintsVal={this.state.cadenceConstraintsVal}\n              marginValueHandler={this.marginValueHandler}\n            />\n            <hr className=\"mt-4 mb-2 dotted-line\" />\n            <CreateCadence\n              scenariosList={this.state.scenariosList}\n              simulateMarkdown={this.simulateMarkdown}\n              addScenario={this.addScenario}\n              onSkuChange={(e, value) => this.onSKUChange(e, value)}\n              cadenceConstraintsVal={this.state.cadenceConstraintsVal}\n              setDisableSelect={this.state.setDisableSelect}\n              selectedSku={this.state.selectedSku}\n              onSaveCadenceHandler={data => this.onSaveCadenceHandler(data)}\n              selectedScenariosIndex={this.state.selectedScenariosIndex}\n              // selectedCadenceSet={}\n            />\n          </div>\n          {/* {this.state.showSimulationResult && (\n          <div className=\"card mt-4 dotted-line\">\n            <MarkdownSimulation scenarioCount={this.props.simulateData.length} selectedCadenceSet={this.props.simulateData[0]}/>\n          </div>\n        )} */}\n          {this.state.showSimulationResult ? (\n            <div className=\"chart-Ai \">\n              <div className=\"card\" style={{ marginTop: \"20px\" }}>\n                <h4 className=\"font-size-14 markdown-heading\">\n                  <Tabs\n                    activeKey={this.state.activeTab}\n                    onSelect={tab => this.setActiveTab(tab)}\n                  >\n                    {this.state.simulateData &&\n                      this.state.simulateData.map((simData, idx) => {\n                        const inventoryUtilization = this.handleWeeklyInventoryDivisions(\n                          simData\n                        );\n                        const inventory = simData.overall.inventory;\n                        const margin = simData.overall.margin;\n                        const revenue = simData.overall.revenue;\n                        return (\n                          <Tab eventKey={idx} title={`Scenario ${idx + 1}`}>\n                            <div className=\"cadence-chart-div\">\n                              <div className=\"row\">\n                                <div className=\"col-md-3 \">\n                                  <div className=\"row\">\n                                    <div className=\"col-md-3\" />\n                                    <div\n                                      className=\"col-md-9\"\n                                      style={{ marginLeft: \"-29px\" }}\n                                    />\n                                  </div>\n                                </div>\n                                <div className=\"col-md-3\" />\n                                <div className=\"col-md-3 text-center\" />\n                                <div className=\"col-md-3\">\n                                  <div className=\"btn-group height-btngrp\">\n                                    <button\n                                      className={`btn btn-outline-primary btnModal1 ${\n                                        this.state.preSeasonActive\n                                          ? \"active\"\n                                          : \"\"\n                                      }`}\n                                      onClick={() =>\n                                        this.handlePreSeasonMarkdown()\n                                      }\n                                    >\n                                      Pre Season\n                                    </button>\n                                    <button\n                                      className={`btn btn-outline-primary btnModal1 ${\n                                        !this.state.preSeasonActive\n                                          ? \"active\"\n                                          : \"\"\n                                      }`}\n                                      onClick={() =>\n                                        this.handleInSeasonMarkdown()\n                                      }\n                                    >\n                                      In Season\n                                    </button>\n                                  </div>\n                                </div>\n                              </div>\n                              {idx == this.state.activeTab &&\n                                !this.state.preSeasonActive && (\n                                  <>\n                                    <CadenceChartComp\n                                      selectedCadenceSet={simData}\n                                    />\n                                    <Inventory\n                                      inventoryUtilization={\n                                        inventoryUtilization\n                                      }\n                                    />\n                                  </>\n                                )}\n                              {idx == this.state.activeTab &&\n                                this.state.preSeasonActive &&\n                                this.props.preSeasonData && (\n                                  <>\n                                    <CadenceChartComp\n                                      selectedCadenceSet={\n                                        this.props.preSeasonData\n                                      }\n                                    />\n                                    <Inventory\n                                      inventoryUtilization={\n                                        inventoryUtilization\n                                      }\n                                    />\n                                  </>\n                                )}\n                            </div>\n                            <div className=\"card mt-20\">\n                              <div className=\"row mt-20 j-c-even\">\n                                <div className=\"col-md-3\">\n                                  {idx == this.state.activeTab && (\n                                    <AutopromoCharts\n                                      title=\"Quantity\"\n                                      width=\"16.5rem\"\n                                      height=\"328px\"\n                                      data={[inventory[0], inventory[1]]}\n                                    />\n                                  )}\n                                </div>\n                                <div className=\"col-md-3\">\n                                  {idx == this.state.activeTab && (\n                                    <AutopromoCharts\n                                      title=\"Revenue\"\n                                      width=\"16.5rem\"\n                                      height=\"328px\"\n                                      data={[margin[0], margin[1]]}\n                                    />\n                                  )}\n                                </div>\n                                <div className=\"col-md-3\">\n                                  {idx == this.state.activeTab && (\n                                    <AutopromoCharts\n                                      title=\"Margin\"\n                                      width=\"16.5rem\"\n                                      height=\"328px\"\n                                      data={[revenue[0], revenue[1]]}\n                                    />\n                                  )}\n                                </div>\n                              </div>\n\n                              {/* <div className=\"btn-center\">\n                              <div>\n                                <button className=\"btn btn-primary\" style={{ marginRight: \"10px\" }}>Reset</button>\n                                <button className=\"btn btn-primary\">Comment</button>\n                              </div>\n\n                            </div> */}\n                            </div>\n                          </Tab>\n                        );\n                      })}\n                  </Tabs>\n                </h4>\n              </div>\n            </div>\n          ) : null}\n          <div className=\"alertDivs\">\n            {this.props.markdownSaved && (\n              <AlertModal\n                show={this.props.markdownSaved}\n                message={`Cadence Scenario ${\n                  this.state.selectedScenariosIndex\n                } Saved Successfully`}\n              />\n            )}\n          </div>\n          <Modal\n            visible={this.state.showSKUListPopup}\n            effect=\"fadeInDown\"\n            onClickAway={() => this.setState({ showSKUListPopup: false })}\n          >\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">\n                  Select Stores\n                  <span\n                    onClick={() => this.setState({ showSKUListPopup: false })}\n                    className=\"pull-right select-store-span\"\n                  >\n                    <i\n                      className=\"fa fa-times\"\n                      aria-hidden=\"true\"\n                      style={{ fontSize: \"22px\" }}\n                    />\n                  </span>\n                </h5>\n                <hr />\n              </div>\n\n              <div className=\"ai-pre-grid-table\">\n                {storeData && storeData.length > 0 && (\n                  <AgGridTableWithCheckbox\n                    inventoryData={storeData}\n                    rowSelection=\"multiple\"\n                    initialAllRowSelected\n                    limitClearenceHandler={this.limitClearenceHandler}\n                    flushStoreData={this.props.flushStoreData}\n                  />\n                )}\n              </div>\n            </div>\n          </Modal>\n        </LoaderComponent>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state, aiAssitedIn_PreSeason) => {\n  return {\n    // authentication: state.userLoginDetails,\n    // loader: state.calendar.loader,\n    // inseasonData: state.inseasonData,\n    loading: state.aiAssitedIn_PreSeason.loading,\n    simulateData: state.aiAssitedIn_PreSeason.simulateData,\n    storeData: state.aiAssitedIn_PreSeason.storeData,\n    preSeasonData: state.aiAssitedIn_PreSeason.preSeasonData,\n    markdownSaved: state.aiAssitedIn_PreSeason.markdownSaved,\n    simulateDataForSKUS: state.aiAssitedIn_PreSeason.simulateDataForSKUS\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // getInseasonData: val => dispatch(getInseasonData(val)),\n    fetchStoreData: val => dispatch(fetchStoreData(val)),\n    fetchCadenceAndSku: payload =>\n      dispatch(simulateMarkdownCadenceAndSkuListMultiple(payload)),\n    flushStoreData: () => dispatch(flushStoreData()),\n    simulatePreSeasonMarkDown: payload =>\n      dispatch(simulatePreSeasonMarkDown(payload)),\n    saveOverAllMarkdown: payload => dispatch(saveOverAllMarkdown(payload)),\n    resetMakrdownSave: () => dispatch(resetMakrdownSave()),\n    saveSkuMarkdown: payload => dispatch(saveSkuMarkdown(payload))\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n  // mapActionToProps\n)(withRouter(ManualInSeason));\n// export default CreateMarkdown\n"]},"metadata":{},"sourceType":"module"}