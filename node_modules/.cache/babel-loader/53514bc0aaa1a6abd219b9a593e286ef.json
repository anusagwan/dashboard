{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/generic-markdown-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/excludeStoreTable.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 1rem;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: flex-start;\\n\\n  .custom-control {\\n    line-height: 1.5rem;\\n    margin: 0 1rem;\\n  }\\n\\n  .custom-control-label::before {\\n    top: 0.5rem;\\n  }\\n  .custom-control-label::after {\\n    top: 0.5rem;\\n  }\\n  .custom-checkbox label {\\n    vertical-align: -webkit-baseline-middle;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport excludeStoreColdef from './excludeStoreColdef';\nimport cloneDeep from 'clone-deep';\nimport styled from 'styled-components';\nimport Select from '../../utils/reactDropDownSelect';\n\nvar ExcludeStoreTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ExcludeStoreTable, _Component);\n\n  function ExcludeStoreTable(props) {\n    var _this;\n\n    _classCallCheck(this, ExcludeStoreTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExcludeStoreTable).call(this, props));\n\n    _this.limitClearnceHandler = function () {\n      var selectedRowId = _this.state.selected;\n\n      _this.props.excludeStoreValHandler(selectedRowId);\n\n      console.log(selectedRowId, 'selectid');\n\n      _this.props.showTablePopup();\n    };\n\n    _this.onRowClick = function (rowInfo) {\n      var selectedRow = _this.state.selected;\n      console.log(selectedRow, 'anu'); // if (this.state.selected.includes(rowInfo.index)) {\n      //   let findInd = selectedRow.indexOf(rowInfo.index);\n      //   selectedRow.splice(findInd, 1);\n      // } else {\n      //   selectedRow.push(rowInfo.index);\n      // }\n\n      _this.setState({\n        selected: selectedRow\n      });\n    };\n\n    _this.onHandleCheckBox = function (e, label, index) {\n      //adding\n      if (e.target.checked) {\n        if (_this.state.selectedLabels.indexOf(label) === -1) {\n          var labels = [].concat(_toConsumableArray(_this.state.selectedLabels), [label]);\n          var tempArr = [];\n          labels.forEach(function (label) {\n            var columns = _this.props.columnHeaders[label];\n            var options = columns.map(function (label) {\n              return {\n                label: label,\n                value: label\n              };\n            });\n            tempArr.push.apply(tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selectedLabels: labels,\n            columnOptions: tempArr\n          });\n        }\n      } else {\n        //removing\n        var columns = _this.props.columnHeaders[label];\n        var tabelColumns = cloneDeep(_this.state.columns);\n        columns.forEach(function (col) {\n          tabelColumns.forEach(function (tabelCol, index) {\n            if (tabelCol.Header === col) {\n              tabelColumns.splice(index, 1);\n            }\n          });\n        });\n\n        _this.setState({\n          columns: tabelColumns\n        });\n\n        var _index = _this.state.selectedLabels.indexOf(label);\n\n        if (_index !== -1) {\n          var selectedLabel = cloneDeep(_this.state.selectedLabels);\n          selectedLabel.splice(_index, 1);\n          var _tempArr = [];\n          selectedLabel.forEach(function (label) {\n            var columns = _this.props.columnHeaders[label];\n            var options = columns.map(function (label) {\n              return {\n                label: label,\n                value: label\n              };\n            });\n\n            _tempArr.push.apply(_tempArr, _toConsumableArray(options));\n          });\n\n          _this.setState({\n            selectedLabels: selectedLabel,\n            columnOptions: _tempArr\n          });\n        }\n      }\n    };\n\n    _this.onHandleSelect = function (data) {\n      console.log('data:', data);\n      var cols = cloneDeep(_this.state.columns);\n      console.log(cols, 'exccols');\n      var selectedOptions = _this.state.selectedOptions;\n      data.forEach(function (da) {\n        var newCols = cols.filter(function (a) {\n          return a.Header === da.label;\n        });\n\n        if (newCols.length == 0) {\n          cols.push({\n            Header: da.label,\n            accessor: da.label\n          });\n        }\n      });\n      console.log(cols, 'cols3');\n\n      _this.setState({\n        columns: cols\n      });\n    };\n\n    _this.state = {\n      // attributes: ['Product Information', 'Sales', 'Inventory', 'Margin'],\n      columnOptions: [],\n      selectedLabels: [],\n      columns: []\n    };\n    return _this;\n  }\n\n  _createClass(ExcludeStoreTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        columns: excludeStoreColdef()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // let labels = Object.keys(this.props.columnHeaders);\n      // labels.splice(labels.indexOf('fixed'), 1);\n      // labels.splice(labels.indexOf('default'), 1);\n      // console.log(this.props.columnHeaders, labels, 'this.props.columnHeaders');\n      return React.createElement(\"div\", {\n        className: \"createMd pl-2 pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(ColumnSelection, {\n        onHandleCheckBox: this.onHandleCheckBox,\n        columnHeaders: this.props.columnHeaders,\n        onHandleSelect: this.onHandleSelect,\n        columnOptions: this.state.columnOptions,\n        selectedItems: this.state.selectedItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Styles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        visibleColumns: \"onlyRowSelection\",\n        columns: this.state.columns,\n        data: this.props.storeData,\n        getRowProps: function getRowProps(rowInfo) {\n          return {\n            onClick: function onClick() {\n              return _this2.onRowClick(rowInfo);\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"mt-3 mb-3\",\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary biconbuttonFilter\",\n        onClick: this.limitClearnceHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Limit Clearance\"))));\n    }\n  }]);\n\n  return ExcludeStoreTable;\n}(Component);\n\nvar Styles = styled.div(_templateObject());\nexport default ExcludeStoreTable;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/components/ManuallyCreateMD/excludeStoreTable.js"],"names":["React","Component","DataTable","ColumnSelection","excludeStoreColdef","cloneDeep","styled","Select","ExcludeStoreTable","props","limitClearnceHandler","selectedRowId","state","selected","excludeStoreValHandler","console","log","showTablePopup","onRowClick","rowInfo","selectedRow","setState","onHandleCheckBox","e","label","index","target","checked","selectedLabels","indexOf","labels","tempArr","forEach","columns","columnHeaders","options","map","value","push","columnOptions","tabelColumns","col","tabelCol","Header","splice","selectedLabel","onHandleSelect","data","cols","selectedOptions","da","newCols","filter","a","length","accessor","selectedItems","storeData","onClick","display","justifyContent","Styles","div"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DataTable from '../../services/reactTable';\nimport ColumnSelection from '../columnSelection';\nimport excludeStoreColdef from './excludeStoreColdef';\nimport cloneDeep from 'clone-deep';\nimport styled from 'styled-components';\nimport Select from '../../utils/reactDropDownSelect';\n\nclass ExcludeStoreTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // attributes: ['Product Information', 'Sales', 'Inventory', 'Margin'],\n      columnOptions: [],\n      selectedLabels: [],\n      columns: [],\n    };\n  }\n  limitClearnceHandler = () => {\n    let selectedRowId = this.state.selected;\n    this.props.excludeStoreValHandler(selectedRowId);\n    console.log(selectedRowId, 'selectid');\n    this.props.showTablePopup();\n  };\n  onRowClick = (rowInfo) => {\n    let selectedRow = this.state.selected;\n    console.log(selectedRow, 'anu');\n    // if (this.state.selected.includes(rowInfo.index)) {\n    //   let findInd = selectedRow.indexOf(rowInfo.index);\n    //   selectedRow.splice(findInd, 1);\n    // } else {\n    //   selectedRow.push(rowInfo.index);\n    // }\n    this.setState({\n      selected: selectedRow,\n    });\n  };\n\n  onHandleCheckBox = (e, label, index) => {\n    //adding\n    if (e.target.checked) {\n      if (this.state.selectedLabels.indexOf(label) === -1) {\n        let labels = [...this.state.selectedLabels, label];\n        let tempArr = [];\n        labels.forEach((label) => {\n          let columns = this.props.columnHeaders[label];\n          let options = columns.map((label) => {\n            return {\n              label: label,\n              value: label,\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selectedLabels: labels,\n          columnOptions: tempArr,\n        });\n      }\n    } else {\n      //removing\n      let columns = this.props.columnHeaders[label];\n      let tabelColumns = cloneDeep(this.state.columns);\n      columns.forEach((col) => {\n        tabelColumns.forEach((tabelCol, index) => {\n          if (tabelCol.Header === col) {\n            tabelColumns.splice(index, 1);\n          }\n        });\n      });\n      this.setState({\n        columns: tabelColumns,\n      });\n      let index = this.state.selectedLabels.indexOf(label);\n      if (index !== -1) {\n        let selectedLabel = cloneDeep(this.state.selectedLabels);\n        selectedLabel.splice(index, 1);\n        let tempArr = [];\n        selectedLabel.forEach((label) => {\n          let columns = this.props.columnHeaders[label];\n          let options = columns.map((label) => {\n            return {\n              label: label,\n              value: label,\n            };\n          });\n          tempArr.push(...options);\n        });\n        this.setState({\n          selectedLabels: selectedLabel,\n          columnOptions: tempArr,\n        });\n      }\n    }\n  };\n  onHandleSelect = (data) => {\n    console.log('data:', data);\n    let cols = cloneDeep(this.state.columns);\n    console.log(cols, 'exccols');\n    let selectedOptions = this.state.selectedOptions;\n    data.forEach((da) => {\n      let newCols = cols.filter((a) => {\n        return a.Header === da.label;\n      });\n      if (newCols.length == 0) {\n        cols.push({\n          Header: da.label,\n          accessor: da.label,\n        });\n      }\n    });\n    console.log(cols, 'cols3');\n    this.setState({\n      columns: cols,\n    });\n  };\n  componentDidMount() {\n    this.setState({\n      columns: excludeStoreColdef(),\n    });\n  }\n  render() {\n    // let labels = Object.keys(this.props.columnHeaders);\n    // labels.splice(labels.indexOf('fixed'), 1);\n    // labels.splice(labels.indexOf('default'), 1);\n    // console.log(this.props.columnHeaders, labels, 'this.props.columnHeaders');\n    return (\n      <div className=\"createMd pl-2 pr-2\">\n        <div className=\"card mb-4\">\n          <ColumnSelection\n            onHandleCheckBox={this.onHandleCheckBox}\n            columnHeaders={this.props.columnHeaders}\n            onHandleSelect={this.onHandleSelect}\n            columnOptions={this.state.columnOptions}\n            selectedItems={this.state.selectedItems}\n          />\n          <Styles>\n            {/* {labels &&\n              labels.length &&\n              labels.map((label, i) => {\n                return (\n                  <div className=\"custom-control custom-checkbox\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"custom-control-input\"\n                      id={label === 'status' ? i : label + i}\n                      onClick={(e) => this.onChechedHandle(e, label, i)}\n                    />\n                    <label\n                      className=\"custom-control-label\"\n                      htmlFor={label === 'status' ? i : label + i}>\n                      {label}\n                    </label>\n                  </div>\n                );\n              })}\n            <label className=\"ml-4\"> Add Metric</label>\n\n            <div className=\" ml-2\">\n              <Select\n                multi={true}\n                // clearable={true}\n                onHandleSelect={this.onHandleSelect}\n                options={this.state.columnOptions}\n                contentRenderer={this.contentRenderer}\n                selectedItems={this.selectedItems}\n              />\n            </div> */}\n          </Styles>\n          <div>\n            <DataTable\n              visibleColumns=\"onlyRowSelection\"\n              columns={this.state.columns}\n              data={this.props.storeData}\n              getRowProps={(rowInfo) => ({\n                onClick: () => this.onRowClick(rowInfo),\n              })}\n            />\n          </div>\n          <div class=\"mt-3 mb-3\" style={{ display: 'flex', justifyContent: 'center' }}>\n            <button\n              className=\"btn btn-primary biconbuttonFilter\"\n              onClick={this.limitClearnceHandler}>\n              Limit Clearance\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Styles = styled.div`\n  padding: 1rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n\n  .custom-control {\n    line-height: 1.5rem;\n    margin: 0 1rem;\n  }\n\n  .custom-control-label::before {\n    top: 0.5rem;\n  }\n  .custom-control-label::after {\n    top: 0.5rem;\n  }\n  .custom-checkbox label {\n    vertical-align: -webkit-baseline-middle;\n  }\n`;\n\nexport default ExcludeStoreTable;\n"]},"metadata":{},"sourceType":"module"}