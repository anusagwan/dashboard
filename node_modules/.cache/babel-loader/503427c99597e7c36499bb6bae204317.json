{"ast":null,"code":"import axios from 'axios';\nimport { config } from '../utils/config';\nvar draftStausFinalizeAction = {\n  getMarkdowns: function getMarkdowns(payload) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      return axios({\n        url: \"\".concat(config.createMarkdownURL, \"/getMarkDowns/\"),\n        method: 'POST',\n        data: payload\n      }).then(function (resp) {\n        var _resp$data$data = resp.data.data,\n            columnHeaders = _resp$data$data.columnHeaders,\n            markdown_data = _resp$data$data.markdown_data;\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        dispatch({\n          type: 'SET_MARK_DOWNS',\n          value: markdown_data\n        });\n        dispatch({\n          type: 'SET_MD_COLUMN_HEADERS',\n          value: columnHeaders\n        });\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        return resp.data.data;\n      }).catch(function (err) {\n        console.log(err);\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      });\n    };\n  },\n  setMarkDowns: function setMarkDowns(payload) {\n    return function (dispatch) {\n      dispatch({\n        type: 'SET_MARK_DOWNS',\n        value: payload\n      });\n    };\n  },\n  setMDColumnHeaders: function setMDColumnHeaders(payload) {\n    return function (dispatch) {\n      dispatch({\n        type: 'SET_MD_COLUMN_HEADERS',\n        value: payload\n      });\n    };\n  },\n  sendForApproval: function sendForApproval(reqObj) {\n    return function (dispatch) {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true\n        }\n      });\n      axios({\n        url: \"\".concat(config.createMarkdownURL, \"/updateMarkdownStatus/\"),\n        method: 'POST',\n        data: reqObj\n      }).then(function (resp) {\n        console.log(resp, 'approval');\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n      }).catch(function (err) {\n        dispatch({\n          type: 'LOADER_STATE',\n          payload: {\n            status: false\n          }\n        });\n        console.log(err);\n      });\n    };\n  }\n};\nexport default draftStausFinalizeAction;","map":{"version":3,"sources":["/home/user/generic-markdown-frontend/src/actions/draftStausFinalizeAction.js"],"names":["axios","config","draftStausFinalizeAction","getMarkdowns","payload","dispatch","type","status","url","createMarkdownURL","method","data","then","resp","columnHeaders","markdown_data","value","catch","err","console","log","setMarkDowns","setMDColumnHeaders","sendForApproval","reqObj"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { config } from '../utils/config';\n\nconst draftStausFinalizeAction = {\n  getMarkdowns: (payload) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      return axios({\n        url: `${config.createMarkdownURL}/getMarkDowns/`,\n        method: 'POST',\n        data: payload,\n      })\n        .then((resp) => {\n          const { columnHeaders, markdown_data } = resp.data.data;\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          dispatch({\n            type: 'SET_MARK_DOWNS',\n            value: markdown_data,\n          });\n          dispatch({\n            type: 'SET_MD_COLUMN_HEADERS',\n            value: columnHeaders,\n          });\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          return resp.data.data;\n        })\n        .catch((err) => {\n          console.log(err);\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        });\n    };\n  },\n  setMarkDowns: (payload) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'SET_MARK_DOWNS',\n        value: payload,\n      });\n    };\n  },\n  setMDColumnHeaders: (payload) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'SET_MD_COLUMN_HEADERS',\n        value: payload,\n      });\n    };\n  },\n  sendForApproval: (reqObj) => {\n    return (dispatch) => {\n      dispatch({\n        type: 'LOADER_STATE',\n        payload: {\n          status: true,\n        },\n      });\n      axios({\n        url: `${config.createMarkdownURL}/updateMarkdownStatus/`,\n        method: 'POST',\n        data: reqObj,\n      })\n        .then((resp) => {\n          console.log(resp, 'approval');\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n        })\n        .catch((err) => {\n          dispatch({\n            type: 'LOADER_STATE',\n            payload: {\n              status: false,\n            },\n          });\n          console.log(err);\n        });\n    };\n  },\n};\n\nexport default draftStausFinalizeAction;\n"]},"metadata":{},"sourceType":"module"}